# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # The OffsetSystem data frame selects a sequence of node offsets described in
  # the Lat-Long offset method.
  class OffsetSystem < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The sequence of node offsets then describes a path or polygon in the
    # Lat-Long system.
    # @return [Offset]
    attr_accessor :offset

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['offset'] = 'offset'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      []
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(offset:)
      @offset = offset
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      offset = Offset.from_hash(hash['offset']) if hash['offset']

      # Create object from extracted values.
      OffsetSystem.new(offset: offset)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} offset: #{@offset}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} offset: #{@offset.inspect}>"
    end
  end
end
