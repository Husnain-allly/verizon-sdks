# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # M2MV1IntelligenceWirelessCoverageRequest Model.
  class M2MV1IntelligenceWirelessCoverageRequest < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Account name.
    # @return [String]
    attr_accessor :account_name

    # Type of request made. FWA for address qualification and NW for Nationwide
    # coverage.
    # @return [String]
    attr_accessor :request_type

    # Type of location detail.
    # @return [String]
    attr_accessor :location_type

    # Type of location detail.
    # @return [Locations1]
    attr_accessor :locations

    # Type of location detail.
    # @return [Array[NetworkTypeObject]]
    attr_accessor :network_types_list

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['account_name'] = 'accountName'
      @_hash['request_type'] = 'requestType'
      @_hash['location_type'] = 'locationType'
      @_hash['locations'] = 'locations'
      @_hash['network_types_list'] = 'networkTypesList'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        account_name
        request_type
        location_type
        locations
        network_types_list
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(account_name: SKIP, request_type: SKIP, location_type: SKIP,
                   locations: SKIP, network_types_list: SKIP,
                   additional_properties: nil)
      # Add additional model properties to the instance
      additional_properties = {} if additional_properties.nil?

      @account_name = account_name unless account_name == SKIP
      @request_type = request_type unless request_type == SKIP
      @location_type = location_type unless location_type == SKIP
      @locations = locations unless locations == SKIP
      @network_types_list = network_types_list unless network_types_list == SKIP
      @additional_properties = additional_properties
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      account_name = hash.key?('accountName') ? hash['accountName'] : SKIP
      request_type = hash.key?('requestType') ? hash['requestType'] : SKIP
      location_type = hash.key?('locationType') ? hash['locationType'] : SKIP
      locations = Locations1.from_hash(hash['locations']) if hash['locations']
      # Parameter is an array, so we need to iterate through it
      network_types_list = nil
      unless hash['networkTypesList'].nil?
        network_types_list = []
        hash['networkTypesList'].each do |structure|
          network_types_list << (NetworkTypeObject.from_hash(structure) if structure)
        end
      end

      network_types_list = SKIP unless hash.key?('networkTypesList')

      # Create a new hash for additional properties, removing known properties.
      new_hash = hash.reject { |k, _| names.value?(k) }

      additional_properties = APIHelper.get_additional_properties(
        new_hash, proc { |value| value }
      )

      # Create object from extracted values.
      M2MV1IntelligenceWirelessCoverageRequest.new(account_name: account_name,
                                                   request_type: request_type,
                                                   location_type: location_type,
                                                   locations: locations,
                                                   network_types_list: network_types_list,
                                                   additional_properties: additional_properties)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} account_name: #{@account_name}, request_type: #{@request_type},"\
      " location_type: #{@location_type}, locations: #{@locations}, network_types_list:"\
      " #{@network_types_list}, additional_properties: #{@additional_properties}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} account_name: #{@account_name.inspect}, request_type:"\
      " #{@request_type.inspect}, location_type: #{@location_type.inspect}, locations:"\
      " #{@locations.inspect}, network_types_list: #{@network_types_list.inspect},"\
      " additional_properties: #{@additional_properties}>"
    end
  end
end
