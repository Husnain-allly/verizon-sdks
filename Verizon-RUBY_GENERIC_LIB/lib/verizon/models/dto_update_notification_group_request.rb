# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # DtoUpdateNotificationGroupRequest Model.
  class DtoUpdateNotificationGroupRequest < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The numeric account name, which must include leading zeros
    # @return [String]
    attr_accessor :accountname

    # The numeric account name, which must include leading zeros
    # @return [DtoNotificationGroupRequestEntity]
    attr_accessor :group

    # UUID of the user record, assigned at creation
    # @return [String]
    attr_accessor :id

    # UUID of the user record, assigned at creation
    # @return [Array[String]]
    attr_accessor :userids

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['accountname'] = 'accountname'
      @_hash['group'] = 'group'
      @_hash['id'] = 'id'
      @_hash['userids'] = 'userids'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        accountname
        id
        userids
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(group:, accountname: SKIP, id: SKIP, userids: SKIP)
      @accountname = accountname unless accountname == SKIP
      @group = group
      @id = id unless id == SKIP
      @userids = userids unless userids == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      group = DtoNotificationGroupRequestEntity.from_hash(hash['group']) if hash['group']
      accountname = hash.key?('accountname') ? hash['accountname'] : SKIP
      id = hash.key?('id') ? hash['id'] : SKIP
      userids = hash.key?('userids') ? hash['userids'] : SKIP

      # Create object from extracted values.
      DtoUpdateNotificationGroupRequest.new(group: group,
                                            accountname: accountname,
                                            id: id,
                                            userids: userids)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} accountname: #{@accountname}, group: #{@group}, id: #{@id}, userids:"\
      " #{@userids}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} accountname: #{@accountname.inspect}, group: #{@group.inspect}, id:"\
      " #{@id.inspect}, userids: #{@userids.inspect}>"
    end
  end
end
