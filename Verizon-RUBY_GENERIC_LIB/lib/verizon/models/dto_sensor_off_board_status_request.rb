# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # DtoSensorOffBoardStatusRequest Model.
  class DtoSensorOffBoardStatusRequest < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The numeric account name, which must include leading zeros
    # @return [String]
    attr_accessor :accountname

    # The numeric account name, which must include leading zeros
    # @return [Gatewayidentifier]
    attr_accessor :gatewayidentifier

    # The numeric account name, which must include leading zeros
    # @return [Offboarding]
    attr_accessor :offboarding

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['accountname'] = 'accountname'
      @_hash['gatewayidentifier'] = 'gatewayidentifier'
      @_hash['offboarding'] = 'offboarding'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        accountname
        gatewayidentifier
        offboarding
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(accountname: SKIP, gatewayidentifier: SKIP,
                   offboarding: SKIP)
      @accountname = accountname unless accountname == SKIP
      @gatewayidentifier = gatewayidentifier unless gatewayidentifier == SKIP
      @offboarding = offboarding unless offboarding == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      accountname = hash.key?('accountname') ? hash['accountname'] : SKIP
      gatewayidentifier = Gatewayidentifier.from_hash(hash['gatewayidentifier']) if
        hash['gatewayidentifier']
      offboarding = Offboarding.from_hash(hash['offboarding']) if hash['offboarding']

      # Create object from extracted values.
      DtoSensorOffBoardStatusRequest.new(accountname: accountname,
                                         gatewayidentifier: gatewayidentifier,
                                         offboarding: offboarding)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} accountname: #{@accountname}, gatewayidentifier: #{@gatewayidentifier},"\
      " offboarding: #{@offboarding}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} accountname: #{@accountname.inspect}, gatewayidentifier:"\
      " #{@gatewayidentifier.inspect}, offboarding: #{@offboarding.inspect}>"
    end
  end
end
