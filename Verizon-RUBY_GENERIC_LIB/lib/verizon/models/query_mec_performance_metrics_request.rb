# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # MEC performance metrics request.
  class QueryMecPerformanceMetricsRequest < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The 15-digit International Mobile Equipment Identifier.
    # @return [String]
    attr_accessor :imei

    # The 12-digit Mobile Station International Subscriber Directory Number.
    # @return [String]
    attr_accessor :msisdn

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['imei'] = 'IMEI'
      @_hash['msisdn'] = 'MSISDN'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      []
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(imei:, msisdn:, additional_properties: nil)
      # Add additional model properties to the instance
      additional_properties = {} if additional_properties.nil?

      @imei = imei
      @msisdn = msisdn
      @additional_properties = additional_properties
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      imei = hash.key?('IMEI') ? hash['IMEI'] : nil
      msisdn = hash.key?('MSISDN') ? hash['MSISDN'] : nil

      # Create a new hash for additional properties, removing known properties.
      new_hash = hash.reject { |k, _| names.value?(k) }

      additional_properties = APIHelper.get_additional_properties(
        new_hash, proc { |value| value }
      )

      # Create object from extracted values.
      QueryMecPerformanceMetricsRequest.new(imei: imei,
                                            msisdn: msisdn,
                                            additional_properties: additional_properties)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} imei: #{@imei}, msisdn: #{@msisdn}, additional_properties:"\
      " #{@additional_properties}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} imei: #{@imei.inspect}, msisdn: #{@msisdn.inspect}, additional_properties:"\
      " #{@additional_properties}>"
    end
  end
end
