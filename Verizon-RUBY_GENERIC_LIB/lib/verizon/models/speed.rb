# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # Speed Model.
  class Speed < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The minimum required speed in m/s.
    # @return [Float]
    attr_accessor :min

    # The maximum acceptable speed in m/s
    # @return [Float]
    attr_accessor :max

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['min'] = 'min'
      @_hash['max'] = 'max'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      []
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(min:, max:)
      @min = min
      @max = max
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      min = hash.key?('min') ? hash['min'] : nil
      max = hash.key?('max') ? hash['max'] : nil

      # Create object from extracted values.
      Speed.new(min: min,
                max: max)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} min: #{@min}, max: #{@max}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} min: #{@min.inspect}, max: #{@max.inspect}>"
    end
  end
end
