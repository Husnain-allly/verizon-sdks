# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # M5GBiCustomerName Model.
  class M5GBiCustomerName < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :first_name

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :last_name

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :middle_name

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :title

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :suffex

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['first_name'] = 'firstName'
      @_hash['last_name'] = 'lastName'
      @_hash['middle_name'] = 'middleName'
      @_hash['title'] = 'title'
      @_hash['suffex'] = 'suffex'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        first_name
        last_name
        middle_name
        title
        suffex
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(first_name: SKIP, last_name: SKIP, middle_name: SKIP,
                   title: SKIP, suffex: SKIP, additional_properties: nil)
      # Add additional model properties to the instance
      additional_properties = {} if additional_properties.nil?

      @first_name = first_name unless first_name == SKIP
      @last_name = last_name unless last_name == SKIP
      @middle_name = middle_name unless middle_name == SKIP
      @title = title unless title == SKIP
      @suffex = suffex unless suffex == SKIP
      @additional_properties = additional_properties
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      first_name = hash.key?('firstName') ? hash['firstName'] : SKIP
      last_name = hash.key?('lastName') ? hash['lastName'] : SKIP
      middle_name = hash.key?('middleName') ? hash['middleName'] : SKIP
      title = hash.key?('title') ? hash['title'] : SKIP
      suffex = hash.key?('suffex') ? hash['suffex'] : SKIP

      # Create a new hash for additional properties, removing known properties.
      new_hash = hash.reject { |k, _| names.value?(k) }

      additional_properties = APIHelper.get_additional_properties(
        new_hash, proc { |value| value }
      )

      # Create object from extracted values.
      M5GBiCustomerName.new(first_name: first_name,
                            last_name: last_name,
                            middle_name: middle_name,
                            title: title,
                            suffex: suffex,
                            additional_properties: additional_properties)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} first_name: #{@first_name}, last_name: #{@last_name}, middle_name:"\
      " #{@middle_name}, title: #{@title}, suffex: #{@suffex}, additional_properties:"\
      " #{@additional_properties}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} first_name: #{@first_name.inspect}, last_name: #{@last_name.inspect},"\
      " middle_name: #{@middle_name.inspect}, title: #{@title.inspect}, suffex:"\
      " #{@suffex.inspect}, additional_properties: #{@additional_properties}>"
    end
  end
end
