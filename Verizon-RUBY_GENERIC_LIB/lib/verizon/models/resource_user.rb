# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require 'date'
module Verizon
  # ResourceUser Model.
  class ResourceUser < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Not used in this release, future functionality
    # @return [String]
    attr_accessor :accountclientid

    # Indicates if terms are agreed to (true) or not
    # @return [TrueClass | FalseClass]
    attr_accessor :ackterms

    # Indicates if terms are agreed to (true) or not
    # @return [DateTime]
    attr_accessor :acktermson

    # The billing account ID. This is the same value as the Account ID
    # @return [String]
    attr_accessor :billingaccountid

    # Timestamp of the record
    # @return [DateTime]
    attr_accessor :createdon

    # User credentials. The only valid value is an email address
    # @return [String]
    attr_accessor :credentialsid

    # The type of credential represented by the ID. The only valid value is
    # `email`
    # @return [String]
    attr_accessor :credentialstype

    # Name/value pair, where the value is client defined.  The purpose is to
    # keep track of current state per device action.
    # @return [Hash[String, Object]]
    attr_accessor :customdata

    # a short description
    # @return [String]
    attr_accessor :description

    # the user name value to display
    # @return [String]
    attr_accessor :displayname

    # Contact email for the group
    # @return [String]
    attr_accessor :email

    # The first name in the user record
    # @return [String]
    attr_accessor :firstname

    # UUID of the ECPD account the user belongs to
    # @return [String]
    attr_accessor :foreignid

    # UUID of the user record, assigned at creation
    # @return [String]
    attr_accessor :id

    # The last name in the user record
    # @return [String]
    attr_accessor :lastname

    # Timestamp of the record
    # @return [DateTime]
    attr_accessor :lastupdated

    # The Mobile Directory Number
    # @return [String]
    attr_accessor :mdn

    # optional field for middle name or initial
    # @return [String]
    attr_accessor :middlename

    # User defined name of the record
    # @return [String]
    attr_accessor :name

    # Virtual field; will not be used in this implementation
    # @return [Array[String]]
    attr_accessor :secondarybillingaccountids

    # The current status of the device or transaction and will be `success` or
    # `failed`
    # @return [String]
    attr_accessor :state

    # The resource version
    # @return [String]
    attr_accessor :version

    # The UUID of the resource version
    # @return [String]
    attr_accessor :versionid

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['accountclientid'] = 'accountclientid'
      @_hash['ackterms'] = 'ackterms'
      @_hash['acktermson'] = 'acktermson'
      @_hash['billingaccountid'] = 'billingaccountid'
      @_hash['createdon'] = 'createdon'
      @_hash['credentialsid'] = 'credentialsid'
      @_hash['credentialstype'] = 'credentialstype'
      @_hash['customdata'] = 'customdata'
      @_hash['description'] = 'description'
      @_hash['displayname'] = 'displayname'
      @_hash['email'] = 'email'
      @_hash['firstname'] = 'firstname'
      @_hash['foreignid'] = 'foreignid'
      @_hash['id'] = 'id'
      @_hash['lastname'] = 'lastname'
      @_hash['lastupdated'] = 'lastupdated'
      @_hash['mdn'] = 'mdn'
      @_hash['middlename'] = 'middlename'
      @_hash['name'] = 'name'
      @_hash['secondarybillingaccountids'] = 'secondarybillingaccountids'
      @_hash['state'] = 'state'
      @_hash['version'] = 'version'
      @_hash['versionid'] = 'versionid'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        accountclientid
        ackterms
        acktermson
        billingaccountid
        credentialsid
        customdata
        description
        displayname
        email
        firstname
        id
        lastname
        mdn
        middlename
        name
        secondarybillingaccountids
        state
        version
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(createdon:, credentialstype:, foreignid:, lastupdated:,
                   versionid:, accountclientid: SKIP, ackterms: SKIP,
                   acktermson: SKIP, billingaccountid: SKIP,
                   credentialsid: SKIP, customdata: SKIP, description: SKIP,
                   displayname: SKIP, email: SKIP, firstname: SKIP, id: SKIP,
                   lastname: SKIP, mdn: SKIP, middlename: SKIP, name: SKIP,
                   secondarybillingaccountids: SKIP, state: SKIP, version: SKIP)
      @accountclientid = accountclientid unless accountclientid == SKIP
      @ackterms = ackterms unless ackterms == SKIP
      @acktermson = acktermson unless acktermson == SKIP
      @billingaccountid = billingaccountid unless billingaccountid == SKIP
      @createdon = createdon
      @credentialsid = credentialsid unless credentialsid == SKIP
      @credentialstype = credentialstype
      @customdata = customdata unless customdata == SKIP
      @description = description unless description == SKIP
      @displayname = displayname unless displayname == SKIP
      @email = email unless email == SKIP
      @firstname = firstname unless firstname == SKIP
      @foreignid = foreignid
      @id = id unless id == SKIP
      @lastname = lastname unless lastname == SKIP
      @lastupdated = lastupdated
      @mdn = mdn unless mdn == SKIP
      @middlename = middlename unless middlename == SKIP
      @name = name unless name == SKIP
      unless secondarybillingaccountids == SKIP
        @secondarybillingaccountids =
          secondarybillingaccountids
      end
      @state = state unless state == SKIP
      @version = version unless version == SKIP
      @versionid = versionid
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      createdon = if hash.key?('createdon')
                    (DateTimeHelper.from_rfc3339(hash['createdon']) if hash['createdon'])
                  end
      credentialstype =
        hash.key?('credentialstype') ? hash['credentialstype'] : nil
      foreignid = hash.key?('foreignid') ? hash['foreignid'] : nil
      lastupdated = if hash.key?('lastupdated')
                      (DateTimeHelper.from_rfc3339(hash['lastupdated']) if hash['lastupdated'])
                    end
      versionid = hash.key?('versionid') ? hash['versionid'] : nil
      accountclientid =
        hash.key?('accountclientid') ? hash['accountclientid'] : SKIP
      ackterms = hash.key?('ackterms') ? hash['ackterms'] : SKIP
      acktermson = if hash.key?('acktermson')
                     (DateTimeHelper.from_rfc3339(hash['acktermson']) if hash['acktermson'])
                   else
                     SKIP
                   end
      billingaccountid =
        hash.key?('billingaccountid') ? hash['billingaccountid'] : SKIP
      credentialsid = hash.key?('credentialsid') ? hash['credentialsid'] : SKIP
      customdata = hash.key?('customdata') ? hash['customdata'] : SKIP
      description = hash.key?('description') ? hash['description'] : SKIP
      displayname = hash.key?('displayname') ? hash['displayname'] : SKIP
      email = hash.key?('email') ? hash['email'] : SKIP
      firstname = hash.key?('firstname') ? hash['firstname'] : SKIP
      id = hash.key?('id') ? hash['id'] : SKIP
      lastname = hash.key?('lastname') ? hash['lastname'] : SKIP
      mdn = hash.key?('mdn') ? hash['mdn'] : SKIP
      middlename = hash.key?('middlename') ? hash['middlename'] : SKIP
      name = hash.key?('name') ? hash['name'] : SKIP
      secondarybillingaccountids =
        hash.key?('secondarybillingaccountids') ? hash['secondarybillingaccountids'] : SKIP
      state = hash.key?('state') ? hash['state'] : SKIP
      version = hash.key?('version') ? hash['version'] : SKIP

      # Create object from extracted values.
      ResourceUser.new(createdon: createdon,
                       credentialstype: credentialstype,
                       foreignid: foreignid,
                       lastupdated: lastupdated,
                       versionid: versionid,
                       accountclientid: accountclientid,
                       ackterms: ackterms,
                       acktermson: acktermson,
                       billingaccountid: billingaccountid,
                       credentialsid: credentialsid,
                       customdata: customdata,
                       description: description,
                       displayname: displayname,
                       email: email,
                       firstname: firstname,
                       id: id,
                       lastname: lastname,
                       mdn: mdn,
                       middlename: middlename,
                       name: name,
                       secondarybillingaccountids: secondarybillingaccountids,
                       state: state,
                       version: version)
    end

    def to_custom_acktermson
      DateTimeHelper.to_rfc3339(acktermson)
    end

    def to_custom_createdon
      DateTimeHelper.to_rfc3339(createdon)
    end

    def to_custom_lastupdated
      DateTimeHelper.to_rfc3339(lastupdated)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} accountclientid: #{@accountclientid}, ackterms: #{@ackterms}, acktermson:"\
      " #{@acktermson}, billingaccountid: #{@billingaccountid}, createdon: #{@createdon},"\
      " credentialsid: #{@credentialsid}, credentialstype: #{@credentialstype}, customdata:"\
      " #{@customdata}, description: #{@description}, displayname: #{@displayname}, email:"\
      " #{@email}, firstname: #{@firstname}, foreignid: #{@foreignid}, id: #{@id}, lastname:"\
      " #{@lastname}, lastupdated: #{@lastupdated}, mdn: #{@mdn}, middlename: #{@middlename},"\
      " name: #{@name}, secondarybillingaccountids: #{@secondarybillingaccountids}, state:"\
      " #{@state}, version: #{@version}, versionid: #{@versionid}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} accountclientid: #{@accountclientid.inspect}, ackterms:"\
      " #{@ackterms.inspect}, acktermson: #{@acktermson.inspect}, billingaccountid:"\
      " #{@billingaccountid.inspect}, createdon: #{@createdon.inspect}, credentialsid:"\
      " #{@credentialsid.inspect}, credentialstype: #{@credentialstype.inspect}, customdata:"\
      " #{@customdata.inspect}, description: #{@description.inspect}, displayname:"\
      " #{@displayname.inspect}, email: #{@email.inspect}, firstname: #{@firstname.inspect},"\
      " foreignid: #{@foreignid.inspect}, id: #{@id.inspect}, lastname: #{@lastname.inspect},"\
      " lastupdated: #{@lastupdated.inspect}, mdn: #{@mdn.inspect}, middlename:"\
      " #{@middlename.inspect}, name: #{@name.inspect}, secondarybillingaccountids:"\
      " #{@secondarybillingaccountids.inspect}, state: #{@state.inspect}, version:"\
      " #{@version.inspect}, versionid: #{@versionid.inspect}>"
    end
  end
end
