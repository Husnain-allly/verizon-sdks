# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # Actionobject Model.
  class Actionobject < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [TrueClass | FalseClass]
    attr_accessor :suspend

    # TODO: Write general description for this method
    # @return [Suspenddetailsobject]
    attr_accessor :suspend_details

    # a flag to set if the trigger changes service plans, true, or not, false
    # @return [TrueClass | FalseClass]
    attr_accessor :change_plan

    # The service plan code to switch to
    # @return [ChangePlanDetails]
    attr_accessor :change_plan_details

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['suspend'] = 'suspend'
      @_hash['suspend_details'] = 'suspendDetails'
      @_hash['change_plan'] = 'changePlan'
      @_hash['change_plan_details'] = 'changePlanDetails'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        suspend
        suspend_details
        change_plan
        change_plan_details
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(suspend: SKIP, suspend_details: SKIP, change_plan: SKIP,
                   change_plan_details: SKIP, additional_properties: nil)
      # Add additional model properties to the instance
      additional_properties = {} if additional_properties.nil?

      @suspend = suspend unless suspend == SKIP
      @suspend_details = suspend_details unless suspend_details == SKIP
      @change_plan = change_plan unless change_plan == SKIP
      @change_plan_details = change_plan_details unless change_plan_details == SKIP
      @additional_properties = additional_properties
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      suspend = hash.key?('suspend') ? hash['suspend'] : SKIP
      suspend_details = Suspenddetailsobject.from_hash(hash['suspendDetails']) if
        hash['suspendDetails']
      change_plan = hash.key?('changePlan') ? hash['changePlan'] : SKIP
      change_plan_details = ChangePlanDetails.from_hash(hash['changePlanDetails']) if
        hash['changePlanDetails']

      # Create a new hash for additional properties, removing known properties.
      new_hash = hash.reject { |k, _| names.value?(k) }

      additional_properties = APIHelper.get_additional_properties(
        new_hash, proc { |value| value }
      )

      # Create object from extracted values.
      Actionobject.new(suspend: suspend,
                       suspend_details: suspend_details,
                       change_plan: change_plan,
                       change_plan_details: change_plan_details,
                       additional_properties: additional_properties)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} suspend: #{@suspend}, suspend_details: #{@suspend_details}, change_plan:"\
      " #{@change_plan}, change_plan_details: #{@change_plan_details}, additional_properties:"\
      " #{@additional_properties}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} suspend: #{@suspend.inspect}, suspend_details: #{@suspend_details.inspect},"\
      " change_plan: #{@change_plan.inspect}, change_plan_details:"\
      " #{@change_plan_details.inspect}, additional_properties: #{@additional_properties}>"
    end
  end
end
