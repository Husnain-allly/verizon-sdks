# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require 'date'
module Verizon
  # DtoExpandedDeviceResponse Model.
  class DtoExpandedDeviceResponse < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Not used in this release, future functionality
    # @return [String]
    attr_accessor :accountclientid

    # The billing account ID. This is the same value as the Account ID
    # @return [String]
    attr_accessor :billingaccountid

    # The Identifier of chipset used by the device
    # @return [String]
    attr_accessor :chipset

    # The Identifier of chipset used by the device
    # @return [Hash[String, Object]]
    attr_accessor :commands

    # Timestamp of the record
    # @return [DateTime]
    attr_accessor :createdon

    # Name/value pair, where the value is client defined.  The purpose is to
    # keep track of current state per device action.
    # @return [Hash[String, Object]]
    attr_accessor :customdata

    # a short description
    # @return [String]
    attr_accessor :description

    # The Electronic Serial Number (ESN) of the device
    # @return [Integer]
    attr_accessor :esn

    # Fields to return needed by search
    # @return [DtoFields]
    attr_accessor :fields

    # UUID of the ECPD account the user belongs to
    # @return [String]
    attr_accessor :foreignid

    # The manufacturer's hardware version of the device
    # @return [String]
    attr_accessor :hardwareversion

    # The 20-digit Integrated Circuit Card ID (SIM card ID)
    # @return [String]
    attr_accessor :iccid

    # UUID of the user record, assigned at creation
    # @return [String]
    attr_accessor :id

    # The 15-digit International Mobile Equipment ID
    # @return [Integer]
    attr_accessor :imei

    # The 64-bit International Mobile Subscriber Identity
    # @return [Integer]
    attr_accessor :imsi

    # Timestamp of the record
    # @return [DateTime]
    attr_accessor :lastupdated

    # licenses assigned to the device
    # @return [Array[String]]
    attr_accessor :licenses

    # The Media Access Control address of the device, listed on the device in
    # the format XX-XX-XX-XX-XX-XX or XX:XX:XX:XX:XX:XX
    # @return [String]
    attr_accessor :mac

    # The manufacturer of the device
    # @return [String]
    attr_accessor :manufacturer

    # The 56-bit Mobile Equipment ID
    # @return [String]
    attr_accessor :meid

    # Detail
    # @return [Object]
    attr_accessor :modelmetadata

    # The Mobile Station International Subscriber Directory Number. In the USA,
    # this is 1+ a 10-digit phone number
    # @return [String]
    attr_accessor :msisdn

    # User defined name of the record
    # @return [String]
    attr_accessor :name

    # this field is applicable for BLE sensors. This represents the value of
    # parent gateway device
    # @return [String]
    attr_accessor :parentdeviceid

    # The device model name
    # @return [String]
    attr_accessor :productmodel

    # The id of the provider who is responible for talking to the device
    # @return [String]
    attr_accessor :providerid

    # The numeric value of the Quick Response (QR) code
    # @return [String]
    attr_accessor :qrcode

    # The device reference ID
    # @return [String]
    attr_accessor :refid

    # The type of value represented by `refid`
    # @return [String]
    attr_accessor :refidtype

    # The device's serial number
    # @return [String]
    attr_accessor :serial

    # The device's serial number
    # @return [Array[String]]
    attr_accessor :services

    # The Stock Keeping Unit (SKU) number of the device
    # @return [String]
    attr_accessor :sku

    # the current device software version
    # @return [String]
    attr_accessor :softwareversion

    # The current status of the device or transaction and will be `success` or
    # `failed`
    # @return [String]
    attr_accessor :state

    # The resource version
    # @return [String]
    attr_accessor :version

    # The UUID of the resource version
    # @return [String]
    attr_accessor :versionid

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['accountclientid'] = 'accountclientid'
      @_hash['billingaccountid'] = 'billingaccountid'
      @_hash['chipset'] = 'chipset'
      @_hash['commands'] = 'commands'
      @_hash['createdon'] = 'createdon'
      @_hash['customdata'] = 'customdata'
      @_hash['description'] = 'description'
      @_hash['esn'] = 'esn'
      @_hash['fields'] = 'fields'
      @_hash['foreignid'] = 'foreignid'
      @_hash['hardwareversion'] = 'hardwareversion'
      @_hash['iccid'] = 'iccid'
      @_hash['id'] = 'id'
      @_hash['imei'] = 'imei'
      @_hash['imsi'] = 'imsi'
      @_hash['lastupdated'] = 'lastupdated'
      @_hash['licenses'] = 'licenses'
      @_hash['mac'] = 'mac'
      @_hash['manufacturer'] = 'manufacturer'
      @_hash['meid'] = 'meid'
      @_hash['modelmetadata'] = 'modelmetadata'
      @_hash['msisdn'] = 'msisdn'
      @_hash['name'] = 'name'
      @_hash['parentdeviceid'] = 'parentdeviceid'
      @_hash['productmodel'] = 'productmodel'
      @_hash['providerid'] = 'providerid'
      @_hash['qrcode'] = 'qrcode'
      @_hash['refid'] = 'refid'
      @_hash['refidtype'] = 'refidtype'
      @_hash['serial'] = 'serial'
      @_hash['services'] = 'services'
      @_hash['sku'] = 'sku'
      @_hash['softwareversion'] = 'softwareversion'
      @_hash['state'] = 'state'
      @_hash['version'] = 'version'
      @_hash['versionid'] = 'versionid'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        accountclientid
        billingaccountid
        chipset
        commands
        customdata
        description
        esn
        fields
        hardwareversion
        iccid
        id
        imei
        imsi
        licenses
        mac
        manufacturer
        meid
        modelmetadata
        msisdn
        name
        parentdeviceid
        productmodel
        providerid
        qrcode
        refid
        refidtype
        serial
        services
        sku
        softwareversion
        version
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(createdon:, foreignid:, lastupdated:, state:, versionid:,
                   accountclientid: SKIP, billingaccountid: SKIP, chipset: SKIP,
                   commands: SKIP, customdata: SKIP, description: SKIP,
                   esn: SKIP, fields: SKIP, hardwareversion: SKIP, iccid: SKIP,
                   id: SKIP, imei: SKIP, imsi: SKIP, licenses: SKIP, mac: SKIP,
                   manufacturer: SKIP, meid: SKIP, modelmetadata: SKIP,
                   msisdn: SKIP, name: SKIP, parentdeviceid: SKIP,
                   productmodel: SKIP, providerid: SKIP, qrcode: SKIP,
                   refid: SKIP, refidtype: SKIP, serial: SKIP, services: SKIP,
                   sku: SKIP, softwareversion: SKIP, version: SKIP)
      @accountclientid = accountclientid unless accountclientid == SKIP
      @billingaccountid = billingaccountid unless billingaccountid == SKIP
      @chipset = chipset unless chipset == SKIP
      @commands = commands unless commands == SKIP
      @createdon = createdon
      @customdata = customdata unless customdata == SKIP
      @description = description unless description == SKIP
      @esn = esn unless esn == SKIP
      @fields = fields unless fields == SKIP
      @foreignid = foreignid
      @hardwareversion = hardwareversion unless hardwareversion == SKIP
      @iccid = iccid unless iccid == SKIP
      @id = id unless id == SKIP
      @imei = imei unless imei == SKIP
      @imsi = imsi unless imsi == SKIP
      @lastupdated = lastupdated
      @licenses = licenses unless licenses == SKIP
      @mac = mac unless mac == SKIP
      @manufacturer = manufacturer unless manufacturer == SKIP
      @meid = meid unless meid == SKIP
      @modelmetadata = modelmetadata unless modelmetadata == SKIP
      @msisdn = msisdn unless msisdn == SKIP
      @name = name unless name == SKIP
      @parentdeviceid = parentdeviceid unless parentdeviceid == SKIP
      @productmodel = productmodel unless productmodel == SKIP
      @providerid = providerid unless providerid == SKIP
      @qrcode = qrcode unless qrcode == SKIP
      @refid = refid unless refid == SKIP
      @refidtype = refidtype unless refidtype == SKIP
      @serial = serial unless serial == SKIP
      @services = services unless services == SKIP
      @sku = sku unless sku == SKIP
      @softwareversion = softwareversion unless softwareversion == SKIP
      @state = state
      @version = version unless version == SKIP
      @versionid = versionid
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      createdon = if hash.key?('createdon')
                    (DateTimeHelper.from_rfc3339(hash['createdon']) if hash['createdon'])
                  end
      foreignid = hash.key?('foreignid') ? hash['foreignid'] : nil
      lastupdated = if hash.key?('lastupdated')
                      (DateTimeHelper.from_rfc3339(hash['lastupdated']) if hash['lastupdated'])
                    end
      state = hash.key?('state') ? hash['state'] : nil
      versionid = hash.key?('versionid') ? hash['versionid'] : nil
      accountclientid =
        hash.key?('accountclientid') ? hash['accountclientid'] : SKIP
      billingaccountid =
        hash.key?('billingaccountid') ? hash['billingaccountid'] : SKIP
      chipset = hash.key?('chipset') ? hash['chipset'] : SKIP
      commands = hash.key?('commands') ? hash['commands'] : SKIP
      customdata = hash.key?('customdata') ? hash['customdata'] : SKIP
      description = hash.key?('description') ? hash['description'] : SKIP
      esn = hash.key?('esn') ? hash['esn'] : SKIP
      fields = DtoFields.from_hash(hash['fields']) if hash['fields']
      hardwareversion =
        hash.key?('hardwareversion') ? hash['hardwareversion'] : SKIP
      iccid = hash.key?('iccid') ? hash['iccid'] : SKIP
      id = hash.key?('id') ? hash['id'] : SKIP
      imei = hash.key?('imei') ? hash['imei'] : SKIP
      imsi = hash.key?('imsi') ? hash['imsi'] : SKIP
      licenses = hash.key?('licenses') ? hash['licenses'] : SKIP
      mac = hash.key?('mac') ? hash['mac'] : SKIP
      manufacturer = hash.key?('manufacturer') ? hash['manufacturer'] : SKIP
      meid = hash.key?('meid') ? hash['meid'] : SKIP
      modelmetadata = hash.key?('modelmetadata') ? hash['modelmetadata'] : SKIP
      msisdn = hash.key?('msisdn') ? hash['msisdn'] : SKIP
      name = hash.key?('name') ? hash['name'] : SKIP
      parentdeviceid =
        hash.key?('parentdeviceid') ? hash['parentdeviceid'] : SKIP
      productmodel = hash.key?('productmodel') ? hash['productmodel'] : SKIP
      providerid = hash.key?('providerid') ? hash['providerid'] : SKIP
      qrcode = hash.key?('qrcode') ? hash['qrcode'] : SKIP
      refid = hash.key?('refid') ? hash['refid'] : SKIP
      refidtype = hash.key?('refidtype') ? hash['refidtype'] : SKIP
      serial = hash.key?('serial') ? hash['serial'] : SKIP
      services = hash.key?('services') ? hash['services'] : SKIP
      sku = hash.key?('sku') ? hash['sku'] : SKIP
      softwareversion =
        hash.key?('softwareversion') ? hash['softwareversion'] : SKIP
      version = hash.key?('version') ? hash['version'] : SKIP

      # Create object from extracted values.
      DtoExpandedDeviceResponse.new(createdon: createdon,
                                    foreignid: foreignid,
                                    lastupdated: lastupdated,
                                    state: state,
                                    versionid: versionid,
                                    accountclientid: accountclientid,
                                    billingaccountid: billingaccountid,
                                    chipset: chipset,
                                    commands: commands,
                                    customdata: customdata,
                                    description: description,
                                    esn: esn,
                                    fields: fields,
                                    hardwareversion: hardwareversion,
                                    iccid: iccid,
                                    id: id,
                                    imei: imei,
                                    imsi: imsi,
                                    licenses: licenses,
                                    mac: mac,
                                    manufacturer: manufacturer,
                                    meid: meid,
                                    modelmetadata: modelmetadata,
                                    msisdn: msisdn,
                                    name: name,
                                    parentdeviceid: parentdeviceid,
                                    productmodel: productmodel,
                                    providerid: providerid,
                                    qrcode: qrcode,
                                    refid: refid,
                                    refidtype: refidtype,
                                    serial: serial,
                                    services: services,
                                    sku: sku,
                                    softwareversion: softwareversion,
                                    version: version)
    end

    def to_custom_createdon
      DateTimeHelper.to_rfc3339(createdon)
    end

    def to_custom_lastupdated
      DateTimeHelper.to_rfc3339(lastupdated)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} accountclientid: #{@accountclientid}, billingaccountid:"\
      " #{@billingaccountid}, chipset: #{@chipset}, commands: #{@commands}, createdon:"\
      " #{@createdon}, customdata: #{@customdata}, description: #{@description}, esn: #{@esn},"\
      " fields: #{@fields}, foreignid: #{@foreignid}, hardwareversion: #{@hardwareversion}, iccid:"\
      " #{@iccid}, id: #{@id}, imei: #{@imei}, imsi: #{@imsi}, lastupdated: #{@lastupdated},"\
      " licenses: #{@licenses}, mac: #{@mac}, manufacturer: #{@manufacturer}, meid: #{@meid},"\
      " modelmetadata: #{@modelmetadata}, msisdn: #{@msisdn}, name: #{@name}, parentdeviceid:"\
      " #{@parentdeviceid}, productmodel: #{@productmodel}, providerid: #{@providerid}, qrcode:"\
      " #{@qrcode}, refid: #{@refid}, refidtype: #{@refidtype}, serial: #{@serial}, services:"\
      " #{@services}, sku: #{@sku}, softwareversion: #{@softwareversion}, state: #{@state},"\
      " version: #{@version}, versionid: #{@versionid}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} accountclientid: #{@accountclientid.inspect}, billingaccountid:"\
      " #{@billingaccountid.inspect}, chipset: #{@chipset.inspect}, commands:"\
      " #{@commands.inspect}, createdon: #{@createdon.inspect}, customdata:"\
      " #{@customdata.inspect}, description: #{@description.inspect}, esn: #{@esn.inspect},"\
      " fields: #{@fields.inspect}, foreignid: #{@foreignid.inspect}, hardwareversion:"\
      " #{@hardwareversion.inspect}, iccid: #{@iccid.inspect}, id: #{@id.inspect}, imei:"\
      " #{@imei.inspect}, imsi: #{@imsi.inspect}, lastupdated: #{@lastupdated.inspect}, licenses:"\
      " #{@licenses.inspect}, mac: #{@mac.inspect}, manufacturer: #{@manufacturer.inspect}, meid:"\
      " #{@meid.inspect}, modelmetadata: #{@modelmetadata.inspect}, msisdn: #{@msisdn.inspect},"\
      " name: #{@name.inspect}, parentdeviceid: #{@parentdeviceid.inspect}, productmodel:"\
      " #{@productmodel.inspect}, providerid: #{@providerid.inspect}, qrcode: #{@qrcode.inspect},"\
      " refid: #{@refid.inspect}, refidtype: #{@refidtype.inspect}, serial: #{@serial.inspect},"\
      " services: #{@services.inspect}, sku: #{@sku.inspect}, softwareversion:"\
      " #{@softwareversion.inspect}, state: #{@state.inspect}, version: #{@version.inspect},"\
      " versionid: #{@versionid.inspect}>"
    end
  end
end
