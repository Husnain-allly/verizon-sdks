# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # M5GBiprimaryPlaceofuse Model.
  class M5GBiprimaryPlaceofuse < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [M5GBiAddress]
    attr_accessor :address

    # TODO: Write general description for this method
    # @return [M5GBiCustomerName]
    attr_accessor :customer_name

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['address'] = 'address'
      @_hash['customer_name'] = 'customerName'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        address
        customer_name
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(address: SKIP, customer_name: SKIP,
                   additional_properties: nil)
      # Add additional model properties to the instance
      additional_properties = {} if additional_properties.nil?

      @address = address unless address == SKIP
      @customer_name = customer_name unless customer_name == SKIP
      @additional_properties = additional_properties
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      address = M5GBiAddress.from_hash(hash['address']) if hash['address']
      customer_name = M5GBiCustomerName.from_hash(hash['customerName']) if hash['customerName']

      # Create a new hash for additional properties, removing known properties.
      new_hash = hash.reject { |k, _| names.value?(k) }

      additional_properties = APIHelper.get_additional_properties(
        new_hash, proc { |value| value }
      )

      # Create object from extracted values.
      M5GBiprimaryPlaceofuse.new(address: address,
                                 customer_name: customer_name,
                                 additional_properties: additional_properties)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} address: #{@address}, customer_name: #{@customer_name},"\
      " additional_properties: #{@additional_properties}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} address: #{@address.inspect}, customer_name: #{@customer_name.inspect},"\
      " additional_properties: #{@additional_properties}>"
    end
  end
end
