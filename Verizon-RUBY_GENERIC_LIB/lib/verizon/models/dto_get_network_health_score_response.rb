# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # The values measured are for the network
  class DtoGetNetworkHealthScoreResponse < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [Array[DtoHealthScoreMetric]]
    attr_accessor :networksummary

    # TODO: Write general description for this method
    # @return [Array[DtoHealthScoreMetric]]
    attr_accessor :overallsummary

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['networksummary'] = 'networksummary'
      @_hash['overallsummary'] = 'overallsummary'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        networksummary
        overallsummary
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(networksummary: SKIP, overallsummary: SKIP)
      @networksummary = networksummary unless networksummary == SKIP
      @overallsummary = overallsummary unless overallsummary == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      # Parameter is an array, so we need to iterate through it
      networksummary = nil
      unless hash['networksummary'].nil?
        networksummary = []
        hash['networksummary'].each do |structure|
          networksummary << (DtoHealthScoreMetric.from_hash(structure) if structure)
        end
      end

      networksummary = SKIP unless hash.key?('networksummary')
      # Parameter is an array, so we need to iterate through it
      overallsummary = nil
      unless hash['overallsummary'].nil?
        overallsummary = []
        hash['overallsummary'].each do |structure|
          overallsummary << (DtoHealthScoreMetric.from_hash(structure) if structure)
        end
      end

      overallsummary = SKIP unless hash.key?('overallsummary')

      # Create object from extracted values.
      DtoGetNetworkHealthScoreResponse.new(networksummary: networksummary,
                                           overallsummary: overallsummary)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} networksummary: #{@networksummary}, overallsummary: #{@overallsummary}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} networksummary: #{@networksummary.inspect}, overallsummary:"\
      " #{@overallsummary.inspect}>"
    end
  end
end
