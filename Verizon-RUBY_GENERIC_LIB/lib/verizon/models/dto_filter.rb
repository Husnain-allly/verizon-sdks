# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # DtoFilter Model.
  class DtoFilter < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Use to provide device details for alerts specific to a device
    # @return [String]
    attr_accessor :m_expand

    # Limit the number of results returned
    # @return [Integer]
    attr_accessor :m_limitnumber

    # A flag set to show if pagination requested (false) or not (true)
    # @return [TrueClass | FalseClass]
    attr_accessor :m_nopagination

    # A flag set to show if pagination requested (false) or not (true)
    # @return [String]
    attr_accessor :m_page

    # A flag set to show if pagination requested (false) or not (true)
    # @return [Integer]
    attr_accessor :m_pagenumber

    # Limits the fields of the device that the user is interested in rather than
    # all of the fields
    # @return [Array[String]]
    attr_accessor :m_projection

    # Filters results based on user defined criteria
    # @return [Hash[String, Object]]
    attr_accessor :m_selection

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['m_expand'] = '$expand'
      @_hash['m_limitnumber'] = '$limitnumber'
      @_hash['m_nopagination'] = '$nopagination'
      @_hash['m_page'] = '$page'
      @_hash['m_pagenumber'] = '$pagenumber'
      @_hash['m_projection'] = '$projection'
      @_hash['m_selection'] = '$selection'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        m_expand
        m_limitnumber
        m_nopagination
        m_page
        m_pagenumber
        m_projection
        m_selection
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(m_expand: SKIP, m_limitnumber: SKIP, m_nopagination: SKIP,
                   m_page: SKIP, m_pagenumber: SKIP, m_projection: SKIP,
                   m_selection: SKIP)
      @m_expand = m_expand unless m_expand == SKIP
      @m_limitnumber = m_limitnumber unless m_limitnumber == SKIP
      @m_nopagination = m_nopagination unless m_nopagination == SKIP
      @m_page = m_page unless m_page == SKIP
      @m_pagenumber = m_pagenumber unless m_pagenumber == SKIP
      @m_projection = m_projection unless m_projection == SKIP
      @m_selection = m_selection unless m_selection == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      m_expand = hash.key?('$expand') ? hash['$expand'] : SKIP
      m_limitnumber = hash.key?('$limitnumber') ? hash['$limitnumber'] : SKIP
      m_nopagination = hash.key?('$nopagination') ? hash['$nopagination'] : SKIP
      m_page = hash.key?('$page') ? hash['$page'] : SKIP
      m_pagenumber = hash.key?('$pagenumber') ? hash['$pagenumber'] : SKIP
      m_projection = hash.key?('$projection') ? hash['$projection'] : SKIP
      m_selection = hash.key?('$selection') ? hash['$selection'] : SKIP

      # Create object from extracted values.
      DtoFilter.new(m_expand: m_expand,
                    m_limitnumber: m_limitnumber,
                    m_nopagination: m_nopagination,
                    m_page: m_page,
                    m_pagenumber: m_pagenumber,
                    m_projection: m_projection,
                    m_selection: m_selection)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} m_expand: #{@m_expand}, m_limitnumber: #{@m_limitnumber}, m_nopagination:"\
      " #{@m_nopagination}, m_page: #{@m_page}, m_pagenumber: #{@m_pagenumber}, m_projection:"\
      " #{@m_projection}, m_selection: #{@m_selection}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} m_expand: #{@m_expand.inspect}, m_limitnumber: #{@m_limitnumber.inspect},"\
      " m_nopagination: #{@m_nopagination.inspect}, m_page: #{@m_page.inspect}, m_pagenumber:"\
      " #{@m_pagenumber.inspect}, m_projection: #{@m_projection.inspect}, m_selection:"\
      " #{@m_selection.inspect}>"
    end
  end
end
