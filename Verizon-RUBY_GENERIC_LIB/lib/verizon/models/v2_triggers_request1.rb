# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # V2TriggersRequest1 Model.
  class V2TriggersRequest1 < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The system assigned UUID of the trigger
    # @return [String]
    attr_accessor :trigger_id

    # The user defined name of the trigger
    # @return [String]
    attr_accessor :trigger_name

    # The Enterprise Customer Profile Database ID
    # @return [String]
    attr_accessor :ecpd_id

    # The type of trigger being created or modified
    # @return [TriggerCategory]
    attr_accessor :trigger_category

    # The type of trigger being created or modified
    # @return [DataTrigger5]
    attr_accessor :data_trigger

    # The type of trigger being created or modified
    # @return [Notificationarray]
    attr_accessor :notification

    # The type of trigger being created or modified
    # @return [String]
    attr_accessor :notification_type

    # The type of trigger being created or modified
    # @return [TrueClass | FalseClass]
    attr_accessor :callback

    # The type of trigger being created or modified
    # @return [TrueClass | FalseClass]
    attr_accessor :email_notification

    # The type of trigger being created or modified
    # @return [String]
    attr_accessor :notification_group_name

    # The type of trigger being created or modified
    # @return [Integer]
    attr_accessor :notification_frequency_factor

    # The type of trigger being created or modified
    # @return [String]
    attr_accessor :notification_frequency_interval

    # The type of trigger being created or modified
    # @return [String]
    attr_accessor :external_email_recipients

    # The type of trigger being created or modified
    # @return [TrueClass | FalseClass]
    attr_accessor :sms_notification

    # The type of trigger being created or modified
    # @return [Array[Cellphonenumber]]
    attr_accessor :sms_numbers

    # The type of trigger being created or modified
    # @return [TrueClass | FalseClass]
    attr_accessor :reminder

    # The type of trigger being created or modified
    # @return [String]
    attr_accessor :severity

    # A flag to indicate of the trigger is active, true, or not, false
    # @return [Active]
    attr_accessor :active

    # The numeric name of the account and must include leading zeroes
    # @return [String]
    attr_accessor :account_name

    # The numeric name of the account and must include leading zeroes
    # @return [PricePlanTrigger2]
    attr_accessor :price_plan_trigger

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['trigger_id'] = 'triggerId'
      @_hash['trigger_name'] = 'triggerName'
      @_hash['ecpd_id'] = 'ecpdId'
      @_hash['trigger_category'] = 'triggerCategory'
      @_hash['data_trigger'] = 'dataTrigger'
      @_hash['notification'] = 'notification'
      @_hash['notification_type'] = 'notificationType'
      @_hash['callback'] = 'callback'
      @_hash['email_notification'] = 'emailNotification'
      @_hash['notification_group_name'] = 'notificationGroupName'
      @_hash['notification_frequency_factor'] = 'notificationFrequencyFactor'
      @_hash['notification_frequency_interval'] =
        'notificationFrequencyInterval'
      @_hash['external_email_recipients'] = 'externalEmailRecipients'
      @_hash['sms_notification'] = 'smsNotification'
      @_hash['sms_numbers'] = 'smsNumbers'
      @_hash['reminder'] = 'reminder'
      @_hash['severity'] = 'severity'
      @_hash['active'] = 'active'
      @_hash['account_name'] = 'accountName'
      @_hash['price_plan_trigger'] = 'pricePlanTrigger'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        trigger_id
        trigger_name
        ecpd_id
        trigger_category
        data_trigger
        notification
        notification_type
        callback
        email_notification
        notification_group_name
        notification_frequency_factor
        notification_frequency_interval
        external_email_recipients
        sms_notification
        sms_numbers
        reminder
        severity
        active
        account_name
        price_plan_trigger
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(trigger_id: SKIP, trigger_name: SKIP, ecpd_id: SKIP,
                   trigger_category: SKIP, data_trigger: SKIP,
                   notification: SKIP, notification_type: SKIP, callback: SKIP,
                   email_notification: SKIP, notification_group_name: SKIP,
                   notification_frequency_factor: SKIP,
                   notification_frequency_interval: SKIP,
                   external_email_recipients: SKIP, sms_notification: SKIP,
                   sms_numbers: SKIP, reminder: SKIP, severity: SKIP,
                   active: SKIP, account_name: SKIP, price_plan_trigger: SKIP,
                   additional_properties: nil)
      # Add additional model properties to the instance
      additional_properties = {} if additional_properties.nil?

      @trigger_id = trigger_id unless trigger_id == SKIP
      @trigger_name = trigger_name unless trigger_name == SKIP
      @ecpd_id = ecpd_id unless ecpd_id == SKIP
      @trigger_category = trigger_category unless trigger_category == SKIP
      @data_trigger = data_trigger unless data_trigger == SKIP
      @notification = notification unless notification == SKIP
      @notification_type = notification_type unless notification_type == SKIP
      @callback = callback unless callback == SKIP
      @email_notification = email_notification unless email_notification == SKIP
      @notification_group_name = notification_group_name unless notification_group_name == SKIP
      unless notification_frequency_factor == SKIP
        @notification_frequency_factor =
          notification_frequency_factor
      end
      unless notification_frequency_interval == SKIP
        @notification_frequency_interval =
          notification_frequency_interval
      end
      unless external_email_recipients == SKIP
        @external_email_recipients =
          external_email_recipients
      end
      @sms_notification = sms_notification unless sms_notification == SKIP
      @sms_numbers = sms_numbers unless sms_numbers == SKIP
      @reminder = reminder unless reminder == SKIP
      @severity = severity unless severity == SKIP
      @active = active unless active == SKIP
      @account_name = account_name unless account_name == SKIP
      @price_plan_trigger = price_plan_trigger unless price_plan_trigger == SKIP
      @additional_properties = additional_properties
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      trigger_id = hash.key?('triggerId') ? hash['triggerId'] : SKIP
      trigger_name = hash.key?('triggerName') ? hash['triggerName'] : SKIP
      ecpd_id = hash.key?('ecpdId') ? hash['ecpdId'] : SKIP
      trigger_category =
        hash.key?('triggerCategory') ? hash['triggerCategory'] : SKIP
      data_trigger = DataTrigger5.from_hash(hash['dataTrigger']) if hash['dataTrigger']
      notification = Notificationarray.from_hash(hash['notification']) if hash['notification']
      notification_type =
        hash.key?('notificationType') ? hash['notificationType'] : SKIP
      callback = hash.key?('callback') ? hash['callback'] : SKIP
      email_notification =
        hash.key?('emailNotification') ? hash['emailNotification'] : SKIP
      notification_group_name =
        hash.key?('notificationGroupName') ? hash['notificationGroupName'] : SKIP
      notification_frequency_factor =
        hash.key?('notificationFrequencyFactor') ? hash['notificationFrequencyFactor'] : SKIP
      notification_frequency_interval =
        hash.key?('notificationFrequencyInterval') ? hash['notificationFrequencyInterval'] : SKIP
      external_email_recipients =
        hash.key?('externalEmailRecipients') ? hash['externalEmailRecipients'] : SKIP
      sms_notification =
        hash.key?('smsNotification') ? hash['smsNotification'] : SKIP
      # Parameter is an array, so we need to iterate through it
      sms_numbers = nil
      unless hash['smsNumbers'].nil?
        sms_numbers = []
        hash['smsNumbers'].each do |structure|
          sms_numbers << (Cellphonenumber.from_hash(structure) if structure)
        end
      end

      sms_numbers = SKIP unless hash.key?('smsNumbers')
      reminder = hash.key?('reminder') ? hash['reminder'] : SKIP
      severity = hash.key?('severity') ? hash['severity'] : SKIP
      active = hash.key?('active') ? hash['active'] : SKIP
      account_name = hash.key?('accountName') ? hash['accountName'] : SKIP
      price_plan_trigger = PricePlanTrigger2.from_hash(hash['pricePlanTrigger']) if
        hash['pricePlanTrigger']

      # Create a new hash for additional properties, removing known properties.
      new_hash = hash.reject { |k, _| names.value?(k) }

      additional_properties = APIHelper.get_additional_properties(
        new_hash, proc { |value| value }
      )

      # Create object from extracted values.
      V2TriggersRequest1.new(trigger_id: trigger_id,
                             trigger_name: trigger_name,
                             ecpd_id: ecpd_id,
                             trigger_category: trigger_category,
                             data_trigger: data_trigger,
                             notification: notification,
                             notification_type: notification_type,
                             callback: callback,
                             email_notification: email_notification,
                             notification_group_name: notification_group_name,
                             notification_frequency_factor: notification_frequency_factor,
                             notification_frequency_interval: notification_frequency_interval,
                             external_email_recipients: external_email_recipients,
                             sms_notification: sms_notification,
                             sms_numbers: sms_numbers,
                             reminder: reminder,
                             severity: severity,
                             active: active,
                             account_name: account_name,
                             price_plan_trigger: price_plan_trigger,
                             additional_properties: additional_properties)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} trigger_id: #{@trigger_id}, trigger_name: #{@trigger_name}, ecpd_id:"\
      " #{@ecpd_id}, trigger_category: #{@trigger_category}, data_trigger: #{@data_trigger},"\
      " notification: #{@notification}, notification_type: #{@notification_type}, callback:"\
      " #{@callback}, email_notification: #{@email_notification}, notification_group_name:"\
      " #{@notification_group_name}, notification_frequency_factor:"\
      " #{@notification_frequency_factor}, notification_frequency_interval:"\
      " #{@notification_frequency_interval}, external_email_recipients:"\
      " #{@external_email_recipients}, sms_notification: #{@sms_notification}, sms_numbers:"\
      " #{@sms_numbers}, reminder: #{@reminder}, severity: #{@severity}, active: #{@active},"\
      " account_name: #{@account_name}, price_plan_trigger: #{@price_plan_trigger},"\
      " additional_properties: #{@additional_properties}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} trigger_id: #{@trigger_id.inspect}, trigger_name: #{@trigger_name.inspect},"\
      " ecpd_id: #{@ecpd_id.inspect}, trigger_category: #{@trigger_category.inspect},"\
      " data_trigger: #{@data_trigger.inspect}, notification: #{@notification.inspect},"\
      " notification_type: #{@notification_type.inspect}, callback: #{@callback.inspect},"\
      " email_notification: #{@email_notification.inspect}, notification_group_name:"\
      " #{@notification_group_name.inspect}, notification_frequency_factor:"\
      " #{@notification_frequency_factor.inspect}, notification_frequency_interval:"\
      " #{@notification_frequency_interval.inspect}, external_email_recipients:"\
      " #{@external_email_recipients.inspect}, sms_notification: #{@sms_notification.inspect},"\
      " sms_numbers: #{@sms_numbers.inspect}, reminder: #{@reminder.inspect}, severity:"\
      " #{@severity.inspect}, active: #{@active.inspect}, account_name: #{@account_name.inspect},"\
      " price_plan_trigger: #{@price_plan_trigger.inspect}, additional_properties:"\
      " #{@additional_properties}>"
    end
  end
end
