# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # Device identifiers, one or more are required
  class DtoDeviceResourceIdentifier1 < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # the IEEE EUI64 address space used to identify a device. It is supplied by
    # the device manufacturer
    # @return [String]
    attr_accessor :deveui

    # This is a UUID value of the device created when the device is onboarded
    # @return [String]
    attr_accessor :deviceid

    # The Electronic Serial Number (ESN) of the device
    # @return [Integer]
    attr_accessor :esn

    # The 20-digit Integrated Circuit Card ID (SIM card ID)
    # @return [String]
    attr_accessor :iccid

    # The 15-digit International Mobile Equipment ID
    # @return [Integer]
    attr_accessor :imei

    # The 64-bit International Mobile Subscriber Identity
    # @return [Integer]
    attr_accessor :imsi

    # The Media Access Control address of the device, listed on the device in
    # the format XX-XX-XX-XX-XX-XX or XX:XX:XX:XX:XX:XX
    # @return [String]
    attr_accessor :mac

    # The manufacturer of the device
    # @return [String]
    attr_accessor :manufacturer

    # The 56-bit Mobile Equipment ID
    # @return [String]
    attr_accessor :meid

    # The Mobile Station International Subscriber Directory Number. In the USA,
    # this is 1+ a 10-digit phone number
    # @return [String]
    attr_accessor :msisdn

    # The UUID of the node the device is associated with
    # @return [String]
    attr_accessor :node_uuid

    # The numeric value of the Quick Response (QR) code
    # @return [String]
    attr_accessor :qrcode

    # The device's serial number
    # @return [String]
    attr_accessor :serial

    # UUID of the user record, assigned at creation
    # @return [String]
    attr_accessor :id

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['deveui'] = 'deveui'
      @_hash['deviceid'] = 'deviceid'
      @_hash['esn'] = 'esn'
      @_hash['iccid'] = 'iccid'
      @_hash['imei'] = 'imei'
      @_hash['imsi'] = 'imsi'
      @_hash['mac'] = 'mac'
      @_hash['manufacturer'] = 'manufacturer'
      @_hash['meid'] = 'meid'
      @_hash['msisdn'] = 'msisdn'
      @_hash['node_uuid'] = 'node_uuid'
      @_hash['qrcode'] = 'qrcode'
      @_hash['serial'] = 'serial'
      @_hash['id'] = 'id'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        deveui
        deviceid
        esn
        iccid
        imei
        imsi
        mac
        manufacturer
        meid
        msisdn
        node_uuid
        qrcode
        serial
        id
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(deveui: SKIP, deviceid: SKIP, esn: SKIP, iccid: SKIP,
                   imei: SKIP, imsi: SKIP, mac: SKIP, manufacturer: SKIP,
                   meid: SKIP, msisdn: SKIP, node_uuid: SKIP, qrcode: SKIP,
                   serial: SKIP, id: SKIP)
      @deveui = deveui unless deveui == SKIP
      @deviceid = deviceid unless deviceid == SKIP
      @esn = esn unless esn == SKIP
      @iccid = iccid unless iccid == SKIP
      @imei = imei unless imei == SKIP
      @imsi = imsi unless imsi == SKIP
      @mac = mac unless mac == SKIP
      @manufacturer = manufacturer unless manufacturer == SKIP
      @meid = meid unless meid == SKIP
      @msisdn = msisdn unless msisdn == SKIP
      @node_uuid = node_uuid unless node_uuid == SKIP
      @qrcode = qrcode unless qrcode == SKIP
      @serial = serial unless serial == SKIP
      @id = id unless id == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      deveui = hash.key?('deveui') ? hash['deveui'] : SKIP
      deviceid = hash.key?('deviceid') ? hash['deviceid'] : SKIP
      esn = hash.key?('esn') ? hash['esn'] : SKIP
      iccid = hash.key?('iccid') ? hash['iccid'] : SKIP
      imei = hash.key?('imei') ? hash['imei'] : SKIP
      imsi = hash.key?('imsi') ? hash['imsi'] : SKIP
      mac = hash.key?('mac') ? hash['mac'] : SKIP
      manufacturer = hash.key?('manufacturer') ? hash['manufacturer'] : SKIP
      meid = hash.key?('meid') ? hash['meid'] : SKIP
      msisdn = hash.key?('msisdn') ? hash['msisdn'] : SKIP
      node_uuid = hash.key?('node_uuid') ? hash['node_uuid'] : SKIP
      qrcode = hash.key?('qrcode') ? hash['qrcode'] : SKIP
      serial = hash.key?('serial') ? hash['serial'] : SKIP
      id = hash.key?('id') ? hash['id'] : SKIP

      # Create object from extracted values.
      DtoDeviceResourceIdentifier1.new(deveui: deveui,
                                       deviceid: deviceid,
                                       esn: esn,
                                       iccid: iccid,
                                       imei: imei,
                                       imsi: imsi,
                                       mac: mac,
                                       manufacturer: manufacturer,
                                       meid: meid,
                                       msisdn: msisdn,
                                       node_uuid: node_uuid,
                                       qrcode: qrcode,
                                       serial: serial,
                                       id: id)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} deveui: #{@deveui}, deviceid: #{@deviceid}, esn: #{@esn}, iccid: #{@iccid},"\
      " imei: #{@imei}, imsi: #{@imsi}, mac: #{@mac}, manufacturer: #{@manufacturer}, meid:"\
      " #{@meid}, msisdn: #{@msisdn}, node_uuid: #{@node_uuid}, qrcode: #{@qrcode}, serial:"\
      " #{@serial}, id: #{@id}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} deveui: #{@deveui.inspect}, deviceid: #{@deviceid.inspect}, esn:"\
      " #{@esn.inspect}, iccid: #{@iccid.inspect}, imei: #{@imei.inspect}, imsi: #{@imsi.inspect},"\
      " mac: #{@mac.inspect}, manufacturer: #{@manufacturer.inspect}, meid: #{@meid.inspect},"\
      " msisdn: #{@msisdn.inspect}, node_uuid: #{@node_uuid.inspect}, qrcode: #{@qrcode.inspect},"\
      " serial: #{@serial.inspect}, id: #{@id.inspect}>"
    end
  end
end
