# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # Carriercode1 Model.
  class Carriercode1 < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :carrier_code

    # TODO: Write general description for this method
    # @return [AllowanceThreshold]
    attr_accessor :percentage

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['carrier_code'] = 'carrierCode'
      @_hash['percentage'] = 'percentage'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        carrier_code
        percentage
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(carrier_code: SKIP, percentage: SKIP,
                   additional_properties: nil)
      # Add additional model properties to the instance
      additional_properties = {} if additional_properties.nil?

      @carrier_code = carrier_code unless carrier_code == SKIP
      @percentage = percentage unless percentage == SKIP
      @additional_properties = additional_properties
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      carrier_code = hash.key?('carrierCode') ? hash['carrierCode'] : SKIP
      percentage = AllowanceThreshold.from_hash(hash['percentage']) if hash['percentage']

      # Create a new hash for additional properties, removing known properties.
      new_hash = hash.reject { |k, _| names.value?(k) }

      additional_properties = APIHelper.get_additional_properties(
        new_hash, proc { |value| value }
      )

      # Create object from extracted values.
      Carriercode1.new(carrier_code: carrier_code,
                       percentage: percentage,
                       additional_properties: additional_properties)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} carrier_code: #{@carrier_code}, percentage: #{@percentage},"\
      " additional_properties: #{@additional_properties}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} carrier_code: #{@carrier_code.inspect}, percentage: #{@percentage.inspect},"\
      " additional_properties: #{@additional_properties}>"
    end
  end
end
