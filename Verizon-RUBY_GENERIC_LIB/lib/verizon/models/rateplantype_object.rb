# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # RateplantypeObject Model.
  class RateplantypeObject < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :rate_plan_group_description

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :rate_plan_type

    # An array of rateplan names
    # @return [Array[Rateplantype2]]
    attr_accessor :rate_plan

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['rate_plan_group_description'] = 'ratePlanGroupDescription'
      @_hash['rate_plan_type'] = 'ratePlanType'
      @_hash['rate_plan'] = 'ratePlan'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        rate_plan_group_description
        rate_plan_type
        rate_plan
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(rate_plan_group_description: SKIP, rate_plan_type: SKIP,
                   rate_plan: SKIP, additional_properties: nil)
      # Add additional model properties to the instance
      additional_properties = {} if additional_properties.nil?

      unless rate_plan_group_description == SKIP
        @rate_plan_group_description =
          rate_plan_group_description
      end
      @rate_plan_type = rate_plan_type unless rate_plan_type == SKIP
      @rate_plan = rate_plan unless rate_plan == SKIP
      @additional_properties = additional_properties
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      rate_plan_group_description =
        hash.key?('ratePlanGroupDescription') ? hash['ratePlanGroupDescription'] : SKIP
      rate_plan_type = hash.key?('ratePlanType') ? hash['ratePlanType'] : SKIP
      # Parameter is an array, so we need to iterate through it
      rate_plan = nil
      unless hash['ratePlan'].nil?
        rate_plan = []
        hash['ratePlan'].each do |structure|
          rate_plan << (Rateplantype2.from_hash(structure) if structure)
        end
      end

      rate_plan = SKIP unless hash.key?('ratePlan')

      # Create a new hash for additional properties, removing known properties.
      new_hash = hash.reject { |k, _| names.value?(k) }

      additional_properties = APIHelper.get_additional_properties(
        new_hash, proc { |value| value }
      )

      # Create object from extracted values.
      RateplantypeObject.new(rate_plan_group_description: rate_plan_group_description,
                             rate_plan_type: rate_plan_type,
                             rate_plan: rate_plan,
                             additional_properties: additional_properties)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} rate_plan_group_description: #{@rate_plan_group_description},"\
      " rate_plan_type: #{@rate_plan_type}, rate_plan: #{@rate_plan}, additional_properties:"\
      " #{@additional_properties}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} rate_plan_group_description: #{@rate_plan_group_description.inspect},"\
      " rate_plan_type: #{@rate_plan_type.inspect}, rate_plan: #{@rate_plan.inspect},"\
      " additional_properties: #{@additional_properties}>"
    end
  end
end
