# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # Suspenddetailsobject Model.
  class Suspenddetailsobject < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [Array[String]]
    attr_accessor :suspend_from_accounts

    # TODO: Write general description for this method
    # @return [Integer]
    attr_accessor :suspend_duration

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :suspend_option

    # The threshold value the trigger monitors for
    # @return [Integer]
    attr_accessor :threshold

    # The units of the threshold. This can be KB, Kilobits, MB, Megabits, or GB,
    # Gigabits
    # @return [ThresholdUnit]
    attr_accessor :threshold_unit

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['suspend_from_accounts'] = 'suspendFromAccounts'
      @_hash['suspend_duration'] = 'suspendDuration'
      @_hash['suspend_option'] = 'suspendOption'
      @_hash['threshold'] = 'threshold'
      @_hash['threshold_unit'] = 'thresholdUnit'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        suspend_from_accounts
        suspend_duration
        suspend_option
        threshold
        threshold_unit
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(suspend_from_accounts: SKIP, suspend_duration: SKIP,
                   suspend_option: SKIP, threshold: SKIP, threshold_unit: SKIP,
                   additional_properties: nil)
      # Add additional model properties to the instance
      additional_properties = {} if additional_properties.nil?

      @suspend_from_accounts = suspend_from_accounts unless suspend_from_accounts == SKIP
      @suspend_duration = suspend_duration unless suspend_duration == SKIP
      @suspend_option = suspend_option unless suspend_option == SKIP
      @threshold = threshold unless threshold == SKIP
      @threshold_unit = threshold_unit unless threshold_unit == SKIP
      @additional_properties = additional_properties
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      suspend_from_accounts =
        hash.key?('suspendFromAccounts') ? hash['suspendFromAccounts'] : SKIP
      suspend_duration =
        hash.key?('suspendDuration') ? hash['suspendDuration'] : SKIP
      suspend_option = hash.key?('suspendOption') ? hash['suspendOption'] : SKIP
      threshold = hash.key?('threshold') ? hash['threshold'] : SKIP
      threshold_unit = hash.key?('thresholdUnit') ? hash['thresholdUnit'] : SKIP

      # Create a new hash for additional properties, removing known properties.
      new_hash = hash.reject { |k, _| names.value?(k) }

      additional_properties = APIHelper.get_additional_properties(
        new_hash, proc { |value| value }
      )

      # Create object from extracted values.
      Suspenddetailsobject.new(suspend_from_accounts: suspend_from_accounts,
                               suspend_duration: suspend_duration,
                               suspend_option: suspend_option,
                               threshold: threshold,
                               threshold_unit: threshold_unit,
                               additional_properties: additional_properties)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} suspend_from_accounts: #{@suspend_from_accounts}, suspend_duration:"\
      " #{@suspend_duration}, suspend_option: #{@suspend_option}, threshold: #{@threshold},"\
      " threshold_unit: #{@threshold_unit}, additional_properties: #{@additional_properties}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} suspend_from_accounts: #{@suspend_from_accounts.inspect}, suspend_duration:"\
      " #{@suspend_duration.inspect}, suspend_option: #{@suspend_option.inspect}, threshold:"\
      " #{@threshold.inspect}, threshold_unit: #{@threshold_unit.inspect}, additional_properties:"\
      " #{@additional_properties}>"
    end
  end
end
