# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # Device information.
  class DeviceServiceRequest < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # International Mobile Equipment Identifier. The unique ID of a device.
    # @return [String]
    attr_accessor :imei

    # Set to Enable (true) or Disable (false).
    # @return [TrueClass | FalseClass]
    attr_accessor :bullseye_enable

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['imei'] = 'imei'
      @_hash['bullseye_enable'] = 'BullseyeEnable'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      []
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(imei:, bullseye_enable:, additional_properties: nil)
      # Add additional model properties to the instance
      additional_properties = {} if additional_properties.nil?

      @imei = imei
      @bullseye_enable = bullseye_enable
      @additional_properties = additional_properties
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      imei = hash.key?('imei') ? hash['imei'] : nil
      bullseye_enable =
        hash.key?('BullseyeEnable') ? hash['BullseyeEnable'] : nil

      # Create a new hash for additional properties, removing known properties.
      new_hash = hash.reject { |k, _| names.value?(k) }

      additional_properties = APIHelper.get_additional_properties(
        new_hash, proc { |value| value }
      )

      # Create object from extracted values.
      DeviceServiceRequest.new(imei: imei,
                               bullseye_enable: bullseye_enable,
                               additional_properties: additional_properties)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} imei: #{@imei}, bullseye_enable: #{@bullseye_enable},"\
      " additional_properties: #{@additional_properties}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} imei: #{@imei.inspect}, bullseye_enable: #{@bullseye_enable.inspect},"\
      " additional_properties: #{@additional_properties}>"
    end
  end
end
