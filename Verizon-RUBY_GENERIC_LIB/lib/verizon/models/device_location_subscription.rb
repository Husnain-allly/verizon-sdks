# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # DeviceLocationSubscription Model.
  class DeviceLocationSubscription < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Account identifier in "##########-#####".
    # @return [String]
    attr_accessor :account_name

    # Location service license type.
    # @return [String]
    attr_accessor :loc_type

    # The number of billable location requests allowed per billing cycle.
    # @return [String]
    attr_accessor :max_allowance

    # Location service purchase time.
    # @return [String]
    attr_accessor :purchase_time

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['account_name'] = 'accountName'
      @_hash['loc_type'] = 'locType'
      @_hash['max_allowance'] = 'maxAllowance'
      @_hash['purchase_time'] = 'purchaseTime'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        account_name
        loc_type
        max_allowance
        purchase_time
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(account_name: SKIP, loc_type: SKIP, max_allowance: SKIP,
                   purchase_time: SKIP, additional_properties: nil)
      # Add additional model properties to the instance
      additional_properties = {} if additional_properties.nil?

      @account_name = account_name unless account_name == SKIP
      @loc_type = loc_type unless loc_type == SKIP
      @max_allowance = max_allowance unless max_allowance == SKIP
      @purchase_time = purchase_time unless purchase_time == SKIP
      @additional_properties = additional_properties
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      account_name = hash.key?('accountName') ? hash['accountName'] : SKIP
      loc_type = hash.key?('locType') ? hash['locType'] : SKIP
      max_allowance = hash.key?('maxAllowance') ? hash['maxAllowance'] : SKIP
      purchase_time = hash.key?('purchaseTime') ? hash['purchaseTime'] : SKIP

      # Create a new hash for additional properties, removing known properties.
      new_hash = hash.reject { |k, _| names.value?(k) }

      additional_properties = APIHelper.get_additional_properties(
        new_hash, proc { |value| value }
      )

      # Create object from extracted values.
      DeviceLocationSubscription.new(account_name: account_name,
                                     loc_type: loc_type,
                                     max_allowance: max_allowance,
                                     purchase_time: purchase_time,
                                     additional_properties: additional_properties)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} account_name: #{@account_name}, loc_type: #{@loc_type}, max_allowance:"\
      " #{@max_allowance}, purchase_time: #{@purchase_time}, additional_properties:"\
      " #{@additional_properties}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} account_name: #{@account_name.inspect}, loc_type: #{@loc_type.inspect},"\
      " max_allowance: #{@max_allowance.inspect}, purchase_time: #{@purchase_time.inspect},"\
      " additional_properties: #{@additional_properties}>"
    end
  end
end
