# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require 'date'
module Verizon
  # The distribution schedule parameters for broadcast messages.
  class DistributionSchedule < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The period (in seconds) that the message needs to be repeatedly send out.
    # @return [Integer]
    attr_accessor :repeat_period

    # The amount of time (in minutes) while the messages needs to be sent out.
    # @return [Integer]
    attr_accessor :duration

    # The time (in UTC) when the message transmission should be started.
    # @return [DateTime]
    attr_accessor :start_time

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['repeat_period'] = 'repeatPeriod'
      @_hash['duration'] = 'duration'
      @_hash['start_time'] = 'startTime'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        start_time
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(repeat_period:, duration:, start_time: SKIP)
      @repeat_period = repeat_period
      @duration = duration
      @start_time = start_time unless start_time == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      repeat_period = hash.key?('repeatPeriod') ? hash['repeatPeriod'] : nil
      duration = hash.key?('duration') ? hash['duration'] : nil
      start_time = if hash.key?('startTime')
                     (DateTimeHelper.from_rfc3339(hash['startTime']) if hash['startTime'])
                   else
                     SKIP
                   end

      # Create object from extracted values.
      DistributionSchedule.new(repeat_period: repeat_period,
                               duration: duration,
                               start_time: start_time)
    end

    def to_custom_start_time
      DateTimeHelper.to_rfc3339(start_time)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} repeat_period: #{@repeat_period}, duration: #{@duration}, start_time:"\
      " #{@start_time}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} repeat_period: #{@repeat_period.inspect}, duration: #{@duration.inspect},"\
      " start_time: #{@start_time.inspect}>"
    end
  end
end
