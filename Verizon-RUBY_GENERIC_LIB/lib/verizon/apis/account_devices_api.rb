# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # AccountDevicesApi
  class AccountDevicesApi < BaseApi
    # Retrieve account device information such as reported firmware on the
    # devices.
    # @param [String] acc Required parameter: Account identifier.
    # @param [String] last_seen_device_id Optional parameter: Last seen device
    # identifier.
    # @param [DevicesProtocol] protocol Optional parameter: Filter to retrieve a
    # specific protocol type used.
    # @return [ApiResponse] Complete http response with raw body and status code.
    def get_account_device_information(acc,
                                       last_seen_device_id: nil,
                                       protocol: DevicesProtocol::LW_M2M)
      @api_call
        .request(new_request_builder(HttpMethodEnum::GET,
                                     '/devices/{acc}',
                                     Server::SOFTWARE_MANAGEMENT_V3)
                   .template_param(new_parameter(acc, key: 'acc')
                                    .is_required(true)
                                    .should_encode(true))
                   .query_param(new_parameter(last_seen_device_id, key: 'lastSeenDeviceId'))
                   .query_param(new_parameter(protocol, key: 'protocol'))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(And.new('thingspace_oauth', 'VZ-M2M-Token')))
        .response(new_response_handler
                    .deserializer(APIHelper.method(:custom_type_deserializer))
                    .deserialize_into(V3AccountDeviceList.method(:from_hash))
                    .is_api_response(true)
                    .local_error('400',
                                 'Unexpected error.',
                                 FotaV3ResultException))
        .execute
    end

    # Retrieve device information for a list of devices on an account.
    # @param [String] acc Required parameter: Account identifier.
    # @param [DeviceImei] body Required parameter: Request device list
    # information.
    # @return [ApiResponse] Complete http response with raw body and status code.
    def list_account_devices_information(acc,
                                         body)
      @api_call
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/devices/{acc}',
                                     Server::SOFTWARE_MANAGEMENT_V3)
                   .template_param(new_parameter(acc, key: 'acc')
                                    .is_required(true)
                                    .should_encode(true))
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .body_param(new_parameter(body)
                                .is_required(true))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(And.new('thingspace_oauth', 'VZ-M2M-Token')))
        .response(new_response_handler
                    .deserializer(APIHelper.method(:custom_type_deserializer))
                    .deserialize_into(DeviceListResult.method(:from_hash))
                    .is_api_response(true)
                    .local_error('400',
                                 'Unexpected error.',
                                 FotaV3ResultException))
        .execute
    end
  end
end
