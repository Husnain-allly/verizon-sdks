# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # DeviceMonitoringApi
  class DeviceMonitoringApi < BaseApi
    # TODO: type endpoint description here
    # @param [NotificationReportRequest] body Required parameter: Create
    # Reachability Report Request
    # @return [ApiResponse] Complete http response with raw body and status code.
    def device_reachability(body)
      @api_call
        .request(new_request_builder(HttpMethodEnum::POST,
                                     '/m2m/v1/diagnostics/basic/devicereachability',
                                     Server::THINGSPACE)
                   .header_param(new_parameter('application/json', key: 'Content-Type'))
                   .body_param(new_parameter(body)
                                .is_required(true))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .body_serializer(proc do |param| param.to_json unless param.nil? end)
                   .auth(And.new('thingspace_oauth', 'VZ-M2M-Token')))
        .response(new_response_handler
                    .deserializer(APIHelper.method(:custom_type_deserializer))
                    .deserialize_into(RequestResponse.method(:from_hash))
                    .is_api_response(true)
                    .local_error('400',
                                 'Error Response',
                                 RestErrorResponseException))
        .execute
    end

    # TODO: type endpoint description here
    # @param [StopMonitorRequest] stopreachabilitypayload Required parameter:
    # Payload for the Stop Device Reachability monitors request.
    # @return [ApiResponse] Complete http response with raw body and status code.
    def stop_device_reachability(stopreachabilitypayload)
      @api_call
        .request(new_request_builder(HttpMethodEnum::DELETE,
                                     '/m2m/v1/diagnostics/basic/devicereachability',
                                     Server::THINGSPACE)
                   .query_param(new_parameter(stopreachabilitypayload, key: 'stopreachabilitypayload')
                                 .is_required(true))
                   .header_param(new_parameter('application/json', key: 'accept'))
                   .auth(And.new('thingspace_oauth', 'VZ-M2M-Token')))
        .response(new_response_handler
                    .deserializer(APIHelper.method(:custom_type_deserializer))
                    .deserialize_into(RequestResponse.method(:from_hash))
                    .is_api_response(true)
                    .local_error('400',
                                 'Error Response',
                                 RestErrorResponseException))
        .execute
    end
  end
end
