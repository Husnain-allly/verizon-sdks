/**
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  boolean,
  lazy,
  number,
  optional,
  Schema,
  string,
  typedExpandoObject,
  unknown,
} from '../schema';
import { Active, activeSchema } from './active';
import { Cellphonenumber, cellphonenumberSchema } from './cellphonenumber';
import { DataTrigger5, dataTrigger5Schema } from './dataTrigger5';
import {
  Notificationarray,
  notificationarraySchema,
} from './notificationarray';
import {
  PricePlanTrigger2,
  pricePlanTrigger2Schema,
} from './pricePlanTrigger2';
import { TriggerCategory, triggerCategorySchema } from './triggerCategory';

export interface V2TriggersRequest1 {
  /** The system assigned UUID of the trigger */
  triggerId?: string;
  /** The user defined name of the trigger */
  triggerName?: string;
  /** The Enterprise Customer Profile Database ID */
  ecpdId?: string;
  /** The type of trigger being created or modified */
  triggerCategory?: TriggerCategory;
  dataTrigger?: DataTrigger5;
  notification?: Notificationarray;
  notificationType?: string;
  callback?: boolean;
  emailNotification?: boolean;
  notificationGroupName?: string;
  notificationFrequencyFactor?: number;
  notificationFrequencyInterval?: string;
  externalEmailRecipients?: string;
  smsNotification?: boolean;
  smsNumbers?: Cellphonenumber[];
  reminder?: boolean;
  severity?: string;
  /** A flag to indicate of the trigger is active, true, or not, false */
  active?: Active;
  /** The numeric name of the account and must include leading zeroes */
  accountName?: string;
  pricePlanTrigger?: PricePlanTrigger2;
  additionalProperties?: Record<string, unknown>;
}

export const v2TriggersRequest1Schema: Schema<V2TriggersRequest1> = typedExpandoObject(
  {
    triggerId: ['triggerId', optional(string())],
    triggerName: ['triggerName', optional(string())],
    ecpdId: ['ecpdId', optional(string())],
    triggerCategory: ['triggerCategory', optional(triggerCategorySchema)],
    dataTrigger: ['dataTrigger', optional(lazy(() => dataTrigger5Schema))],
    notification: [
      'notification',
      optional(lazy(() => notificationarraySchema)),
    ],
    notificationType: ['notificationType', optional(string())],
    callback: ['callback', optional(boolean())],
    emailNotification: ['emailNotification', optional(boolean())],
    notificationGroupName: ['notificationGroupName', optional(string())],
    notificationFrequencyFactor: [
      'notificationFrequencyFactor',
      optional(number()),
    ],
    notificationFrequencyInterval: [
      'notificationFrequencyInterval',
      optional(string()),
    ],
    externalEmailRecipients: ['externalEmailRecipients', optional(string())],
    smsNotification: ['smsNotification', optional(boolean())],
    smsNumbers: [
      'smsNumbers',
      optional(array(lazy(() => cellphonenumberSchema))),
    ],
    reminder: ['reminder', optional(boolean())],
    severity: ['severity', optional(string())],
    active: ['active', optional(activeSchema)],
    accountName: ['accountName', optional(string())],
    pricePlanTrigger: [
      'pricePlanTrigger',
      optional(lazy(() => pricePlanTrigger2Schema)),
    ],
  },
  'additionalProperties',
  optional(unknown())
);
