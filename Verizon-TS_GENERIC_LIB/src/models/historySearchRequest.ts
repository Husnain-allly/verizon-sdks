/**
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  lazy,
  number,
  optional,
  Schema,
  string,
  typedExpandoObject,
  unknown,
} from '../schema';
import {
  HistorySearchFilter,
  historySearchFilterSchema,
} from './historySearchFilter';
import {
  HistorySearchLimitTime,
  historySearchLimitTimeSchema,
} from './historySearchLimitTime';

/** Used to filter data by time period or number of devices. */
export interface HistorySearchRequest {
  /** The selected device and attributes for which a request should retrieve data. */
  mFilter: HistorySearchFilter;
  /** The maximum number of historical attributes to include in the response. If the request matches more than this number of attributes, the response will contain an X-Next value in the header that can be used as the page value in the next request to retrieve the next page of events. */
  mLimitNumber?: number;
  /** The time period for which a request should retrieve data, beginning with the limitTime.startOn and proceeding with the limitTime.duration. */
  mLimitTime?: HistorySearchLimitTime;
  /** Page number for pagination purposes. */
  mPage?: string;
  additionalProperties?: Record<string, unknown>;
}

export const historySearchRequestSchema: Schema<HistorySearchRequest> = typedExpandoObject(
  {
    mFilter: ['$filter', lazy(() => historySearchFilterSchema)],
    mLimitNumber: ['$limitNumber', optional(number())],
    mLimitTime: [
      '$limitTime',
      optional(lazy(() => historySearchLimitTimeSchema)),
    ],
    mPage: ['$page', optional(string())],
  },
  'additionalProperties',
  optional(unknown())
);
