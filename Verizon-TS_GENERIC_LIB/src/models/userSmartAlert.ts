/**
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { boolean, number, object, optional, Schema, string } from '../schema';

export interface UserSmartAlert {
  /** Not used in this release, future functionality */
  accountclientid?: string;
  /** The billing account ID. This is the same value as the Account ID */
  billingaccountid?: string;
  /** The type of alert and will be either `telemetry` or `infrastructure` */
  category?: string;
  /** The condition or threshold for an alert */
  condition?: number;
  /** Timestamp of the record */
  createdon: string;
  /** a short description */
  description?: string;
  /** This is a UUID value of the device created when the device is onboarded */
  deviceid?: string;
  /** UUID of the ECPD account the user belongs to */
  foreignid?: string;
  /** UUID of the user record, assigned at creation */
  id?: string;
  /** A flag that indicates if the alarm has been acknowledged */
  isacknowledged?: boolean;
  /** A flag that indicates if the alarm has been cleared */
  iscleared?: boolean;
  /** A flag that indicates if the alarm has been disabled */
  isdisabled?: boolean;
  /** Timestamp of the record */
  lastupdated: string;
  /** User defined name of the record */
  name?: string;
  /** The UUID of a rule for alerts */
  ruleid?: string;
  /** The threshold value to trigger an alert and will be Critical, Major or Minor */
  severity?: string;
  /** The current status of the device or transaction and will be `success` or `failed` */
  state?: string;
  /** template of the rule which triggered a given alert */
  template?: string;
  /** The resource version */
  version?: string;
  /** The UUID of the resource version */
  versionid: string;
}

export const userSmartAlertSchema: Schema<UserSmartAlert> = object({
  accountclientid: ['accountclientid', optional(string())],
  billingaccountid: ['billingaccountid', optional(string())],
  category: ['category', optional(string())],
  condition: ['condition', optional(number())],
  createdon: ['createdon', string()],
  description: ['description', optional(string())],
  deviceid: ['deviceid', optional(string())],
  foreignid: ['foreignid', optional(string())],
  id: ['id', optional(string())],
  isacknowledged: ['isacknowledged', optional(boolean())],
  iscleared: ['iscleared', optional(boolean())],
  isdisabled: ['isdisabled', optional(boolean())],
  lastupdated: ['lastupdated', string()],
  name: ['name', optional(string())],
  ruleid: ['ruleid', optional(string())],
  severity: ['severity', optional(string())],
  state: ['state', optional(string())],
  template: ['template', optional(string())],
  version: ['version', optional(string())],
  versionid: ['versionid', string()],
});
