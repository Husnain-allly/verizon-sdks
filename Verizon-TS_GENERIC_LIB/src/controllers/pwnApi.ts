/**
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { ApiResponse, RequestOptions } from '../core';
import {
  ChangePwnDeviceIpaddressRequest,
  changePwnDeviceIpaddressRequestSchema,
} from '../models/changePwnDeviceIpaddressRequest';
import {
  ChangePwnDeviceIpaddressResponse,
  changePwnDeviceIpaddressResponseSchema,
} from '../models/changePwnDeviceIpaddressResponse';
import {
  ChangePwnDeviceProfileRequest,
  changePwnDeviceProfileRequestSchema,
} from '../models/changePwnDeviceProfileRequest';
import {
  ChangePwnDeviceProfileResponse,
  changePwnDeviceProfileResponseSchema,
} from '../models/changePwnDeviceProfileResponse';
import {
  ChangePwnDeviceStateActivateRequest,
  changePwnDeviceStateActivateRequestSchema,
} from '../models/changePwnDeviceStateActivateRequest';
import {
  ChangePwnDeviceStateDeactivateRequest,
  changePwnDeviceStateDeactivateRequestSchema,
} from '../models/changePwnDeviceStateDeactivateRequest';
import {
  ChangePwnDeviceStateResponse,
  changePwnDeviceStateResponseSchema,
} from '../models/changePwnDeviceStateResponse';
import {
  GetPwnPerformanceConsentResponse,
  getPwnPerformanceConsentResponseSchema,
} from '../models/getPwnPerformanceConsentResponse';
import { KpiInfoList, kpiInfoListSchema } from '../models/kpiInfoList';
import { PwnProfileList, pwnProfileListSchema } from '../models/pwnProfileList';
import { string } from '../schema';
import { BaseApi } from './baseApi';

export class PwnApi extends BaseApi {
  /**
   * @param aname Account name.
   * @return Response from the API call
   */
  async kpiList(
    aname: string,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<KpiInfoList>> {
    const req = this.createRequest('GET');
    req.baseUrl('Thingspace');
    const mapped = req.prepareArgs({ aname: [aname, string()] });
    req.appendTemplatePath`/m2m/v1/devices/pwn/kpi/list/${mapped.aname}`;
    req.authenticate([{ thingspaceOauth: true, vzM2MToken: true }]);
    return req.callAsJson(kpiInfoListSchema, requestOptions);
  }

  /**
   * @param aname Account name.
   * @return Response from the API call
   */
  async getProfileList(
    aname: string,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<PwnProfileList>> {
    const req = this.createRequest('GET');
    req.baseUrl('Thingspace');
    const mapped = req.prepareArgs({ aname: [aname, string()] });
    req.appendTemplatePath`/m2m/v1/devices/pwn/profiles/list/${mapped.aname}`;
    req.authenticate([{ thingspaceOauth: true, vzM2MToken: true }]);
    return req.callAsJson(pwnProfileListSchema, requestOptions);
  }

  /**
   * @param body
   * @return Response from the API call
   */
  async changePwnDeviceStateActivate(
    body: ChangePwnDeviceStateActivateRequest,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<ChangePwnDeviceStateResponse>> {
    const req = this.createRequest(
      'POST',
      '/m2m/v1/devices/pwn/actions/state/activate'
    );
    req.baseUrl('Thingspace');
    const mapped = req.prepareArgs({
      body: [body, changePwnDeviceStateActivateRequestSchema],
    });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    req.authenticate([{ thingspaceOauth: true, vzM2MToken: true }]);
    return req.callAsJson(changePwnDeviceStateResponseSchema, requestOptions);
  }

  /**
   * @param body
   * @return Response from the API call
   */
  async changePwnDeviceStateDeactivate(
    body: ChangePwnDeviceStateDeactivateRequest,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<ChangePwnDeviceStateResponse>> {
    const req = this.createRequest(
      'POST',
      '/m2m/v1/devices/pwn/actions/state/deactivate'
    );
    req.baseUrl('Thingspace');
    const mapped = req.prepareArgs({
      body: [body, changePwnDeviceStateDeactivateRequestSchema],
    });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    req.authenticate([{ thingspaceOauth: true, vzM2MToken: true }]);
    return req.callAsJson(changePwnDeviceStateResponseSchema, requestOptions);
  }

  /**
   * @param body
   * @return Response from the API call
   */
  async changePwnDeviceProfile(
    body: ChangePwnDeviceProfileRequest,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<ChangePwnDeviceProfileResponse>> {
    const req = this.createRequest(
      'POST',
      '/m2m/v1/devices/pwn/actions/profile'
    );
    req.baseUrl('Thingspace');
    const mapped = req.prepareArgs({
      body: [body, changePwnDeviceProfileRequestSchema],
    });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    req.authenticate([{ thingspaceOauth: true, vzM2MToken: true }]);
    return req.callAsJson(changePwnDeviceProfileResponseSchema, requestOptions);
  }

  /**
   * @param body
   * @return Response from the API call
   */
  async changePwnDeviceIpaddress(
    body: ChangePwnDeviceIpaddressRequest,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<ChangePwnDeviceIpaddressResponse>> {
    const req = this.createRequest(
      'PUT',
      '/m2m/v1/devices/pwn/actions/ipaddress'
    );
    req.baseUrl('Thingspace');
    const mapped = req.prepareArgs({
      body: [body, changePwnDeviceIpaddressRequestSchema],
    });
    req.header('Content-Type', 'application/json');
    req.json(mapped.body);
    req.authenticate([{ thingspaceOauth: true, vzM2MToken: true }]);
    return req.callAsJson(
      changePwnDeviceIpaddressResponseSchema,
      requestOptions
    );
  }

  /**
   * @param aname Account name.
   * @return Response from the API call
   */
  async getPwnPerformanceConsent(
    aname: string,
    requestOptions?: RequestOptions
  ): Promise<ApiResponse<GetPwnPerformanceConsentResponse>> {
    const req = this.createRequest('GET');
    req.baseUrl('Thingspace');
    const mapped = req.prepareArgs({ aname: [aname, string()] });
    req.appendTemplatePath`/m2m/v1/devices/pwn/performance/consent/${mapped.aname}`;
    req.authenticate([{ thingspaceOauth: true, vzM2MToken: true }]);
    return req.callAsJson(
      getPwnPerformanceConsentResponseSchema,
      requestOptions
    );
  }
}
