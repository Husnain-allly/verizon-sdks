/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package errors

import (
    "fmt"
    "github.com/apimatic/go-core-runtime/https"
    "strings"
    "verizon/models"
)

// EdgeDiscoveryResult is a custom error.
// Base type for all errors.
type EdgeDiscoveryResult struct {
    https.ApiError
    Status         string                          `json:"status"`
    Message        string                          `json:"message"`
    Data           *models.EdgeDiscoveryResultData `json:"data,omitempty"`
}

// NewEdgeDiscoveryResult is a constructor for EdgeDiscoveryResult.
// It creates and returns a pointer to a new EdgeDiscoveryResult instance with the given statusCode and body.
func NewEdgeDiscoveryResult(apiError https.ApiError) error {
    return &EdgeDiscoveryResult{
		ApiError: apiError,
    }
}

// Error implements the Error method for the error interface.
// It returns a formatted error message for EdgeDiscoveryResult.
func (e EdgeDiscoveryResult) Error() string {
    return fmt.Sprintf("EdgeDiscoveryResult occured: %v", e.Message)
}

// String implements the fmt.Stringer interface for EdgeDiscoveryResult,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (e EdgeDiscoveryResult) String() string {
    suffixTrimmed := strings.TrimSuffix(e.ApiError.String(), "]")
    prefixTrimmed := strings.TrimPrefix(suffixTrimmed, "ApiError[")
    
    return fmt.Sprintf(
    	"EdgeDiscoveryResult[%v, Status=%v, Message=%v, Data=%v]",
    	prefixTrimmed, e.Status, e.Message, e.Data)
}

// ConnectivityManagementResult is a custom error.
// Response to errors.
type ConnectivityManagementResult struct {
    https.ApiError
    ErrorCode      *string `json:"errorCode,omitempty"`
    ErrorMessage   *string `json:"errorMessage,omitempty"`
}

// NewConnectivityManagementResult is a constructor for ConnectivityManagementResult.
// It creates and returns a pointer to a new ConnectivityManagementResult instance with the given statusCode and body.
func NewConnectivityManagementResult(apiError https.ApiError) error {
    return &ConnectivityManagementResult{
		ApiError: apiError,
    }
}

// Error implements the Error method for the error interface.
// It returns a formatted error message for ConnectivityManagementResult.
func (c ConnectivityManagementResult) Error() string {
    return fmt.Sprintf("ConnectivityManagementResult occured: %v", c.Message)
}

// String implements the fmt.Stringer interface for ConnectivityManagementResult,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (c ConnectivityManagementResult) String() string {
    suffixTrimmed := strings.TrimSuffix(c.ApiError.String(), "]")
    prefixTrimmed := strings.TrimPrefix(suffixTrimmed, "ApiError[")
    
    return fmt.Sprintf(
    	"ConnectivityManagementResult[%v, ErrorCode=%v, ErrorMessage=%v]",
    	prefixTrimmed, c.ErrorCode, c.ErrorMessage)
}

// RestErrorResponse is a custom error.
type RestErrorResponse struct {
    https.ApiError
    ErrorCode      *string `json:"errorCode,omitempty"`
    ErrorMessage   *string `json:"errorMessage,omitempty"`
}

// NewRestErrorResponse is a constructor for RestErrorResponse.
// It creates and returns a pointer to a new RestErrorResponse instance with the given statusCode and body.
func NewRestErrorResponse(apiError https.ApiError) error {
    return &RestErrorResponse{
		ApiError: apiError,
    }
}

// Error implements the Error method for the error interface.
// It returns a formatted error message for RestErrorResponse.
func (r RestErrorResponse) Error() string {
    return fmt.Sprintf("RestErrorResponse occured: %v", r.Message)
}

// String implements the fmt.Stringer interface for RestErrorResponse,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (r RestErrorResponse) String() string {
    suffixTrimmed := strings.TrimSuffix(r.ApiError.String(), "]")
    prefixTrimmed := strings.TrimPrefix(suffixTrimmed, "ApiError[")
    
    return fmt.Sprintf(
    	"RestErrorResponse[%v, ErrorCode=%v, ErrorMessage=%v]",
    	prefixTrimmed, r.ErrorCode, r.ErrorMessage)
}

// DeviceLocationResult is a custom error.
// Will be empty if there was no error.
type DeviceLocationResult struct {
    https.ApiError
    ErrorCode      string `json:"errorCode"`
    ErrorMessage   string `json:"errorMessage"`
}

// NewDeviceLocationResult is a constructor for DeviceLocationResult.
// It creates and returns a pointer to a new DeviceLocationResult instance with the given statusCode and body.
func NewDeviceLocationResult(apiError https.ApiError) error {
    return &DeviceLocationResult{
		ApiError: apiError,
    }
}

// Error implements the Error method for the error interface.
// It returns a formatted error message for DeviceLocationResult.
func (d DeviceLocationResult) Error() string {
    return fmt.Sprintf("DeviceLocationResult occured: %v", d.Message)
}

// String implements the fmt.Stringer interface for DeviceLocationResult,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (d DeviceLocationResult) String() string {
    suffixTrimmed := strings.TrimSuffix(d.ApiError.String(), "]")
    prefixTrimmed := strings.TrimPrefix(suffixTrimmed, "ApiError[")
    
    return fmt.Sprintf(
    	"DeviceLocationResult[%v, ErrorCode=%v, ErrorMessage=%v]",
    	prefixTrimmed, d.ErrorCode, d.ErrorMessage)
}

// FotaV1Result is a custom error.
// Response in case of any errors.
type FotaV1Result struct {
    https.ApiError
    ErrorCode      string `json:"errorCode"`
    ErrorMessage   string `json:"errorMessage"`
}

// NewFotaV1Result is a constructor for FotaV1Result.
// It creates and returns a pointer to a new FotaV1Result instance with the given statusCode and body.
func NewFotaV1Result(apiError https.ApiError) error {
    return &FotaV1Result{
		ApiError: apiError,
    }
}

// Error implements the Error method for the error interface.
// It returns a formatted error message for FotaV1Result.
func (f FotaV1Result) Error() string {
    return fmt.Sprintf("FotaV1Result occured: %v", f.Message)
}

// String implements the fmt.Stringer interface for FotaV1Result,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (f FotaV1Result) String() string {
    suffixTrimmed := strings.TrimSuffix(f.ApiError.String(), "]")
    prefixTrimmed := strings.TrimPrefix(suffixTrimmed, "ApiError[")
    
    return fmt.Sprintf(
    	"FotaV1Result[%v, ErrorCode=%v, ErrorMessage=%v]",
    	prefixTrimmed, f.ErrorCode, f.ErrorMessage)
}

// FotaV2Result is a custom error.
// Response for error cases.
type FotaV2Result struct {
    https.ApiError
    ErrorCode      string `json:"errorCode"`
    ErrorMessage   string `json:"errorMessage"`
}

// NewFotaV2Result is a constructor for FotaV2Result.
// It creates and returns a pointer to a new FotaV2Result instance with the given statusCode and body.
func NewFotaV2Result(apiError https.ApiError) error {
    return &FotaV2Result{
		ApiError: apiError,
    }
}

// Error implements the Error method for the error interface.
// It returns a formatted error message for FotaV2Result.
func (f FotaV2Result) Error() string {
    return fmt.Sprintf("FotaV2Result occured: %v", f.Message)
}

// String implements the fmt.Stringer interface for FotaV2Result,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (f FotaV2Result) String() string {
    suffixTrimmed := strings.TrimSuffix(f.ApiError.String(), "]")
    prefixTrimmed := strings.TrimPrefix(suffixTrimmed, "ApiError[")
    
    return fmt.Sprintf(
    	"FotaV2Result[%v, ErrorCode=%v, ErrorMessage=%v]",
    	prefixTrimmed, f.ErrorCode, f.ErrorMessage)
}

// FotaV3Result is a custom error.
// Error response.
type FotaV3Result struct {
    https.ApiError
    ErrorCode      string `json:"errorCode"`
    ErrorMessage   string `json:"errorMessage"`
}

// NewFotaV3Result is a constructor for FotaV3Result.
// It creates and returns a pointer to a new FotaV3Result instance with the given statusCode and body.
func NewFotaV3Result(apiError https.ApiError) error {
    return &FotaV3Result{
		ApiError: apiError,
    }
}

// Error implements the Error method for the error interface.
// It returns a formatted error message for FotaV3Result.
func (f FotaV3Result) Error() string {
    return fmt.Sprintf("FotaV3Result occured: %v", f.Message)
}

// String implements the fmt.Stringer interface for FotaV3Result,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (f FotaV3Result) String() string {
    suffixTrimmed := strings.TrimSuffix(f.ApiError.String(), "]")
    prefixTrimmed := strings.TrimPrefix(suffixTrimmed, "ApiError[")
    
    return fmt.Sprintf(
    	"FotaV3Result[%v, ErrorCode=%v, ErrorMessage=%v]",
    	prefixTrimmed, f.ErrorCode, f.ErrorMessage)
}

// SecurityResult is a custom error.
// Error response.
type SecurityResult struct {
    https.ApiError
    ErrorCode      *string `json:"errorCode,omitempty"`
    ErrorMessage   *string `json:"errorMessage,omitempty"`
    ErrorUrl       *string `json:"errorUrl,omitempty"`
}

// NewSecurityResult is a constructor for SecurityResult.
// It creates and returns a pointer to a new SecurityResult instance with the given statusCode and body.
func NewSecurityResult(apiError https.ApiError) error {
    return &SecurityResult{
		ApiError: apiError,
    }
}

// Error implements the Error method for the error interface.
// It returns a formatted error message for SecurityResult.
func (s SecurityResult) Error() string {
    return fmt.Sprintf("SecurityResult occured: %v", s.Message)
}

// String implements the fmt.Stringer interface for SecurityResult,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (s SecurityResult) String() string {
    suffixTrimmed := strings.TrimSuffix(s.ApiError.String(), "]")
    prefixTrimmed := strings.TrimPrefix(suffixTrimmed, "ApiError[")
    
    return fmt.Sprintf(
    	"SecurityResult[%v, ErrorCode=%v, ErrorMessage=%v, ErrorUrl=%v]",
    	prefixTrimmed, s.ErrorCode, s.ErrorMessage, s.ErrorUrl)
}

// EdgePerformanceResult is a custom error.
// Types of errors in response.
type EdgePerformanceResult struct {
    https.ApiError
    Status         *string `json:"status,omitempty"`
    Message        *string `json:"message,omitempty"`
}

// NewEdgePerformanceResult is a constructor for EdgePerformanceResult.
// It creates and returns a pointer to a new EdgePerformanceResult instance with the given statusCode and body.
func NewEdgePerformanceResult(apiError https.ApiError) error {
    return &EdgePerformanceResult{
		ApiError: apiError,
    }
}

// Error implements the Error method for the error interface.
// It returns a formatted error message for EdgePerformanceResult.
func (e EdgePerformanceResult) Error() string {
    return fmt.Sprintf("EdgePerformanceResult occured: %v", e.Message)
}

// String implements the fmt.Stringer interface for EdgePerformanceResult,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (e EdgePerformanceResult) String() string {
    suffixTrimmed := strings.TrimSuffix(e.ApiError.String(), "]")
    prefixTrimmed := strings.TrimPrefix(suffixTrimmed, "ApiError[")
    
    return fmt.Sprintf(
    	"EdgePerformanceResult[%v, Status=%v, Message=%v]",
    	prefixTrimmed, e.Status, e.Message)
}

// DeviceDiagnosticsResult is a custom error.
// All error messages are returned in this format. Error codes and messages are listed on the Error Codes page, along with explanations and suggestions for corrective actions.
type DeviceDiagnosticsResult struct {
    https.ApiError
    ErrorCode      string `json:"errorCode"`
    ErrorMessage   string `json:"errorMessage"`
}

// NewDeviceDiagnosticsResult is a constructor for DeviceDiagnosticsResult.
// It creates and returns a pointer to a new DeviceDiagnosticsResult instance with the given statusCode and body.
func NewDeviceDiagnosticsResult(apiError https.ApiError) error {
    return &DeviceDiagnosticsResult{
		ApiError: apiError,
    }
}

// Error implements the Error method for the error interface.
// It returns a formatted error message for DeviceDiagnosticsResult.
func (d DeviceDiagnosticsResult) Error() string {
    return fmt.Sprintf("DeviceDiagnosticsResult occured: %v", d.Message)
}

// String implements the fmt.Stringer interface for DeviceDiagnosticsResult,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (d DeviceDiagnosticsResult) String() string {
    suffixTrimmed := strings.TrimSuffix(d.ApiError.String(), "]")
    prefixTrimmed := strings.TrimPrefix(suffixTrimmed, "ApiError[")
    
    return fmt.Sprintf(
    	"DeviceDiagnosticsResult[%v, ErrorCode=%v, ErrorMessage=%v]",
    	prefixTrimmed, d.ErrorCode, d.ErrorMessage)
}

// HyperPreciseLocationResult is a custom error.
// Error response.
type HyperPreciseLocationResult struct {
    https.ApiError
    ResponseCode   *models.ErrorResponseCode         `json:"responseCode,omitempty"`
    Message        *string                           `json:"message,omitempty"`
    Fault          *models.HyperPreciseLocationFault `json:"fault,omitempty"`
}

// NewHyperPreciseLocationResult is a constructor for HyperPreciseLocationResult.
// It creates and returns a pointer to a new HyperPreciseLocationResult instance with the given statusCode and body.
func NewHyperPreciseLocationResult(apiError https.ApiError) error {
    return &HyperPreciseLocationResult{
		ApiError: apiError,
    }
}

// Error implements the Error method for the error interface.
// It returns a formatted error message for HyperPreciseLocationResult.
func (h HyperPreciseLocationResult) Error() string {
    return fmt.Sprintf("HyperPreciseLocationResult occured: %v", h.Message)
}

// String implements the fmt.Stringer interface for HyperPreciseLocationResult,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (h HyperPreciseLocationResult) String() string {
    suffixTrimmed := strings.TrimSuffix(h.ApiError.String(), "]")
    prefixTrimmed := strings.TrimPrefix(suffixTrimmed, "ApiError[")
    
    return fmt.Sprintf(
    	"HyperPreciseLocationResult[%v, ResponseCode=%v, Message=%v, Fault=%v]",
    	prefixTrimmed, h.ResponseCode, h.Message, h.Fault)
}

// IntelligenceResult is a custom error.
// An error occurred.
type IntelligenceResult struct {
    https.ApiError
    ErrorCode      *string `json:"errorCode,omitempty"`
    ErrorMessage   *string `json:"errorMessage,omitempty"`
}

// NewIntelligenceResult is a constructor for IntelligenceResult.
// It creates and returns a pointer to a new IntelligenceResult instance with the given statusCode and body.
func NewIntelligenceResult(apiError https.ApiError) error {
    return &IntelligenceResult{
		ApiError: apiError,
    }
}

// Error implements the Error method for the error interface.
// It returns a formatted error message for IntelligenceResult.
func (i IntelligenceResult) Error() string {
    return fmt.Sprintf("IntelligenceResult occured: %v", i.Message)
}

// String implements the fmt.Stringer interface for IntelligenceResult,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (i IntelligenceResult) String() string {
    suffixTrimmed := strings.TrimSuffix(i.ApiError.String(), "]")
    prefixTrimmed := strings.TrimPrefix(suffixTrimmed, "ApiError[")
    
    return fmt.Sprintf(
    	"IntelligenceResult[%v, ErrorCode=%v, ErrorMessage=%v]",
    	prefixTrimmed, i.ErrorCode, i.ErrorMessage)
}

// WnpRestErrorResponse is a custom error.
// Wireless network performance rest error response.
type WnpRestErrorResponse struct {
    https.ApiError
    ErrorCode      *string `json:"errorCode,omitempty"`
    ErrorMessage   *string `json:"errorMessage,omitempty"`
}

// NewWnpRestErrorResponse is a constructor for WnpRestErrorResponse.
// It creates and returns a pointer to a new WnpRestErrorResponse instance with the given statusCode and body.
func NewWnpRestErrorResponse(apiError https.ApiError) error {
    return &WnpRestErrorResponse{
		ApiError: apiError,
    }
}

// Error implements the Error method for the error interface.
// It returns a formatted error message for WnpRestErrorResponse.
func (w WnpRestErrorResponse) Error() string {
    return fmt.Sprintf("WnpRestErrorResponse occured: %v", w.Message)
}

// String implements the fmt.Stringer interface for WnpRestErrorResponse,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (w WnpRestErrorResponse) String() string {
    suffixTrimmed := strings.TrimSuffix(w.ApiError.String(), "]")
    prefixTrimmed := strings.TrimPrefix(suffixTrimmed, "ApiError[")
    
    return fmt.Sprintf(
    	"WnpRestErrorResponse[%v, ErrorCode=%v, ErrorMessage=%v]",
    	prefixTrimmed, w.ErrorCode, w.ErrorMessage)
}

// GioRestErrorResponse is a custom error.
type GioRestErrorResponse struct {
    https.ApiError
    ErrorCode      *string `json:"errorCode,omitempty"`
    ErrorMessage   *string `json:"errorMessage,omitempty"`
}

// NewGioRestErrorResponse is a constructor for GioRestErrorResponse.
// It creates and returns a pointer to a new GioRestErrorResponse instance with the given statusCode and body.
func NewGioRestErrorResponse(apiError https.ApiError) error {
    return &GioRestErrorResponse{
		ApiError: apiError,
    }
}

// Error implements the Error method for the error interface.
// It returns a formatted error message for GioRestErrorResponse.
func (g GioRestErrorResponse) Error() string {
    return fmt.Sprintf("GioRestErrorResponse occured: %v", g.Message)
}

// String implements the fmt.Stringer interface for GioRestErrorResponse,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (g GioRestErrorResponse) String() string {
    suffixTrimmed := strings.TrimSuffix(g.ApiError.String(), "]")
    prefixTrimmed := strings.TrimPrefix(suffixTrimmed, "ApiError[")
    
    return fmt.Sprintf(
    	"GioRestErrorResponse[%v, ErrorCode=%v, ErrorMessage=%v]",
    	prefixTrimmed, g.ErrorCode, g.ErrorMessage)
}

// DefaultResponse is a custom error.
type DefaultResponse struct {
    https.ApiError
    ErrorCode      *string `json:"errorCode,omitempty"`
    ErrorMessage   *string `json:"errorMessage,omitempty"`
}

// NewDefaultResponse is a constructor for DefaultResponse.
// It creates and returns a pointer to a new DefaultResponse instance with the given statusCode and body.
func NewDefaultResponse(apiError https.ApiError) error {
    return &DefaultResponse{
		ApiError: apiError,
    }
}

// Error implements the Error method for the error interface.
// It returns a formatted error message for DefaultResponse.
func (d DefaultResponse) Error() string {
    return fmt.Sprintf("DefaultResponse occured: %v", d.Message)
}

// String implements the fmt.Stringer interface for DefaultResponse,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (d DefaultResponse) String() string {
    suffixTrimmed := strings.TrimSuffix(d.ApiError.String(), "]")
    prefixTrimmed := strings.TrimPrefix(suffixTrimmed, "ApiError[")
    
    return fmt.Sprintf(
    	"DefaultResponse[%v, ErrorCode=%v, ErrorMessage=%v]",
    	prefixTrimmed, d.ErrorCode, d.ErrorMessage)
}

// ReadySimRestErrorResponse is a custom error.
type ReadySimRestErrorResponse struct {
    https.ApiError
    ErrorCode      *string `json:"errorCode,omitempty"`
    ErrorMessage   *string `json:"errorMessage,omitempty"`
}

// NewReadySimRestErrorResponse is a constructor for ReadySimRestErrorResponse.
// It creates and returns a pointer to a new ReadySimRestErrorResponse instance with the given statusCode and body.
func NewReadySimRestErrorResponse(apiError https.ApiError) error {
    return &ReadySimRestErrorResponse{
		ApiError: apiError,
    }
}

// Error implements the Error method for the error interface.
// It returns a formatted error message for ReadySimRestErrorResponse.
func (r ReadySimRestErrorResponse) Error() string {
    return fmt.Sprintf("ReadySimRestErrorResponse occured: %v", r.Message)
}

// String implements the fmt.Stringer interface for ReadySimRestErrorResponse,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (r ReadySimRestErrorResponse) String() string {
    suffixTrimmed := strings.TrimSuffix(r.ApiError.String(), "]")
    prefixTrimmed := strings.TrimPrefix(suffixTrimmed, "ApiError[")
    
    return fmt.Sprintf(
    	"ReadySimRestErrorResponse[%v, ErrorCode=%v, ErrorMessage=%v]",
    	prefixTrimmed, r.ErrorCode, r.ErrorMessage)
}

// EsimRestErrorResponse is a custom error.
type EsimRestErrorResponse struct {
    https.ApiError
    ErrorCode      *string `json:"errorCode,omitempty"`
    ErrorMessage   *string `json:"errorMessage,omitempty"`
}

// NewEsimRestErrorResponse is a constructor for EsimRestErrorResponse.
// It creates and returns a pointer to a new EsimRestErrorResponse instance with the given statusCode and body.
func NewEsimRestErrorResponse(apiError https.ApiError) error {
    return &EsimRestErrorResponse{
		ApiError: apiError,
    }
}

// Error implements the Error method for the error interface.
// It returns a formatted error message for EsimRestErrorResponse.
func (e EsimRestErrorResponse) Error() string {
    return fmt.Sprintf("EsimRestErrorResponse occured: %v", e.Message)
}

// String implements the fmt.Stringer interface for EsimRestErrorResponse,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (e EsimRestErrorResponse) String() string {
    suffixTrimmed := strings.TrimSuffix(e.ApiError.String(), "]")
    prefixTrimmed := strings.TrimPrefix(suffixTrimmed, "ApiError[")
    
    return fmt.Sprintf(
    	"EsimRestErrorResponse[%v, ErrorCode=%v, ErrorMessage=%v]",
    	prefixTrimmed, e.ErrorCode, e.ErrorMessage)
}

// RuleRestErrorResponse is a custom error.
type RuleRestErrorResponse struct {
    https.ApiError
    ErrorCode      *string `json:"errorCode,omitempty"`
    ErrorMessage   *string `json:"errorMessage,omitempty"`
}

// NewRuleRestErrorResponse is a constructor for RuleRestErrorResponse.
// It creates and returns a pointer to a new RuleRestErrorResponse instance with the given statusCode and body.
func NewRuleRestErrorResponse(apiError https.ApiError) error {
    return &RuleRestErrorResponse{
		ApiError: apiError,
    }
}

// Error implements the Error method for the error interface.
// It returns a formatted error message for RuleRestErrorResponse.
func (r RuleRestErrorResponse) Error() string {
    return fmt.Sprintf("RuleRestErrorResponse occured: %v", r.Message)
}

// String implements the fmt.Stringer interface for RuleRestErrorResponse,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (r RuleRestErrorResponse) String() string {
    suffixTrimmed := strings.TrimSuffix(r.ApiError.String(), "]")
    prefixTrimmed := strings.TrimPrefix(suffixTrimmed, "ApiError[")
    
    return fmt.Sprintf(
    	"RuleRestErrorResponse[%v, ErrorCode=%v, ErrorMessage=%v]",
    	prefixTrimmed, r.ErrorCode, r.ErrorMessage)
}

// M5GBiRestErrorResponse is a custom error.
type M5GBiRestErrorResponse struct {
    https.ApiError
    ErrorCode      *string `json:"errorCode,omitempty"`
    ErrorMessage   *string `json:"errorMessage,omitempty"`
}

// NewM5GBiRestErrorResponse is a constructor for M5GBiRestErrorResponse.
// It creates and returns a pointer to a new M5GBiRestErrorResponse instance with the given statusCode and body.
func NewM5GBiRestErrorResponse(apiError https.ApiError) error {
    return &M5GBiRestErrorResponse{
		ApiError: apiError,
    }
}

// Error implements the Error method for the error interface.
// It returns a formatted error message for M5GBiRestErrorResponse.
func (m M5GBiRestErrorResponse) Error() string {
    return fmt.Sprintf("M5GBiRestErrorResponse occured: %v", m.Message)
}

// String implements the fmt.Stringer interface for M5GBiRestErrorResponse,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (m M5GBiRestErrorResponse) String() string {
    suffixTrimmed := strings.TrimSuffix(m.ApiError.String(), "]")
    prefixTrimmed := strings.TrimPrefix(suffixTrimmed, "ApiError[")
    
    return fmt.Sprintf(
    	"M5GBiRestErrorResponse[%v, ErrorCode=%v, ErrorMessage=%v]",
    	prefixTrimmed, m.ErrorCode, m.ErrorMessage)
}

// M400ManagementError is a custom error.
type M400ManagementError struct {
    https.ApiError
    MError           *string `json:"error,omitempty"`
    ErrorDescription *string `json:"error_description,omitempty"`
    Cause            *string `json:"cause,omitempty"`
}

// NewM400ManagementError is a constructor for M400ManagementError.
// It creates and returns a pointer to a new M400ManagementError instance with the given statusCode and body.
func NewM400ManagementError(apiError https.ApiError) error {
    return &M400ManagementError{
		ApiError: apiError,
    }
}

// Error implements the Error method for the error interface.
// It returns a formatted error message for M400ManagementError.
func (m M400ManagementError) Error() string {
    return fmt.Sprintf("M400ManagementError occured: %v", m.Message)
}

// String implements the fmt.Stringer interface for M400ManagementError,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (m M400ManagementError) String() string {
    suffixTrimmed := strings.TrimSuffix(m.ApiError.String(), "]")
    prefixTrimmed := strings.TrimPrefix(suffixTrimmed, "ApiError[")
    
    return fmt.Sprintf(
    	"M400ManagementError[%v, MError=%v, ErrorDescription=%v, Cause=%v]",
    	prefixTrimmed, m.MError, m.ErrorDescription, m.Cause)
}

// M403ManagementError is a custom error.
type M403ManagementError struct {
    https.ApiError
    MError           *string `json:"error,omitempty"`
    ErrorDescription *string `json:"error_description,omitempty"`
    Cause            *string `json:"cause,omitempty"`
}

// NewM403ManagementError is a constructor for M403ManagementError.
// It creates and returns a pointer to a new M403ManagementError instance with the given statusCode and body.
func NewM403ManagementError(apiError https.ApiError) error {
    return &M403ManagementError{
		ApiError: apiError,
    }
}

// Error implements the Error method for the error interface.
// It returns a formatted error message for M403ManagementError.
func (m M403ManagementError) Error() string {
    return fmt.Sprintf("M403ManagementError occured: %v", m.Message)
}

// String implements the fmt.Stringer interface for M403ManagementError,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (m M403ManagementError) String() string {
    suffixTrimmed := strings.TrimSuffix(m.ApiError.String(), "]")
    prefixTrimmed := strings.TrimPrefix(suffixTrimmed, "ApiError[")
    
    return fmt.Sprintf(
    	"M403ManagementError[%v, MError=%v, ErrorDescription=%v, Cause=%v]",
    	prefixTrimmed, m.MError, m.ErrorDescription, m.Cause)
}

// M404ManagementError is a custom error.
type M404ManagementError struct {
    https.ApiError
    MError           *string `json:"error,omitempty"`
    ErrorDescription *string `json:"error_description,omitempty"`
    Cause            *string `json:"cause,omitempty"`
}

// NewM404ManagementError is a constructor for M404ManagementError.
// It creates and returns a pointer to a new M404ManagementError instance with the given statusCode and body.
func NewM404ManagementError(apiError https.ApiError) error {
    return &M404ManagementError{
		ApiError: apiError,
    }
}

// Error implements the Error method for the error interface.
// It returns a formatted error message for M404ManagementError.
func (m M404ManagementError) Error() string {
    return fmt.Sprintf("M404ManagementError occured: %v", m.Message)
}

// String implements the fmt.Stringer interface for M404ManagementError,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (m M404ManagementError) String() string {
    suffixTrimmed := strings.TrimSuffix(m.ApiError.String(), "]")
    prefixTrimmed := strings.TrimPrefix(suffixTrimmed, "ApiError[")
    
    return fmt.Sprintf(
    	"M404ManagementError[%v, MError=%v, ErrorDescription=%v, Cause=%v]",
    	prefixTrimmed, m.MError, m.ErrorDescription, m.Cause)
}

// M500ManagementError is a custom error.
type M500ManagementError struct {
    https.ApiError
    MError           *string `json:"error,omitempty"`
    ErrorDescription *string `json:"error_description,omitempty"`
    Cause            *string `json:"cause,omitempty"`
}

// NewM500ManagementError is a constructor for M500ManagementError.
// It creates and returns a pointer to a new M500ManagementError instance with the given statusCode and body.
func NewM500ManagementError(apiError https.ApiError) error {
    return &M500ManagementError{
		ApiError: apiError,
    }
}

// Error implements the Error method for the error interface.
// It returns a formatted error message for M500ManagementError.
func (m M500ManagementError) Error() string {
    return fmt.Sprintf("M500ManagementError occured: %v", m.Message)
}

// String implements the fmt.Stringer interface for M500ManagementError,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (m M500ManagementError) String() string {
    suffixTrimmed := strings.TrimSuffix(m.ApiError.String(), "]")
    prefixTrimmed := strings.TrimPrefix(suffixTrimmed, "ApiError[")
    
    return fmt.Sprintf(
    	"M500ManagementError[%v, MError=%v, ErrorDescription=%v, Cause=%v]",
    	prefixTrimmed, m.MError, m.ErrorDescription, m.Cause)
}

// ManagementError is a custom error.
type ManagementError struct {
    https.ApiError
    MError           *string `json:"error,omitempty"`
    ErrorDescription *string `json:"error_description,omitempty"`
    Cause            *string `json:"cause,omitempty"`
}

// NewManagementError is a constructor for ManagementError.
// It creates and returns a pointer to a new ManagementError instance with the given statusCode and body.
func NewManagementError(apiError https.ApiError) error {
    return &ManagementError{
		ApiError: apiError,
    }
}

// Error implements the Error method for the error interface.
// It returns a formatted error message for ManagementError.
func (m ManagementError) Error() string {
    return fmt.Sprintf("ManagementError occured: %v", m.Message)
}

// String implements the fmt.Stringer interface for ManagementError,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (m ManagementError) String() string {
    suffixTrimmed := strings.TrimSuffix(m.ApiError.String(), "]")
    prefixTrimmed := strings.TrimPrefix(suffixTrimmed, "ApiError[")
    
    return fmt.Sprintf(
    	"ManagementError[%v, MError=%v, ErrorDescription=%v, Cause=%v]",
    	prefixTrimmed, m.MError, m.ErrorDescription, m.Cause)
}

// AppConfigResponseError is a custom error.
// error response structure
type AppConfigResponseError struct {
    https.ApiError
    MError         string `json:"error"`
    Description    string `json:"description"`
}

// NewAppConfigResponseError is a constructor for AppConfigResponseError.
// It creates and returns a pointer to a new AppConfigResponseError instance with the given statusCode and body.
func NewAppConfigResponseError(apiError https.ApiError) error {
    return &AppConfigResponseError{
		ApiError: apiError,
    }
}

// Error implements the Error method for the error interface.
// It returns a formatted error message for AppConfigResponseError.
func (a AppConfigResponseError) Error() string {
    return fmt.Sprintf("AppConfigResponseError occured: %v", a.Message)
}

// String implements the fmt.Stringer interface for AppConfigResponseError,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (a AppConfigResponseError) String() string {
    suffixTrimmed := strings.TrimSuffix(a.ApiError.String(), "]")
    prefixTrimmed := strings.TrimPrefix(suffixTrimmed, "ApiError[")
    
    return fmt.Sprintf(
    	"AppConfigResponseError[%v, MError=%v, Description=%v]",
    	prefixTrimmed, a.MError, a.Description)
}

// EtxResponseError is a custom error.
// error response structure
type EtxResponseError struct {
    https.ApiError
    MError         string `json:"error"`
    Description    string `json:"description"`
}

// NewEtxResponseError is a constructor for EtxResponseError.
// It creates and returns a pointer to a new EtxResponseError instance with the given statusCode and body.
func NewEtxResponseError(apiError https.ApiError) error {
    return &EtxResponseError{
		ApiError: apiError,
    }
}

// Error implements the Error method for the error interface.
// It returns a formatted error message for EtxResponseError.
func (e EtxResponseError) Error() string {
    return fmt.Sprintf("EtxResponseError occured: %v", e.Message)
}

// String implements the fmt.Stringer interface for EtxResponseError,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (e EtxResponseError) String() string {
    suffixTrimmed := strings.TrimSuffix(e.ApiError.String(), "]")
    prefixTrimmed := strings.TrimPrefix(suffixTrimmed, "ApiError[")
    
    return fmt.Sprintf(
    	"EtxResponseError[%v, MError=%v, Description=%v]",
    	prefixTrimmed, e.MError, e.Description)
}

// MapDataResponseError is a custom error.
// error response structure
type MapDataResponseError struct {
    https.ApiError
    MError         string `json:"error"`
    Description    string `json:"description"`
}

// NewMapDataResponseError is a constructor for MapDataResponseError.
// It creates and returns a pointer to a new MapDataResponseError instance with the given statusCode and body.
func NewMapDataResponseError(apiError https.ApiError) error {
    return &MapDataResponseError{
		ApiError: apiError,
    }
}

// Error implements the Error method for the error interface.
// It returns a formatted error message for MapDataResponseError.
func (m MapDataResponseError) Error() string {
    return fmt.Sprintf("MapDataResponseError occured: %v", m.Message)
}

// String implements the fmt.Stringer interface for MapDataResponseError,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (m MapDataResponseError) String() string {
    suffixTrimmed := strings.TrimSuffix(m.ApiError.String(), "]")
    prefixTrimmed := strings.TrimPrefix(suffixTrimmed, "ApiError[")
    
    return fmt.Sprintf(
    	"MapDataResponseError[%v, MError=%v, Description=%v]",
    	prefixTrimmed, m.MError, m.Description)
}

// OauthProvider is a custom error.
// OAuth 2 Authorization endpoint exception.
type OauthProvider struct {
    https.ApiError
    MError           models.OauthProviderError `json:"error"`
    ErrorDescription *string                   `json:"error_description,omitempty"`
    ErrorUri         *string                   `json:"error_uri,omitempty"`
}

// NewOauthProvider is a constructor for OauthProvider.
// It creates and returns a pointer to a new OauthProvider instance with the given statusCode and body.
func NewOauthProvider(apiError https.ApiError) error {
    return &OauthProvider{
		ApiError: apiError,
    }
}

// Error implements the Error method for the error interface.
// It returns a formatted error message for OauthProvider.
func (o OauthProvider) Error() string {
    return fmt.Sprintf("OauthProvider occured: %v", o.Message)
}

// String implements the fmt.Stringer interface for OauthProvider,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (o OauthProvider) String() string {
    suffixTrimmed := strings.TrimSuffix(o.ApiError.String(), "]")
    prefixTrimmed := strings.TrimPrefix(suffixTrimmed, "ApiError[")
    
    return fmt.Sprintf(
    	"OauthProvider[%v, MError=%v, ErrorDescription=%v, ErrorUri=%v]",
    	prefixTrimmed, o.MError, o.ErrorDescription, o.ErrorUri)
}
