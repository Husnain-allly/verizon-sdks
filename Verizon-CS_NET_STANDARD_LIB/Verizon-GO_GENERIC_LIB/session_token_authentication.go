/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package verizon

import (
    "errors"
    "github.com/apimatic/go-core-runtime/https"
    "net/http"
)

// SessionTokenCredentials represents the credentials required for `SessionToken` authentication.
type SessionTokenCredentials struct {
    sessionToken string
}

// NewSessionTokenCredentials creates a new instance of SessionTokenCredentials with provided parameters.
func NewSessionTokenCredentials(sessionToken string) SessionTokenCredentials {
    return SessionTokenCredentials {
        sessionToken: sessionToken,
    }
}

// WithSessionToken sets sessionToken in SessionTokenCredentials.
func (s SessionTokenCredentials) WithSessionToken(sessionToken string) SessionTokenCredentials {
    s.sessionToken = sessionToken
    return s
}

// SessionToken returns the sessionToken associated with the SessionTokenCredentials.
func (s SessionTokenCredentials) SessionToken() string {
    return s.sessionToken
}

// Validate function returns validation error associated with the SessionTokenCredentials.
func (s SessionTokenCredentials) Validate() error {
    if s.sessionToken == "" {
        return errors.New("SessionToken : missing auth credentials -> SessionToken.")
    }
    return nil
}

// Authenticator function returns HttpInterceptor function that provides authentication for API calls.
func (s SessionTokenCredentials) Authenticator() https.HttpInterceptor {
    return func(req *http.Request,
        next https.HttpCallExecutor,
    ) https.HttpContext {
            req.Header.Set("SessionToken", s.SessionToken())
        return next(req)
    }
}
