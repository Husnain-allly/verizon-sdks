/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "errors"
    "fmt"
)

// M5GBiaccountNameobjectDeviceIds represents a M5GBiaccountNameobjectDeviceIds struct.
// This is Array of a container for any-of cases.
type M5GBiaccountNameobjectDeviceIds struct {
    value            any
    isM5GBideviceId1 bool
}

// String implements the fmt.Stringer interface for M5GBiaccountNameobjectDeviceIds,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (m M5GBiaccountNameobjectDeviceIds) String() string {
    return fmt.Sprintf("%v", m.value)
}

// MarshalJSON implements the json.Marshaler interface for M5GBiaccountNameobjectDeviceIds.
// It customizes the JSON marshaling process for M5GBiaccountNameobjectDeviceIds objects.
func (m M5GBiaccountNameobjectDeviceIds) MarshalJSON() (
    []byte,
    error) {
    if m.value == nil {
        return nil, errors.New("No underlying type is set. Please use any of the `models.M5GBiaccountNameobjectDeviceIdsContainer.From*` functions to initialize the M5GBiaccountNameobjectDeviceIds object.")
    }
    return json.Marshal(m.toMap())
}

// toMap converts the M5GBiaccountNameobjectDeviceIds object to a map representation for JSON marshaling.
func (m *M5GBiaccountNameobjectDeviceIds) toMap() any {
    switch obj := m.value.(type) {
    case *M5GBideviceId1:
        return obj.toMap()
    }
    return nil
}

// UnmarshalJSON implements the json.Unmarshaler interface for M5GBiaccountNameobjectDeviceIds.
// It customizes the JSON unmarshaling process for M5GBiaccountNameobjectDeviceIds objects.
func (m *M5GBiaccountNameobjectDeviceIds) UnmarshalJSON(input []byte) error {
    result, err := UnmarshallAnyOf(input,
        NewTypeHolder(&M5GBideviceId1{}, false, &m.isM5GBideviceId1),
    )
    
    m.value = result
    return err
}

func (m *M5GBiaccountNameobjectDeviceIds) AsM5GBideviceId1() (
    *M5GBideviceId1,
    bool) {
    if !m.isM5GBideviceId1 {
        return nil, false
    }
    return m.value.(*M5GBideviceId1), true
}

// internalM5GBiaccountNameobjectDeviceIds represents a m5GBiaccountNameobjectDeviceIds struct.
// This is Array of a container for any-of cases.
type internalM5GBiaccountNameobjectDeviceIds struct {}

var M5GBiaccountNameobjectDeviceIdsContainer internalM5GBiaccountNameobjectDeviceIds

// The internalM5GBiaccountNameobjectDeviceIds instance, wrapping the provided M5GBideviceId1 value.
func (m *internalM5GBiaccountNameobjectDeviceIds) FromM5GBideviceId1(val M5GBideviceId1) M5GBiaccountNameobjectDeviceIds {
    return M5GBiaccountNameobjectDeviceIds{value: &val}
}
