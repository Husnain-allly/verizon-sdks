/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "errors"
    "fmt"
)

// ProfileRequestPrimaryPlaceOfUse represents a ProfileRequestPrimaryPlaceOfUse struct.
// This is Array of a container for any-of cases.
type ProfileRequestPrimaryPlaceOfUse struct {
    value               any
    isCustomernamequery bool
    isAddressquery      bool
}

// String implements the fmt.Stringer interface for ProfileRequestPrimaryPlaceOfUse,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (p ProfileRequestPrimaryPlaceOfUse) String() string {
    return fmt.Sprintf("%v", p.value)
}

// MarshalJSON implements the json.Marshaler interface for ProfileRequestPrimaryPlaceOfUse.
// It customizes the JSON marshaling process for ProfileRequestPrimaryPlaceOfUse objects.
func (p ProfileRequestPrimaryPlaceOfUse) MarshalJSON() (
    []byte,
    error) {
    if p.value == nil {
        return nil, errors.New("No underlying type is set. Please use any of the `models.ProfileRequestPrimaryPlaceOfUseContainer.From*` functions to initialize the ProfileRequestPrimaryPlaceOfUse object.")
    }
    return json.Marshal(p.toMap())
}

// toMap converts the ProfileRequestPrimaryPlaceOfUse object to a map representation for JSON marshaling.
func (p *ProfileRequestPrimaryPlaceOfUse) toMap() any {
    switch obj := p.value.(type) {
    case *Customernamequery:
        return obj.toMap()
    case *Addressquery:
        return obj.toMap()
    }
    return nil
}

// UnmarshalJSON implements the json.Unmarshaler interface for ProfileRequestPrimaryPlaceOfUse.
// It customizes the JSON unmarshaling process for ProfileRequestPrimaryPlaceOfUse objects.
func (p *ProfileRequestPrimaryPlaceOfUse) UnmarshalJSON(input []byte) error {
    result, err := UnmarshallAnyOf(input,
        NewTypeHolder(&Customernamequery{}, false, &p.isCustomernamequery),
        NewTypeHolder(&Addressquery{}, false, &p.isAddressquery),
    )
    
    p.value = result
    return err
}

func (p *ProfileRequestPrimaryPlaceOfUse) AsCustomernamequery() (
    *Customernamequery,
    bool) {
    if !p.isCustomernamequery {
        return nil, false
    }
    return p.value.(*Customernamequery), true
}

func (p *ProfileRequestPrimaryPlaceOfUse) AsAddressquery() (
    *Addressquery,
    bool) {
    if !p.isAddressquery {
        return nil, false
    }
    return p.value.(*Addressquery), true
}

// internalProfileRequestPrimaryPlaceOfUse represents a profileRequestPrimaryPlaceOfUse struct.
// This is Array of a container for any-of cases.
type internalProfileRequestPrimaryPlaceOfUse struct {}

var ProfileRequestPrimaryPlaceOfUseContainer internalProfileRequestPrimaryPlaceOfUse

// The internalProfileRequestPrimaryPlaceOfUse instance, wrapping the provided Customernamequery value.
func (p *internalProfileRequestPrimaryPlaceOfUse) FromCustomernamequery(val Customernamequery) ProfileRequestPrimaryPlaceOfUse {
    return ProfileRequestPrimaryPlaceOfUse{value: &val}
}

// The internalProfileRequestPrimaryPlaceOfUse instance, wrapping the provided Addressquery value.
func (p *internalProfileRequestPrimaryPlaceOfUse) FromAddressquery(val Addressquery) ProfileRequestPrimaryPlaceOfUse {
    return ProfileRequestPrimaryPlaceOfUse{value: &val}
}
