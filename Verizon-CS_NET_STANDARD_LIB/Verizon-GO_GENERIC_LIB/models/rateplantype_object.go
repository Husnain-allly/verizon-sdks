/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// RateplantypeObject represents a RateplantypeObject struct.
type RateplantypeObject struct {
    RatePlanGroupDescription *string                `json:"ratePlanGroupDescription,omitempty"`
    RatePlanType             *string                `json:"ratePlanType,omitempty"`
    // An array of rateplan names
    RatePlan                 []Rateplantype2        `json:"ratePlan,omitempty"`
    AdditionalProperties     map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for RateplantypeObject,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (r RateplantypeObject) String() string {
    return fmt.Sprintf(
    	"RateplantypeObject[RatePlanGroupDescription=%v, RatePlanType=%v, RatePlan=%v, AdditionalProperties=%v]",
    	r.RatePlanGroupDescription, r.RatePlanType, r.RatePlan, r.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for RateplantypeObject.
// It customizes the JSON marshaling process for RateplantypeObject objects.
func (r RateplantypeObject) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(r.AdditionalProperties,
        "ratePlanGroupDescription", "ratePlanType", "ratePlan"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(r.toMap())
}

// toMap converts the RateplantypeObject object to a map representation for JSON marshaling.
func (r RateplantypeObject) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, r.AdditionalProperties)
    if r.RatePlanGroupDescription != nil {
        structMap["ratePlanGroupDescription"] = r.RatePlanGroupDescription
    }
    if r.RatePlanType != nil {
        structMap["ratePlanType"] = r.RatePlanType
    }
    if r.RatePlan != nil {
        structMap["ratePlan"] = r.RatePlan
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for RateplantypeObject.
// It customizes the JSON unmarshaling process for RateplantypeObject objects.
func (r *RateplantypeObject) UnmarshalJSON(input []byte) error {
    var temp tempRateplantypeObject
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "ratePlanGroupDescription", "ratePlanType", "ratePlan")
    if err != nil {
    	return err
    }
    r.AdditionalProperties = additionalProperties
    
    r.RatePlanGroupDescription = temp.RatePlanGroupDescription
    r.RatePlanType = temp.RatePlanType
    r.RatePlan = temp.RatePlan
    return nil
}

// tempRateplantypeObject is a temporary struct used for validating the fields of RateplantypeObject.
type tempRateplantypeObject  struct {
    RatePlanGroupDescription *string         `json:"ratePlanGroupDescription,omitempty"`
    RatePlanType             *string         `json:"ratePlanType,omitempty"`
    RatePlan                 []Rateplantype2 `json:"ratePlan,omitempty"`
}
