/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "errors"
    "fmt"
    "strings"
)

// DeviceActivationRequest represents a DeviceActivationRequest struct.
// Request for device status to check availability of activation.
type DeviceActivationRequest struct {
    // The name of a billing account.
    AccountName          string                 `json:"accountName"`
    // Up to 10,000 devices that you want to move to a different account, specified by device identifier.
    Devices              []AccountDeviceList    `json:"devices"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for DeviceActivationRequest,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (d DeviceActivationRequest) String() string {
    return fmt.Sprintf(
    	"DeviceActivationRequest[AccountName=%v, Devices=%v, AdditionalProperties=%v]",
    	d.AccountName, d.Devices, d.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for DeviceActivationRequest.
// It customizes the JSON marshaling process for DeviceActivationRequest objects.
func (d DeviceActivationRequest) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(d.AdditionalProperties,
        "accountName", "devices"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(d.toMap())
}

// toMap converts the DeviceActivationRequest object to a map representation for JSON marshaling.
func (d DeviceActivationRequest) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, d.AdditionalProperties)
    structMap["accountName"] = d.AccountName
    structMap["devices"] = d.Devices
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for DeviceActivationRequest.
// It customizes the JSON unmarshaling process for DeviceActivationRequest objects.
func (d *DeviceActivationRequest) UnmarshalJSON(input []byte) error {
    var temp tempDeviceActivationRequest
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    err = temp.validate()
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "accountName", "devices")
    if err != nil {
    	return err
    }
    d.AdditionalProperties = additionalProperties
    
    d.AccountName = *temp.AccountName
    d.Devices = *temp.Devices
    return nil
}

// tempDeviceActivationRequest is a temporary struct used for validating the fields of DeviceActivationRequest.
type tempDeviceActivationRequest  struct {
    AccountName *string              `json:"accountName"`
    Devices     *[]AccountDeviceList `json:"devices"`
}

func (d *tempDeviceActivationRequest) validate() error {
    var errs []string
    if d.AccountName == nil {
        errs = append(errs, "required field `accountName` is missing for type `DeviceActivationRequest`")
    }
    if d.Devices == nil {
        errs = append(errs, "required field `devices` is missing for type `DeviceActivationRequest`")
    }
    if len(errs) == 0 {
        return nil
    }
    return errors.New(strings.Join (errs, "\n"))
}
