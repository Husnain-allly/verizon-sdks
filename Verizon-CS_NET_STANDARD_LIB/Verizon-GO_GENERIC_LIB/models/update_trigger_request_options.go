/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "errors"
    "fmt"
)

// UpdateTriggerRequestOptions represents a UpdateTriggerRequestOptions struct.
type UpdateTriggerRequestOptions struct {
    value                    any
    isTriggerType3           bool
    isActiveAnomalyIndicator bool
}

// String implements the fmt.Stringer interface for UpdateTriggerRequestOptions,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (u UpdateTriggerRequestOptions) String() string {
    return fmt.Sprintf("%v", u.value)
}

// MarshalJSON implements the json.Marshaler interface for UpdateTriggerRequestOptions.
// It customizes the JSON marshaling process for UpdateTriggerRequestOptions objects.
func (u UpdateTriggerRequestOptions) MarshalJSON() (
    []byte,
    error) {
    if u.value == nil {
        return nil, errors.New("No underlying type is set. Please use any of the `models.UpdateTriggerRequestOptionsContainer.From*` functions to initialize the UpdateTriggerRequestOptions object.")
    }
    return json.Marshal(u.toMap())
}

// toMap converts the UpdateTriggerRequestOptions object to a map representation for JSON marshaling.
func (u *UpdateTriggerRequestOptions) toMap() any {
    switch obj := u.value.(type) {
    case *TriggerType3:
        return obj.toMap()
    case *ActiveAnomalyIndicator:
        return obj.toMap()
    }
    return nil
}

// UnmarshalJSON implements the json.Unmarshaler interface for UpdateTriggerRequestOptions.
// It customizes the JSON unmarshaling process for UpdateTriggerRequestOptions objects.
func (u *UpdateTriggerRequestOptions) UnmarshalJSON(input []byte) error {
    result, err := UnmarshallAnyOf(input,
        NewTypeHolder(&TriggerType3{}, false, &u.isTriggerType3),
        NewTypeHolder(&ActiveAnomalyIndicator{}, false, &u.isActiveAnomalyIndicator),
    )
    
    u.value = result
    return err
}

func (u *UpdateTriggerRequestOptions) AsTriggerType3() (
    *TriggerType3,
    bool) {
    if !u.isTriggerType3 {
        return nil, false
    }
    return u.value.(*TriggerType3), true
}

func (u *UpdateTriggerRequestOptions) AsActiveAnomalyIndicator() (
    *ActiveAnomalyIndicator,
    bool) {
    if !u.isActiveAnomalyIndicator {
        return nil, false
    }
    return u.value.(*ActiveAnomalyIndicator), true
}

// internalUpdateTriggerRequestOptions represents a updateTriggerRequestOptions struct.
type internalUpdateTriggerRequestOptions struct {}

var UpdateTriggerRequestOptionsContainer internalUpdateTriggerRequestOptions

// The internalUpdateTriggerRequestOptions instance, wrapping the provided TriggerType3 value.
func (u *internalUpdateTriggerRequestOptions) FromTriggerType3(val TriggerType3) UpdateTriggerRequestOptions {
    return UpdateTriggerRequestOptions{value: &val}
}

// The internalUpdateTriggerRequestOptions instance, wrapping the provided ActiveAnomalyIndicator value.
func (u *internalUpdateTriggerRequestOptions) FromActiveAnomalyIndicator(val ActiveAnomalyIndicator) UpdateTriggerRequestOptions {
    return UpdateTriggerRequestOptions{value: &val}
}
