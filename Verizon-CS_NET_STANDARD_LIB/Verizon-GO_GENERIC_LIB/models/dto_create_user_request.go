/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// DtoCreateUserRequest represents a DtoCreateUserRequest struct.
type DtoCreateUserRequest struct {
    // The numeric account name, which must include leading zeros
    Accountname *string     `json:"accountname,omitempty"`
    User        *DtoUserDto `json:"user,omitempty"`
}

// String implements the fmt.Stringer interface for DtoCreateUserRequest,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (d DtoCreateUserRequest) String() string {
    return fmt.Sprintf(
    	"DtoCreateUserRequest[Accountname=%v, User=%v]",
    	d.Accountname, d.User)
}

// MarshalJSON implements the json.Marshaler interface for DtoCreateUserRequest.
// It customizes the JSON marshaling process for DtoCreateUserRequest objects.
func (d DtoCreateUserRequest) MarshalJSON() (
    []byte,
    error) {
    return json.Marshal(d.toMap())
}

// toMap converts the DtoCreateUserRequest object to a map representation for JSON marshaling.
func (d DtoCreateUserRequest) toMap() map[string]any {
    structMap := make(map[string]any)
    if d.Accountname != nil {
        structMap["accountname"] = d.Accountname
    }
    if d.User != nil {
        structMap["user"] = d.User.toMap()
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for DtoCreateUserRequest.
// It customizes the JSON unmarshaling process for DtoCreateUserRequest objects.
func (d *DtoCreateUserRequest) UnmarshalJSON(input []byte) error {
    var temp tempDtoCreateUserRequest
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    
    d.Accountname = temp.Accountname
    d.User = temp.User
    return nil
}

// tempDtoCreateUserRequest is a temporary struct used for validating the fields of DtoCreateUserRequest.
type tempDtoCreateUserRequest  struct {
    Accountname *string     `json:"accountname,omitempty"`
    User        *DtoUserDto `json:"user,omitempty"`
}
