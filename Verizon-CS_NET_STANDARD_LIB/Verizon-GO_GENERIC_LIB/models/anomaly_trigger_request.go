/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// AnomalyTriggerRequest represents a AnomalyTriggerRequest struct.
// The details of the UsageAnomaly trigger.
type AnomalyTriggerRequest struct {
    // The Verizon billing accounts associated with the anomaly triggers for this trigger to be active for devices in those accounts. An account name is usually numeric, and must include any leading zeros.
    AccountNames              *string `json:"accountNames,omitempty"`
    // Whether or not to include anomalies classified as 'abnormal'.<br />true<br />false<br />Classification is set as part of ThingSpace Intelligence anomaly detection settings.
    IncludeAbnormal           *bool   `json:"includeAbnormal,omitempty"`
    // Whether or not to include anomalies classified as 'very abnormal'.<br />true<br />false<br />Classification is set as part of ThingSpace Intelligence anomaly detection settings.
    IncludeVeryAbnormal       *bool   `json:"includeVeryAbnormal,omitempty"`
    // Whether or not to include anomalies that are directionally under the expected usage.<br />true<br />false.
    IncludeUnderExpectedUsage *bool   `json:"includeUnderExpectedUsage,omitempty"`
    // Whether or not to include anomalies that are directionally over the expected usage. <br />true<br />false.
    IncludeOverExpectedUsage  *bool   `json:"includeOverExpectedUsage,omitempty"`
}

// String implements the fmt.Stringer interface for AnomalyTriggerRequest,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (a AnomalyTriggerRequest) String() string {
    return fmt.Sprintf(
    	"AnomalyTriggerRequest[AccountNames=%v, IncludeAbnormal=%v, IncludeVeryAbnormal=%v, IncludeUnderExpectedUsage=%v, IncludeOverExpectedUsage=%v]",
    	a.AccountNames, a.IncludeAbnormal, a.IncludeVeryAbnormal, a.IncludeUnderExpectedUsage, a.IncludeOverExpectedUsage)
}

// MarshalJSON implements the json.Marshaler interface for AnomalyTriggerRequest.
// It customizes the JSON marshaling process for AnomalyTriggerRequest objects.
func (a AnomalyTriggerRequest) MarshalJSON() (
    []byte,
    error) {
    return json.Marshal(a.toMap())
}

// toMap converts the AnomalyTriggerRequest object to a map representation for JSON marshaling.
func (a AnomalyTriggerRequest) toMap() map[string]any {
    structMap := make(map[string]any)
    if a.AccountNames != nil {
        structMap["accountNames"] = a.AccountNames
    }
    if a.IncludeAbnormal != nil {
        structMap["includeAbnormal"] = a.IncludeAbnormal
    }
    if a.IncludeVeryAbnormal != nil {
        structMap["includeVeryAbnormal"] = a.IncludeVeryAbnormal
    }
    if a.IncludeUnderExpectedUsage != nil {
        structMap["includeUnderExpectedUsage"] = a.IncludeUnderExpectedUsage
    }
    if a.IncludeOverExpectedUsage != nil {
        structMap["includeOverExpectedUsage"] = a.IncludeOverExpectedUsage
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for AnomalyTriggerRequest.
// It customizes the JSON unmarshaling process for AnomalyTriggerRequest objects.
func (a *AnomalyTriggerRequest) UnmarshalJSON(input []byte) error {
    var temp tempAnomalyTriggerRequest
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    
    a.AccountNames = temp.AccountNames
    a.IncludeAbnormal = temp.IncludeAbnormal
    a.IncludeVeryAbnormal = temp.IncludeVeryAbnormal
    a.IncludeUnderExpectedUsage = temp.IncludeUnderExpectedUsage
    a.IncludeOverExpectedUsage = temp.IncludeOverExpectedUsage
    return nil
}

// tempAnomalyTriggerRequest is a temporary struct used for validating the fields of AnomalyTriggerRequest.
type tempAnomalyTriggerRequest  struct {
    AccountNames              *string `json:"accountNames,omitempty"`
    IncludeAbnormal           *bool   `json:"includeAbnormal,omitempty"`
    IncludeVeryAbnormal       *bool   `json:"includeVeryAbnormal,omitempty"`
    IncludeUnderExpectedUsage *bool   `json:"includeUnderExpectedUsage,omitempty"`
    IncludeOverExpectedUsage  *bool   `json:"includeOverExpectedUsage,omitempty"`
}
