/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// DeviceExtendedDiagnosticsResult represents a DeviceExtendedDiagnosticsResult struct.
// Result for a request to obtain device extended diagnostics.
type DeviceExtendedDiagnosticsResult struct {
    // The response includes various types of information about the device, grouped into categories. Each category object contains the category name and a list of Extended Attribute objects as key-value pairs.
    Categories           []DiagnosticsCategory  `json:"categories,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for DeviceExtendedDiagnosticsResult,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (d DeviceExtendedDiagnosticsResult) String() string {
    return fmt.Sprintf(
    	"DeviceExtendedDiagnosticsResult[Categories=%v, AdditionalProperties=%v]",
    	d.Categories, d.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for DeviceExtendedDiagnosticsResult.
// It customizes the JSON marshaling process for DeviceExtendedDiagnosticsResult objects.
func (d DeviceExtendedDiagnosticsResult) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(d.AdditionalProperties,
        "categories"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(d.toMap())
}

// toMap converts the DeviceExtendedDiagnosticsResult object to a map representation for JSON marshaling.
func (d DeviceExtendedDiagnosticsResult) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, d.AdditionalProperties)
    if d.Categories != nil {
        structMap["categories"] = d.Categories
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for DeviceExtendedDiagnosticsResult.
// It customizes the JSON unmarshaling process for DeviceExtendedDiagnosticsResult objects.
func (d *DeviceExtendedDiagnosticsResult) UnmarshalJSON(input []byte) error {
    var temp tempDeviceExtendedDiagnosticsResult
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "categories")
    if err != nil {
    	return err
    }
    d.AdditionalProperties = additionalProperties
    
    d.Categories = temp.Categories
    return nil
}

// tempDeviceExtendedDiagnosticsResult is a temporary struct used for validating the fields of DeviceExtendedDiagnosticsResult.
type tempDeviceExtendedDiagnosticsResult  struct {
    Categories []DiagnosticsCategory `json:"categories,omitempty"`
}
