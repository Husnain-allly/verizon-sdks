/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// CallbackRegistrationResult represents a CallbackRegistrationResult struct.
type CallbackRegistrationResult struct {
    // The name of the account that registered the callback URL.
    Account              *string                `json:"account,omitempty"`
    // The name of the callback service.
    Name                 *CallbackServiceName   `json:"name,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for CallbackRegistrationResult,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (c CallbackRegistrationResult) String() string {
    return fmt.Sprintf(
    	"CallbackRegistrationResult[Account=%v, Name=%v, AdditionalProperties=%v]",
    	c.Account, c.Name, c.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for CallbackRegistrationResult.
// It customizes the JSON marshaling process for CallbackRegistrationResult objects.
func (c CallbackRegistrationResult) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(c.AdditionalProperties,
        "account", "name"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(c.toMap())
}

// toMap converts the CallbackRegistrationResult object to a map representation for JSON marshaling.
func (c CallbackRegistrationResult) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, c.AdditionalProperties)
    if c.Account != nil {
        structMap["account"] = c.Account
    }
    if c.Name != nil {
        structMap["name"] = c.Name
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for CallbackRegistrationResult.
// It customizes the JSON unmarshaling process for CallbackRegistrationResult objects.
func (c *CallbackRegistrationResult) UnmarshalJSON(input []byte) error {
    var temp tempCallbackRegistrationResult
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "account", "name")
    if err != nil {
    	return err
    }
    c.AdditionalProperties = additionalProperties
    
    c.Account = temp.Account
    c.Name = temp.Name
    return nil
}

// tempCallbackRegistrationResult is a temporary struct used for validating the fields of CallbackRegistrationResult.
type tempCallbackRegistrationResult  struct {
    Account *string              `json:"account,omitempty"`
    Name    *CallbackServiceName `json:"name,omitempty"`
}
