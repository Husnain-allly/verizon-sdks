/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// HyperPreciseLocationFault represents a HyperPreciseLocationFault struct.
// Fault occurred while responding.
type HyperPreciseLocationFault struct {
    // Hyper precise location fault code.
    Code                 *string                `json:"code,omitempty"`
    // Hyper precise location fault message.
    Message              *string                `json:"message,omitempty"`
    // Hyper precise location fault description.
    Description          *string                `json:"description,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for HyperPreciseLocationFault,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (h HyperPreciseLocationFault) String() string {
    return fmt.Sprintf(
    	"HyperPreciseLocationFault[Code=%v, Message=%v, Description=%v, AdditionalProperties=%v]",
    	h.Code, h.Message, h.Description, h.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for HyperPreciseLocationFault.
// It customizes the JSON marshaling process for HyperPreciseLocationFault objects.
func (h HyperPreciseLocationFault) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(h.AdditionalProperties,
        "code", "message", "description"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(h.toMap())
}

// toMap converts the HyperPreciseLocationFault object to a map representation for JSON marshaling.
func (h HyperPreciseLocationFault) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, h.AdditionalProperties)
    if h.Code != nil {
        structMap["code"] = h.Code
    }
    if h.Message != nil {
        structMap["message"] = h.Message
    }
    if h.Description != nil {
        structMap["description"] = h.Description
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for HyperPreciseLocationFault.
// It customizes the JSON unmarshaling process for HyperPreciseLocationFault objects.
func (h *HyperPreciseLocationFault) UnmarshalJSON(input []byte) error {
    var temp tempHyperPreciseLocationFault
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "code", "message", "description")
    if err != nil {
    	return err
    }
    h.AdditionalProperties = additionalProperties
    
    h.Code = temp.Code
    h.Message = temp.Message
    h.Description = temp.Description
    return nil
}

// tempHyperPreciseLocationFault is a temporary struct used for validating the fields of HyperPreciseLocationFault.
type tempHyperPreciseLocationFault  struct {
    Code        *string `json:"code,omitempty"`
    Message     *string `json:"message,omitempty"`
    Description *string `json:"description,omitempty"`
}
