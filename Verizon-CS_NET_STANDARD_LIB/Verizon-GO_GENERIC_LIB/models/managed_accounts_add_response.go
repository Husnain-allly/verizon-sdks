/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// ManagedAccountsAddResponse represents a ManagedAccountsAddResponse struct.
type ManagedAccountsAddResponse struct {
    // Transaction identifier
    TxId                 *string                `json:"TxId,omitempty"`
    StatusList           []StatusList           `json:"statusList,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for ManagedAccountsAddResponse,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (m ManagedAccountsAddResponse) String() string {
    return fmt.Sprintf(
    	"ManagedAccountsAddResponse[TxId=%v, StatusList=%v, AdditionalProperties=%v]",
    	m.TxId, m.StatusList, m.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for ManagedAccountsAddResponse.
// It customizes the JSON marshaling process for ManagedAccountsAddResponse objects.
func (m ManagedAccountsAddResponse) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(m.AdditionalProperties,
        "TxId", "statusList"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(m.toMap())
}

// toMap converts the ManagedAccountsAddResponse object to a map representation for JSON marshaling.
func (m ManagedAccountsAddResponse) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, m.AdditionalProperties)
    if m.TxId != nil {
        structMap["TxId"] = m.TxId
    }
    if m.StatusList != nil {
        structMap["statusList"] = m.StatusList
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for ManagedAccountsAddResponse.
// It customizes the JSON unmarshaling process for ManagedAccountsAddResponse objects.
func (m *ManagedAccountsAddResponse) UnmarshalJSON(input []byte) error {
    var temp tempManagedAccountsAddResponse
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "TxId", "statusList")
    if err != nil {
    	return err
    }
    m.AdditionalProperties = additionalProperties
    
    m.TxId = temp.TxId
    m.StatusList = temp.StatusList
    return nil
}

// tempManagedAccountsAddResponse is a temporary struct used for validating the fields of ManagedAccountsAddResponse.
type tempManagedAccountsAddResponse  struct {
    TxId       *string      `json:"TxId,omitempty"`
    StatusList []StatusList `json:"statusList,omitempty"`
}
