/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// DtoQueryMetricsResponse represents a DtoQueryMetricsResponse struct.
type DtoQueryMetricsResponse struct {
    // The number of critical alerts in the queried time period
    Critical      *int `json:"critical,omitempty"`
    // The number of major alerts in the queried time period
    Major         *int `json:"major,omitempty"`
    // The number of minor alerts in the queried time period
    Minor         *int `json:"minor,omitempty"`
    // The number of sensor reports containing no  alerts in the queried time period
    Noalert       *int `json:"noalert,omitempty"`
    // The total number of alerts in the queried time period
    Total         *int `json:"total,omitempty"`
    // The change in the number of critical alerts in the queried time period
    Deltacritical *int `json:"deltacritical,omitempty"`
    // The change in the number of major alerts in the queried time period
    Deltamajor    *int `json:"deltamajor,omitempty"`
    // The change in the number of minor alerts in the queried time period
    Deltaminor    *int `json:"deltaminor,omitempty"`
    // The change in the number of sensor reports containing no alerts in the queried time period
    Deltanoalert  *int `json:"deltanoalert,omitempty"`
}

// String implements the fmt.Stringer interface for DtoQueryMetricsResponse,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (d DtoQueryMetricsResponse) String() string {
    return fmt.Sprintf(
    	"DtoQueryMetricsResponse[Critical=%v, Major=%v, Minor=%v, Noalert=%v, Total=%v, Deltacritical=%v, Deltamajor=%v, Deltaminor=%v, Deltanoalert=%v]",
    	d.Critical, d.Major, d.Minor, d.Noalert, d.Total, d.Deltacritical, d.Deltamajor, d.Deltaminor, d.Deltanoalert)
}

// MarshalJSON implements the json.Marshaler interface for DtoQueryMetricsResponse.
// It customizes the JSON marshaling process for DtoQueryMetricsResponse objects.
func (d DtoQueryMetricsResponse) MarshalJSON() (
    []byte,
    error) {
    return json.Marshal(d.toMap())
}

// toMap converts the DtoQueryMetricsResponse object to a map representation for JSON marshaling.
func (d DtoQueryMetricsResponse) toMap() map[string]any {
    structMap := make(map[string]any)
    if d.Critical != nil {
        structMap["critical"] = d.Critical
    }
    if d.Major != nil {
        structMap["major"] = d.Major
    }
    if d.Minor != nil {
        structMap["minor"] = d.Minor
    }
    if d.Noalert != nil {
        structMap["noalert"] = d.Noalert
    }
    if d.Total != nil {
        structMap["total"] = d.Total
    }
    if d.Deltacritical != nil {
        structMap["deltacritical"] = d.Deltacritical
    }
    if d.Deltamajor != nil {
        structMap["deltamajor"] = d.Deltamajor
    }
    if d.Deltaminor != nil {
        structMap["deltaminor"] = d.Deltaminor
    }
    if d.Deltanoalert != nil {
        structMap["deltanoalert"] = d.Deltanoalert
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for DtoQueryMetricsResponse.
// It customizes the JSON unmarshaling process for DtoQueryMetricsResponse objects.
func (d *DtoQueryMetricsResponse) UnmarshalJSON(input []byte) error {
    var temp tempDtoQueryMetricsResponse
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    
    d.Critical = temp.Critical
    d.Major = temp.Major
    d.Minor = temp.Minor
    d.Noalert = temp.Noalert
    d.Total = temp.Total
    d.Deltacritical = temp.Deltacritical
    d.Deltamajor = temp.Deltamajor
    d.Deltaminor = temp.Deltaminor
    d.Deltanoalert = temp.Deltanoalert
    return nil
}

// tempDtoQueryMetricsResponse is a temporary struct used for validating the fields of DtoQueryMetricsResponse.
type tempDtoQueryMetricsResponse  struct {
    Critical      *int `json:"critical,omitempty"`
    Major         *int `json:"major,omitempty"`
    Minor         *int `json:"minor,omitempty"`
    Noalert       *int `json:"noalert,omitempty"`
    Total         *int `json:"total,omitempty"`
    Deltacritical *int `json:"deltacritical,omitempty"`
    Deltamajor    *int `json:"deltamajor,omitempty"`
    Deltaminor    *int `json:"deltaminor,omitempty"`
    Deltanoalert  *int `json:"deltanoalert,omitempty"`
}
