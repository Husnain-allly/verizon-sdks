/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// AccountConsentUpdate represents a AccountConsentUpdate struct.
type AccountConsentUpdate struct {
    // The numeric name of the account, including leading zeros.
    AccountName          *string                `json:"accountName,omitempty"`
    // The consent setting to use for all the devices in the account.
    AllDeviceConsent     *int                   `json:"allDeviceConsent,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for AccountConsentUpdate,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (a AccountConsentUpdate) String() string {
    return fmt.Sprintf(
    	"AccountConsentUpdate[AccountName=%v, AllDeviceConsent=%v, AdditionalProperties=%v]",
    	a.AccountName, a.AllDeviceConsent, a.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for AccountConsentUpdate.
// It customizes the JSON marshaling process for AccountConsentUpdate objects.
func (a AccountConsentUpdate) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(a.AdditionalProperties,
        "accountName", "allDeviceConsent"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(a.toMap())
}

// toMap converts the AccountConsentUpdate object to a map representation for JSON marshaling.
func (a AccountConsentUpdate) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, a.AdditionalProperties)
    if a.AccountName != nil {
        structMap["accountName"] = a.AccountName
    }
    if a.AllDeviceConsent != nil {
        structMap["allDeviceConsent"] = a.AllDeviceConsent
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for AccountConsentUpdate.
// It customizes the JSON unmarshaling process for AccountConsentUpdate objects.
func (a *AccountConsentUpdate) UnmarshalJSON(input []byte) error {
    var temp tempAccountConsentUpdate
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "accountName", "allDeviceConsent")
    if err != nil {
    	return err
    }
    a.AdditionalProperties = additionalProperties
    
    a.AccountName = temp.AccountName
    a.AllDeviceConsent = temp.AllDeviceConsent
    return nil
}

// tempAccountConsentUpdate is a temporary struct used for validating the fields of AccountConsentUpdate.
type tempAccountConsentUpdate  struct {
    AccountName      *string `json:"accountName,omitempty"`
    AllDeviceConsent *int    `json:"allDeviceConsent,omitempty"`
}
