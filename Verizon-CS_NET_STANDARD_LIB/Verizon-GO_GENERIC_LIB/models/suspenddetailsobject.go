/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// Suspenddetailsobject represents a Suspenddetailsobject struct.
type Suspenddetailsobject struct {
    SuspendFromAccounts  []string               `json:"suspendFromAccounts,omitempty"`
    SuspendDuration      *int                   `json:"suspendDuration,omitempty"`
    SuspendOption        *string                `json:"suspendOption,omitempty"`
    // The threshold value the trigger monitors for
    Threshold            *int                   `json:"threshold,omitempty"`
    // The units of the threshold. This can be KB, Kilobits, MB, Megabits, or GB, Gigabits
    ThresholdUnit        *ThresholdUnit         `json:"thresholdUnit,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for Suspenddetailsobject,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (s Suspenddetailsobject) String() string {
    return fmt.Sprintf(
    	"Suspenddetailsobject[SuspendFromAccounts=%v, SuspendDuration=%v, SuspendOption=%v, Threshold=%v, ThresholdUnit=%v, AdditionalProperties=%v]",
    	s.SuspendFromAccounts, s.SuspendDuration, s.SuspendOption, s.Threshold, s.ThresholdUnit, s.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for Suspenddetailsobject.
// It customizes the JSON marshaling process for Suspenddetailsobject objects.
func (s Suspenddetailsobject) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(s.AdditionalProperties,
        "suspendFromAccounts", "suspendDuration", "suspendOption", "threshold", "thresholdUnit"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(s.toMap())
}

// toMap converts the Suspenddetailsobject object to a map representation for JSON marshaling.
func (s Suspenddetailsobject) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, s.AdditionalProperties)
    if s.SuspendFromAccounts != nil {
        structMap["suspendFromAccounts"] = s.SuspendFromAccounts
    }
    if s.SuspendDuration != nil {
        structMap["suspendDuration"] = s.SuspendDuration
    }
    if s.SuspendOption != nil {
        structMap["suspendOption"] = s.SuspendOption
    }
    if s.Threshold != nil {
        structMap["threshold"] = s.Threshold
    }
    if s.ThresholdUnit != nil {
        structMap["thresholdUnit"] = s.ThresholdUnit
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for Suspenddetailsobject.
// It customizes the JSON unmarshaling process for Suspenddetailsobject objects.
func (s *Suspenddetailsobject) UnmarshalJSON(input []byte) error {
    var temp tempSuspenddetailsobject
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "suspendFromAccounts", "suspendDuration", "suspendOption", "threshold", "thresholdUnit")
    if err != nil {
    	return err
    }
    s.AdditionalProperties = additionalProperties
    
    s.SuspendFromAccounts = temp.SuspendFromAccounts
    s.SuspendDuration = temp.SuspendDuration
    s.SuspendOption = temp.SuspendOption
    s.Threshold = temp.Threshold
    s.ThresholdUnit = temp.ThresholdUnit
    return nil
}

// tempSuspenddetailsobject is a temporary struct used for validating the fields of Suspenddetailsobject.
type tempSuspenddetailsobject  struct {
    SuspendFromAccounts []string       `json:"suspendFromAccounts,omitempty"`
    SuspendDuration     *int           `json:"suspendDuration,omitempty"`
    SuspendOption       *string        `json:"suspendOption,omitempty"`
    Threshold           *int           `json:"threshold,omitempty"`
    ThresholdUnit       *ThresholdUnit `json:"thresholdUnit,omitempty"`
}
