/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "errors"
    "fmt"
    "strings"
)

// ChangePwnDeviceProfileRequest represents a ChangePwnDeviceProfileRequest struct.
type ChangePwnDeviceProfileRequest struct {
    AccountName          string                 `json:"accountName"`
    DeviceList           []PwnDeviceList        `json:"deviceList"`
    NewProfile           string                 `json:"newProfile"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for ChangePwnDeviceProfileRequest,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (c ChangePwnDeviceProfileRequest) String() string {
    return fmt.Sprintf(
    	"ChangePwnDeviceProfileRequest[AccountName=%v, DeviceList=%v, NewProfile=%v, AdditionalProperties=%v]",
    	c.AccountName, c.DeviceList, c.NewProfile, c.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for ChangePwnDeviceProfileRequest.
// It customizes the JSON marshaling process for ChangePwnDeviceProfileRequest objects.
func (c ChangePwnDeviceProfileRequest) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(c.AdditionalProperties,
        "accountName", "deviceList", "newProfile"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(c.toMap())
}

// toMap converts the ChangePwnDeviceProfileRequest object to a map representation for JSON marshaling.
func (c ChangePwnDeviceProfileRequest) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, c.AdditionalProperties)
    structMap["accountName"] = c.AccountName
    structMap["deviceList"] = c.DeviceList
    structMap["newProfile"] = c.NewProfile
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for ChangePwnDeviceProfileRequest.
// It customizes the JSON unmarshaling process for ChangePwnDeviceProfileRequest objects.
func (c *ChangePwnDeviceProfileRequest) UnmarshalJSON(input []byte) error {
    var temp tempChangePwnDeviceProfileRequest
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    err = temp.validate()
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "accountName", "deviceList", "newProfile")
    if err != nil {
    	return err
    }
    c.AdditionalProperties = additionalProperties
    
    c.AccountName = *temp.AccountName
    c.DeviceList = *temp.DeviceList
    c.NewProfile = *temp.NewProfile
    return nil
}

// tempChangePwnDeviceProfileRequest is a temporary struct used for validating the fields of ChangePwnDeviceProfileRequest.
type tempChangePwnDeviceProfileRequest  struct {
    AccountName *string          `json:"accountName"`
    DeviceList  *[]PwnDeviceList `json:"deviceList"`
    NewProfile  *string          `json:"newProfile"`
}

func (c *tempChangePwnDeviceProfileRequest) validate() error {
    var errs []string
    if c.AccountName == nil {
        errs = append(errs, "required field `accountName` is missing for type `ChangePWNDeviceProfileRequest`")
    }
    if c.DeviceList == nil {
        errs = append(errs, "required field `deviceList` is missing for type `ChangePWNDeviceProfileRequest`")
    }
    if c.NewProfile == nil {
        errs = append(errs, "required field `newProfile` is missing for type `ChangePWNDeviceProfileRequest`")
    }
    if len(errs) == 0 {
        return nil
    }
    return errors.New(strings.Join (errs, "\n"))
}
