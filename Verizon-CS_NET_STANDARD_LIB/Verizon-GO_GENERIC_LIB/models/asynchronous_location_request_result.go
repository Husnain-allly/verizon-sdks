/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// AsynchronousLocationRequestResult represents a AsynchronousLocationRequestResult struct.
type AsynchronousLocationRequestResult struct {
    // The transaction ID of the report.
    Txid                 *string                `json:"txid,omitempty"`
    // Status of the report.
    Status               *ReportStatus          `json:"status,omitempty"`
    // Estimated number of minutes required to complete the report.
    EstimatedDuration    *string                `json:"estimatedDuration,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for AsynchronousLocationRequestResult,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (a AsynchronousLocationRequestResult) String() string {
    return fmt.Sprintf(
    	"AsynchronousLocationRequestResult[Txid=%v, Status=%v, EstimatedDuration=%v, AdditionalProperties=%v]",
    	a.Txid, a.Status, a.EstimatedDuration, a.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for AsynchronousLocationRequestResult.
// It customizes the JSON marshaling process for AsynchronousLocationRequestResult objects.
func (a AsynchronousLocationRequestResult) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(a.AdditionalProperties,
        "txid", "status", "estimatedDuration"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(a.toMap())
}

// toMap converts the AsynchronousLocationRequestResult object to a map representation for JSON marshaling.
func (a AsynchronousLocationRequestResult) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, a.AdditionalProperties)
    if a.Txid != nil {
        structMap["txid"] = a.Txid
    }
    if a.Status != nil {
        structMap["status"] = a.Status
    }
    if a.EstimatedDuration != nil {
        structMap["estimatedDuration"] = a.EstimatedDuration
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for AsynchronousLocationRequestResult.
// It customizes the JSON unmarshaling process for AsynchronousLocationRequestResult objects.
func (a *AsynchronousLocationRequestResult) UnmarshalJSON(input []byte) error {
    var temp tempAsynchronousLocationRequestResult
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "txid", "status", "estimatedDuration")
    if err != nil {
    	return err
    }
    a.AdditionalProperties = additionalProperties
    
    a.Txid = temp.Txid
    a.Status = temp.Status
    a.EstimatedDuration = temp.EstimatedDuration
    return nil
}

// tempAsynchronousLocationRequestResult is a temporary struct used for validating the fields of AsynchronousLocationRequestResult.
type tempAsynchronousLocationRequestResult  struct {
    Txid              *string       `json:"txid,omitempty"`
    Status            *ReportStatus `json:"status,omitempty"`
    EstimatedDuration *string       `json:"estimatedDuration,omitempty"`
}
