/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "errors"
    "fmt"
    "strings"
)

// DeviceAggregateUsageListRequest represents a DeviceAggregateUsageListRequest struct.
// Request to list device aggregate usage.
type DeviceAggregateUsageListRequest struct {
    // The beginning of the reporting period. The startTime cannot be more than 6 months before the current date.
    StartTime            string                 `json:"startTime"`
    // The end of the reporting period. The endTime date must be within on month of the startTime date.
    EndTime              string                 `json:"endTime"`
    // One or more devices for which you want aggregate data, specified by device ID.
    DeviceIds            []DeviceId             `json:"deviceIds,omitempty"`
    // The name of a billing account.
    AccountName          *string                `json:"accountName,omitempty"`
    // The name of a device group, if you want to only include devices in that group.
    GroupName            *string                `json:"groupName,omitempty"`
    Label                []Label                `json:"label,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for DeviceAggregateUsageListRequest,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (d DeviceAggregateUsageListRequest) String() string {
    return fmt.Sprintf(
    	"DeviceAggregateUsageListRequest[StartTime=%v, EndTime=%v, DeviceIds=%v, AccountName=%v, GroupName=%v, Label=%v, AdditionalProperties=%v]",
    	d.StartTime, d.EndTime, d.DeviceIds, d.AccountName, d.GroupName, d.Label, d.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for DeviceAggregateUsageListRequest.
// It customizes the JSON marshaling process for DeviceAggregateUsageListRequest objects.
func (d DeviceAggregateUsageListRequest) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(d.AdditionalProperties,
        "startTime", "endTime", "deviceIds", "accountName", "groupName", "label"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(d.toMap())
}

// toMap converts the DeviceAggregateUsageListRequest object to a map representation for JSON marshaling.
func (d DeviceAggregateUsageListRequest) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, d.AdditionalProperties)
    structMap["startTime"] = d.StartTime
    structMap["endTime"] = d.EndTime
    if d.DeviceIds != nil {
        structMap["deviceIds"] = d.DeviceIds
    }
    if d.AccountName != nil {
        structMap["accountName"] = d.AccountName
    }
    if d.GroupName != nil {
        structMap["groupName"] = d.GroupName
    }
    if d.Label != nil {
        structMap["label"] = d.Label
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for DeviceAggregateUsageListRequest.
// It customizes the JSON unmarshaling process for DeviceAggregateUsageListRequest objects.
func (d *DeviceAggregateUsageListRequest) UnmarshalJSON(input []byte) error {
    var temp tempDeviceAggregateUsageListRequest
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    err = temp.validate()
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "startTime", "endTime", "deviceIds", "accountName", "groupName", "label")
    if err != nil {
    	return err
    }
    d.AdditionalProperties = additionalProperties
    
    d.StartTime = *temp.StartTime
    d.EndTime = *temp.EndTime
    d.DeviceIds = temp.DeviceIds
    d.AccountName = temp.AccountName
    d.GroupName = temp.GroupName
    d.Label = temp.Label
    return nil
}

// tempDeviceAggregateUsageListRequest is a temporary struct used for validating the fields of DeviceAggregateUsageListRequest.
type tempDeviceAggregateUsageListRequest  struct {
    StartTime   *string    `json:"startTime"`
    EndTime     *string    `json:"endTime"`
    DeviceIds   []DeviceId `json:"deviceIds,omitempty"`
    AccountName *string    `json:"accountName,omitempty"`
    GroupName   *string    `json:"groupName,omitempty"`
    Label       []Label    `json:"label,omitempty"`
}

func (d *tempDeviceAggregateUsageListRequest) validate() error {
    var errs []string
    if d.StartTime == nil {
        errs = append(errs, "required field `startTime` is missing for type `DeviceAggregateUsageListRequest`")
    }
    if d.EndTime == nil {
        errs = append(errs, "required field `endTime` is missing for type `DeviceAggregateUsageListRequest`")
    }
    if len(errs) == 0 {
        return nil
    }
    return errors.New(strings.Join (errs, "\n"))
}
