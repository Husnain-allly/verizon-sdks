/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "errors"
    "fmt"
    "strings"
)

// SearchDeviceEventHistoryRequest represents a SearchDeviceEventHistoryRequest struct.
// Search Device By Property resource definition.
type SearchDeviceEventHistoryRequest struct {
    // The ID of the authenticating billing account, in the format `{"billingaccountid":"1234567890-12345"}`.
    Accountidentifier    AccountIdentifier      `json:"accountidentifier"`
    // A comma-separated list of properties and comparator values to match against subscriptions in the ThingSpace account. See Working with Query Filters for more information. If the request does not include `$selection`, the response will include all subscriptions to which the requesting user has access.
    MSelection           map[string]string      `json:"$selection,omitempty"`
    // The ID of the target to delete, in the format {"id": "dd1682d3-2d80-cefc-f3ee-25154800beff"}.
    Resourceidentifier   ResourceIdentifier     `json:"resourceidentifier"`
    // The maximum number of events to include in the response.
    MLimitnumber         *int                   `json:"$limitnumber,omitempty"`
    // The maximum number of events to include in the response.
    MPage                *string                `json:"$page,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for SearchDeviceEventHistoryRequest,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (s SearchDeviceEventHistoryRequest) String() string {
    return fmt.Sprintf(
    	"SearchDeviceEventHistoryRequest[Accountidentifier=%v, MSelection=%v, Resourceidentifier=%v, MLimitnumber=%v, MPage=%v, AdditionalProperties=%v]",
    	s.Accountidentifier, s.MSelection, s.Resourceidentifier, s.MLimitnumber, s.MPage, s.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for SearchDeviceEventHistoryRequest.
// It customizes the JSON marshaling process for SearchDeviceEventHistoryRequest objects.
func (s SearchDeviceEventHistoryRequest) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(s.AdditionalProperties,
        "accountidentifier", "$selection", "resourceidentifier", "$limitnumber", "$page"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(s.toMap())
}

// toMap converts the SearchDeviceEventHistoryRequest object to a map representation for JSON marshaling.
func (s SearchDeviceEventHistoryRequest) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, s.AdditionalProperties)
    structMap["accountidentifier"] = s.Accountidentifier.toMap()
    if s.MSelection != nil {
        structMap["$selection"] = s.MSelection
    }
    structMap["resourceidentifier"] = s.Resourceidentifier.toMap()
    if s.MLimitnumber != nil {
        structMap["$limitnumber"] = s.MLimitnumber
    }
    if s.MPage != nil {
        structMap["$page"] = s.MPage
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for SearchDeviceEventHistoryRequest.
// It customizes the JSON unmarshaling process for SearchDeviceEventHistoryRequest objects.
func (s *SearchDeviceEventHistoryRequest) UnmarshalJSON(input []byte) error {
    var temp tempSearchDeviceEventHistoryRequest
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    err = temp.validate()
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "accountidentifier", "$selection", "resourceidentifier", "$limitnumber", "$page")
    if err != nil {
    	return err
    }
    s.AdditionalProperties = additionalProperties
    
    s.Accountidentifier = *temp.Accountidentifier
    s.MSelection = temp.MSelection
    s.Resourceidentifier = *temp.Resourceidentifier
    s.MLimitnumber = temp.MLimitnumber
    s.MPage = temp.MPage
    return nil
}

// tempSearchDeviceEventHistoryRequest is a temporary struct used for validating the fields of SearchDeviceEventHistoryRequest.
type tempSearchDeviceEventHistoryRequest  struct {
    Accountidentifier  *AccountIdentifier  `json:"accountidentifier"`
    MSelection         map[string]string   `json:"$selection,omitempty"`
    Resourceidentifier *ResourceIdentifier `json:"resourceidentifier"`
    MLimitnumber       *int                `json:"$limitnumber,omitempty"`
    MPage              *string             `json:"$page,omitempty"`
}

func (s *tempSearchDeviceEventHistoryRequest) validate() error {
    var errs []string
    if s.Accountidentifier == nil {
        errs = append(errs, "required field `accountidentifier` is missing for type `SearchDeviceEventHistoryRequest`")
    }
    if s.Resourceidentifier == nil {
        errs = append(errs, "required field `resourceidentifier` is missing for type `SearchDeviceEventHistoryRequest`")
    }
    if len(errs) == 0 {
        return nil
    }
    return errors.New(strings.Join (errs, "\n"))
}
