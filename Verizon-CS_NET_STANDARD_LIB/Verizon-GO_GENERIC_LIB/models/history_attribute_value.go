/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
    "log"
    "time"
)

// HistoryAttributeValue represents a HistoryAttributeValue struct.
// Streaming RF parameter for which you want to retrieve history data.
type HistoryAttributeValue struct {
    // Attribute identifier.
    Name                 *AttributeIdentifier   `json:"name,omitempty"`
    // Attribute value.
    Value                *string                `json:"value,omitempty"`
    // Date and time the request was created.
    CreatedOn            *time.Time             `json:"createdOn,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for HistoryAttributeValue,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (h HistoryAttributeValue) String() string {
    return fmt.Sprintf(
    	"HistoryAttributeValue[Name=%v, Value=%v, CreatedOn=%v, AdditionalProperties=%v]",
    	h.Name, h.Value, h.CreatedOn, h.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for HistoryAttributeValue.
// It customizes the JSON marshaling process for HistoryAttributeValue objects.
func (h HistoryAttributeValue) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(h.AdditionalProperties,
        "name", "value", "createdOn"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(h.toMap())
}

// toMap converts the HistoryAttributeValue object to a map representation for JSON marshaling.
func (h HistoryAttributeValue) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, h.AdditionalProperties)
    if h.Name != nil {
        structMap["name"] = h.Name
    }
    if h.Value != nil {
        structMap["value"] = h.Value
    }
    if h.CreatedOn != nil {
        structMap["createdOn"] = h.CreatedOn.Format(time.RFC3339)
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for HistoryAttributeValue.
// It customizes the JSON unmarshaling process for HistoryAttributeValue objects.
func (h *HistoryAttributeValue) UnmarshalJSON(input []byte) error {
    var temp tempHistoryAttributeValue
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "name", "value", "createdOn")
    if err != nil {
    	return err
    }
    h.AdditionalProperties = additionalProperties
    
    h.Name = temp.Name
    h.Value = temp.Value
    if temp.CreatedOn != nil {
        CreatedOnVal, err := time.Parse(time.RFC3339, *temp.CreatedOn)
        if err != nil {
            log.Fatalf("Cannot Parse createdOn as % s format.", time.RFC3339)
        }
        h.CreatedOn = &CreatedOnVal
    }
    return nil
}

// tempHistoryAttributeValue is a temporary struct used for validating the fields of HistoryAttributeValue.
type tempHistoryAttributeValue  struct {
    Name      *AttributeIdentifier `json:"name,omitempty"`
    Value     *string              `json:"value,omitempty"`
    CreatedOn *string              `json:"createdOn,omitempty"`
}
