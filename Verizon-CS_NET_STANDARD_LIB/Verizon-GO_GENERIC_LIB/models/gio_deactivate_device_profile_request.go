/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// GioDeactivateDeviceProfileRequest represents a GioDeactivateDeviceProfileRequest struct.
type GioDeactivateDeviceProfileRequest struct {
    Devices     []GioDeviceList `json:"devices,omitempty"`
    AccountName *string         `json:"accountName,omitempty"`
    ServicePlan *string         `json:"servicePlan,omitempty"`
    EtfWaiver   *bool           `json:"etfWaiver,omitempty"`
    ReasonCode  *string         `json:"reasonCode,omitempty"`
}

// String implements the fmt.Stringer interface for GioDeactivateDeviceProfileRequest,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (g GioDeactivateDeviceProfileRequest) String() string {
    return fmt.Sprintf(
    	"GioDeactivateDeviceProfileRequest[Devices=%v, AccountName=%v, ServicePlan=%v, EtfWaiver=%v, ReasonCode=%v]",
    	g.Devices, g.AccountName, g.ServicePlan, g.EtfWaiver, g.ReasonCode)
}

// MarshalJSON implements the json.Marshaler interface for GioDeactivateDeviceProfileRequest.
// It customizes the JSON marshaling process for GioDeactivateDeviceProfileRequest objects.
func (g GioDeactivateDeviceProfileRequest) MarshalJSON() (
    []byte,
    error) {
    return json.Marshal(g.toMap())
}

// toMap converts the GioDeactivateDeviceProfileRequest object to a map representation for JSON marshaling.
func (g GioDeactivateDeviceProfileRequest) toMap() map[string]any {
    structMap := make(map[string]any)
    if g.Devices != nil {
        structMap["devices"] = g.Devices
    }
    if g.AccountName != nil {
        structMap["accountName"] = g.AccountName
    }
    if g.ServicePlan != nil {
        structMap["servicePlan"] = g.ServicePlan
    }
    if g.EtfWaiver != nil {
        structMap["etfWaiver"] = g.EtfWaiver
    }
    if g.ReasonCode != nil {
        structMap["reasonCode"] = g.ReasonCode
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for GioDeactivateDeviceProfileRequest.
// It customizes the JSON unmarshaling process for GioDeactivateDeviceProfileRequest objects.
func (g *GioDeactivateDeviceProfileRequest) UnmarshalJSON(input []byte) error {
    var temp tempGioDeactivateDeviceProfileRequest
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    
    g.Devices = temp.Devices
    g.AccountName = temp.AccountName
    g.ServicePlan = temp.ServicePlan
    g.EtfWaiver = temp.EtfWaiver
    g.ReasonCode = temp.ReasonCode
    return nil
}

// tempGioDeactivateDeviceProfileRequest is a temporary struct used for validating the fields of GioDeactivateDeviceProfileRequest.
type tempGioDeactivateDeviceProfileRequest  struct {
    Devices     []GioDeviceList `json:"devices,omitempty"`
    AccountName *string         `json:"accountName,omitempty"`
    ServicePlan *string         `json:"servicePlan,omitempty"`
    EtfWaiver   *bool           `json:"etfWaiver,omitempty"`
    ReasonCode  *string         `json:"reasonCode,omitempty"`
}
