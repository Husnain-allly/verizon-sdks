/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
    "log"
    "time"
)

// DtoProfileResponse represents a DtoProfileResponse struct.
type DtoProfileResponse struct {
    Id                   *string                `json:"id,omitempty"`
    // the user defined profile kind
    Kind                 *string                `json:"kind,omitempty"`
    // The resource version
    Version              *string                `json:"version,omitempty"`
    Versionid            *string                `json:"versionid,omitempty"`
    // Timestamp of the record
    Createdon            *time.Time             `json:"createdon,omitempty"`
    // Timestamp of the record
    Lastupdated          *time.Time             `json:"lastupdated,omitempty"`
    // user defined profile name
    Name                 *string                `json:"name,omitempty"`
    // UUID of the ECPD account the user belongs to
    Foreignid            *string                `json:"foreignid,omitempty"`
    // The billing account ID. This is the same value as the Account ID
    Billingaccountid     *string                `json:"billingaccountid,omitempty"`
    // device model id
    Modelid              *string                `json:"modelid,omitempty"`
    Configuration        *interface{}           `json:"configuration,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for DtoProfileResponse,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (d DtoProfileResponse) String() string {
    return fmt.Sprintf(
    	"DtoProfileResponse[Id=%v, Kind=%v, Version=%v, Versionid=%v, Createdon=%v, Lastupdated=%v, Name=%v, Foreignid=%v, Billingaccountid=%v, Modelid=%v, Configuration=%v, AdditionalProperties=%v]",
    	d.Id, d.Kind, d.Version, d.Versionid, d.Createdon, d.Lastupdated, d.Name, d.Foreignid, d.Billingaccountid, d.Modelid, d.Configuration, d.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for DtoProfileResponse.
// It customizes the JSON marshaling process for DtoProfileResponse objects.
func (d DtoProfileResponse) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(d.AdditionalProperties,
        "id", "kind", "version", "versionid", "createdon", "lastupdated", "name", "foreignid", "billingaccountid", "modelid", "configuration"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(d.toMap())
}

// toMap converts the DtoProfileResponse object to a map representation for JSON marshaling.
func (d DtoProfileResponse) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, d.AdditionalProperties)
    if d.Id != nil {
        structMap["id"] = d.Id
    }
    if d.Kind != nil {
        structMap["kind"] = d.Kind
    }
    if d.Version != nil {
        structMap["version"] = d.Version
    }
    if d.Versionid != nil {
        structMap["versionid"] = d.Versionid
    }
    if d.Createdon != nil {
        structMap["createdon"] = d.Createdon.Format(time.RFC3339)
    }
    if d.Lastupdated != nil {
        structMap["lastupdated"] = d.Lastupdated.Format(time.RFC3339)
    }
    if d.Name != nil {
        structMap["name"] = d.Name
    }
    if d.Foreignid != nil {
        structMap["foreignid"] = d.Foreignid
    }
    if d.Billingaccountid != nil {
        structMap["billingaccountid"] = d.Billingaccountid
    }
    if d.Modelid != nil {
        structMap["modelid"] = d.Modelid
    }
    if d.Configuration != nil {
        structMap["configuration"] = d.Configuration
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for DtoProfileResponse.
// It customizes the JSON unmarshaling process for DtoProfileResponse objects.
func (d *DtoProfileResponse) UnmarshalJSON(input []byte) error {
    var temp tempDtoProfileResponse
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "id", "kind", "version", "versionid", "createdon", "lastupdated", "name", "foreignid", "billingaccountid", "modelid", "configuration")
    if err != nil {
    	return err
    }
    d.AdditionalProperties = additionalProperties
    
    d.Id = temp.Id
    d.Kind = temp.Kind
    d.Version = temp.Version
    d.Versionid = temp.Versionid
    if temp.Createdon != nil {
        CreatedonVal, err := time.Parse(time.RFC3339, *temp.Createdon)
        if err != nil {
            log.Fatalf("Cannot Parse createdon as % s format.", time.RFC3339)
        }
        d.Createdon = &CreatedonVal
    }
    if temp.Lastupdated != nil {
        LastupdatedVal, err := time.Parse(time.RFC3339, *temp.Lastupdated)
        if err != nil {
            log.Fatalf("Cannot Parse lastupdated as % s format.", time.RFC3339)
        }
        d.Lastupdated = &LastupdatedVal
    }
    d.Name = temp.Name
    d.Foreignid = temp.Foreignid
    d.Billingaccountid = temp.Billingaccountid
    d.Modelid = temp.Modelid
    d.Configuration = temp.Configuration
    return nil
}

// tempDtoProfileResponse is a temporary struct used for validating the fields of DtoProfileResponse.
type tempDtoProfileResponse  struct {
    Id               *string      `json:"id,omitempty"`
    Kind             *string      `json:"kind,omitempty"`
    Version          *string      `json:"version,omitempty"`
    Versionid        *string      `json:"versionid,omitempty"`
    Createdon        *string      `json:"createdon,omitempty"`
    Lastupdated      *string      `json:"lastupdated,omitempty"`
    Name             *string      `json:"name,omitempty"`
    Foreignid        *string      `json:"foreignid,omitempty"`
    Billingaccountid *string      `json:"billingaccountid,omitempty"`
    Modelid          *string      `json:"modelid,omitempty"`
    Configuration    *interface{} `json:"configuration,omitempty"`
}
