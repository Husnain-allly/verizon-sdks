/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// CreateIoTApplicationResponse represents a CreateIoTApplicationResponse struct.
// A success response includes an array of all matching events. Each event includes the full event resource definition.
type CreateIoTApplicationResponse struct {
    // An application will be created under the user's Azure subscription with this name and of type IOT central.
    AppName              *string                `json:"appName,omitempty"`
    // Part of the user credentials (from Azure) the user needs to use for calling further TS Core APIs for setting up Azure cloud connector.
    SharedSecret         *string                `json:"sharedSecret,omitempty"`
    // An IOT central endpoint the user can use to see the data that is being streamed.
    Url                  *string                `json:"url,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for CreateIoTApplicationResponse,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (c CreateIoTApplicationResponse) String() string {
    return fmt.Sprintf(
    	"CreateIoTApplicationResponse[AppName=%v, SharedSecret=%v, Url=%v, AdditionalProperties=%v]",
    	c.AppName, c.SharedSecret, c.Url, c.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for CreateIoTApplicationResponse.
// It customizes the JSON marshaling process for CreateIoTApplicationResponse objects.
func (c CreateIoTApplicationResponse) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(c.AdditionalProperties,
        "appName", "sharedSecret", "url"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(c.toMap())
}

// toMap converts the CreateIoTApplicationResponse object to a map representation for JSON marshaling.
func (c CreateIoTApplicationResponse) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, c.AdditionalProperties)
    if c.AppName != nil {
        structMap["appName"] = c.AppName
    }
    if c.SharedSecret != nil {
        structMap["sharedSecret"] = c.SharedSecret
    }
    if c.Url != nil {
        structMap["url"] = c.Url
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for CreateIoTApplicationResponse.
// It customizes the JSON unmarshaling process for CreateIoTApplicationResponse objects.
func (c *CreateIoTApplicationResponse) UnmarshalJSON(input []byte) error {
    var temp tempCreateIoTApplicationResponse
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "appName", "sharedSecret", "url")
    if err != nil {
    	return err
    }
    c.AdditionalProperties = additionalProperties
    
    c.AppName = temp.AppName
    c.SharedSecret = temp.SharedSecret
    c.Url = temp.Url
    return nil
}

// tempCreateIoTApplicationResponse is a temporary struct used for validating the fields of CreateIoTApplicationResponse.
type tempCreateIoTApplicationResponse  struct {
    AppName      *string `json:"appName,omitempty"`
    SharedSecret *string `json:"sharedSecret,omitempty"`
    Url          *string `json:"url,omitempty"`
}
