/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// RetrievesAvailableFilesResponseList represents a RetrievesAvailableFilesResponseList struct.
type RetrievesAvailableFilesResponseList struct {
    AvailableFilesResponse []RetrievesAvailableFilesResponse `json:"AvailableFilesResponse,omitempty"`
    AdditionalProperties   map[string]interface{}            `json:"_"`
}

// String implements the fmt.Stringer interface for RetrievesAvailableFilesResponseList,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (r RetrievesAvailableFilesResponseList) String() string {
    return fmt.Sprintf(
    	"RetrievesAvailableFilesResponseList[AvailableFilesResponse=%v, AdditionalProperties=%v]",
    	r.AvailableFilesResponse, r.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for RetrievesAvailableFilesResponseList.
// It customizes the JSON marshaling process for RetrievesAvailableFilesResponseList objects.
func (r RetrievesAvailableFilesResponseList) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(r.AdditionalProperties,
        "AvailableFilesResponse"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(r.toMap())
}

// toMap converts the RetrievesAvailableFilesResponseList object to a map representation for JSON marshaling.
func (r RetrievesAvailableFilesResponseList) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, r.AdditionalProperties)
    if r.AvailableFilesResponse != nil {
        structMap["AvailableFilesResponse"] = r.AvailableFilesResponse
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for RetrievesAvailableFilesResponseList.
// It customizes the JSON unmarshaling process for RetrievesAvailableFilesResponseList objects.
func (r *RetrievesAvailableFilesResponseList) UnmarshalJSON(input []byte) error {
    var temp tempRetrievesAvailableFilesResponseList
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "AvailableFilesResponse")
    if err != nil {
    	return err
    }
    r.AdditionalProperties = additionalProperties
    
    r.AvailableFilesResponse = temp.AvailableFilesResponse
    return nil
}

// tempRetrievesAvailableFilesResponseList is a temporary struct used for validating the fields of RetrievesAvailableFilesResponseList.
type tempRetrievesAvailableFilesResponseList  struct {
    AvailableFilesResponse []RetrievesAvailableFilesResponse `json:"AvailableFilesResponse,omitempty"`
}
