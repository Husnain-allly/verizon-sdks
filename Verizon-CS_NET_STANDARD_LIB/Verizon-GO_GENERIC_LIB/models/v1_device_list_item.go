/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// V1DeviceListItem represents a V1DeviceListItem struct.
// A JSON object for each device that was included in the request, showing the device IMEI, the status of the addition or removal, and additional information about the status.
type V1DeviceListItem struct {
    // Device IMEI.
    DeviceId             *string                `json:"deviceId,omitempty"`
    // Whether the device was successfully added or removed from the campaign.
    Status               *string                `json:"status,omitempty"`
    // Additional details about the status.
    Reason               *string                `json:"Reason,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for V1DeviceListItem,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (v V1DeviceListItem) String() string {
    return fmt.Sprintf(
    	"V1DeviceListItem[DeviceId=%v, Status=%v, Reason=%v, AdditionalProperties=%v]",
    	v.DeviceId, v.Status, v.Reason, v.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for V1DeviceListItem.
// It customizes the JSON marshaling process for V1DeviceListItem objects.
func (v V1DeviceListItem) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(v.AdditionalProperties,
        "deviceId", "status", "Reason"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(v.toMap())
}

// toMap converts the V1DeviceListItem object to a map representation for JSON marshaling.
func (v V1DeviceListItem) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, v.AdditionalProperties)
    if v.DeviceId != nil {
        structMap["deviceId"] = v.DeviceId
    }
    if v.Status != nil {
        structMap["status"] = v.Status
    }
    if v.Reason != nil {
        structMap["Reason"] = v.Reason
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for V1DeviceListItem.
// It customizes the JSON unmarshaling process for V1DeviceListItem objects.
func (v *V1DeviceListItem) UnmarshalJSON(input []byte) error {
    var temp tempV1DeviceListItem
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "deviceId", "status", "Reason")
    if err != nil {
    	return err
    }
    v.AdditionalProperties = additionalProperties
    
    v.DeviceId = temp.DeviceId
    v.Status = temp.Status
    v.Reason = temp.Reason
    return nil
}

// tempV1DeviceListItem is a temporary struct used for validating the fields of V1DeviceListItem.
type tempV1DeviceListItem  struct {
    DeviceId *string `json:"deviceId,omitempty"`
    Status   *string `json:"status,omitempty"`
    Reason   *string `json:"Reason,omitempty"`
}
