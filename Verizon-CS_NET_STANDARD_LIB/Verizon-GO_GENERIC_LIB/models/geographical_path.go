/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// GeographicalPath represents a GeographicalPath struct.
// The data frame is used to support the cross-cutting need in many V2X messages to describe arbitrary spatial areas (polygons, boundary lines, and other basic shapes) required by various message types in a small message size.
type GeographicalPath struct {
    // This data frame can describe a complex path of arbitrary size using node offset method (LL offsets).
    Description *GeographicalPathDescription `json:"description,omitempty"`
    Direction   *string                      `json:"direction,omitempty"`
}

// String implements the fmt.Stringer interface for GeographicalPath,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (g GeographicalPath) String() string {
    return fmt.Sprintf(
    	"GeographicalPath[Description=%v, Direction=%v]",
    	g.Description, g.Direction)
}

// MarshalJSON implements the json.Marshaler interface for GeographicalPath.
// It customizes the JSON marshaling process for GeographicalPath objects.
func (g GeographicalPath) MarshalJSON() (
    []byte,
    error) {
    return json.Marshal(g.toMap())
}

// toMap converts the GeographicalPath object to a map representation for JSON marshaling.
func (g GeographicalPath) toMap() map[string]any {
    structMap := make(map[string]any)
    if g.Description != nil {
        structMap["description"] = g.Description.toMap()
    }
    if g.Direction != nil {
        structMap["direction"] = g.Direction
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for GeographicalPath.
// It customizes the JSON unmarshaling process for GeographicalPath objects.
func (g *GeographicalPath) UnmarshalJSON(input []byte) error {
    var temp tempGeographicalPath
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    
    g.Description = temp.Description
    g.Direction = temp.Direction
    return nil
}

// tempGeographicalPath is a temporary struct used for validating the fields of GeographicalPath.
type tempGeographicalPath  struct {
    Description *GeographicalPathDescription `json:"description,omitempty"`
    Direction   *string                      `json:"direction,omitempty"`
}
