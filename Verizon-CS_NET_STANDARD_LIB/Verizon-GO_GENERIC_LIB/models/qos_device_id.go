/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// QosDeviceId represents a QosDeviceId struct.
type QosDeviceId struct {
    Id                   *string                `json:"id,omitempty"`
    Kind                 *string                `json:"kind,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for QosDeviceId,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (q QosDeviceId) String() string {
    return fmt.Sprintf(
    	"QosDeviceId[Id=%v, Kind=%v, AdditionalProperties=%v]",
    	q.Id, q.Kind, q.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for QosDeviceId.
// It customizes the JSON marshaling process for QosDeviceId objects.
func (q QosDeviceId) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(q.AdditionalProperties,
        "id", "kind"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(q.toMap())
}

// toMap converts the QosDeviceId object to a map representation for JSON marshaling.
func (q QosDeviceId) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, q.AdditionalProperties)
    if q.Id != nil {
        structMap["id"] = q.Id
    }
    if q.Kind != nil {
        structMap["kind"] = q.Kind
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for QosDeviceId.
// It customizes the JSON unmarshaling process for QosDeviceId objects.
func (q *QosDeviceId) UnmarshalJSON(input []byte) error {
    var temp tempQosDeviceId
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "id", "kind")
    if err != nil {
    	return err
    }
    q.AdditionalProperties = additionalProperties
    
    q.Id = temp.Id
    q.Kind = temp.Kind
    return nil
}

// tempQosDeviceId is a temporary struct used for validating the fields of QosDeviceId.
type tempQosDeviceId  struct {
    Id   *string `json:"id,omitempty"`
    Kind *string `json:"kind,omitempty"`
}
