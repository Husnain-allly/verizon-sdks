/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// AccountShareFilterCriteria represents a AccountShareFilterCriteria struct.
type AccountShareFilterCriteria struct {
    FilterCriteria       *AccountShareFilterCriteria1 `json:"filterCriteria,omitempty"`
    AdditionalProperties map[string]interface{}       `json:"_"`
}

// String implements the fmt.Stringer interface for AccountShareFilterCriteria,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (a AccountShareFilterCriteria) String() string {
    return fmt.Sprintf(
    	"AccountShareFilterCriteria[FilterCriteria=%v, AdditionalProperties=%v]",
    	a.FilterCriteria, a.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for AccountShareFilterCriteria.
// It customizes the JSON marshaling process for AccountShareFilterCriteria objects.
func (a AccountShareFilterCriteria) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(a.AdditionalProperties,
        "filterCriteria"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(a.toMap())
}

// toMap converts the AccountShareFilterCriteria object to a map representation for JSON marshaling.
func (a AccountShareFilterCriteria) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, a.AdditionalProperties)
    if a.FilterCriteria != nil {
        structMap["filterCriteria"] = a.FilterCriteria.toMap()
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for AccountShareFilterCriteria.
// It customizes the JSON unmarshaling process for AccountShareFilterCriteria objects.
func (a *AccountShareFilterCriteria) UnmarshalJSON(input []byte) error {
    var temp tempAccountShareFilterCriteria
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "filterCriteria")
    if err != nil {
    	return err
    }
    a.AdditionalProperties = additionalProperties
    
    a.FilterCriteria = temp.FilterCriteria
    return nil
}

// tempAccountShareFilterCriteria is a temporary struct used for validating the fields of AccountShareFilterCriteria.
type tempAccountShareFilterCriteria  struct {
    FilterCriteria *AccountShareFilterCriteria1 `json:"filterCriteria,omitempty"`
}
