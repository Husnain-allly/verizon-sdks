/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "errors"
    "fmt"
)

// MecPlatformResourceProperties represents a MecPlatformResourceProperties struct.
// This is a container for one-of cases.
type MecPlatformResourceProperties struct {
    value                                      any
    isArrayOfMecPlatformsAdditionalSupportInfo bool
    isMecPlatformsAdditionalSupportInfo        bool
}

// String implements the fmt.Stringer interface for MecPlatformResourceProperties,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (m MecPlatformResourceProperties) String() string {
    return fmt.Sprintf("%v", m.value)
}

// MarshalJSON implements the json.Marshaler interface for MecPlatformResourceProperties.
// It customizes the JSON marshaling process for MecPlatformResourceProperties objects.
func (m MecPlatformResourceProperties) MarshalJSON() (
    []byte,
    error) {
    if m.value == nil {
        return nil, errors.New("No underlying type is set. Please use any of the `models.MecPlatformResourcePropertiesContainer.From*` functions to initialize the MecPlatformResourceProperties object.")
    }
    return json.Marshal(m.toMap())
}

// toMap converts the MecPlatformResourceProperties object to a map representation for JSON marshaling.
func (m *MecPlatformResourceProperties) toMap() any {
    switch obj := m.value.(type) {
    case *[]MecPlatformsAdditionalSupportInfo:
        return *obj
    case *MecPlatformsAdditionalSupportInfo:
        return obj.toMap()
    }
    return nil
}

// UnmarshalJSON implements the json.Unmarshaler interface for MecPlatformResourceProperties.
// It customizes the JSON unmarshaling process for MecPlatformResourceProperties objects.
func (m *MecPlatformResourceProperties) UnmarshalJSON(input []byte) error {
    result, err := UnmarshallOneOf(input,
        NewTypeHolder(&[]MecPlatformsAdditionalSupportInfo{}, false, &m.isArrayOfMecPlatformsAdditionalSupportInfo),
        NewTypeHolder(&MecPlatformsAdditionalSupportInfo{}, false, &m.isMecPlatformsAdditionalSupportInfo),
    )
    
    m.value = result
    return err
}

func (m *MecPlatformResourceProperties) AsArrayOfMecPlatformsAdditionalSupportInfo() (
    *[]MecPlatformsAdditionalSupportInfo,
    bool) {
    if !m.isArrayOfMecPlatformsAdditionalSupportInfo {
        return nil, false
    }
    return m.value.(*[]MecPlatformsAdditionalSupportInfo), true
}

func (m *MecPlatformResourceProperties) AsMecPlatformsAdditionalSupportInfo() (
    *MecPlatformsAdditionalSupportInfo,
    bool) {
    if !m.isMecPlatformsAdditionalSupportInfo {
        return nil, false
    }
    return m.value.(*MecPlatformsAdditionalSupportInfo), true
}

// internalMecPlatformResourceProperties represents a mecPlatformResourceProperties struct.
// This is a container for one-of cases.
type internalMecPlatformResourceProperties struct {}

var MecPlatformResourcePropertiesContainer internalMecPlatformResourceProperties

// The internalMecPlatformResourceProperties instance, wrapping the provided []MecPlatformsAdditionalSupportInfo value.
func (m *internalMecPlatformResourceProperties) FromArrayOfMecPlatformsAdditionalSupportInfo(val []MecPlatformsAdditionalSupportInfo) MecPlatformResourceProperties {
    return MecPlatformResourceProperties{value: &val}
}

// The internalMecPlatformResourceProperties instance, wrapping the provided MecPlatformsAdditionalSupportInfo value.
func (m *internalMecPlatformResourceProperties) FromMecPlatformsAdditionalSupportInfo(val MecPlatformsAdditionalSupportInfo) MecPlatformResourceProperties {
    return MecPlatformResourceProperties{value: &val}
}
