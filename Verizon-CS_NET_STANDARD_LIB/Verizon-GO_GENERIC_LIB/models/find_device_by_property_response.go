/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// FindDeviceByPropertyResponse represents a FindDeviceByPropertyResponse struct.
// Change Configuration resource definition.
type FindDeviceByPropertyResponse struct {
    // Billing account ID of the resource.
    Billingaccountid     *string                `json:"billingaccountid,omitempty"`
    // The date the resource was created.
    Createdon            *string                `json:"createdon,omitempty"`
    Eventretention       *string                `json:"eventretention,omitempty"`
    // Cellular SIM card identifier.
    Iccid                *string                `json:"iccid,omitempty"`
    // ThingSpace unique ID for the device that was added.
    Id                   *string                `json:"id,omitempty"`
    // 4G hardware device identifier.
    Imei                 *string                `json:"imei,omitempty"`
    // Identifies the resource kind.
    Kind                 *string                `json:"kind,omitempty"`
    // The date the resource was last updated.
    Lastupdated          *string                `json:"lastupdated,omitempty"`
    // The deviceâ€™s service provider.
    Providerid           *string                `json:"providerid,omitempty"`
    // The value of the refidtype identifier.
    Refid                *string                `json:"refid,omitempty"`
    // The device identifier type used to refer to this device.
    Refidtype            *string                `json:"refidtype,omitempty"`
    // Service state of the device.
    State                *string                `json:"state,omitempty"`
    // Version of the underlying schema resource.
    Version              *string                `json:"version,omitempty"`
    // The version of the resource.
    Versionid            *string                `json:"versionid,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for FindDeviceByPropertyResponse,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (f FindDeviceByPropertyResponse) String() string {
    return fmt.Sprintf(
    	"FindDeviceByPropertyResponse[Billingaccountid=%v, Createdon=%v, Eventretention=%v, Iccid=%v, Id=%v, Imei=%v, Kind=%v, Lastupdated=%v, Providerid=%v, Refid=%v, Refidtype=%v, State=%v, Version=%v, Versionid=%v, AdditionalProperties=%v]",
    	f.Billingaccountid, f.Createdon, f.Eventretention, f.Iccid, f.Id, f.Imei, f.Kind, f.Lastupdated, f.Providerid, f.Refid, f.Refidtype, f.State, f.Version, f.Versionid, f.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for FindDeviceByPropertyResponse.
// It customizes the JSON marshaling process for FindDeviceByPropertyResponse objects.
func (f FindDeviceByPropertyResponse) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(f.AdditionalProperties,
        "billingaccountid", "createdon", "eventretention", "iccid", "id", "imei", "kind", "lastupdated", "providerid", "refid", "refidtype", "state", "version", "versionid"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(f.toMap())
}

// toMap converts the FindDeviceByPropertyResponse object to a map representation for JSON marshaling.
func (f FindDeviceByPropertyResponse) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, f.AdditionalProperties)
    if f.Billingaccountid != nil {
        structMap["billingaccountid"] = f.Billingaccountid
    }
    if f.Createdon != nil {
        structMap["createdon"] = f.Createdon
    }
    if f.Eventretention != nil {
        structMap["eventretention"] = f.Eventretention
    }
    if f.Iccid != nil {
        structMap["iccid"] = f.Iccid
    }
    if f.Id != nil {
        structMap["id"] = f.Id
    }
    if f.Imei != nil {
        structMap["imei"] = f.Imei
    }
    if f.Kind != nil {
        structMap["kind"] = f.Kind
    }
    if f.Lastupdated != nil {
        structMap["lastupdated"] = f.Lastupdated
    }
    if f.Providerid != nil {
        structMap["providerid"] = f.Providerid
    }
    if f.Refid != nil {
        structMap["refid"] = f.Refid
    }
    if f.Refidtype != nil {
        structMap["refidtype"] = f.Refidtype
    }
    if f.State != nil {
        structMap["state"] = f.State
    }
    if f.Version != nil {
        structMap["version"] = f.Version
    }
    if f.Versionid != nil {
        structMap["versionid"] = f.Versionid
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for FindDeviceByPropertyResponse.
// It customizes the JSON unmarshaling process for FindDeviceByPropertyResponse objects.
func (f *FindDeviceByPropertyResponse) UnmarshalJSON(input []byte) error {
    var temp tempFindDeviceByPropertyResponse
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "billingaccountid", "createdon", "eventretention", "iccid", "id", "imei", "kind", "lastupdated", "providerid", "refid", "refidtype", "state", "version", "versionid")
    if err != nil {
    	return err
    }
    f.AdditionalProperties = additionalProperties
    
    f.Billingaccountid = temp.Billingaccountid
    f.Createdon = temp.Createdon
    f.Eventretention = temp.Eventretention
    f.Iccid = temp.Iccid
    f.Id = temp.Id
    f.Imei = temp.Imei
    f.Kind = temp.Kind
    f.Lastupdated = temp.Lastupdated
    f.Providerid = temp.Providerid
    f.Refid = temp.Refid
    f.Refidtype = temp.Refidtype
    f.State = temp.State
    f.Version = temp.Version
    f.Versionid = temp.Versionid
    return nil
}

// tempFindDeviceByPropertyResponse is a temporary struct used for validating the fields of FindDeviceByPropertyResponse.
type tempFindDeviceByPropertyResponse  struct {
    Billingaccountid *string `json:"billingaccountid,omitempty"`
    Createdon        *string `json:"createdon,omitempty"`
    Eventretention   *string `json:"eventretention,omitempty"`
    Iccid            *string `json:"iccid,omitempty"`
    Id               *string `json:"id,omitempty"`
    Imei             *string `json:"imei,omitempty"`
    Kind             *string `json:"kind,omitempty"`
    Lastupdated      *string `json:"lastupdated,omitempty"`
    Providerid       *string `json:"providerid,omitempty"`
    Refid            *string `json:"refid,omitempty"`
    Refidtype        *string `json:"refidtype,omitempty"`
    State            *string `json:"state,omitempty"`
    Version          *string `json:"version,omitempty"`
    Versionid        *string `json:"versionid,omitempty"`
}
