/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// TriggerType2 represents a TriggerType2 struct.
// Trigger details.
type TriggerType2 struct {
    // The details of the UsageAnomaly trigger.
    Anomalyattributes *UsageAnomalyAttributes `json:"anomalyattributes,omitempty"`
    // The notification details of the trigger.
    Notification      *TriggerNotification    `json:"notification,omitempty"`
}

// String implements the fmt.Stringer interface for TriggerType2,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (t TriggerType2) String() string {
    return fmt.Sprintf(
    	"TriggerType2[Anomalyattributes=%v, Notification=%v]",
    	t.Anomalyattributes, t.Notification)
}

// MarshalJSON implements the json.Marshaler interface for TriggerType2.
// It customizes the JSON marshaling process for TriggerType2 objects.
func (t TriggerType2) MarshalJSON() (
    []byte,
    error) {
    return json.Marshal(t.toMap())
}

// toMap converts the TriggerType2 object to a map representation for JSON marshaling.
func (t TriggerType2) toMap() map[string]any {
    structMap := make(map[string]any)
    if t.Anomalyattributes != nil {
        structMap["anomalyattributes"] = t.Anomalyattributes.toMap()
    }
    if t.Notification != nil {
        structMap["notification"] = t.Notification.toMap()
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for TriggerType2.
// It customizes the JSON unmarshaling process for TriggerType2 objects.
func (t *TriggerType2) UnmarshalJSON(input []byte) error {
    var temp tempTriggerType2
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    
    t.Anomalyattributes = temp.Anomalyattributes
    t.Notification = temp.Notification
    return nil
}

// tempTriggerType2 is a temporary struct used for validating the fields of TriggerType2.
type tempTriggerType2  struct {
    Anomalyattributes *UsageAnomalyAttributes `json:"anomalyattributes,omitempty"`
    Notification      *TriggerNotification    `json:"notification,omitempty"`
}
