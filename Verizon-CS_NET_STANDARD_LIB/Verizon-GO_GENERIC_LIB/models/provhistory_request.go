/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
    "log"
    "time"
)

// ProvhistoryRequest represents a ProvhistoryRequest struct.
type ProvhistoryRequest struct {
    AccountName  *string       `json:"accountName,omitempty"`
    DeviceFilter []GioDeviceId `json:"deviceFilter,omitempty"`
    Earliest     *time.Time    `json:"earliest,omitempty"`
    Latest       *time.Time    `json:"latest,omitempty"`
}

// String implements the fmt.Stringer interface for ProvhistoryRequest,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (p ProvhistoryRequest) String() string {
    return fmt.Sprintf(
    	"ProvhistoryRequest[AccountName=%v, DeviceFilter=%v, Earliest=%v, Latest=%v]",
    	p.AccountName, p.DeviceFilter, p.Earliest, p.Latest)
}

// MarshalJSON implements the json.Marshaler interface for ProvhistoryRequest.
// It customizes the JSON marshaling process for ProvhistoryRequest objects.
func (p ProvhistoryRequest) MarshalJSON() (
    []byte,
    error) {
    return json.Marshal(p.toMap())
}

// toMap converts the ProvhistoryRequest object to a map representation for JSON marshaling.
func (p ProvhistoryRequest) toMap() map[string]any {
    structMap := make(map[string]any)
    if p.AccountName != nil {
        structMap["accountName"] = p.AccountName
    }
    if p.DeviceFilter != nil {
        structMap["deviceFilter"] = p.DeviceFilter
    }
    if p.Earliest != nil {
        structMap["earliest"] = p.Earliest.Format(time.RFC3339)
    }
    if p.Latest != nil {
        structMap["latest"] = p.Latest.Format(time.RFC3339)
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for ProvhistoryRequest.
// It customizes the JSON unmarshaling process for ProvhistoryRequest objects.
func (p *ProvhistoryRequest) UnmarshalJSON(input []byte) error {
    var temp tempProvhistoryRequest
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    
    p.AccountName = temp.AccountName
    p.DeviceFilter = temp.DeviceFilter
    if temp.Earliest != nil {
        EarliestVal, err := time.Parse(time.RFC3339, *temp.Earliest)
        if err != nil {
            log.Fatalf("Cannot Parse earliest as % s format.", time.RFC3339)
        }
        p.Earliest = &EarliestVal
    }
    if temp.Latest != nil {
        LatestVal, err := time.Parse(time.RFC3339, *temp.Latest)
        if err != nil {
            log.Fatalf("Cannot Parse latest as % s format.", time.RFC3339)
        }
        p.Latest = &LatestVal
    }
    return nil
}

// tempProvhistoryRequest is a temporary struct used for validating the fields of ProvhistoryRequest.
type tempProvhistoryRequest  struct {
    AccountName  *string       `json:"accountName,omitempty"`
    DeviceFilter []GioDeviceId `json:"deviceFilter,omitempty"`
    Earliest     *string       `json:"earliest,omitempty"`
    Latest       *string       `json:"latest,omitempty"`
}
