/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "errors"
    "fmt"
    "strings"
)

// SessionReportRequest represents a SessionReportRequest struct.
// Request for obtaining a session report.
type SessionReportRequest struct {
    // Account Number.
    AccountNumber        string                 `json:"accountNumber"`
    // Device ids.
    Imei                 string                 `json:"imei"`
    // Start date of session to include. If not specified  information will be shown from the earliest available (180 days). Can be either date in ISO 8601 format or predefined constants.
    StartDate            *string                `json:"startDate,omitempty"`
    // End date of session to include. If not specified  information will be shown to the latest available. Can be either date in ISO 8601 format or predefined constants.
    EndDate              *string                `json:"endDate,omitempty"`
    // The Low value of session duration.
    DurationLow          Optional[int]          `json:"durationLow"`
    // The High value of session duration.
    DurationHigh         Optional[int]          `json:"durationHigh"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for SessionReportRequest,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (s SessionReportRequest) String() string {
    return fmt.Sprintf(
    	"SessionReportRequest[AccountNumber=%v, Imei=%v, StartDate=%v, EndDate=%v, DurationLow=%v, DurationHigh=%v, AdditionalProperties=%v]",
    	s.AccountNumber, s.Imei, s.StartDate, s.EndDate, s.DurationLow, s.DurationHigh, s.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for SessionReportRequest.
// It customizes the JSON marshaling process for SessionReportRequest objects.
func (s SessionReportRequest) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(s.AdditionalProperties,
        "accountNumber", "imei", "startDate", "endDate", "durationLow", "durationHigh"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(s.toMap())
}

// toMap converts the SessionReportRequest object to a map representation for JSON marshaling.
func (s SessionReportRequest) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, s.AdditionalProperties)
    structMap["accountNumber"] = s.AccountNumber
    structMap["imei"] = s.Imei
    if s.StartDate != nil {
        structMap["startDate"] = s.StartDate
    }
    if s.EndDate != nil {
        structMap["endDate"] = s.EndDate
    }
    if s.DurationLow.IsValueSet() {
        if s.DurationLow.Value() != nil {
            structMap["durationLow"] = s.DurationLow.Value()
        } else {
            structMap["durationLow"] = nil
        }
    }
    if s.DurationHigh.IsValueSet() {
        if s.DurationHigh.Value() != nil {
            structMap["durationHigh"] = s.DurationHigh.Value()
        } else {
            structMap["durationHigh"] = nil
        }
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for SessionReportRequest.
// It customizes the JSON unmarshaling process for SessionReportRequest objects.
func (s *SessionReportRequest) UnmarshalJSON(input []byte) error {
    var temp tempSessionReportRequest
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    err = temp.validate()
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "accountNumber", "imei", "startDate", "endDate", "durationLow", "durationHigh")
    if err != nil {
    	return err
    }
    s.AdditionalProperties = additionalProperties
    
    s.AccountNumber = *temp.AccountNumber
    s.Imei = *temp.Imei
    s.StartDate = temp.StartDate
    s.EndDate = temp.EndDate
    s.DurationLow = temp.DurationLow
    s.DurationHigh = temp.DurationHigh
    return nil
}

// tempSessionReportRequest is a temporary struct used for validating the fields of SessionReportRequest.
type tempSessionReportRequest  struct {
    AccountNumber *string       `json:"accountNumber"`
    Imei          *string       `json:"imei"`
    StartDate     *string       `json:"startDate,omitempty"`
    EndDate       *string       `json:"endDate,omitempty"`
    DurationLow   Optional[int] `json:"durationLow"`
    DurationHigh  Optional[int] `json:"durationHigh"`
}

func (s *tempSessionReportRequest) validate() error {
    var errs []string
    if s.AccountNumber == nil {
        errs = append(errs, "required field `accountNumber` is missing for type `SessionReportRequest`")
    }
    if s.Imei == nil {
        errs = append(errs, "required field `imei` is missing for type `SessionReportRequest`")
    }
    if len(errs) == 0 {
        return nil
    }
    return errors.New(strings.Join (errs, "\n"))
}
