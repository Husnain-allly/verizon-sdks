/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "errors"
    "fmt"
    "strings"
)

// GioProfileRequest represents a GioProfileRequest struct.
type GioProfileRequest struct {
    Devices     []GioDeviceList `json:"devices"`
    AccountName string          `json:"accountName"`
    MdnZipCode  *string         `json:"mdnZipCode,omitempty"`
    ServicePlan *string         `json:"servicePlan,omitempty"`
}

// String implements the fmt.Stringer interface for GioProfileRequest,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (g GioProfileRequest) String() string {
    return fmt.Sprintf(
    	"GioProfileRequest[Devices=%v, AccountName=%v, MdnZipCode=%v, ServicePlan=%v]",
    	g.Devices, g.AccountName, g.MdnZipCode, g.ServicePlan)
}

// MarshalJSON implements the json.Marshaler interface for GioProfileRequest.
// It customizes the JSON marshaling process for GioProfileRequest objects.
func (g GioProfileRequest) MarshalJSON() (
    []byte,
    error) {
    return json.Marshal(g.toMap())
}

// toMap converts the GioProfileRequest object to a map representation for JSON marshaling.
func (g GioProfileRequest) toMap() map[string]any {
    structMap := make(map[string]any)
    structMap["devices"] = g.Devices
    structMap["accountName"] = g.AccountName
    if g.MdnZipCode != nil {
        structMap["mdnZipCode"] = g.MdnZipCode
    }
    if g.ServicePlan != nil {
        structMap["servicePlan"] = g.ServicePlan
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for GioProfileRequest.
// It customizes the JSON unmarshaling process for GioProfileRequest objects.
func (g *GioProfileRequest) UnmarshalJSON(input []byte) error {
    var temp tempGioProfileRequest
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    err = temp.validate()
    if err != nil {
    	return err
    }
    
    g.Devices = *temp.Devices
    g.AccountName = *temp.AccountName
    g.MdnZipCode = temp.MdnZipCode
    g.ServicePlan = temp.ServicePlan
    return nil
}

// tempGioProfileRequest is a temporary struct used for validating the fields of GioProfileRequest.
type tempGioProfileRequest  struct {
    Devices     *[]GioDeviceList `json:"devices"`
    AccountName *string          `json:"accountName"`
    MdnZipCode  *string          `json:"mdnZipCode,omitempty"`
    ServicePlan *string          `json:"servicePlan,omitempty"`
}

func (g *tempGioProfileRequest) validate() error {
    var errs []string
    if g.Devices == nil {
        errs = append(errs, "required field `devices` is missing for type `GIOProfileRequest`")
    }
    if g.AccountName == nil {
        errs = append(errs, "required field `accountName` is missing for type `GIOProfileRequest`")
    }
    if len(errs) == 0 {
        return nil
    }
    return errors.New(strings.Join (errs, "\n"))
}
