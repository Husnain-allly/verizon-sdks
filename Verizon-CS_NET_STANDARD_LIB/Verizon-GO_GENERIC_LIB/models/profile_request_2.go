/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// ProfileRequest2 represents a ProfileRequest2 struct.
type ProfileRequest2 struct {
    Devices              []DeviceList2 `json:"devices,omitempty"`
    AccountName          *string       `json:"accountName,omitempty"`
    CarrierName          *string       `json:"carrierName,omitempty"`
    ReasonCode           *string       `json:"reasonCode,omitempty"`
    EtfWaiver            *bool         `json:"etfWaiver,omitempty"`
    CheckFallbackProfile *bool         `json:"checkFallbackProfile,omitempty"`
}

// String implements the fmt.Stringer interface for ProfileRequest2,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (p ProfileRequest2) String() string {
    return fmt.Sprintf(
    	"ProfileRequest2[Devices=%v, AccountName=%v, CarrierName=%v, ReasonCode=%v, EtfWaiver=%v, CheckFallbackProfile=%v]",
    	p.Devices, p.AccountName, p.CarrierName, p.ReasonCode, p.EtfWaiver, p.CheckFallbackProfile)
}

// MarshalJSON implements the json.Marshaler interface for ProfileRequest2.
// It customizes the JSON marshaling process for ProfileRequest2 objects.
func (p ProfileRequest2) MarshalJSON() (
    []byte,
    error) {
    return json.Marshal(p.toMap())
}

// toMap converts the ProfileRequest2 object to a map representation for JSON marshaling.
func (p ProfileRequest2) toMap() map[string]any {
    structMap := make(map[string]any)
    if p.Devices != nil {
        structMap["devices"] = p.Devices
    }
    if p.AccountName != nil {
        structMap["accountName"] = p.AccountName
    }
    if p.CarrierName != nil {
        structMap["carrierName"] = p.CarrierName
    }
    if p.ReasonCode != nil {
        structMap["reasonCode"] = p.ReasonCode
    }
    if p.EtfWaiver != nil {
        structMap["etfWaiver"] = p.EtfWaiver
    }
    if p.CheckFallbackProfile != nil {
        structMap["checkFallbackProfile"] = p.CheckFallbackProfile
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for ProfileRequest2.
// It customizes the JSON unmarshaling process for ProfileRequest2 objects.
func (p *ProfileRequest2) UnmarshalJSON(input []byte) error {
    var temp tempProfileRequest2
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    
    p.Devices = temp.Devices
    p.AccountName = temp.AccountName
    p.CarrierName = temp.CarrierName
    p.ReasonCode = temp.ReasonCode
    p.EtfWaiver = temp.EtfWaiver
    p.CheckFallbackProfile = temp.CheckFallbackProfile
    return nil
}

// tempProfileRequest2 is a temporary struct used for validating the fields of ProfileRequest2.
type tempProfileRequest2  struct {
    Devices              []DeviceList2 `json:"devices,omitempty"`
    AccountName          *string       `json:"accountName,omitempty"`
    CarrierName          *string       `json:"carrierName,omitempty"`
    ReasonCode           *string       `json:"reasonCode,omitempty"`
    EtfWaiver            *bool         `json:"etfWaiver,omitempty"`
    CheckFallbackProfile *bool         `json:"checkFallbackProfile,omitempty"`
}
