/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "errors"
    "fmt"
    "strings"
)

// DeleteDevicesRequest represents a DeleteDevicesRequest struct.
// Request to delete a device request.
type DeleteDevicesRequest struct {
    // A list of up to 100 devices that you want to delete, specified by device identifier. You only need to provide one identifier per device.
    DevicesToDelete      []AccountDeviceList    `json:"devicesToDelete"`
    // The Verizon billing account that the device group belongs to. An account name is usually numeric, and must include any leading zeros.
    AccountName          *string                `json:"accountName,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for DeleteDevicesRequest,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (d DeleteDevicesRequest) String() string {
    return fmt.Sprintf(
    	"DeleteDevicesRequest[DevicesToDelete=%v, AccountName=%v, AdditionalProperties=%v]",
    	d.DevicesToDelete, d.AccountName, d.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for DeleteDevicesRequest.
// It customizes the JSON marshaling process for DeleteDevicesRequest objects.
func (d DeleteDevicesRequest) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(d.AdditionalProperties,
        "devicesToDelete", "accountName"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(d.toMap())
}

// toMap converts the DeleteDevicesRequest object to a map representation for JSON marshaling.
func (d DeleteDevicesRequest) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, d.AdditionalProperties)
    structMap["devicesToDelete"] = d.DevicesToDelete
    if d.AccountName != nil {
        structMap["accountName"] = d.AccountName
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for DeleteDevicesRequest.
// It customizes the JSON unmarshaling process for DeleteDevicesRequest objects.
func (d *DeleteDevicesRequest) UnmarshalJSON(input []byte) error {
    var temp tempDeleteDevicesRequest
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    err = temp.validate()
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "devicesToDelete", "accountName")
    if err != nil {
    	return err
    }
    d.AdditionalProperties = additionalProperties
    
    d.DevicesToDelete = *temp.DevicesToDelete
    d.AccountName = temp.AccountName
    return nil
}

// tempDeleteDevicesRequest is a temporary struct used for validating the fields of DeleteDevicesRequest.
type tempDeleteDevicesRequest  struct {
    DevicesToDelete *[]AccountDeviceList `json:"devicesToDelete"`
    AccountName     *string              `json:"accountName,omitempty"`
}

func (d *tempDeleteDevicesRequest) validate() error {
    var errs []string
    if d.DevicesToDelete == nil {
        errs = append(errs, "required field `devicesToDelete` is missing for type `DeleteDevicesRequest`")
    }
    if len(errs) == 0 {
        return nil
    }
    return errors.New(strings.Join (errs, "\n"))
}
