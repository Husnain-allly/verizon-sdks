/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "errors"
    "fmt"
    "strings"
)

// AdvisoryItem represents a AdvisoryItem struct.
type AdvisoryItem struct {
    Item                 Item                   `json:"item"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for AdvisoryItem,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (a AdvisoryItem) String() string {
    return fmt.Sprintf(
    	"AdvisoryItem[Item=%v, AdditionalProperties=%v]",
    	a.Item, a.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for AdvisoryItem.
// It customizes the JSON marshaling process for AdvisoryItem objects.
func (a AdvisoryItem) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(a.AdditionalProperties,
        "item"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(a.toMap())
}

// toMap converts the AdvisoryItem object to a map representation for JSON marshaling.
func (a AdvisoryItem) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, a.AdditionalProperties)
    structMap["item"] = a.Item.toMap()
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for AdvisoryItem.
// It customizes the JSON unmarshaling process for AdvisoryItem objects.
func (a *AdvisoryItem) UnmarshalJSON(input []byte) error {
    var temp tempAdvisoryItem
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    err = temp.validate()
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "item")
    if err != nil {
    	return err
    }
    a.AdditionalProperties = additionalProperties
    
    a.Item = *temp.Item
    return nil
}

// tempAdvisoryItem is a temporary struct used for validating the fields of AdvisoryItem.
type tempAdvisoryItem  struct {
    Item *Item `json:"item"`
}

func (a *tempAdvisoryItem) validate() error {
    var errs []string
    if a.Item == nil {
        errs = append(errs, "required field `item` is missing for type `AdvisoryItem`")
    }
    if len(errs) == 0 {
        return nil
    }
    return errors.New(strings.Join (errs, "\n"))
}
