/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "errors"
    "fmt"
    "strings"
)

// ActivateDeviceProfileRequest represents a ActivateDeviceProfileRequest struct.
type ActivateDeviceProfileRequest struct {
    Devices     []DeviceList `json:"devices"`
    AccountName string       `json:"accountName"`
    ServicePlan *string      `json:"servicePlan,omitempty"`
    MdnZipCode  *string      `json:"mdnZipCode,omitempty"`
}

// String implements the fmt.Stringer interface for ActivateDeviceProfileRequest,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (a ActivateDeviceProfileRequest) String() string {
    return fmt.Sprintf(
    	"ActivateDeviceProfileRequest[Devices=%v, AccountName=%v, ServicePlan=%v, MdnZipCode=%v]",
    	a.Devices, a.AccountName, a.ServicePlan, a.MdnZipCode)
}

// MarshalJSON implements the json.Marshaler interface for ActivateDeviceProfileRequest.
// It customizes the JSON marshaling process for ActivateDeviceProfileRequest objects.
func (a ActivateDeviceProfileRequest) MarshalJSON() (
    []byte,
    error) {
    return json.Marshal(a.toMap())
}

// toMap converts the ActivateDeviceProfileRequest object to a map representation for JSON marshaling.
func (a ActivateDeviceProfileRequest) toMap() map[string]any {
    structMap := make(map[string]any)
    structMap["devices"] = a.Devices
    structMap["accountName"] = a.AccountName
    if a.ServicePlan != nil {
        structMap["servicePlan"] = a.ServicePlan
    }
    if a.MdnZipCode != nil {
        structMap["mdnZipCode"] = a.MdnZipCode
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for ActivateDeviceProfileRequest.
// It customizes the JSON unmarshaling process for ActivateDeviceProfileRequest objects.
func (a *ActivateDeviceProfileRequest) UnmarshalJSON(input []byte) error {
    var temp tempActivateDeviceProfileRequest
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    err = temp.validate()
    if err != nil {
    	return err
    }
    
    a.Devices = *temp.Devices
    a.AccountName = *temp.AccountName
    a.ServicePlan = temp.ServicePlan
    a.MdnZipCode = temp.MdnZipCode
    return nil
}

// tempActivateDeviceProfileRequest is a temporary struct used for validating the fields of ActivateDeviceProfileRequest.
type tempActivateDeviceProfileRequest  struct {
    Devices     *[]DeviceList `json:"devices"`
    AccountName *string       `json:"accountName"`
    ServicePlan *string       `json:"servicePlan,omitempty"`
    MdnZipCode  *string       `json:"mdnZipCode,omitempty"`
}

func (a *tempActivateDeviceProfileRequest) validate() error {
    var errs []string
    if a.Devices == nil {
        errs = append(errs, "required field `devices` is missing for type `ActivateDeviceProfileRequest`")
    }
    if a.AccountName == nil {
        errs = append(errs, "required field `accountName` is missing for type `ActivateDeviceProfileRequest`")
    }
    if len(errs) == 0 {
        return nil
    }
    return errors.New(strings.Join (errs, "\n"))
}
