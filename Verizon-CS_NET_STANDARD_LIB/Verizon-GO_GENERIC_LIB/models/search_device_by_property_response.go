/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// SearchDeviceByPropertyResponse represents a SearchDeviceByPropertyResponse struct.
// The device identifier and fields to match in the search.
type SearchDeviceByPropertyResponse struct {
    // Billing account ID of the resource.
    Billingaccountid     *string                `json:"billingaccountid,omitempty"`
    // The date the resource was created.
    Createdon            *string                `json:"createdon,omitempty"`
    Eventretention       *string                `json:"eventretention,omitempty"`
    Fields               *Fields1               `json:"fields,omitempty"`
    // Cellular SIM card identifier.
    Iccid                *string                `json:"iccid,omitempty"`
    // ThingSpace unique ID for the device that was added.
    Id                   *string                `json:"id,omitempty"`
    // 4G hardware device identifier.
    Imei                 *string                `json:"imei,omitempty"`
    // Identifies the resource kind.
    Kind                 *string                `json:"kind,omitempty"`
    // The date the resource was last updated.
    Lastupdated          *string                `json:"lastupdated,omitempty"`
    // The deviceâ€™s service provider.
    Providerid           *string                `json:"providerid,omitempty"`
    // The value of the refidtype identifier.
    Refid                *string                `json:"refid,omitempty"`
    // The device identifier type used to refer to this device.
    Refidtype            *string                `json:"refidtype,omitempty"`
    // Service state of the device.
    State                *string                `json:"state,omitempty"`
    // Version of the underlying schema resource.
    Version              *string                `json:"version,omitempty"`
    // The version of the resource.
    Versionid            *string                `json:"versionid,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for SearchDeviceByPropertyResponse,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (s SearchDeviceByPropertyResponse) String() string {
    return fmt.Sprintf(
    	"SearchDeviceByPropertyResponse[Billingaccountid=%v, Createdon=%v, Eventretention=%v, Fields=%v, Iccid=%v, Id=%v, Imei=%v, Kind=%v, Lastupdated=%v, Providerid=%v, Refid=%v, Refidtype=%v, State=%v, Version=%v, Versionid=%v, AdditionalProperties=%v]",
    	s.Billingaccountid, s.Createdon, s.Eventretention, s.Fields, s.Iccid, s.Id, s.Imei, s.Kind, s.Lastupdated, s.Providerid, s.Refid, s.Refidtype, s.State, s.Version, s.Versionid, s.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for SearchDeviceByPropertyResponse.
// It customizes the JSON marshaling process for SearchDeviceByPropertyResponse objects.
func (s SearchDeviceByPropertyResponse) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(s.AdditionalProperties,
        "billingaccountid", "createdon", "eventretention", "fields", "iccid", "id", "imei", "kind", "lastupdated", "providerid", "refid", "refidtype", "state", "version", "versionid"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(s.toMap())
}

// toMap converts the SearchDeviceByPropertyResponse object to a map representation for JSON marshaling.
func (s SearchDeviceByPropertyResponse) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, s.AdditionalProperties)
    if s.Billingaccountid != nil {
        structMap["billingaccountid"] = s.Billingaccountid
    }
    if s.Createdon != nil {
        structMap["createdon"] = s.Createdon
    }
    if s.Eventretention != nil {
        structMap["eventretention"] = s.Eventretention
    }
    if s.Fields != nil {
        structMap["fields"] = s.Fields.toMap()
    }
    if s.Iccid != nil {
        structMap["iccid"] = s.Iccid
    }
    if s.Id != nil {
        structMap["id"] = s.Id
    }
    if s.Imei != nil {
        structMap["imei"] = s.Imei
    }
    if s.Kind != nil {
        structMap["kind"] = s.Kind
    }
    if s.Lastupdated != nil {
        structMap["lastupdated"] = s.Lastupdated
    }
    if s.Providerid != nil {
        structMap["providerid"] = s.Providerid
    }
    if s.Refid != nil {
        structMap["refid"] = s.Refid
    }
    if s.Refidtype != nil {
        structMap["refidtype"] = s.Refidtype
    }
    if s.State != nil {
        structMap["state"] = s.State
    }
    if s.Version != nil {
        structMap["version"] = s.Version
    }
    if s.Versionid != nil {
        structMap["versionid"] = s.Versionid
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for SearchDeviceByPropertyResponse.
// It customizes the JSON unmarshaling process for SearchDeviceByPropertyResponse objects.
func (s *SearchDeviceByPropertyResponse) UnmarshalJSON(input []byte) error {
    var temp tempSearchDeviceByPropertyResponse
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "billingaccountid", "createdon", "eventretention", "fields", "iccid", "id", "imei", "kind", "lastupdated", "providerid", "refid", "refidtype", "state", "version", "versionid")
    if err != nil {
    	return err
    }
    s.AdditionalProperties = additionalProperties
    
    s.Billingaccountid = temp.Billingaccountid
    s.Createdon = temp.Createdon
    s.Eventretention = temp.Eventretention
    s.Fields = temp.Fields
    s.Iccid = temp.Iccid
    s.Id = temp.Id
    s.Imei = temp.Imei
    s.Kind = temp.Kind
    s.Lastupdated = temp.Lastupdated
    s.Providerid = temp.Providerid
    s.Refid = temp.Refid
    s.Refidtype = temp.Refidtype
    s.State = temp.State
    s.Version = temp.Version
    s.Versionid = temp.Versionid
    return nil
}

// tempSearchDeviceByPropertyResponse is a temporary struct used for validating the fields of SearchDeviceByPropertyResponse.
type tempSearchDeviceByPropertyResponse  struct {
    Billingaccountid *string  `json:"billingaccountid,omitempty"`
    Createdon        *string  `json:"createdon,omitempty"`
    Eventretention   *string  `json:"eventretention,omitempty"`
    Fields           *Fields1 `json:"fields,omitempty"`
    Iccid            *string  `json:"iccid,omitempty"`
    Id               *string  `json:"id,omitempty"`
    Imei             *string  `json:"imei,omitempty"`
    Kind             *string  `json:"kind,omitempty"`
    Lastupdated      *string  `json:"lastupdated,omitempty"`
    Providerid       *string  `json:"providerid,omitempty"`
    Refid            *string  `json:"refid,omitempty"`
    Refidtype        *string  `json:"refidtype,omitempty"`
    State            *string  `json:"state,omitempty"`
    Version          *string  `json:"version,omitempty"`
    Versionid        *string  `json:"versionid,omitempty"`
}
