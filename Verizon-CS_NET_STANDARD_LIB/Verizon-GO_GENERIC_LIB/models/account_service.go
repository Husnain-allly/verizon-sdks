/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// AccountService represents a AccountService struct.
// Service associated with the account.
type AccountService struct {
    // The name of the service plan.
    Name                 *string                `json:"name,omitempty"`
    // The description of the service plan.
    Description          *string                `json:"description,omitempty"`
    // The state of the service plan.
    States               []State                `json:"states,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for AccountService,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (a AccountService) String() string {
    return fmt.Sprintf(
    	"AccountService[Name=%v, Description=%v, States=%v, AdditionalProperties=%v]",
    	a.Name, a.Description, a.States, a.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for AccountService.
// It customizes the JSON marshaling process for AccountService objects.
func (a AccountService) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(a.AdditionalProperties,
        "name", "description", "states"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(a.toMap())
}

// toMap converts the AccountService object to a map representation for JSON marshaling.
func (a AccountService) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, a.AdditionalProperties)
    if a.Name != nil {
        structMap["name"] = a.Name
    }
    if a.Description != nil {
        structMap["description"] = a.Description
    }
    if a.States != nil {
        structMap["states"] = a.States
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for AccountService.
// It customizes the JSON unmarshaling process for AccountService objects.
func (a *AccountService) UnmarshalJSON(input []byte) error {
    var temp tempAccountService
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "name", "description", "states")
    if err != nil {
    	return err
    }
    a.AdditionalProperties = additionalProperties
    
    a.Name = temp.Name
    a.Description = temp.Description
    a.States = temp.States
    return nil
}

// tempAccountService is a temporary struct used for validating the fields of AccountService.
type tempAccountService  struct {
    Name        *string `json:"name,omitempty"`
    Description *string `json:"description,omitempty"`
    States      []State `json:"states,omitempty"`
}
