/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "errors"
    "fmt"
)

// TextPhraseOrItis2 represents a TextPhraseOrItis2 struct.
// A data frame to allow sequences of ITIS codes, short text strings, and numerical values to be expressed in the normal ITIS vocabulary method and pattern. Note that the allowed text strings are more limited than the normal ITIS format in order to conserve bandwidth.
type TextPhraseOrItis2 struct {
    value               any
    isTextPhraseOrItis  bool
    isTextPhraseOrItis1 bool
}

// String implements the fmt.Stringer interface for TextPhraseOrItis2,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (t TextPhraseOrItis2) String() string {
    return fmt.Sprintf("%v", t.value)
}

// MarshalJSON implements the json.Marshaler interface for TextPhraseOrItis2.
// It customizes the JSON marshaling process for TextPhraseOrItis2 objects.
func (t TextPhraseOrItis2) MarshalJSON() (
    []byte,
    error) {
    if t.value == nil {
        return nil, errors.New("No underlying type is set. Please use any of the `models.TextPhraseOrItis2Container.From*` functions to initialize the TextPhraseOrItis2 object.")
    }
    return json.Marshal(t.toMap())
}

// toMap converts the TextPhraseOrItis2 object to a map representation for JSON marshaling.
func (t *TextPhraseOrItis2) toMap() any {
    switch obj := t.value.(type) {
    case *TextPhraseOrItis:
        return obj.toMap()
    case *TextPhraseOrItis1:
        return obj.toMap()
    }
    return nil
}

// UnmarshalJSON implements the json.Unmarshaler interface for TextPhraseOrItis2.
// It customizes the JSON unmarshaling process for TextPhraseOrItis2 objects.
func (t *TextPhraseOrItis2) UnmarshalJSON(input []byte) error {
    result, err := UnmarshallOneOf(input,
        NewTypeHolder(&TextPhraseOrItis{}, false, &t.isTextPhraseOrItis),
        NewTypeHolder(&TextPhraseOrItis1{}, false, &t.isTextPhraseOrItis1),
    )
    
    t.value = result
    return err
}

func (t *TextPhraseOrItis2) AsTextPhraseOrItis() (
    *TextPhraseOrItis,
    bool) {
    if !t.isTextPhraseOrItis {
        return nil, false
    }
    return t.value.(*TextPhraseOrItis), true
}

func (t *TextPhraseOrItis2) AsTextPhraseOrItis1() (
    *TextPhraseOrItis1,
    bool) {
    if !t.isTextPhraseOrItis1 {
        return nil, false
    }
    return t.value.(*TextPhraseOrItis1), true
}

// internalTextPhraseOrItis2 represents a textPhraseOrItis2 struct.
// A data frame to allow sequences of ITIS codes, short text strings, and numerical values to be expressed in the normal ITIS vocabulary method and pattern. Note that the allowed text strings are more limited than the normal ITIS format in order to conserve bandwidth.
type internalTextPhraseOrItis2 struct {}

var TextPhraseOrItis2Container internalTextPhraseOrItis2

// The internalTextPhraseOrItis2 instance, wrapping the provided TextPhraseOrItis value.
func (t *internalTextPhraseOrItis2) FromTextPhraseOrItis(val TextPhraseOrItis) TextPhraseOrItis2 {
    return TextPhraseOrItis2{value: &val}
}

// The internalTextPhraseOrItis2 instance, wrapping the provided TextPhraseOrItis1 value.
func (t *internalTextPhraseOrItis2) FromTextPhraseOrItis1(val TextPhraseOrItis1) TextPhraseOrItis2 {
    return TextPhraseOrItis2{value: &val}
}
