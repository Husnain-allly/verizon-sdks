/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// DevicesConsentResult represents a DevicesConsentResult struct.
type DevicesConsentResult struct {
    // Account identifier in "##########-#####".
    AccountName          *string                `json:"accountName,omitempty"`
    // Exclude all devices or not?
    AllDevice            *bool                  `json:"allDevice,omitempty"`
    // Are there more devices to retrieve or not?
    HasMoreData          *bool                  `json:"hasMoreData,omitempty"`
    // Total number of excluded devices in the account.
    TotalCount           *int                   `json:"totalCount,omitempty"`
    // Last update time.
    UpdateTime           *string                `json:"updateTime,omitempty"`
    // Device ID list.
    Exclusion            []string               `json:"exclusion,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for DevicesConsentResult,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (d DevicesConsentResult) String() string {
    return fmt.Sprintf(
    	"DevicesConsentResult[AccountName=%v, AllDevice=%v, HasMoreData=%v, TotalCount=%v, UpdateTime=%v, Exclusion=%v, AdditionalProperties=%v]",
    	d.AccountName, d.AllDevice, d.HasMoreData, d.TotalCount, d.UpdateTime, d.Exclusion, d.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for DevicesConsentResult.
// It customizes the JSON marshaling process for DevicesConsentResult objects.
func (d DevicesConsentResult) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(d.AdditionalProperties,
        "accountName", "allDevice", "hasMoreData", "totalCount", "updateTime", "exclusion"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(d.toMap())
}

// toMap converts the DevicesConsentResult object to a map representation for JSON marshaling.
func (d DevicesConsentResult) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, d.AdditionalProperties)
    if d.AccountName != nil {
        structMap["accountName"] = d.AccountName
    }
    if d.AllDevice != nil {
        structMap["allDevice"] = d.AllDevice
    }
    if d.HasMoreData != nil {
        structMap["hasMoreData"] = d.HasMoreData
    }
    if d.TotalCount != nil {
        structMap["totalCount"] = d.TotalCount
    }
    if d.UpdateTime != nil {
        structMap["updateTime"] = d.UpdateTime
    }
    if d.Exclusion != nil {
        structMap["exclusion"] = d.Exclusion
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for DevicesConsentResult.
// It customizes the JSON unmarshaling process for DevicesConsentResult objects.
func (d *DevicesConsentResult) UnmarshalJSON(input []byte) error {
    var temp tempDevicesConsentResult
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "accountName", "allDevice", "hasMoreData", "totalCount", "updateTime", "exclusion")
    if err != nil {
    	return err
    }
    d.AdditionalProperties = additionalProperties
    
    d.AccountName = temp.AccountName
    d.AllDevice = temp.AllDevice
    d.HasMoreData = temp.HasMoreData
    d.TotalCount = temp.TotalCount
    d.UpdateTime = temp.UpdateTime
    d.Exclusion = temp.Exclusion
    return nil
}

// tempDevicesConsentResult is a temporary struct used for validating the fields of DevicesConsentResult.
type tempDevicesConsentResult  struct {
    AccountName *string  `json:"accountName,omitempty"`
    AllDevice   *bool    `json:"allDevice,omitempty"`
    HasMoreData *bool    `json:"hasMoreData,omitempty"`
    TotalCount  *int     `json:"totalCount,omitempty"`
    UpdateTime  *string  `json:"updateTime,omitempty"`
    Exclusion   []string `json:"exclusion,omitempty"`
}
