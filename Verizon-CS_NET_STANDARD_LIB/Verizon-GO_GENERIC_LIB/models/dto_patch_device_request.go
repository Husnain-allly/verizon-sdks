/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// DtoPatchDeviceRequest represents a DtoPatchDeviceRequest struct.
type DtoPatchDeviceRequest struct {
    // The numeric account name, which must include leading zeros
    Accountname        *string                      `json:"accountname,omitempty"`
    Device             *ResourceDevice              `json:"device,omitempty"`
    // Device identifiers, one or more are required
    Resourceidentifier *DtoDeviceResourceIdentifier `json:"resourceidentifier,omitempty"`
}

// String implements the fmt.Stringer interface for DtoPatchDeviceRequest,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (d DtoPatchDeviceRequest) String() string {
    return fmt.Sprintf(
    	"DtoPatchDeviceRequest[Accountname=%v, Device=%v, Resourceidentifier=%v]",
    	d.Accountname, d.Device, d.Resourceidentifier)
}

// MarshalJSON implements the json.Marshaler interface for DtoPatchDeviceRequest.
// It customizes the JSON marshaling process for DtoPatchDeviceRequest objects.
func (d DtoPatchDeviceRequest) MarshalJSON() (
    []byte,
    error) {
    return json.Marshal(d.toMap())
}

// toMap converts the DtoPatchDeviceRequest object to a map representation for JSON marshaling.
func (d DtoPatchDeviceRequest) toMap() map[string]any {
    structMap := make(map[string]any)
    if d.Accountname != nil {
        structMap["accountname"] = d.Accountname
    }
    if d.Device != nil {
        structMap["device"] = d.Device.toMap()
    }
    if d.Resourceidentifier != nil {
        structMap["resourceidentifier"] = d.Resourceidentifier.toMap()
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for DtoPatchDeviceRequest.
// It customizes the JSON unmarshaling process for DtoPatchDeviceRequest objects.
func (d *DtoPatchDeviceRequest) UnmarshalJSON(input []byte) error {
    var temp tempDtoPatchDeviceRequest
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    
    d.Accountname = temp.Accountname
    d.Device = temp.Device
    d.Resourceidentifier = temp.Resourceidentifier
    return nil
}

// tempDtoPatchDeviceRequest is a temporary struct used for validating the fields of DtoPatchDeviceRequest.
type tempDtoPatchDeviceRequest  struct {
    Accountname        *string                      `json:"accountname,omitempty"`
    Device             *ResourceDevice              `json:"device,omitempty"`
    Resourceidentifier *DtoDeviceResourceIdentifier `json:"resourceidentifier,omitempty"`
}
