/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "errors"
    "fmt"
)

// M5GBiactivateRequestDeviceListWithServiceAddress represents a M5GBiactivateRequestDeviceListWithServiceAddress struct.
// This is Array of a container for any-of cases.
type M5GBiactivateRequestDeviceListWithServiceAddress struct {
    value                         any
    isM5GBideviceIdarray          bool
    isM5GBiaddressAndcustomerinfo bool
}

// String implements the fmt.Stringer interface for M5GBiactivateRequestDeviceListWithServiceAddress,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (m M5GBiactivateRequestDeviceListWithServiceAddress) String() string {
    return fmt.Sprintf("%v", m.value)
}

// MarshalJSON implements the json.Marshaler interface for M5GBiactivateRequestDeviceListWithServiceAddress.
// It customizes the JSON marshaling process for M5GBiactivateRequestDeviceListWithServiceAddress objects.
func (m M5GBiactivateRequestDeviceListWithServiceAddress) MarshalJSON() (
    []byte,
    error) {
    if m.value == nil {
        return nil, errors.New("No underlying type is set. Please use any of the `models.M5GBiactivateRequestDeviceListWithServiceAddressContainer.From*` functions to initialize the M5GBiactivateRequestDeviceListWithServiceAddress object.")
    }
    return json.Marshal(m.toMap())
}

// toMap converts the M5GBiactivateRequestDeviceListWithServiceAddress object to a map representation for JSON marshaling.
func (m *M5GBiactivateRequestDeviceListWithServiceAddress) toMap() any {
    switch obj := m.value.(type) {
    case *M5GBideviceIdarray:
        return obj.toMap()
    case *M5GBiaddressAndcustomerinfo:
        return obj.toMap()
    }
    return nil
}

// UnmarshalJSON implements the json.Unmarshaler interface for M5GBiactivateRequestDeviceListWithServiceAddress.
// It customizes the JSON unmarshaling process for M5GBiactivateRequestDeviceListWithServiceAddress objects.
func (m *M5GBiactivateRequestDeviceListWithServiceAddress) UnmarshalJSON(input []byte) error {
    result, err := UnmarshallAnyOf(input,
        NewTypeHolder(&M5GBideviceIdarray{}, false, &m.isM5GBideviceIdarray),
        NewTypeHolder(&M5GBiaddressAndcustomerinfo{}, false, &m.isM5GBiaddressAndcustomerinfo),
    )
    
    m.value = result
    return err
}

func (m *M5GBiactivateRequestDeviceListWithServiceAddress) AsM5GBideviceIdarray() (
    *M5GBideviceIdarray,
    bool) {
    if !m.isM5GBideviceIdarray {
        return nil, false
    }
    return m.value.(*M5GBideviceIdarray), true
}

func (m *M5GBiactivateRequestDeviceListWithServiceAddress) AsM5GBiaddressAndcustomerinfo() (
    *M5GBiaddressAndcustomerinfo,
    bool) {
    if !m.isM5GBiaddressAndcustomerinfo {
        return nil, false
    }
    return m.value.(*M5GBiaddressAndcustomerinfo), true
}

// internalM5GBiactivateRequestDeviceListWithServiceAddress represents a m5GBiactivateRequestDeviceListWithServiceAddress struct.
// This is Array of a container for any-of cases.
type internalM5GBiactivateRequestDeviceListWithServiceAddress struct {}

var M5GBiactivateRequestDeviceListWithServiceAddressContainer internalM5GBiactivateRequestDeviceListWithServiceAddress

// The internalM5GBiactivateRequestDeviceListWithServiceAddress instance, wrapping the provided M5GBideviceIdarray value.
func (m *internalM5GBiactivateRequestDeviceListWithServiceAddress) FromM5GBideviceIdarray(val M5GBideviceIdarray) M5GBiactivateRequestDeviceListWithServiceAddress {
    return M5GBiactivateRequestDeviceListWithServiceAddress{value: &val}
}

// The internalM5GBiactivateRequestDeviceListWithServiceAddress instance, wrapping the provided M5GBiaddressAndcustomerinfo value.
func (m *internalM5GBiactivateRequestDeviceListWithServiceAddress) FromM5GBiaddressAndcustomerinfo(val M5GBiaddressAndcustomerinfo) M5GBiactivateRequestDeviceListWithServiceAddress {
    return M5GBiactivateRequestDeviceListWithServiceAddress{value: &val}
}
