/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// M5GBiprimaryPlaceofuse represents a M5GBiprimaryPlaceofuse struct.
type M5GBiprimaryPlaceofuse struct {
    Address              *M5GBiAddress          `json:"address,omitempty"`
    CustomerName         *M5GBiCustomerName     `json:"customerName,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for M5GBiprimaryPlaceofuse,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (m M5GBiprimaryPlaceofuse) String() string {
    return fmt.Sprintf(
    	"M5GBiprimaryPlaceofuse[Address=%v, CustomerName=%v, AdditionalProperties=%v]",
    	m.Address, m.CustomerName, m.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for M5GBiprimaryPlaceofuse.
// It customizes the JSON marshaling process for M5GBiprimaryPlaceofuse objects.
func (m M5GBiprimaryPlaceofuse) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(m.AdditionalProperties,
        "address", "customerName"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(m.toMap())
}

// toMap converts the M5GBiprimaryPlaceofuse object to a map representation for JSON marshaling.
func (m M5GBiprimaryPlaceofuse) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, m.AdditionalProperties)
    if m.Address != nil {
        structMap["address"] = m.Address.toMap()
    }
    if m.CustomerName != nil {
        structMap["customerName"] = m.CustomerName.toMap()
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for M5GBiprimaryPlaceofuse.
// It customizes the JSON unmarshaling process for M5GBiprimaryPlaceofuse objects.
func (m *M5GBiprimaryPlaceofuse) UnmarshalJSON(input []byte) error {
    var temp tempM5GBiprimaryPlaceofuse
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "address", "customerName")
    if err != nil {
    	return err
    }
    m.AdditionalProperties = additionalProperties
    
    m.Address = temp.Address
    m.CustomerName = temp.CustomerName
    return nil
}

// tempM5GBiprimaryPlaceofuse is a temporary struct used for validating the fields of M5GBiprimaryPlaceofuse.
type tempM5GBiprimaryPlaceofuse  struct {
    Address      *M5GBiAddress      `json:"address,omitempty"`
    CustomerName *M5GBiCustomerName `json:"customerName,omitempty"`
}
