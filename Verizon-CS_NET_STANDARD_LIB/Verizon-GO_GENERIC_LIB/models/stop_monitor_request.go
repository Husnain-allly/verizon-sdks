/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "errors"
    "fmt"
    "strings"
)

// StopMonitorRequest represents a StopMonitorRequest struct.
type StopMonitorRequest struct {
    AccountName          string                 `json:"accountName"`
    MonitorIds           []string               `json:"monitorIds"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for StopMonitorRequest,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (s StopMonitorRequest) String() string {
    return fmt.Sprintf(
    	"StopMonitorRequest[AccountName=%v, MonitorIds=%v, AdditionalProperties=%v]",
    	s.AccountName, s.MonitorIds, s.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for StopMonitorRequest.
// It customizes the JSON marshaling process for StopMonitorRequest objects.
func (s StopMonitorRequest) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(s.AdditionalProperties,
        "accountName", "monitorIds"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(s.toMap())
}

// toMap converts the StopMonitorRequest object to a map representation for JSON marshaling.
func (s StopMonitorRequest) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, s.AdditionalProperties)
    structMap["accountName"] = s.AccountName
    structMap["monitorIds"] = s.MonitorIds
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for StopMonitorRequest.
// It customizes the JSON unmarshaling process for StopMonitorRequest objects.
func (s *StopMonitorRequest) UnmarshalJSON(input []byte) error {
    var temp tempStopMonitorRequest
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    err = temp.validate()
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "accountName", "monitorIds")
    if err != nil {
    	return err
    }
    s.AdditionalProperties = additionalProperties
    
    s.AccountName = *temp.AccountName
    s.MonitorIds = *temp.MonitorIds
    return nil
}

// tempStopMonitorRequest is a temporary struct used for validating the fields of StopMonitorRequest.
type tempStopMonitorRequest  struct {
    AccountName *string   `json:"accountName"`
    MonitorIds  *[]string `json:"monitorIds"`
}

func (s *tempStopMonitorRequest) validate() error {
    var errs []string
    if s.AccountName == nil {
        errs = append(errs, "required field `accountName` is missing for type `StopMonitorRequest`")
    }
    if s.MonitorIds == nil {
        errs = append(errs, "required field `monitorIds` is missing for type `StopMonitorRequest`")
    }
    if len(errs) == 0 {
        return nil
    }
    return errors.New(strings.Join (errs, "\n"))
}
