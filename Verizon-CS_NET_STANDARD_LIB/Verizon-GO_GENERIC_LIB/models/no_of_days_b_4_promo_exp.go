/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// NoOfDaysB4PromoExp represents a NoOfDaysB4PromoExp struct.
type NoOfDaysB4PromoExp struct {
    Key                  *string                `json:"key,omitempty"`
    Value                *int                   `json:"value,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for NoOfDaysB4PromoExp,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (n NoOfDaysB4PromoExp) String() string {
    return fmt.Sprintf(
    	"NoOfDaysB4PromoExp[Key=%v, Value=%v, AdditionalProperties=%v]",
    	n.Key, n.Value, n.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for NoOfDaysB4PromoExp.
// It customizes the JSON marshaling process for NoOfDaysB4PromoExp objects.
func (n NoOfDaysB4PromoExp) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(n.AdditionalProperties,
        "key", "value"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(n.toMap())
}

// toMap converts the NoOfDaysB4PromoExp object to a map representation for JSON marshaling.
func (n NoOfDaysB4PromoExp) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, n.AdditionalProperties)
    if n.Key != nil {
        structMap["key"] = n.Key
    }
    if n.Value != nil {
        structMap["value"] = n.Value
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for NoOfDaysB4PromoExp.
// It customizes the JSON unmarshaling process for NoOfDaysB4PromoExp objects.
func (n *NoOfDaysB4PromoExp) UnmarshalJSON(input []byte) error {
    var temp tempNoOfDaysB4PromoExp
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "key", "value")
    if err != nil {
    	return err
    }
    n.AdditionalProperties = additionalProperties
    
    n.Key = temp.Key
    n.Value = temp.Value
    return nil
}

// tempNoOfDaysB4PromoExp is a temporary struct used for validating the fields of NoOfDaysB4PromoExp.
type tempNoOfDaysB4PromoExp  struct {
    Key   *string `json:"key,omitempty"`
    Value *int    `json:"value,omitempty"`
}
