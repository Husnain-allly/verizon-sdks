/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// DtoOffBoardSensor represents a DtoOffBoardSensor struct.
// The EUI64 address of the device being removed
type DtoOffBoardSensor struct {
    // the IEEE EUI64 address space used to identify a device. It is supplied by the device manufacturer
    Deveui *string `json:"deveui,omitempty"`
}

// String implements the fmt.Stringer interface for DtoOffBoardSensor,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (d DtoOffBoardSensor) String() string {
    return fmt.Sprintf(
    	"DtoOffBoardSensor[Deveui=%v]",
    	d.Deveui)
}

// MarshalJSON implements the json.Marshaler interface for DtoOffBoardSensor.
// It customizes the JSON marshaling process for DtoOffBoardSensor objects.
func (d DtoOffBoardSensor) MarshalJSON() (
    []byte,
    error) {
    return json.Marshal(d.toMap())
}

// toMap converts the DtoOffBoardSensor object to a map representation for JSON marshaling.
func (d DtoOffBoardSensor) toMap() map[string]any {
    structMap := make(map[string]any)
    if d.Deveui != nil {
        structMap["deveui"] = d.Deveui
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for DtoOffBoardSensor.
// It customizes the JSON unmarshaling process for DtoOffBoardSensor objects.
func (d *DtoOffBoardSensor) UnmarshalJSON(input []byte) error {
    var temp tempDtoOffBoardSensor
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    
    d.Deveui = temp.Deveui
    return nil
}

// tempDtoOffBoardSensor is a temporary struct used for validating the fields of DtoOffBoardSensor.
type tempDtoOffBoardSensor  struct {
    Deveui *string `json:"deveui,omitempty"`
}
