/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// GetPwnPerformanceConsentResponse represents a GetPwnPerformanceConsentResponse struct.
// PWN Performance Consent Response
type GetPwnPerformanceConsentResponse struct {
    // PWN Performance Consent Response.
    Consent              *string                `json:"consent,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for GetPwnPerformanceConsentResponse,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (g GetPwnPerformanceConsentResponse) String() string {
    return fmt.Sprintf(
    	"GetPwnPerformanceConsentResponse[Consent=%v, AdditionalProperties=%v]",
    	g.Consent, g.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for GetPwnPerformanceConsentResponse.
// It customizes the JSON marshaling process for GetPwnPerformanceConsentResponse objects.
func (g GetPwnPerformanceConsentResponse) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(g.AdditionalProperties,
        "consent"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(g.toMap())
}

// toMap converts the GetPwnPerformanceConsentResponse object to a map representation for JSON marshaling.
func (g GetPwnPerformanceConsentResponse) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, g.AdditionalProperties)
    if g.Consent != nil {
        structMap["consent"] = g.Consent
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for GetPwnPerformanceConsentResponse.
// It customizes the JSON unmarshaling process for GetPwnPerformanceConsentResponse objects.
func (g *GetPwnPerformanceConsentResponse) UnmarshalJSON(input []byte) error {
    var temp tempGetPwnPerformanceConsentResponse
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "consent")
    if err != nil {
    	return err
    }
    g.AdditionalProperties = additionalProperties
    
    g.Consent = temp.Consent
    return nil
}

// tempGetPwnPerformanceConsentResponse is a temporary struct used for validating the fields of GetPwnPerformanceConsentResponse.
type tempGetPwnPerformanceConsentResponse  struct {
    Consent *string `json:"consent,omitempty"`
}
