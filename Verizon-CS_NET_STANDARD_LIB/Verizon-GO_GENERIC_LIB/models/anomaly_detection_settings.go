/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// AnomalyDetectionSettings represents a AnomalyDetectionSettings struct.
// Settings for anomaly detection.
type AnomalyDetectionSettings struct {
    // Indicates if the account name used has anomaly detection.<br />Success - The account has anomaly detection.<br />Failure - The account does not have anomaly detection.
    AccountName          *string                `json:"accountName,omitempty"`
    // Details for sensitivity parameters.
    SensitivityParameter *SensitivityParameters `json:"sensitivityParameter,omitempty"`
    // Indicates if anomaly detection is active on the account<br />Active - Anomaly detection is active<br />Disabled- Anomaly detection is not active.
    Status               *string                `json:"status,omitempty"`
}

// String implements the fmt.Stringer interface for AnomalyDetectionSettings,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (a AnomalyDetectionSettings) String() string {
    return fmt.Sprintf(
    	"AnomalyDetectionSettings[AccountName=%v, SensitivityParameter=%v, Status=%v]",
    	a.AccountName, a.SensitivityParameter, a.Status)
}

// MarshalJSON implements the json.Marshaler interface for AnomalyDetectionSettings.
// It customizes the JSON marshaling process for AnomalyDetectionSettings objects.
func (a AnomalyDetectionSettings) MarshalJSON() (
    []byte,
    error) {
    return json.Marshal(a.toMap())
}

// toMap converts the AnomalyDetectionSettings object to a map representation for JSON marshaling.
func (a AnomalyDetectionSettings) toMap() map[string]any {
    structMap := make(map[string]any)
    if a.AccountName != nil {
        structMap["accountName"] = a.AccountName
    }
    if a.SensitivityParameter != nil {
        structMap["sensitivityParameter"] = a.SensitivityParameter.toMap()
    }
    if a.Status != nil {
        structMap["status"] = a.Status
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for AnomalyDetectionSettings.
// It customizes the JSON unmarshaling process for AnomalyDetectionSettings objects.
func (a *AnomalyDetectionSettings) UnmarshalJSON(input []byte) error {
    var temp tempAnomalyDetectionSettings
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    
    a.AccountName = temp.AccountName
    a.SensitivityParameter = temp.SensitivityParameter
    a.Status = temp.Status
    return nil
}

// tempAnomalyDetectionSettings is a temporary struct used for validating the fields of AnomalyDetectionSettings.
type tempAnomalyDetectionSettings  struct {
    AccountName          *string                `json:"accountName,omitempty"`
    SensitivityParameter *SensitivityParameters `json:"sensitivityParameter,omitempty"`
    Status               *string                `json:"status,omitempty"`
}
