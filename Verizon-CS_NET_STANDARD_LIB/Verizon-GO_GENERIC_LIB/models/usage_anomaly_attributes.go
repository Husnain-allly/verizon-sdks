/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// UsageAnomalyAttributes represents a UsageAnomalyAttributes struct.
// The details of the UsageAnomaly trigger.
type UsageAnomalyAttributes struct {
    // The Verizon billing account associated with the anomaly triggers for this trigger to be active for devices in those accounts. An account name is usually numeric, and must include any leading zeros.
    AccountNames              *string `json:"accountNames,omitempty"`
    // The names of device groups associated with the anomaly triggers for this trigger to be active for devices in those groups.
    DeviceGroup               *string `json:"deviceGroup,omitempty"`
    // Whether or not to include anomalies classified as 'abnormal'.<br />true<br />false<br />Classification is set as part of ThingSpace Intelligence anomaly detection settings.
    IncludeAbnormal           *bool   `json:"includeAbnormal,omitempty"`
    // Whether or not to include anomalies classified as 'very abnormal'.<br />true<br />false<br />Classification is set as part of ThingSpace Intelligence anomaly detection settings.
    IncludeVeryAbnormal       *bool   `json:"includeVeryAbnormal,omitempty"`
    // Whether or not to include anomalies that are directionally under the expected usage.<br />true<br />false.
    IncludeUnderExpectedUsage *bool   `json:"includeUnderExpectedUsage,omitempty"`
    // Whether or not to include anomalies that are directionally over the expected usage. <br />true<br />false.
    IncludeOverExpectedUsage  *bool   `json:"includeOverExpectedUsage,omitempty"`
}

// String implements the fmt.Stringer interface for UsageAnomalyAttributes,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (u UsageAnomalyAttributes) String() string {
    return fmt.Sprintf(
    	"UsageAnomalyAttributes[AccountNames=%v, DeviceGroup=%v, IncludeAbnormal=%v, IncludeVeryAbnormal=%v, IncludeUnderExpectedUsage=%v, IncludeOverExpectedUsage=%v]",
    	u.AccountNames, u.DeviceGroup, u.IncludeAbnormal, u.IncludeVeryAbnormal, u.IncludeUnderExpectedUsage, u.IncludeOverExpectedUsage)
}

// MarshalJSON implements the json.Marshaler interface for UsageAnomalyAttributes.
// It customizes the JSON marshaling process for UsageAnomalyAttributes objects.
func (u UsageAnomalyAttributes) MarshalJSON() (
    []byte,
    error) {
    return json.Marshal(u.toMap())
}

// toMap converts the UsageAnomalyAttributes object to a map representation for JSON marshaling.
func (u UsageAnomalyAttributes) toMap() map[string]any {
    structMap := make(map[string]any)
    if u.AccountNames != nil {
        structMap["accountNames"] = u.AccountNames
    }
    if u.DeviceGroup != nil {
        structMap["deviceGroup"] = u.DeviceGroup
    }
    if u.IncludeAbnormal != nil {
        structMap["includeAbnormal"] = u.IncludeAbnormal
    }
    if u.IncludeVeryAbnormal != nil {
        structMap["includeVeryAbnormal"] = u.IncludeVeryAbnormal
    }
    if u.IncludeUnderExpectedUsage != nil {
        structMap["includeUnderExpectedUsage"] = u.IncludeUnderExpectedUsage
    }
    if u.IncludeOverExpectedUsage != nil {
        structMap["includeOverExpectedUsage"] = u.IncludeOverExpectedUsage
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for UsageAnomalyAttributes.
// It customizes the JSON unmarshaling process for UsageAnomalyAttributes objects.
func (u *UsageAnomalyAttributes) UnmarshalJSON(input []byte) error {
    var temp tempUsageAnomalyAttributes
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    
    u.AccountNames = temp.AccountNames
    u.DeviceGroup = temp.DeviceGroup
    u.IncludeAbnormal = temp.IncludeAbnormal
    u.IncludeVeryAbnormal = temp.IncludeVeryAbnormal
    u.IncludeUnderExpectedUsage = temp.IncludeUnderExpectedUsage
    u.IncludeOverExpectedUsage = temp.IncludeOverExpectedUsage
    return nil
}

// tempUsageAnomalyAttributes is a temporary struct used for validating the fields of UsageAnomalyAttributes.
type tempUsageAnomalyAttributes  struct {
    AccountNames              *string `json:"accountNames,omitempty"`
    DeviceGroup               *string `json:"deviceGroup,omitempty"`
    IncludeAbnormal           *bool   `json:"includeAbnormal,omitempty"`
    IncludeVeryAbnormal       *bool   `json:"includeVeryAbnormal,omitempty"`
    IncludeUnderExpectedUsage *bool   `json:"includeUnderExpectedUsage,omitempty"`
    IncludeOverExpectedUsage  *bool   `json:"includeOverExpectedUsage,omitempty"`
}
