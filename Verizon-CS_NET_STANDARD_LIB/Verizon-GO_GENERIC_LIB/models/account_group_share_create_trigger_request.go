/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// AccountGroupShareCreateTriggerRequest represents a AccountGroupShareCreateTriggerRequest struct.
type AccountGroupShareCreateTriggerRequest struct {
    // The user defined name of the trigger
    TriggerName      *string                  `json:"triggerName,omitempty"`
    // The numeric name of the account and must include leading zeroes
    AccountName      *string                  `json:"accountName,omitempty"`
    // The type of trigger being created or modified
    TriggerCategory  *TriggerCategory         `json:"triggerCategory,omitempty"`
    PricePlanTrigger *AccountGroupShareObject `json:"pricePlanTrigger,omitempty"`
    Notification     *Notificationarray       `json:"notification,omitempty"`
    // A flag to indicate of the trigger is active, true, or not, false
    Active           *Active                  `json:"active,omitempty"`
}

// String implements the fmt.Stringer interface for AccountGroupShareCreateTriggerRequest,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (a AccountGroupShareCreateTriggerRequest) String() string {
    return fmt.Sprintf(
    	"AccountGroupShareCreateTriggerRequest[TriggerName=%v, AccountName=%v, TriggerCategory=%v, PricePlanTrigger=%v, Notification=%v, Active=%v]",
    	a.TriggerName, a.AccountName, a.TriggerCategory, a.PricePlanTrigger, a.Notification, a.Active)
}

// MarshalJSON implements the json.Marshaler interface for AccountGroupShareCreateTriggerRequest.
// It customizes the JSON marshaling process for AccountGroupShareCreateTriggerRequest objects.
func (a AccountGroupShareCreateTriggerRequest) MarshalJSON() (
    []byte,
    error) {
    return json.Marshal(a.toMap())
}

// toMap converts the AccountGroupShareCreateTriggerRequest object to a map representation for JSON marshaling.
func (a AccountGroupShareCreateTriggerRequest) toMap() map[string]any {
    structMap := make(map[string]any)
    if a.TriggerName != nil {
        structMap["triggerName"] = a.TriggerName
    }
    if a.AccountName != nil {
        structMap["accountName"] = a.AccountName
    }
    if a.TriggerCategory != nil {
        structMap["triggerCategory"] = a.TriggerCategory
    }
    if a.PricePlanTrigger != nil {
        structMap["pricePlanTrigger"] = a.PricePlanTrigger.toMap()
    }
    if a.Notification != nil {
        structMap["notification"] = a.Notification.toMap()
    }
    if a.Active != nil {
        structMap["active"] = a.Active
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for AccountGroupShareCreateTriggerRequest.
// It customizes the JSON unmarshaling process for AccountGroupShareCreateTriggerRequest objects.
func (a *AccountGroupShareCreateTriggerRequest) UnmarshalJSON(input []byte) error {
    var temp tempAccountGroupShareCreateTriggerRequest
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    
    a.TriggerName = temp.TriggerName
    a.AccountName = temp.AccountName
    a.TriggerCategory = temp.TriggerCategory
    a.PricePlanTrigger = temp.PricePlanTrigger
    a.Notification = temp.Notification
    a.Active = temp.Active
    return nil
}

// tempAccountGroupShareCreateTriggerRequest is a temporary struct used for validating the fields of AccountGroupShareCreateTriggerRequest.
type tempAccountGroupShareCreateTriggerRequest  struct {
    TriggerName      *string                  `json:"triggerName,omitempty"`
    AccountName      *string                  `json:"accountName,omitempty"`
    TriggerCategory  *TriggerCategory         `json:"triggerCategory,omitempty"`
    PricePlanTrigger *AccountGroupShareObject `json:"pricePlanTrigger,omitempty"`
    Notification     *Notificationarray       `json:"notification,omitempty"`
    Active           *Active                  `json:"active,omitempty"`
}
