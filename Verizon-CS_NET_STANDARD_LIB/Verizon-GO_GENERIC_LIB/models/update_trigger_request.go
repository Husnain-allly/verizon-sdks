/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// UpdateTriggerRequest represents a UpdateTriggerRequest struct.
type UpdateTriggerRequest struct {
    AccountName              *string                   `json:"accountName,omitempty"`
    Active                   *bool                     `json:"active,omitempty"`
    // The details of the UsageAnomaly trigger.
    AnomalyTriggerRequest    *AnomalyTriggerRequest    `json:"anomalyTriggerRequest,omitempty"`
    CycleType                *CycleType                `json:"cycleType,omitempty"`
    DataTriggerRequest       *DataTriggerRequest       `json:"dataTriggerRequest,omitempty"`
    GroupName                *string                   `json:"groupName,omitempty"`
    PromoAlertTriggerRequest *PromoAlertTriggerRequest `json:"promoAlertTriggerRequest,omitempty"`
    SessionTriggerRequest    *SessionTriggerRequest    `json:"sessionTriggerRequest,omitempty"`
    SmsTriggerRequest        *SmsTriggerRequest        `json:"smsTriggerRequest,omitempty"`
    TriggerCategory          *string                   `json:"triggerCategory,omitempty"`
    TriggerId                *string                   `json:"triggerId,omitempty"`
    TriggerName              *string                   `json:"triggerName,omitempty"`
}

// String implements the fmt.Stringer interface for UpdateTriggerRequest,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (u UpdateTriggerRequest) String() string {
    return fmt.Sprintf(
    	"UpdateTriggerRequest[AccountName=%v, Active=%v, AnomalyTriggerRequest=%v, CycleType=%v, DataTriggerRequest=%v, GroupName=%v, PromoAlertTriggerRequest=%v, SessionTriggerRequest=%v, SmsTriggerRequest=%v, TriggerCategory=%v, TriggerId=%v, TriggerName=%v]",
    	u.AccountName, u.Active, u.AnomalyTriggerRequest, u.CycleType, u.DataTriggerRequest, u.GroupName, u.PromoAlertTriggerRequest, u.SessionTriggerRequest, u.SmsTriggerRequest, u.TriggerCategory, u.TriggerId, u.TriggerName)
}

// MarshalJSON implements the json.Marshaler interface for UpdateTriggerRequest.
// It customizes the JSON marshaling process for UpdateTriggerRequest objects.
func (u UpdateTriggerRequest) MarshalJSON() (
    []byte,
    error) {
    return json.Marshal(u.toMap())
}

// toMap converts the UpdateTriggerRequest object to a map representation for JSON marshaling.
func (u UpdateTriggerRequest) toMap() map[string]any {
    structMap := make(map[string]any)
    if u.AccountName != nil {
        structMap["accountName"] = u.AccountName
    }
    if u.Active != nil {
        structMap["active"] = u.Active
    }
    if u.AnomalyTriggerRequest != nil {
        structMap["anomalyTriggerRequest"] = u.AnomalyTriggerRequest.toMap()
    }
    if u.CycleType != nil {
        structMap["cycleType"] = u.CycleType
    }
    if u.DataTriggerRequest != nil {
        structMap["dataTriggerRequest"] = u.DataTriggerRequest.toMap()
    }
    if u.GroupName != nil {
        structMap["groupName"] = u.GroupName
    }
    if u.PromoAlertTriggerRequest != nil {
        structMap["promoAlertTriggerRequest"] = u.PromoAlertTriggerRequest.toMap()
    }
    if u.SessionTriggerRequest != nil {
        structMap["sessionTriggerRequest"] = u.SessionTriggerRequest.toMap()
    }
    if u.SmsTriggerRequest != nil {
        structMap["smsTriggerRequest"] = u.SmsTriggerRequest.toMap()
    }
    if u.TriggerCategory != nil {
        structMap["triggerCategory"] = u.TriggerCategory
    }
    if u.TriggerId != nil {
        structMap["triggerId"] = u.TriggerId
    }
    if u.TriggerName != nil {
        structMap["triggerName"] = u.TriggerName
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for UpdateTriggerRequest.
// It customizes the JSON unmarshaling process for UpdateTriggerRequest objects.
func (u *UpdateTriggerRequest) UnmarshalJSON(input []byte) error {
    var temp tempUpdateTriggerRequest
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    
    u.AccountName = temp.AccountName
    u.Active = temp.Active
    u.AnomalyTriggerRequest = temp.AnomalyTriggerRequest
    u.CycleType = temp.CycleType
    u.DataTriggerRequest = temp.DataTriggerRequest
    u.GroupName = temp.GroupName
    u.PromoAlertTriggerRequest = temp.PromoAlertTriggerRequest
    u.SessionTriggerRequest = temp.SessionTriggerRequest
    u.SmsTriggerRequest = temp.SmsTriggerRequest
    u.TriggerCategory = temp.TriggerCategory
    u.TriggerId = temp.TriggerId
    u.TriggerName = temp.TriggerName
    return nil
}

// tempUpdateTriggerRequest is a temporary struct used for validating the fields of UpdateTriggerRequest.
type tempUpdateTriggerRequest  struct {
    AccountName              *string                   `json:"accountName,omitempty"`
    Active                   *bool                     `json:"active,omitempty"`
    AnomalyTriggerRequest    *AnomalyTriggerRequest    `json:"anomalyTriggerRequest,omitempty"`
    CycleType                *CycleType                `json:"cycleType,omitempty"`
    DataTriggerRequest       *DataTriggerRequest       `json:"dataTriggerRequest,omitempty"`
    GroupName                *string                   `json:"groupName,omitempty"`
    PromoAlertTriggerRequest *PromoAlertTriggerRequest `json:"promoAlertTriggerRequest,omitempty"`
    SessionTriggerRequest    *SessionTriggerRequest    `json:"sessionTriggerRequest,omitempty"`
    SmsTriggerRequest        *SmsTriggerRequest        `json:"smsTriggerRequest,omitempty"`
    TriggerCategory          *string                   `json:"triggerCategory,omitempty"`
    TriggerId                *string                   `json:"triggerId,omitempty"`
    TriggerName              *string                   `json:"triggerName,omitempty"`
}
