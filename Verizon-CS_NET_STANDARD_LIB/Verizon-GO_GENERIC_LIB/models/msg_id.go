/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "errors"
    "fmt"
    "strings"
)

// MsgId represents a MsgId struct.
type MsgId struct {
    // Links to ATIS message. A link to any other incident information data that may be available in the normal ATIS incident description or other messages.
    FurtherInfoId        string                 `json:"furtherInfoID"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for MsgId,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (m MsgId) String() string {
    return fmt.Sprintf(
    	"MsgId[FurtherInfoId=%v, AdditionalProperties=%v]",
    	m.FurtherInfoId, m.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for MsgId.
// It customizes the JSON marshaling process for MsgId objects.
func (m MsgId) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(m.AdditionalProperties,
        "furtherInfoID"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(m.toMap())
}

// toMap converts the MsgId object to a map representation for JSON marshaling.
func (m MsgId) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, m.AdditionalProperties)
    structMap["furtherInfoID"] = m.FurtherInfoId
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for MsgId.
// It customizes the JSON unmarshaling process for MsgId objects.
func (m *MsgId) UnmarshalJSON(input []byte) error {
    var temp tempMsgId
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    err = temp.validate()
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "furtherInfoID")
    if err != nil {
    	return err
    }
    m.AdditionalProperties = additionalProperties
    
    m.FurtherInfoId = *temp.FurtherInfoId
    return nil
}

// tempMsgId is a temporary struct used for validating the fields of MsgId.
type tempMsgId  struct {
    FurtherInfoId *string `json:"furtherInfoID"`
}

func (m *tempMsgId) validate() error {
    var errs []string
    if m.FurtherInfoId == nil {
        errs = append(errs, "required field `furtherInfoID` is missing for type `MsgId`")
    }
    if len(errs) == 0 {
        return nil
    }
    return errors.New(strings.Join (errs, "\n"))
}
