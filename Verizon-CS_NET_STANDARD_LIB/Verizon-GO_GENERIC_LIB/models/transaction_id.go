/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// TransactionId represents a TransactionId struct.
// The transaction ID of the request that you want to cancel, from the POST /devicelocations synchronus response.
type TransactionId struct {
    Txid                 *string                `json:"txid,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for TransactionId,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (t TransactionId) String() string {
    return fmt.Sprintf(
    	"TransactionId[Txid=%v, AdditionalProperties=%v]",
    	t.Txid, t.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for TransactionId.
// It customizes the JSON marshaling process for TransactionId objects.
func (t TransactionId) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(t.AdditionalProperties,
        "txid"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(t.toMap())
}

// toMap converts the TransactionId object to a map representation for JSON marshaling.
func (t TransactionId) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, t.AdditionalProperties)
    if t.Txid != nil {
        structMap["txid"] = t.Txid
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for TransactionId.
// It customizes the JSON unmarshaling process for TransactionId objects.
func (t *TransactionId) UnmarshalJSON(input []byte) error {
    var temp tempTransactionId
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "txid")
    if err != nil {
    	return err
    }
    t.AdditionalProperties = additionalProperties
    
    t.Txid = temp.Txid
    return nil
}

// tempTransactionId is a temporary struct used for validating the fields of TransactionId.
type tempTransactionId  struct {
    Txid *string `json:"txid,omitempty"`
}
