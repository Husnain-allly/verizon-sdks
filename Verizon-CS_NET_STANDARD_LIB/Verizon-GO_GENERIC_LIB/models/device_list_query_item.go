/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// DeviceListQueryItem represents a DeviceListQueryItem struct.
// The list of devices in the account.
type DeviceListQueryItem struct {
    // Device IMEI.
    DeviceId             *string                `json:"deviceId,omitempty"`
    // The MDN (phone number) of the device.
    Mdn                  *string                `json:"mdn,omitempty"`
    // The device model name.
    Model                *string                `json:"model,omitempty"`
    // The device make.
    Make                 *string                `json:"make,omitempty"`
    // The name of the firmware image currently installed on the device.
    Firmware             *string                `json:"firmware,omitempty"`
    // True if the device firmware can be upgraded over the air using the Software Management Services API.
    FotaEligible         *bool                  `json:"fotaEligible,omitempty"`
    // True if an MRC license has been assigned to this device.
    LicenseAssigned      *bool                  `json:"licenseAssigned,omitempty"`
    // The date and time that the device firmware was last upgraded. If a device has never been upgraded, the upgradeTime will be 01/01/1900 0:0:0.
    UpgradeTime          *string                `json:"upgradeTime,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for DeviceListQueryItem,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (d DeviceListQueryItem) String() string {
    return fmt.Sprintf(
    	"DeviceListQueryItem[DeviceId=%v, Mdn=%v, Model=%v, Make=%v, Firmware=%v, FotaEligible=%v, LicenseAssigned=%v, UpgradeTime=%v, AdditionalProperties=%v]",
    	d.DeviceId, d.Mdn, d.Model, d.Make, d.Firmware, d.FotaEligible, d.LicenseAssigned, d.UpgradeTime, d.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for DeviceListQueryItem.
// It customizes the JSON marshaling process for DeviceListQueryItem objects.
func (d DeviceListQueryItem) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(d.AdditionalProperties,
        "deviceId", "mdn", "model", "make", "firmware", "fotaEligible", "licenseAssigned", "upgradeTime"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(d.toMap())
}

// toMap converts the DeviceListQueryItem object to a map representation for JSON marshaling.
func (d DeviceListQueryItem) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, d.AdditionalProperties)
    if d.DeviceId != nil {
        structMap["deviceId"] = d.DeviceId
    }
    if d.Mdn != nil {
        structMap["mdn"] = d.Mdn
    }
    if d.Model != nil {
        structMap["model"] = d.Model
    }
    if d.Make != nil {
        structMap["make"] = d.Make
    }
    if d.Firmware != nil {
        structMap["firmware"] = d.Firmware
    }
    if d.FotaEligible != nil {
        structMap["fotaEligible"] = d.FotaEligible
    }
    if d.LicenseAssigned != nil {
        structMap["licenseAssigned"] = d.LicenseAssigned
    }
    if d.UpgradeTime != nil {
        structMap["upgradeTime"] = d.UpgradeTime
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for DeviceListQueryItem.
// It customizes the JSON unmarshaling process for DeviceListQueryItem objects.
func (d *DeviceListQueryItem) UnmarshalJSON(input []byte) error {
    var temp tempDeviceListQueryItem
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "deviceId", "mdn", "model", "make", "firmware", "fotaEligible", "licenseAssigned", "upgradeTime")
    if err != nil {
    	return err
    }
    d.AdditionalProperties = additionalProperties
    
    d.DeviceId = temp.DeviceId
    d.Mdn = temp.Mdn
    d.Model = temp.Model
    d.Make = temp.Make
    d.Firmware = temp.Firmware
    d.FotaEligible = temp.FotaEligible
    d.LicenseAssigned = temp.LicenseAssigned
    d.UpgradeTime = temp.UpgradeTime
    return nil
}

// tempDeviceListQueryItem is a temporary struct used for validating the fields of DeviceListQueryItem.
type tempDeviceListQueryItem  struct {
    DeviceId        *string `json:"deviceId,omitempty"`
    Mdn             *string `json:"mdn,omitempty"`
    Model           *string `json:"model,omitempty"`
    Make            *string `json:"make,omitempty"`
    Firmware        *string `json:"firmware,omitempty"`
    FotaEligible    *bool   `json:"fotaEligible,omitempty"`
    LicenseAssigned *bool   `json:"licenseAssigned,omitempty"`
    UpgradeTime     *string `json:"upgradeTime,omitempty"`
}
