/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// DtoAddUsersToNotificationGroupRequest represents a DtoAddUsersToNotificationGroupRequest struct.
type DtoAddUsersToNotificationGroupRequest struct {
    // The numeric account name, which must include leading zeros
    Accountname          *string                `json:"accountname,omitempty"`
    // UUID of the user record, assigned at creation
    Id                   *string                `json:"id,omitempty"`
    Userids              []string               `json:"userids,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for DtoAddUsersToNotificationGroupRequest,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (d DtoAddUsersToNotificationGroupRequest) String() string {
    return fmt.Sprintf(
    	"DtoAddUsersToNotificationGroupRequest[Accountname=%v, Id=%v, Userids=%v, AdditionalProperties=%v]",
    	d.Accountname, d.Id, d.Userids, d.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for DtoAddUsersToNotificationGroupRequest.
// It customizes the JSON marshaling process for DtoAddUsersToNotificationGroupRequest objects.
func (d DtoAddUsersToNotificationGroupRequest) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(d.AdditionalProperties,
        "accountname", "id", "userids"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(d.toMap())
}

// toMap converts the DtoAddUsersToNotificationGroupRequest object to a map representation for JSON marshaling.
func (d DtoAddUsersToNotificationGroupRequest) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, d.AdditionalProperties)
    if d.Accountname != nil {
        structMap["accountname"] = d.Accountname
    }
    if d.Id != nil {
        structMap["id"] = d.Id
    }
    if d.Userids != nil {
        structMap["userids"] = d.Userids
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for DtoAddUsersToNotificationGroupRequest.
// It customizes the JSON unmarshaling process for DtoAddUsersToNotificationGroupRequest objects.
func (d *DtoAddUsersToNotificationGroupRequest) UnmarshalJSON(input []byte) error {
    var temp tempDtoAddUsersToNotificationGroupRequest
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "accountname", "id", "userids")
    if err != nil {
    	return err
    }
    d.AdditionalProperties = additionalProperties
    
    d.Accountname = temp.Accountname
    d.Id = temp.Id
    d.Userids = temp.Userids
    return nil
}

// tempDtoAddUsersToNotificationGroupRequest is a temporary struct used for validating the fields of DtoAddUsersToNotificationGroupRequest.
type tempDtoAddUsersToNotificationGroupRequest  struct {
    Accountname *string  `json:"accountname,omitempty"`
    Id          *string  `json:"id,omitempty"`
    Userids     []string `json:"userids,omitempty"`
}
