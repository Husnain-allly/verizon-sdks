/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "errors"
    "fmt"
    "strings"
)

// RetrieveMonitorsRequest represents a RetrieveMonitorsRequest struct.
type RetrieveMonitorsRequest struct {
    // The name of a billing account.
    AccountName string              `json:"accountName"`
    // The devices for which you want to restore service, specified by device identifier.
    Devices     []AccountDeviceList `json:"devices"`
    // The name of a billing account.
    MonitorType *string             `json:"monitorType,omitempty"`
}

// String implements the fmt.Stringer interface for RetrieveMonitorsRequest,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (r RetrieveMonitorsRequest) String() string {
    return fmt.Sprintf(
    	"RetrieveMonitorsRequest[AccountName=%v, Devices=%v, MonitorType=%v]",
    	r.AccountName, r.Devices, r.MonitorType)
}

// MarshalJSON implements the json.Marshaler interface for RetrieveMonitorsRequest.
// It customizes the JSON marshaling process for RetrieveMonitorsRequest objects.
func (r RetrieveMonitorsRequest) MarshalJSON() (
    []byte,
    error) {
    return json.Marshal(r.toMap())
}

// toMap converts the RetrieveMonitorsRequest object to a map representation for JSON marshaling.
func (r RetrieveMonitorsRequest) toMap() map[string]any {
    structMap := make(map[string]any)
    structMap["accountName"] = r.AccountName
    structMap["devices"] = r.Devices
    if r.MonitorType != nil {
        structMap["monitorType"] = r.MonitorType
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for RetrieveMonitorsRequest.
// It customizes the JSON unmarshaling process for RetrieveMonitorsRequest objects.
func (r *RetrieveMonitorsRequest) UnmarshalJSON(input []byte) error {
    var temp tempRetrieveMonitorsRequest
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    err = temp.validate()
    if err != nil {
    	return err
    }
    
    r.AccountName = *temp.AccountName
    r.Devices = *temp.Devices
    r.MonitorType = temp.MonitorType
    return nil
}

// tempRetrieveMonitorsRequest is a temporary struct used for validating the fields of RetrieveMonitorsRequest.
type tempRetrieveMonitorsRequest  struct {
    AccountName *string              `json:"accountName"`
    Devices     *[]AccountDeviceList `json:"devices"`
    MonitorType *string              `json:"monitorType,omitempty"`
}

func (r *tempRetrieveMonitorsRequest) validate() error {
    var errs []string
    if r.AccountName == nil {
        errs = append(errs, "required field `accountName` is missing for type `RetrieveMonitorsRequest`")
    }
    if r.Devices == nil {
        errs = append(errs, "required field `devices` is missing for type `RetrieveMonitorsRequest`")
    }
    if len(errs) == 0 {
        return nil
    }
    return errors.New(strings.Join (errs, "\n"))
}
