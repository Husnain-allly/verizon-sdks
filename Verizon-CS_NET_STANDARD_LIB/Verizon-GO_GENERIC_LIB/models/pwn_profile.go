/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// PwnProfile represents a PwnProfile struct.
type PwnProfile struct {
    ProfileId            *string                `json:"profileId,omitempty"`
    ProfileName          *string                `json:"profileName,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for PwnProfile,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (p PwnProfile) String() string {
    return fmt.Sprintf(
    	"PwnProfile[ProfileId=%v, ProfileName=%v, AdditionalProperties=%v]",
    	p.ProfileId, p.ProfileName, p.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for PwnProfile.
// It customizes the JSON marshaling process for PwnProfile objects.
func (p PwnProfile) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(p.AdditionalProperties,
        "profileId", "profileName"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(p.toMap())
}

// toMap converts the PwnProfile object to a map representation for JSON marshaling.
func (p PwnProfile) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, p.AdditionalProperties)
    if p.ProfileId != nil {
        structMap["profileId"] = p.ProfileId
    }
    if p.ProfileName != nil {
        structMap["profileName"] = p.ProfileName
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for PwnProfile.
// It customizes the JSON unmarshaling process for PwnProfile objects.
func (p *PwnProfile) UnmarshalJSON(input []byte) error {
    var temp tempPwnProfile
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "profileId", "profileName")
    if err != nil {
    	return err
    }
    p.AdditionalProperties = additionalProperties
    
    p.ProfileId = temp.ProfileId
    p.ProfileName = temp.ProfileName
    return nil
}

// tempPwnProfile is a temporary struct used for validating the fields of PwnProfile.
type tempPwnProfile  struct {
    ProfileId   *string `json:"profileId,omitempty"`
    ProfileName *string `json:"profileName,omitempty"`
}
