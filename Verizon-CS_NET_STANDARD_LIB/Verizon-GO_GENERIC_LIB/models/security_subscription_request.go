/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// SecuritySubscriptionRequest represents a SecuritySubscriptionRequest struct.
// Request for a subscription.
type SecuritySubscriptionRequest struct {
    // The name of a billing account.
    AccountName *string `json:"accountName,omitempty"`
    // The Stock Keeping Unit (SKU). Valid skuNumbers for SIM-Secure for IoT are:SIMSec-IoT-Lt”. (Lifetime) Once a license is assigned to a SIM, the SIM-Secure feature is enabled for the life of the SIM.“TS-BUNDLE-KTO-SIMSEC-MRC”. (Bundle) The SIM-Secure Flex license can be assigned to or removed from a SIM at any time. This SKU is bundled with other ThingSpace Services.*“SIMSec-IoT”. (Flex) The SIM-Secure Flex license can be assigned to or removed from a SIM at any time. This SKU is purchased a la carte.
    SkuNumber   *string `json:"skuNumber,omitempty"`
}

// String implements the fmt.Stringer interface for SecuritySubscriptionRequest,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (s SecuritySubscriptionRequest) String() string {
    return fmt.Sprintf(
    	"SecuritySubscriptionRequest[AccountName=%v, SkuNumber=%v]",
    	s.AccountName, s.SkuNumber)
}

// MarshalJSON implements the json.Marshaler interface for SecuritySubscriptionRequest.
// It customizes the JSON marshaling process for SecuritySubscriptionRequest objects.
func (s SecuritySubscriptionRequest) MarshalJSON() (
    []byte,
    error) {
    return json.Marshal(s.toMap())
}

// toMap converts the SecuritySubscriptionRequest object to a map representation for JSON marshaling.
func (s SecuritySubscriptionRequest) toMap() map[string]any {
    structMap := make(map[string]any)
    if s.AccountName != nil {
        structMap["accountName"] = s.AccountName
    }
    if s.SkuNumber != nil {
        structMap["skuNumber"] = s.SkuNumber
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for SecuritySubscriptionRequest.
// It customizes the JSON unmarshaling process for SecuritySubscriptionRequest objects.
func (s *SecuritySubscriptionRequest) UnmarshalJSON(input []byte) error {
    var temp tempSecuritySubscriptionRequest
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    
    s.AccountName = temp.AccountName
    s.SkuNumber = temp.SkuNumber
    return nil
}

// tempSecuritySubscriptionRequest is a temporary struct used for validating the fields of SecuritySubscriptionRequest.
type tempSecuritySubscriptionRequest  struct {
    AccountName *string `json:"accountName,omitempty"`
    SkuNumber   *string `json:"skuNumber,omitempty"`
}
