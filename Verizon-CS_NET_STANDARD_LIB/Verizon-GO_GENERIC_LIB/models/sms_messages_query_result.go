/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// SmsMessagesQueryResult represents a SmsMessagesQueryResult struct.
// Response to SMS messages sent by all M2M devices associated with a billing account.
type SmsMessagesQueryResult struct {
    // False for a status 200 response.True for a status 202 response, indicating that there is more data to be retrieved.
    HasMoreData          *bool                  `json:"hasMoreData,omitempty"`
    // An array of up to 100 SMS messages that were sent by devices in the account.
    Messages             []SmsMessage           `json:"messages,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for SmsMessagesQueryResult,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (s SmsMessagesQueryResult) String() string {
    return fmt.Sprintf(
    	"SmsMessagesQueryResult[HasMoreData=%v, Messages=%v, AdditionalProperties=%v]",
    	s.HasMoreData, s.Messages, s.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for SmsMessagesQueryResult.
// It customizes the JSON marshaling process for SmsMessagesQueryResult objects.
func (s SmsMessagesQueryResult) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(s.AdditionalProperties,
        "hasMoreData", "messages"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(s.toMap())
}

// toMap converts the SmsMessagesQueryResult object to a map representation for JSON marshaling.
func (s SmsMessagesQueryResult) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, s.AdditionalProperties)
    if s.HasMoreData != nil {
        structMap["hasMoreData"] = s.HasMoreData
    }
    if s.Messages != nil {
        structMap["messages"] = s.Messages
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for SmsMessagesQueryResult.
// It customizes the JSON unmarshaling process for SmsMessagesQueryResult objects.
func (s *SmsMessagesQueryResult) UnmarshalJSON(input []byte) error {
    var temp tempSmsMessagesQueryResult
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "hasMoreData", "messages")
    if err != nil {
    	return err
    }
    s.AdditionalProperties = additionalProperties
    
    s.HasMoreData = temp.HasMoreData
    s.Messages = temp.Messages
    return nil
}

// tempSmsMessagesQueryResult is a temporary struct used for validating the fields of SmsMessagesQueryResult.
type tempSmsMessagesQueryResult  struct {
    HasMoreData *bool        `json:"hasMoreData,omitempty"`
    Messages    []SmsMessage `json:"messages,omitempty"`
}
