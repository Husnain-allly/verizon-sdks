/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// ResourceIdentifier represents a ResourceIdentifier struct.
// The ID of the target to delete, in the format {"id": "dd1682d3-2d80-cefc-f3ee-25154800beff"}.
type ResourceIdentifier struct {
    // Target ID.
    Id                   *string                `json:"id,omitempty"`
    // Device IMEI.
    Imei                 *string                `json:"imei,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for ResourceIdentifier,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (r ResourceIdentifier) String() string {
    return fmt.Sprintf(
    	"ResourceIdentifier[Id=%v, Imei=%v, AdditionalProperties=%v]",
    	r.Id, r.Imei, r.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for ResourceIdentifier.
// It customizes the JSON marshaling process for ResourceIdentifier objects.
func (r ResourceIdentifier) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(r.AdditionalProperties,
        "id", "imei"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(r.toMap())
}

// toMap converts the ResourceIdentifier object to a map representation for JSON marshaling.
func (r ResourceIdentifier) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, r.AdditionalProperties)
    if r.Id != nil {
        structMap["id"] = r.Id
    }
    if r.Imei != nil {
        structMap["imei"] = r.Imei
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for ResourceIdentifier.
// It customizes the JSON unmarshaling process for ResourceIdentifier objects.
func (r *ResourceIdentifier) UnmarshalJSON(input []byte) error {
    var temp tempResourceIdentifier
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "id", "imei")
    if err != nil {
    	return err
    }
    r.AdditionalProperties = additionalProperties
    
    r.Id = temp.Id
    r.Imei = temp.Imei
    return nil
}

// tempResourceIdentifier is a temporary struct used for validating the fields of ResourceIdentifier.
type tempResourceIdentifier  struct {
    Id   *string `json:"id,omitempty"`
    Imei *string `json:"imei,omitempty"`
}
