/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "errors"
    "fmt"
    "strings"
)

// DtoUpdateNotificationGroupRequest represents a DtoUpdateNotificationGroupRequest struct.
type DtoUpdateNotificationGroupRequest struct {
    // The numeric account name, which must include leading zeros
    Accountname *string                           `json:"accountname,omitempty"`
    Group       DtoNotificationGroupRequestEntity `json:"group"`
    // UUID of the user record, assigned at creation
    Id          *string                           `json:"id,omitempty"`
    Userids     []string                          `json:"userids,omitempty"`
}

// String implements the fmt.Stringer interface for DtoUpdateNotificationGroupRequest,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (d DtoUpdateNotificationGroupRequest) String() string {
    return fmt.Sprintf(
    	"DtoUpdateNotificationGroupRequest[Accountname=%v, Group=%v, Id=%v, Userids=%v]",
    	d.Accountname, d.Group, d.Id, d.Userids)
}

// MarshalJSON implements the json.Marshaler interface for DtoUpdateNotificationGroupRequest.
// It customizes the JSON marshaling process for DtoUpdateNotificationGroupRequest objects.
func (d DtoUpdateNotificationGroupRequest) MarshalJSON() (
    []byte,
    error) {
    return json.Marshal(d.toMap())
}

// toMap converts the DtoUpdateNotificationGroupRequest object to a map representation for JSON marshaling.
func (d DtoUpdateNotificationGroupRequest) toMap() map[string]any {
    structMap := make(map[string]any)
    if d.Accountname != nil {
        structMap["accountname"] = d.Accountname
    }
    structMap["group"] = d.Group.toMap()
    if d.Id != nil {
        structMap["id"] = d.Id
    }
    if d.Userids != nil {
        structMap["userids"] = d.Userids
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for DtoUpdateNotificationGroupRequest.
// It customizes the JSON unmarshaling process for DtoUpdateNotificationGroupRequest objects.
func (d *DtoUpdateNotificationGroupRequest) UnmarshalJSON(input []byte) error {
    var temp tempDtoUpdateNotificationGroupRequest
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    err = temp.validate()
    if err != nil {
    	return err
    }
    
    d.Accountname = temp.Accountname
    d.Group = *temp.Group
    d.Id = temp.Id
    d.Userids = temp.Userids
    return nil
}

// tempDtoUpdateNotificationGroupRequest is a temporary struct used for validating the fields of DtoUpdateNotificationGroupRequest.
type tempDtoUpdateNotificationGroupRequest  struct {
    Accountname *string                            `json:"accountname,omitempty"`
    Group       *DtoNotificationGroupRequestEntity `json:"group"`
    Id          *string                            `json:"id,omitempty"`
    Userids     []string                           `json:"userids,omitempty"`
}

func (d *tempDtoUpdateNotificationGroupRequest) validate() error {
    var errs []string
    if d.Group == nil {
        errs = append(errs, "required field `group` is missing for type `dto.UpdateNotificationGroupRequest`")
    }
    if len(errs) == 0 {
        return nil
    }
    return errors.New(strings.Join (errs, "\n"))
}
