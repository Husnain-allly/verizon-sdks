/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// M201Success represents a M201Success struct.
type M201Success struct {
    RequestId            *string                `json:"requestId,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for M201Success,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (m M201Success) String() string {
    return fmt.Sprintf(
    	"M201Success[RequestId=%v, AdditionalProperties=%v]",
    	m.RequestId, m.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for M201Success.
// It customizes the JSON marshaling process for M201Success objects.
func (m M201Success) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(m.AdditionalProperties,
        "requestId"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(m.toMap())
}

// toMap converts the M201Success object to a map representation for JSON marshaling.
func (m M201Success) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, m.AdditionalProperties)
    if m.RequestId != nil {
        structMap["requestId"] = m.RequestId
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for M201Success.
// It customizes the JSON unmarshaling process for M201Success objects.
func (m *M201Success) UnmarshalJSON(input []byte) error {
    var temp tempM201Success
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "requestId")
    if err != nil {
    	return err
    }
    m.AdditionalProperties = additionalProperties
    
    m.RequestId = temp.RequestId
    return nil
}

// tempM201Success is a temporary struct used for validating the fields of M201Success.
type tempM201Success  struct {
    RequestId *string `json:"requestId,omitempty"`
}
