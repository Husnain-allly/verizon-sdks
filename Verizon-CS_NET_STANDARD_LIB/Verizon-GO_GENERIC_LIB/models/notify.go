/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// Notify represents a Notify struct.
type Notify struct {
    AlertType            *string                `json:"alertType,omitempty"`
    Threshold            []NotifyThreshold      `json:"threshold,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for Notify,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (n Notify) String() string {
    return fmt.Sprintf(
    	"Notify[AlertType=%v, Threshold=%v, AdditionalProperties=%v]",
    	n.AlertType, n.Threshold, n.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for Notify.
// It customizes the JSON marshaling process for Notify objects.
func (n Notify) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(n.AdditionalProperties,
        "alertType", "threshold"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(n.toMap())
}

// toMap converts the Notify object to a map representation for JSON marshaling.
func (n Notify) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, n.AdditionalProperties)
    if n.AlertType != nil {
        structMap["alertType"] = n.AlertType
    }
    if n.Threshold != nil {
        structMap["threshold"] = n.Threshold
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for Notify.
// It customizes the JSON unmarshaling process for Notify objects.
func (n *Notify) UnmarshalJSON(input []byte) error {
    var temp tempNotify
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "alertType", "threshold")
    if err != nil {
    	return err
    }
    n.AdditionalProperties = additionalProperties
    
    n.AlertType = temp.AlertType
    n.Threshold = temp.Threshold
    return nil
}

// tempNotify is a temporary struct used for validating the fields of Notify.
type tempNotify  struct {
    AlertType *string           `json:"alertType,omitempty"`
    Threshold []NotifyThreshold `json:"threshold,omitempty"`
}
