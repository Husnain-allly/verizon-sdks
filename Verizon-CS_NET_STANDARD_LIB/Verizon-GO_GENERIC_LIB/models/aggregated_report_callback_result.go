/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "errors"
    "fmt"
    "strings"
)

// AggregatedReportCallbackResult represents a AggregatedReportCallbackResult struct.
// Aggregated usage report (Asynchronous).
type AggregatedReportCallbackResult struct {
    // A unique string that associates the request with the location report information that is sent in asynchronous callback message.ThingSpace will send a separate callback message for each device that was in the request. All of the callback messages will have the same txid.
    Txid                 string                          `json:"txid"`
    // QUEUED or COMPLETED. Requests for IoT devices with cacheMode=0 (cached) have status=COMPLETED; all other requests are QUEUED.
    Status               *AggregatedReportCallbackStatus `json:"status,omitempty"`
    AdditionalProperties map[string]interface{}          `json:"_"`
}

// String implements the fmt.Stringer interface for AggregatedReportCallbackResult,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (a AggregatedReportCallbackResult) String() string {
    return fmt.Sprintf(
    	"AggregatedReportCallbackResult[Txid=%v, Status=%v, AdditionalProperties=%v]",
    	a.Txid, a.Status, a.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for AggregatedReportCallbackResult.
// It customizes the JSON marshaling process for AggregatedReportCallbackResult objects.
func (a AggregatedReportCallbackResult) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(a.AdditionalProperties,
        "txid", "status"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(a.toMap())
}

// toMap converts the AggregatedReportCallbackResult object to a map representation for JSON marshaling.
func (a AggregatedReportCallbackResult) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, a.AdditionalProperties)
    structMap["txid"] = a.Txid
    if a.Status != nil {
        structMap["status"] = a.Status
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for AggregatedReportCallbackResult.
// It customizes the JSON unmarshaling process for AggregatedReportCallbackResult objects.
func (a *AggregatedReportCallbackResult) UnmarshalJSON(input []byte) error {
    var temp tempAggregatedReportCallbackResult
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    err = temp.validate()
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "txid", "status")
    if err != nil {
    	return err
    }
    a.AdditionalProperties = additionalProperties
    
    a.Txid = *temp.Txid
    a.Status = temp.Status
    return nil
}

// tempAggregatedReportCallbackResult is a temporary struct used for validating the fields of AggregatedReportCallbackResult.
type tempAggregatedReportCallbackResult  struct {
    Txid   *string                         `json:"txid"`
    Status *AggregatedReportCallbackStatus `json:"status,omitempty"`
}

func (a *tempAggregatedReportCallbackResult) validate() error {
    var errs []string
    if a.Txid == nil {
        errs = append(errs, "required field `txid` is missing for type `AggregatedReportCallbackResult`")
    }
    if len(errs) == 0 {
        return nil
    }
    return errors.New(strings.Join (errs, "\n"))
}
