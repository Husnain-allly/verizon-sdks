/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// FindDeviceByPropertyResponseList represents a FindDeviceByPropertyResponseList struct.
// A success response includes an array of all matching devices. Each device includes the full device resource definition.
type FindDeviceByPropertyResponseList struct {
    DeviceProperty       []FindDeviceByPropertyResponse `json:"DeviceProperty,omitempty"`
    AdditionalProperties map[string]interface{}         `json:"_"`
}

// String implements the fmt.Stringer interface for FindDeviceByPropertyResponseList,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (f FindDeviceByPropertyResponseList) String() string {
    return fmt.Sprintf(
    	"FindDeviceByPropertyResponseList[DeviceProperty=%v, AdditionalProperties=%v]",
    	f.DeviceProperty, f.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for FindDeviceByPropertyResponseList.
// It customizes the JSON marshaling process for FindDeviceByPropertyResponseList objects.
func (f FindDeviceByPropertyResponseList) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(f.AdditionalProperties,
        "DeviceProperty"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(f.toMap())
}

// toMap converts the FindDeviceByPropertyResponseList object to a map representation for JSON marshaling.
func (f FindDeviceByPropertyResponseList) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, f.AdditionalProperties)
    if f.DeviceProperty != nil {
        structMap["DeviceProperty"] = f.DeviceProperty
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for FindDeviceByPropertyResponseList.
// It customizes the JSON unmarshaling process for FindDeviceByPropertyResponseList objects.
func (f *FindDeviceByPropertyResponseList) UnmarshalJSON(input []byte) error {
    var temp tempFindDeviceByPropertyResponseList
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "DeviceProperty")
    if err != nil {
    	return err
    }
    f.AdditionalProperties = additionalProperties
    
    f.DeviceProperty = temp.DeviceProperty
    return nil
}

// tempFindDeviceByPropertyResponseList is a temporary struct used for validating the fields of FindDeviceByPropertyResponseList.
type tempFindDeviceByPropertyResponseList  struct {
    DeviceProperty []FindDeviceByPropertyResponse `json:"DeviceProperty,omitempty"`
}
