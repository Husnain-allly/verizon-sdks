/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// M5GBiaddressAndcustomerinfo2 represents a M5GBiaddressAndcustomerinfo2 struct.
type M5GBiaddressAndcustomerinfo2 struct {
    PrimaryPlaceofuse    *M5GBiaddressAndcustomerinfo `json:"primaryPlaceofuse,omitempty"`
    AdditionalProperties map[string]interface{}       `json:"_"`
}

// String implements the fmt.Stringer interface for M5GBiaddressAndcustomerinfo2,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (m M5GBiaddressAndcustomerinfo2) String() string {
    return fmt.Sprintf(
    	"M5GBiaddressAndcustomerinfo2[PrimaryPlaceofuse=%v, AdditionalProperties=%v]",
    	m.PrimaryPlaceofuse, m.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for M5GBiaddressAndcustomerinfo2.
// It customizes the JSON marshaling process for M5GBiaddressAndcustomerinfo2 objects.
func (m M5GBiaddressAndcustomerinfo2) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(m.AdditionalProperties,
        "primaryPlaceofuse"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(m.toMap())
}

// toMap converts the M5GBiaddressAndcustomerinfo2 object to a map representation for JSON marshaling.
func (m M5GBiaddressAndcustomerinfo2) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, m.AdditionalProperties)
    if m.PrimaryPlaceofuse != nil {
        structMap["primaryPlaceofuse"] = m.PrimaryPlaceofuse.toMap()
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for M5GBiaddressAndcustomerinfo2.
// It customizes the JSON unmarshaling process for M5GBiaddressAndcustomerinfo2 objects.
func (m *M5GBiaddressAndcustomerinfo2) UnmarshalJSON(input []byte) error {
    var temp tempM5GBiaddressAndcustomerinfo2
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "primaryPlaceofuse")
    if err != nil {
    	return err
    }
    m.AdditionalProperties = additionalProperties
    
    m.PrimaryPlaceofuse = temp.PrimaryPlaceofuse
    return nil
}

// tempM5GBiaddressAndcustomerinfo2 is a temporary struct used for validating the fields of M5GBiaddressAndcustomerinfo2.
type tempM5GBiaddressAndcustomerinfo2  struct {
    PrimaryPlaceofuse *M5GBiaddressAndcustomerinfo `json:"primaryPlaceofuse,omitempty"`
}
