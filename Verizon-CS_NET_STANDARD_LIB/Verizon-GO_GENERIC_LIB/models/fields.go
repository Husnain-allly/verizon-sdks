/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// Fields represents a Fields struct.
// List of fields affected by the event.
type Fields struct {
    // List of the field names and values to set.
    Configuration        *Configuration         `json:"configuration,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for Fields,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (f Fields) String() string {
    return fmt.Sprintf(
    	"Fields[Configuration=%v, AdditionalProperties=%v]",
    	f.Configuration, f.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for Fields.
// It customizes the JSON marshaling process for Fields objects.
func (f Fields) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(f.AdditionalProperties,
        "configuration"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(f.toMap())
}

// toMap converts the Fields object to a map representation for JSON marshaling.
func (f Fields) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, f.AdditionalProperties)
    if f.Configuration != nil {
        structMap["configuration"] = f.Configuration.toMap()
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for Fields.
// It customizes the JSON unmarshaling process for Fields objects.
func (f *Fields) UnmarshalJSON(input []byte) error {
    var temp tempFields
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "configuration")
    if err != nil {
    	return err
    }
    f.AdditionalProperties = additionalProperties
    
    f.Configuration = temp.Configuration
    return nil
}

// tempFields is a temporary struct used for validating the fields of Fields.
type tempFields  struct {
    Configuration *Configuration `json:"configuration,omitempty"`
}
