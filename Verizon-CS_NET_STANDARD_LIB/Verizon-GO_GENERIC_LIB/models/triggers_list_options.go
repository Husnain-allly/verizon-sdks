/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "errors"
    "fmt"
)

// TriggersListOptions represents a TriggersListOptions struct.
type TriggersListOptions struct {
    value                 any
    isAnomalyTriggerValue bool
    isTriggerType2        bool
}

// String implements the fmt.Stringer interface for TriggersListOptions,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (t TriggersListOptions) String() string {
    return fmt.Sprintf("%v", t.value)
}

// MarshalJSON implements the json.Marshaler interface for TriggersListOptions.
// It customizes the JSON marshaling process for TriggersListOptions objects.
func (t TriggersListOptions) MarshalJSON() (
    []byte,
    error) {
    if t.value == nil {
        return nil, errors.New("No underlying type is set. Please use any of the `models.TriggersListOptionsContainer.From*` functions to initialize the TriggersListOptions object.")
    }
    return json.Marshal(t.toMap())
}

// toMap converts the TriggersListOptions object to a map representation for JSON marshaling.
func (t *TriggersListOptions) toMap() any {
    switch obj := t.value.(type) {
    case *AnomalyTriggerValue:
        return obj.toMap()
    case *TriggerType2:
        return obj.toMap()
    }
    return nil
}

// UnmarshalJSON implements the json.Unmarshaler interface for TriggersListOptions.
// It customizes the JSON unmarshaling process for TriggersListOptions objects.
func (t *TriggersListOptions) UnmarshalJSON(input []byte) error {
    result, err := UnmarshallAnyOf(input,
        NewTypeHolder(&AnomalyTriggerValue{}, false, &t.isAnomalyTriggerValue),
        NewTypeHolder(&TriggerType2{}, false, &t.isTriggerType2),
    )
    
    t.value = result
    return err
}

func (t *TriggersListOptions) AsAnomalyTriggerValue() (
    *AnomalyTriggerValue,
    bool) {
    if !t.isAnomalyTriggerValue {
        return nil, false
    }
    return t.value.(*AnomalyTriggerValue), true
}

func (t *TriggersListOptions) AsTriggerType2() (
    *TriggerType2,
    bool) {
    if !t.isTriggerType2 {
        return nil, false
    }
    return t.value.(*TriggerType2), true
}

// internalTriggersListOptions represents a triggersListOptions struct.
type internalTriggersListOptions struct {}

var TriggersListOptionsContainer internalTriggersListOptions

// The internalTriggersListOptions instance, wrapping the provided AnomalyTriggerValue value.
func (t *internalTriggersListOptions) FromAnomalyTriggerValue(val AnomalyTriggerValue) TriggersListOptions {
    return TriggersListOptions{value: &val}
}

// The internalTriggersListOptions instance, wrapping the provided TriggerType2 value.
func (t *internalTriggersListOptions) FromTriggerType2(val TriggerType2) TriggersListOptions {
    return TriggersListOptions{value: &val}
}
