/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "errors"
    "fmt"
)

// NotifyThreshold represents a NotifyThreshold struct.
// This is Array of a container for any-of cases.
type NotifyThreshold struct {
    value          any
    isCarriercode1 bool
}

// String implements the fmt.Stringer interface for NotifyThreshold,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (n NotifyThreshold) String() string {
    return fmt.Sprintf("%v", n.value)
}

// MarshalJSON implements the json.Marshaler interface for NotifyThreshold.
// It customizes the JSON marshaling process for NotifyThreshold objects.
func (n NotifyThreshold) MarshalJSON() (
    []byte,
    error) {
    if n.value == nil {
        return nil, errors.New("No underlying type is set. Please use any of the `models.NotifyThresholdContainer.From*` functions to initialize the NotifyThreshold object.")
    }
    return json.Marshal(n.toMap())
}

// toMap converts the NotifyThreshold object to a map representation for JSON marshaling.
func (n *NotifyThreshold) toMap() any {
    switch obj := n.value.(type) {
    case *Carriercode1:
        return obj.toMap()
    }
    return nil
}

// UnmarshalJSON implements the json.Unmarshaler interface for NotifyThreshold.
// It customizes the JSON unmarshaling process for NotifyThreshold objects.
func (n *NotifyThreshold) UnmarshalJSON(input []byte) error {
    result, err := UnmarshallAnyOf(input,
        NewTypeHolder(&Carriercode1{}, false, &n.isCarriercode1),
    )
    
    n.value = result
    return err
}

func (n *NotifyThreshold) AsCarriercode1() (
    *Carriercode1,
    bool) {
    if !n.isCarriercode1 {
        return nil, false
    }
    return n.value.(*Carriercode1), true
}

// internalNotifyThreshold represents a notifyThreshold struct.
// This is Array of a container for any-of cases.
type internalNotifyThreshold struct {}

var NotifyThresholdContainer internalNotifyThreshold

// The internalNotifyThreshold instance, wrapping the provided Carriercode1 value.
func (n *internalNotifyThreshold) FromCarriercode1(val Carriercode1) NotifyThreshold {
    return NotifyThreshold{value: &val}
}
