/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// DtoSensorOnBoardStatusRequest represents a DtoSensorOnBoardStatusRequest struct.
type DtoSensorOnBoardStatusRequest struct {
    // The numeric account name, which must include leading zeros
    Accountname       *string            `json:"accountname,omitempty"`
    Gatewayidentifier *Gatewayidentifier `json:"gatewayidentifier,omitempty"`
    Onboarding        *Onboarding        `json:"onboarding,omitempty"`
}

// String implements the fmt.Stringer interface for DtoSensorOnBoardStatusRequest,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (d DtoSensorOnBoardStatusRequest) String() string {
    return fmt.Sprintf(
    	"DtoSensorOnBoardStatusRequest[Accountname=%v, Gatewayidentifier=%v, Onboarding=%v]",
    	d.Accountname, d.Gatewayidentifier, d.Onboarding)
}

// MarshalJSON implements the json.Marshaler interface for DtoSensorOnBoardStatusRequest.
// It customizes the JSON marshaling process for DtoSensorOnBoardStatusRequest objects.
func (d DtoSensorOnBoardStatusRequest) MarshalJSON() (
    []byte,
    error) {
    return json.Marshal(d.toMap())
}

// toMap converts the DtoSensorOnBoardStatusRequest object to a map representation for JSON marshaling.
func (d DtoSensorOnBoardStatusRequest) toMap() map[string]any {
    structMap := make(map[string]any)
    if d.Accountname != nil {
        structMap["accountname"] = d.Accountname
    }
    if d.Gatewayidentifier != nil {
        structMap["gatewayidentifier"] = d.Gatewayidentifier.toMap()
    }
    if d.Onboarding != nil {
        structMap["onboarding"] = d.Onboarding.toMap()
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for DtoSensorOnBoardStatusRequest.
// It customizes the JSON unmarshaling process for DtoSensorOnBoardStatusRequest objects.
func (d *DtoSensorOnBoardStatusRequest) UnmarshalJSON(input []byte) error {
    var temp tempDtoSensorOnBoardStatusRequest
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    
    d.Accountname = temp.Accountname
    d.Gatewayidentifier = temp.Gatewayidentifier
    d.Onboarding = temp.Onboarding
    return nil
}

// tempDtoSensorOnBoardStatusRequest is a temporary struct used for validating the fields of DtoSensorOnBoardStatusRequest.
type tempDtoSensorOnBoardStatusRequest  struct {
    Accountname       *string            `json:"accountname,omitempty"`
    Gatewayidentifier *Gatewayidentifier `json:"gatewayidentifier,omitempty"`
    Onboarding        *Onboarding        `json:"onboarding,omitempty"`
}
