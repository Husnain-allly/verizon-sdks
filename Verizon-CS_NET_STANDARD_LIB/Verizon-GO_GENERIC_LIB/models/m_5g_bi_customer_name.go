/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// M5GBiCustomerName represents a M5GBiCustomerName struct.
type M5GBiCustomerName struct {
    FirstName            *string                `json:"firstName,omitempty"`
    LastName             *string                `json:"lastName,omitempty"`
    MiddleName           *string                `json:"middleName,omitempty"`
    Title                *string                `json:"title,omitempty"`
    Suffex               *string                `json:"suffex,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for M5GBiCustomerName,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (m M5GBiCustomerName) String() string {
    return fmt.Sprintf(
    	"M5GBiCustomerName[FirstName=%v, LastName=%v, MiddleName=%v, Title=%v, Suffex=%v, AdditionalProperties=%v]",
    	m.FirstName, m.LastName, m.MiddleName, m.Title, m.Suffex, m.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for M5GBiCustomerName.
// It customizes the JSON marshaling process for M5GBiCustomerName objects.
func (m M5GBiCustomerName) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(m.AdditionalProperties,
        "firstName", "lastName", "middleName", "title", "suffex"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(m.toMap())
}

// toMap converts the M5GBiCustomerName object to a map representation for JSON marshaling.
func (m M5GBiCustomerName) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, m.AdditionalProperties)
    if m.FirstName != nil {
        structMap["firstName"] = m.FirstName
    }
    if m.LastName != nil {
        structMap["lastName"] = m.LastName
    }
    if m.MiddleName != nil {
        structMap["middleName"] = m.MiddleName
    }
    if m.Title != nil {
        structMap["title"] = m.Title
    }
    if m.Suffex != nil {
        structMap["suffex"] = m.Suffex
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for M5GBiCustomerName.
// It customizes the JSON unmarshaling process for M5GBiCustomerName objects.
func (m *M5GBiCustomerName) UnmarshalJSON(input []byte) error {
    var temp tempM5GBiCustomerName
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "firstName", "lastName", "middleName", "title", "suffex")
    if err != nil {
    	return err
    }
    m.AdditionalProperties = additionalProperties
    
    m.FirstName = temp.FirstName
    m.LastName = temp.LastName
    m.MiddleName = temp.MiddleName
    m.Title = temp.Title
    m.Suffex = temp.Suffex
    return nil
}

// tempM5GBiCustomerName is a temporary struct used for validating the fields of M5GBiCustomerName.
type tempM5GBiCustomerName  struct {
    FirstName  *string `json:"firstName,omitempty"`
    LastName   *string `json:"lastName,omitempty"`
    MiddleName *string `json:"middleName,omitempty"`
    Title      *string `json:"title,omitempty"`
    Suffex     *string `json:"suffex,omitempty"`
}
