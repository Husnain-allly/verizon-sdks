/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// FotaV1SuccessResult represents a FotaV1SuccessResult struct.
// A response to a successful request contains a single Boolean value.
type FotaV1SuccessResult struct {
    // True is returned in case of success.
    Success              *bool                  `json:"success,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for FotaV1SuccessResult,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (f FotaV1SuccessResult) String() string {
    return fmt.Sprintf(
    	"FotaV1SuccessResult[Success=%v, AdditionalProperties=%v]",
    	f.Success, f.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for FotaV1SuccessResult.
// It customizes the JSON marshaling process for FotaV1SuccessResult objects.
func (f FotaV1SuccessResult) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(f.AdditionalProperties,
        "success"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(f.toMap())
}

// toMap converts the FotaV1SuccessResult object to a map representation for JSON marshaling.
func (f FotaV1SuccessResult) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, f.AdditionalProperties)
    if f.Success != nil {
        structMap["success"] = f.Success
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for FotaV1SuccessResult.
// It customizes the JSON unmarshaling process for FotaV1SuccessResult objects.
func (f *FotaV1SuccessResult) UnmarshalJSON(input []byte) error {
    var temp tempFotaV1SuccessResult
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "success")
    if err != nil {
    	return err
    }
    f.AdditionalProperties = additionalProperties
    
    f.Success = temp.Success
    return nil
}

// tempFotaV1SuccessResult is a temporary struct used for validating the fields of FotaV1SuccessResult.
type tempFotaV1SuccessResult  struct {
    Success *bool `json:"success,omitempty"`
}
