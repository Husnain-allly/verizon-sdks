/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// DtoBulkUpdate represents a DtoBulkUpdate struct.
type DtoBulkUpdate struct {
    // The numeric account name, which must include leading zeros
    Accountname          *string                    `json:"accountname,omitempty"`
    Resourceidentifiers  []TheIDresourceandDeviceId `json:"resourceidentifiers,omitempty"`
    Smartalert           *BulkUpdateSmartalert      `json:"smartalert,omitempty"`
    AdditionalProperties map[string]interface{}     `json:"_"`
}

// String implements the fmt.Stringer interface for DtoBulkUpdate,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (d DtoBulkUpdate) String() string {
    return fmt.Sprintf(
    	"DtoBulkUpdate[Accountname=%v, Resourceidentifiers=%v, Smartalert=%v, AdditionalProperties=%v]",
    	d.Accountname, d.Resourceidentifiers, d.Smartalert, d.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for DtoBulkUpdate.
// It customizes the JSON marshaling process for DtoBulkUpdate objects.
func (d DtoBulkUpdate) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(d.AdditionalProperties,
        "accountname", "resourceidentifiers", "smartalert"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(d.toMap())
}

// toMap converts the DtoBulkUpdate object to a map representation for JSON marshaling.
func (d DtoBulkUpdate) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, d.AdditionalProperties)
    if d.Accountname != nil {
        structMap["accountname"] = d.Accountname
    }
    if d.Resourceidentifiers != nil {
        structMap["resourceidentifiers"] = d.Resourceidentifiers
    }
    if d.Smartalert != nil {
        structMap["smartalert"] = d.Smartalert.toMap()
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for DtoBulkUpdate.
// It customizes the JSON unmarshaling process for DtoBulkUpdate objects.
func (d *DtoBulkUpdate) UnmarshalJSON(input []byte) error {
    var temp tempDtoBulkUpdate
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "accountname", "resourceidentifiers", "smartalert")
    if err != nil {
    	return err
    }
    d.AdditionalProperties = additionalProperties
    
    d.Accountname = temp.Accountname
    d.Resourceidentifiers = temp.Resourceidentifiers
    d.Smartalert = temp.Smartalert
    return nil
}

// tempDtoBulkUpdate is a temporary struct used for validating the fields of DtoBulkUpdate.
type tempDtoBulkUpdate  struct {
    Accountname         *string                    `json:"accountname,omitempty"`
    Resourceidentifiers []TheIDresourceandDeviceId `json:"resourceidentifiers,omitempty"`
    Smartalert          *BulkUpdateSmartalert      `json:"smartalert,omitempty"`
}
