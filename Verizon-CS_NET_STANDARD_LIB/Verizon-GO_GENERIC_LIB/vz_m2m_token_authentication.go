/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package verizon

import (
    "errors"
    "github.com/apimatic/go-core-runtime/https"
    "net/http"
)

// VzM2MTokenCredentials represents the credentials required for `VZ-M2M-Token` authentication.
type VzM2MTokenCredentials struct {
    vzM2MToken string
}

// NewVzM2MTokenCredentials creates a new instance of VzM2MTokenCredentials with provided parameters.
func NewVzM2MTokenCredentials(vzM2MToken string) VzM2MTokenCredentials {
    return VzM2MTokenCredentials {
        vzM2MToken: vzM2MToken,
    }
}

// WithVzM2MToken sets vzM2MToken in VzM2MTokenCredentials.
func (v VzM2MTokenCredentials) WithVzM2MToken(vzM2MToken string) VzM2MTokenCredentials {
    v.vzM2MToken = vzM2MToken
    return v
}

// VzM2MToken returns the vzM2MToken associated with the VzM2MTokenCredentials.
func (v VzM2MTokenCredentials) VzM2MToken() string {
    return v.vzM2MToken
}

// Validate function returns validation error associated with the VzM2MTokenCredentials.
func (v VzM2MTokenCredentials) Validate() error {
    if v.vzM2MToken == "" {
        return errors.New("VZ-M2M-Token : missing auth credentials -> VzM2MToken.")
    }
    return nil
}

// Authenticator function returns HttpInterceptor function that provides authentication for API calls.
func (v VzM2MTokenCredentials) Authenticator() https.HttpInterceptor {
    return func(req *http.Request,
        next https.HttpCallExecutor,
    ) https.HttpContext {
            req.Header.Set("VZ-M2M-Token", v.VzM2MToken())
        return next(req)
    }
}
