/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package verizon

import (
    "context"
    "github.com/apimatic/go-core-runtime/https"
    "github.com/apimatic/go-core-runtime/utilities"
    "net/http"
)

// Client is an interface representing the main client for accessing configuration and controllers.
type ClientInterface interface {
    Configuration() Configuration
    CloneWithConfiguration(options ...ConfigurationOptions) ClientInterface
    M5GEdgePlatformsApi() *M5GEdgePlatformsApi
    ServiceEndpointsApi() *ServiceEndpointsApi
    ServiceProfilesApi() *ServiceProfilesApi
    DeviceManagementApi() *DeviceManagementApi
    AccountsApi() *AccountsApi
    DeviceGroupsApi() *DeviceGroupsApi
    SmsApi() *SmsApi
    SessionManagementApi() *SessionManagementApi
    ConnectivityCallbacksApi() *ConnectivityCallbacksApi
    AccountRequestsApi() *AccountRequestsApi
    ServicePlansApi() *ServicePlansApi
    DeviceDiagnosticsApi() *DeviceDiagnosticsApi
    DeviceMonitoringApi() *DeviceMonitoringApi
    DeviceProfileManagementApi() *DeviceProfileManagementApi
    EuiccDeviceProfileManagementApi() *EuiccDeviceProfileManagementApi
    DevicesLocationsApi() *DevicesLocationsApi
    ExclusionsApi() *ExclusionsApi
    DevicesLocationSubscriptionsApi() *DevicesLocationSubscriptionsApi
    DeviceLocationCallbacksApi() *DeviceLocationCallbacksApi
    UsageTriggerManagementApi() *UsageTriggerManagementApi
    BillingApi() *BillingApi
    SoftwareManagementSubscriptionsV1Api() *SoftwareManagementSubscriptionsV1Api
    SoftwareManagementLicensesV1Api() *SoftwareManagementLicensesV1Api
    FirmwareV1Api() *FirmwareV1Api
    SoftwareManagementCallbacksV1Api() *SoftwareManagementCallbacksV1Api
    SoftwareManagementReportsV1Api() *SoftwareManagementReportsV1Api
    SoftwareManagementSubscriptionsV2Api() *SoftwareManagementSubscriptionsV2Api
    SoftwareManagementLicensesV2Api() *SoftwareManagementLicensesV2Api
    CampaignsV2Api() *CampaignsV2Api
    SoftwareManagementCallbacksV2Api() *SoftwareManagementCallbacksV2Api
    SoftwareManagementReportsV2Api() *SoftwareManagementReportsV2Api
    ClientLoggingApi() *ClientLoggingApi
    ServerLoggingApi() *ServerLoggingApi
    ConfigurationFilesApi() *ConfigurationFilesApi
    SoftwareManagementSubscriptionsV3Api() *SoftwareManagementSubscriptionsV3Api
    SoftwareManagementLicensesV3Api() *SoftwareManagementLicensesV3Api
    CampaignsV3Api() *CampaignsV3Api
    SoftwareManagementReportsV3Api() *SoftwareManagementReportsV3Api
    FirmwareV3Api() *FirmwareV3Api
    AccountDevicesApi() *AccountDevicesApi
    SoftwareManagementCallbacksV3Api() *SoftwareManagementCallbacksV3Api
    SimSecureForIoTLicensesApi() *SimSecureForIoTLicensesApi
    AccountSubscriptionsApi() *AccountSubscriptionsApi
    PerformanceMetricsApi() *PerformanceMetricsApi
    DiagnosticsSubscriptionsApi() *DiagnosticsSubscriptionsApi
    DiagnosticsObservationsApi() *DiagnosticsObservationsApi
    DiagnosticsHistoryApi() *DiagnosticsHistoryApi
    DiagnosticsSettingsApi() *DiagnosticsSettingsApi
    DiagnosticsCallbacksApi() *DiagnosticsCallbacksApi
    DiagnosticsFactoryResetApi() *DiagnosticsFactoryResetApi
    TargetsApi() *TargetsApi
    CloudConnectorSubscriptionsApi() *CloudConnectorSubscriptionsApi
    CloudConnectorDevicesApi() *CloudConnectorDevicesApi
    DeviceServiceManagementApi() *DeviceServiceManagementApi
    DeviceReportsApi() *DeviceReportsApi
    HyperPreciseLocationCallbacksApi() *HyperPreciseLocationCallbacksApi
    AnomalySettingsApi() *AnomalySettingsApi
    AnomalyTriggersApi() *AnomalyTriggersApi
    AnomalyTriggersV2Api() *AnomalyTriggersV2Api
    WirelessNetworkPerformanceApi() *WirelessNetworkPerformanceApi
    ManagingEsimProfilesApi() *ManagingEsimProfilesApi
    DeviceSmsMessagingApi() *DeviceSmsMessagingApi
    DeviceActionsApi() *DeviceActionsApi
    ThingSpaceQualityOfServiceApiActionsApi() *ThingSpaceQualityOfServiceApiActionsApi
    PwnApi() *PwnApi
    PromotionPeriodInformationApi() *PromotionPeriodInformationApi
    RetrieveTheTriggersApi() *RetrieveTheTriggersApi
    UpdateTriggersApi() *UpdateTriggersApi
    SimActionsApi() *SimActionsApi
    GlobalReportingApi() *GlobalReportingApi
    RetrieveRatePlanListApi() *RetrieveRatePlanListApi
    CreatePricePlanTriggersApi() *CreatePricePlanTriggersApi
    UpdatePricePlanTriggersApi() *UpdatePricePlanTriggersApi
    M5GBiDeviceActionsApi() *M5GBiDeviceActionsApi
    SensorInsightsSensorsApi() *SensorInsightsSensorsApi
    SensorInsightsDevicesApi() *SensorInsightsDevicesApi
    SensorInsightsGatewaysApi() *SensorInsightsGatewaysApi
    SensorInsightsSmartAlertsApi() *SensorInsightsSmartAlertsApi
    SensorInsightsRulesApi() *SensorInsightsRulesApi
    SensorInsightsHealthScoreApi() *SensorInsightsHealthScoreApi
    SensorInsightsNotificationGroupsApi() *SensorInsightsNotificationGroupsApi
    SensorInsightsUsersApi() *SensorInsightsUsersApi
    SensorInsightsDeviceProfileApi() *SensorInsightsDeviceProfileApi
    SensorInsightsSmartAlertMetricsApi() *SensorInsightsSmartAlertMetricsApi
    AppConfigServiceApi() *AppConfigServiceApi
    RegistrationApi() *RegistrationApi
    MapDataManagerApi() *MapDataManagerApi
    OauthAuthorizationApi() *OauthAuthorizationApi
    UserAgent() *string
    ThingspaceOauthManager() *ThingspaceOauthManager
    ThingspaceOauth1Manager() *ThingspaceOauth1Manager
}

// client is an implementation of the Client interface.
type client struct {
    callBuilderFactory                      https.CallBuilderFactory
    configuration                           Configuration
    userAgent                               string
    m5GEdgePlatformsApi                     M5GEdgePlatformsApi
    serviceEndpointsApi                     ServiceEndpointsApi
    serviceProfilesApi                      ServiceProfilesApi
    deviceManagementApi                     DeviceManagementApi
    accountsApi                             AccountsApi
    deviceGroupsApi                         DeviceGroupsApi
    smsApi                                  SmsApi
    sessionManagementApi                    SessionManagementApi
    connectivityCallbacksApi                ConnectivityCallbacksApi
    accountRequestsApi                      AccountRequestsApi
    servicePlansApi                         ServicePlansApi
    deviceDiagnosticsApi                    DeviceDiagnosticsApi
    deviceMonitoringApi                     DeviceMonitoringApi
    deviceProfileManagementApi              DeviceProfileManagementApi
    euiccDeviceProfileManagementApi         EuiccDeviceProfileManagementApi
    devicesLocationsApi                     DevicesLocationsApi
    exclusionsApi                           ExclusionsApi
    devicesLocationSubscriptionsApi         DevicesLocationSubscriptionsApi
    deviceLocationCallbacksApi              DeviceLocationCallbacksApi
    usageTriggerManagementApi               UsageTriggerManagementApi
    billingApi                              BillingApi
    softwareManagementSubscriptionsV1Api    SoftwareManagementSubscriptionsV1Api
    softwareManagementLicensesV1Api         SoftwareManagementLicensesV1Api
    firmwareV1Api                           FirmwareV1Api
    softwareManagementCallbacksV1Api        SoftwareManagementCallbacksV1Api
    softwareManagementReportsV1Api          SoftwareManagementReportsV1Api
    softwareManagementSubscriptionsV2Api    SoftwareManagementSubscriptionsV2Api
    softwareManagementLicensesV2Api         SoftwareManagementLicensesV2Api
    campaignsV2Api                          CampaignsV2Api
    softwareManagementCallbacksV2Api        SoftwareManagementCallbacksV2Api
    softwareManagementReportsV2Api          SoftwareManagementReportsV2Api
    clientLoggingApi                        ClientLoggingApi
    serverLoggingApi                        ServerLoggingApi
    configurationFilesApi                   ConfigurationFilesApi
    softwareManagementSubscriptionsV3Api    SoftwareManagementSubscriptionsV3Api
    softwareManagementLicensesV3Api         SoftwareManagementLicensesV3Api
    campaignsV3Api                          CampaignsV3Api
    softwareManagementReportsV3Api          SoftwareManagementReportsV3Api
    firmwareV3Api                           FirmwareV3Api
    accountDevicesApi                       AccountDevicesApi
    softwareManagementCallbacksV3Api        SoftwareManagementCallbacksV3Api
    simSecureForIoTLicensesApi              SimSecureForIoTLicensesApi
    accountSubscriptionsApi                 AccountSubscriptionsApi
    performanceMetricsApi                   PerformanceMetricsApi
    diagnosticsSubscriptionsApi             DiagnosticsSubscriptionsApi
    diagnosticsObservationsApi              DiagnosticsObservationsApi
    diagnosticsHistoryApi                   DiagnosticsHistoryApi
    diagnosticsSettingsApi                  DiagnosticsSettingsApi
    diagnosticsCallbacksApi                 DiagnosticsCallbacksApi
    diagnosticsFactoryResetApi              DiagnosticsFactoryResetApi
    targetsApi                              TargetsApi
    cloudConnectorSubscriptionsApi          CloudConnectorSubscriptionsApi
    cloudConnectorDevicesApi                CloudConnectorDevicesApi
    deviceServiceManagementApi              DeviceServiceManagementApi
    deviceReportsApi                        DeviceReportsApi
    hyperPreciseLocationCallbacksApi        HyperPreciseLocationCallbacksApi
    anomalySettingsApi                      AnomalySettingsApi
    anomalyTriggersApi                      AnomalyTriggersApi
    anomalyTriggersV2Api                    AnomalyTriggersV2Api
    wirelessNetworkPerformanceApi           WirelessNetworkPerformanceApi
    managingEsimProfilesApi                 ManagingEsimProfilesApi
    deviceSmsMessagingApi                   DeviceSmsMessagingApi
    deviceActionsApi                        DeviceActionsApi
    thingSpaceQualityOfServiceApiActionsApi ThingSpaceQualityOfServiceApiActionsApi
    pwnApi                                  PwnApi
    promotionPeriodInformationApi           PromotionPeriodInformationApi
    retrieveTheTriggersApi                  RetrieveTheTriggersApi
    updateTriggersApi                       UpdateTriggersApi
    simActionsApi                           SimActionsApi
    globalReportingApi                      GlobalReportingApi
    retrieveRatePlanListApi                 RetrieveRatePlanListApi
    createPricePlanTriggersApi              CreatePricePlanTriggersApi
    updatePricePlanTriggersApi              UpdatePricePlanTriggersApi
    m5GBiDeviceActionsApi                   M5GBiDeviceActionsApi
    sensorInsightsSensorsApi                SensorInsightsSensorsApi
    sensorInsightsDevicesApi                SensorInsightsDevicesApi
    sensorInsightsGatewaysApi               SensorInsightsGatewaysApi
    sensorInsightsSmartAlertsApi            SensorInsightsSmartAlertsApi
    sensorInsightsRulesApi                  SensorInsightsRulesApi
    sensorInsightsHealthScoreApi            SensorInsightsHealthScoreApi
    sensorInsightsNotificationGroupsApi     SensorInsightsNotificationGroupsApi
    sensorInsightsUsersApi                  SensorInsightsUsersApi
    sensorInsightsDeviceProfileApi          SensorInsightsDeviceProfileApi
    sensorInsightsSmartAlertMetricsApi      SensorInsightsSmartAlertMetricsApi
    appConfigServiceApi                     AppConfigServiceApi
    registrationApi                         RegistrationApi
    mapDataManagerApi                       MapDataManagerApi
    oauthAuthorizationApi                   OauthAuthorizationApi
    thingspaceOauthManager                  ThingspaceOauthManager
    thingspaceOauth1Manager                 ThingspaceOauth1Manager
}

// NewClient is the constructor for creating a new client instance.
// It takes a Configuration object as a parameter and returns the Client interface.
func NewClient(configuration Configuration) ClientInterface {
    client := &client{
        configuration: configuration,
    }
    
    client.userAgent = utilities.UpdateUserAgent("Go-SDK/1.3.0 [OS: {os-info}, Engine: {engine}/{engine-version}]")
    client.callBuilderFactory = callBuilderHandler(
    	func(server string) string {
    		if server == "" {
    			server = "Edge Discovery"
    		}
    		return getBaseUri(Server(server), client.configuration)
    	},
    	createAuthenticationFromConfig(configuration, func() *ThingspaceOauthManager { return client.ThingspaceOauthManager() }, func() *ThingspaceOauth1Manager { return client.ThingspaceOauth1Manager() }),
    	https.NewHttpClient(configuration.HttpConfiguration()),
    	configuration.httpConfiguration.RetryConfiguration(),
    	https.Indexed,
        withUserAgent(client.userAgent),
        withLogger(configuration.loggerConfiguration),
    )
    
    baseApi := NewBaseApi(client)
    client.m5GEdgePlatformsApi = *NewM5GEdgePlatformsApi(*baseApi)
    client.serviceEndpointsApi = *NewServiceEndpointsApi(*baseApi)
    client.serviceProfilesApi = *NewServiceProfilesApi(*baseApi)
    client.deviceManagementApi = *NewDeviceManagementApi(*baseApi)
    client.accountsApi = *NewAccountsApi(*baseApi)
    client.deviceGroupsApi = *NewDeviceGroupsApi(*baseApi)
    client.smsApi = *NewSmsApi(*baseApi)
    client.sessionManagementApi = *NewSessionManagementApi(*baseApi)
    client.connectivityCallbacksApi = *NewConnectivityCallbacksApi(*baseApi)
    client.accountRequestsApi = *NewAccountRequestsApi(*baseApi)
    client.servicePlansApi = *NewServicePlansApi(*baseApi)
    client.deviceDiagnosticsApi = *NewDeviceDiagnosticsApi(*baseApi)
    client.deviceMonitoringApi = *NewDeviceMonitoringApi(*baseApi)
    client.deviceProfileManagementApi = *NewDeviceProfileManagementApi(*baseApi)
    client.euiccDeviceProfileManagementApi = *NewEuiccDeviceProfileManagementApi(*baseApi)
    client.devicesLocationsApi = *NewDevicesLocationsApi(*baseApi)
    client.exclusionsApi = *NewExclusionsApi(*baseApi)
    client.devicesLocationSubscriptionsApi = *NewDevicesLocationSubscriptionsApi(*baseApi)
    client.deviceLocationCallbacksApi = *NewDeviceLocationCallbacksApi(*baseApi)
    client.usageTriggerManagementApi = *NewUsageTriggerManagementApi(*baseApi)
    client.billingApi = *NewBillingApi(*baseApi)
    client.softwareManagementSubscriptionsV1Api = *NewSoftwareManagementSubscriptionsV1Api(*baseApi)
    client.softwareManagementLicensesV1Api = *NewSoftwareManagementLicensesV1Api(*baseApi)
    client.firmwareV1Api = *NewFirmwareV1Api(*baseApi)
    client.softwareManagementCallbacksV1Api = *NewSoftwareManagementCallbacksV1Api(*baseApi)
    client.softwareManagementReportsV1Api = *NewSoftwareManagementReportsV1Api(*baseApi)
    client.softwareManagementSubscriptionsV2Api = *NewSoftwareManagementSubscriptionsV2Api(*baseApi)
    client.softwareManagementLicensesV2Api = *NewSoftwareManagementLicensesV2Api(*baseApi)
    client.campaignsV2Api = *NewCampaignsV2Api(*baseApi)
    client.softwareManagementCallbacksV2Api = *NewSoftwareManagementCallbacksV2Api(*baseApi)
    client.softwareManagementReportsV2Api = *NewSoftwareManagementReportsV2Api(*baseApi)
    client.clientLoggingApi = *NewClientLoggingApi(*baseApi)
    client.serverLoggingApi = *NewServerLoggingApi(*baseApi)
    client.configurationFilesApi = *NewConfigurationFilesApi(*baseApi)
    client.softwareManagementSubscriptionsV3Api = *NewSoftwareManagementSubscriptionsV3Api(*baseApi)
    client.softwareManagementLicensesV3Api = *NewSoftwareManagementLicensesV3Api(*baseApi)
    client.campaignsV3Api = *NewCampaignsV3Api(*baseApi)
    client.softwareManagementReportsV3Api = *NewSoftwareManagementReportsV3Api(*baseApi)
    client.firmwareV3Api = *NewFirmwareV3Api(*baseApi)
    client.accountDevicesApi = *NewAccountDevicesApi(*baseApi)
    client.softwareManagementCallbacksV3Api = *NewSoftwareManagementCallbacksV3Api(*baseApi)
    client.simSecureForIoTLicensesApi = *NewSimSecureForIoTLicensesApi(*baseApi)
    client.accountSubscriptionsApi = *NewAccountSubscriptionsApi(*baseApi)
    client.performanceMetricsApi = *NewPerformanceMetricsApi(*baseApi)
    client.diagnosticsSubscriptionsApi = *NewDiagnosticsSubscriptionsApi(*baseApi)
    client.diagnosticsObservationsApi = *NewDiagnosticsObservationsApi(*baseApi)
    client.diagnosticsHistoryApi = *NewDiagnosticsHistoryApi(*baseApi)
    client.diagnosticsSettingsApi = *NewDiagnosticsSettingsApi(*baseApi)
    client.diagnosticsCallbacksApi = *NewDiagnosticsCallbacksApi(*baseApi)
    client.diagnosticsFactoryResetApi = *NewDiagnosticsFactoryResetApi(*baseApi)
    client.targetsApi = *NewTargetsApi(*baseApi)
    client.cloudConnectorSubscriptionsApi = *NewCloudConnectorSubscriptionsApi(*baseApi)
    client.cloudConnectorDevicesApi = *NewCloudConnectorDevicesApi(*baseApi)
    client.deviceServiceManagementApi = *NewDeviceServiceManagementApi(*baseApi)
    client.deviceReportsApi = *NewDeviceReportsApi(*baseApi)
    client.hyperPreciseLocationCallbacksApi = *NewHyperPreciseLocationCallbacksApi(*baseApi)
    client.anomalySettingsApi = *NewAnomalySettingsApi(*baseApi)
    client.anomalyTriggersApi = *NewAnomalyTriggersApi(*baseApi)
    client.anomalyTriggersV2Api = *NewAnomalyTriggersV2Api(*baseApi)
    client.wirelessNetworkPerformanceApi = *NewWirelessNetworkPerformanceApi(*baseApi)
    client.managingEsimProfilesApi = *NewManagingEsimProfilesApi(*baseApi)
    client.deviceSmsMessagingApi = *NewDeviceSmsMessagingApi(*baseApi)
    client.deviceActionsApi = *NewDeviceActionsApi(*baseApi)
    client.thingSpaceQualityOfServiceApiActionsApi = *NewThingSpaceQualityOfServiceApiActionsApi(*baseApi)
    client.pwnApi = *NewPwnApi(*baseApi)
    client.promotionPeriodInformationApi = *NewPromotionPeriodInformationApi(*baseApi)
    client.retrieveTheTriggersApi = *NewRetrieveTheTriggersApi(*baseApi)
    client.updateTriggersApi = *NewUpdateTriggersApi(*baseApi)
    client.simActionsApi = *NewSimActionsApi(*baseApi)
    client.globalReportingApi = *NewGlobalReportingApi(*baseApi)
    client.retrieveRatePlanListApi = *NewRetrieveRatePlanListApi(*baseApi)
    client.createPricePlanTriggersApi = *NewCreatePricePlanTriggersApi(*baseApi)
    client.updatePricePlanTriggersApi = *NewUpdatePricePlanTriggersApi(*baseApi)
    client.m5GBiDeviceActionsApi = *NewM5GBiDeviceActionsApi(*baseApi)
    client.sensorInsightsSensorsApi = *NewSensorInsightsSensorsApi(*baseApi)
    client.sensorInsightsDevicesApi = *NewSensorInsightsDevicesApi(*baseApi)
    client.sensorInsightsGatewaysApi = *NewSensorInsightsGatewaysApi(*baseApi)
    client.sensorInsightsSmartAlertsApi = *NewSensorInsightsSmartAlertsApi(*baseApi)
    client.sensorInsightsRulesApi = *NewSensorInsightsRulesApi(*baseApi)
    client.sensorInsightsHealthScoreApi = *NewSensorInsightsHealthScoreApi(*baseApi)
    client.sensorInsightsNotificationGroupsApi = *NewSensorInsightsNotificationGroupsApi(*baseApi)
    client.sensorInsightsUsersApi = *NewSensorInsightsUsersApi(*baseApi)
    client.sensorInsightsDeviceProfileApi = *NewSensorInsightsDeviceProfileApi(*baseApi)
    client.sensorInsightsSmartAlertMetricsApi = *NewSensorInsightsSmartAlertMetricsApi(*baseApi)
    client.appConfigServiceApi = *NewAppConfigServiceApi(*baseApi)
    client.registrationApi = *NewRegistrationApi(*baseApi)
    client.mapDataManagerApi = *NewMapDataManagerApi(*baseApi)
    client.oauthAuthorizationApi = *NewOauthAuthorizationApi(*baseApi)
    client.thingspaceOauthManager = *newThingspaceOauthManager(configuration.thingspaceOauthCredentials, client.oauthAuthorizationApi)
    client.thingspaceOauth1Manager = *newThingspaceOauth1Manager(configuration.thingspaceOauth1Credentials, client.oauthAuthorizationApi)
    return client
}

// Configuration returns the configuration instance of the client.
func (c *client) Configuration() Configuration {
    return c.configuration
}

// CloneWithConfiguration returns a new copy with the provided options of the configuration instance of the client.
func (c *client) CloneWithConfiguration(options ...ConfigurationOptions) ClientInterface {
    return NewClient(c.configuration.cloneWithOptions(options...))
}

// M5GEdgePlatformsApi returns the m5GEdgePlatformsApi instance of the client.
func (c *client) M5GEdgePlatformsApi() *M5GEdgePlatformsApi {
    return &c.m5GEdgePlatformsApi
}

// ServiceEndpointsApi returns the serviceEndpointsApi instance of the client.
func (c *client) ServiceEndpointsApi() *ServiceEndpointsApi {
    return &c.serviceEndpointsApi
}

// ServiceProfilesApi returns the serviceProfilesApi instance of the client.
func (c *client) ServiceProfilesApi() *ServiceProfilesApi {
    return &c.serviceProfilesApi
}

// DeviceManagementApi returns the deviceManagementApi instance of the client.
func (c *client) DeviceManagementApi() *DeviceManagementApi {
    return &c.deviceManagementApi
}

// AccountsApi returns the accountsApi instance of the client.
func (c *client) AccountsApi() *AccountsApi {
    return &c.accountsApi
}

// DeviceGroupsApi returns the deviceGroupsApi instance of the client.
func (c *client) DeviceGroupsApi() *DeviceGroupsApi {
    return &c.deviceGroupsApi
}

// SmsApi returns the smsApi instance of the client.
func (c *client) SmsApi() *SmsApi {
    return &c.smsApi
}

// SessionManagementApi returns the sessionManagementApi instance of the client.
func (c *client) SessionManagementApi() *SessionManagementApi {
    return &c.sessionManagementApi
}

// ConnectivityCallbacksApi returns the connectivityCallbacksApi instance of the client.
func (c *client) ConnectivityCallbacksApi() *ConnectivityCallbacksApi {
    return &c.connectivityCallbacksApi
}

// AccountRequestsApi returns the accountRequestsApi instance of the client.
func (c *client) AccountRequestsApi() *AccountRequestsApi {
    return &c.accountRequestsApi
}

// ServicePlansApi returns the servicePlansApi instance of the client.
func (c *client) ServicePlansApi() *ServicePlansApi {
    return &c.servicePlansApi
}

// DeviceDiagnosticsApi returns the deviceDiagnosticsApi instance of the client.
func (c *client) DeviceDiagnosticsApi() *DeviceDiagnosticsApi {
    return &c.deviceDiagnosticsApi
}

// DeviceMonitoringApi returns the deviceMonitoringApi instance of the client.
func (c *client) DeviceMonitoringApi() *DeviceMonitoringApi {
    return &c.deviceMonitoringApi
}

// DeviceProfileManagementApi returns the deviceProfileManagementApi instance of the client.
func (c *client) DeviceProfileManagementApi() *DeviceProfileManagementApi {
    return &c.deviceProfileManagementApi
}

// EuiccDeviceProfileManagementApi returns the euiccDeviceProfileManagementApi instance of the client.
func (c *client) EuiccDeviceProfileManagementApi() *EuiccDeviceProfileManagementApi {
    return &c.euiccDeviceProfileManagementApi
}

// DevicesLocationsApi returns the devicesLocationsApi instance of the client.
func (c *client) DevicesLocationsApi() *DevicesLocationsApi {
    return &c.devicesLocationsApi
}

// ExclusionsApi returns the exclusionsApi instance of the client.
func (c *client) ExclusionsApi() *ExclusionsApi {
    return &c.exclusionsApi
}

// DevicesLocationSubscriptionsApi returns the devicesLocationSubscriptionsApi instance of the client.
func (c *client) DevicesLocationSubscriptionsApi() *DevicesLocationSubscriptionsApi {
    return &c.devicesLocationSubscriptionsApi
}

// DeviceLocationCallbacksApi returns the deviceLocationCallbacksApi instance of the client.
func (c *client) DeviceLocationCallbacksApi() *DeviceLocationCallbacksApi {
    return &c.deviceLocationCallbacksApi
}

// UsageTriggerManagementApi returns the usageTriggerManagementApi instance of the client.
func (c *client) UsageTriggerManagementApi() *UsageTriggerManagementApi {
    return &c.usageTriggerManagementApi
}

// BillingApi returns the billingApi instance of the client.
func (c *client) BillingApi() *BillingApi {
    return &c.billingApi
}

// SoftwareManagementSubscriptionsV1Api returns the softwareManagementSubscriptionsV1Api instance of the client.
func (c *client) SoftwareManagementSubscriptionsV1Api() *SoftwareManagementSubscriptionsV1Api {
    return &c.softwareManagementSubscriptionsV1Api
}

// SoftwareManagementLicensesV1Api returns the softwareManagementLicensesV1Api instance of the client.
func (c *client) SoftwareManagementLicensesV1Api() *SoftwareManagementLicensesV1Api {
    return &c.softwareManagementLicensesV1Api
}

// FirmwareV1Api returns the firmwareV1Api instance of the client.
func (c *client) FirmwareV1Api() *FirmwareV1Api {
    return &c.firmwareV1Api
}

// SoftwareManagementCallbacksV1Api returns the softwareManagementCallbacksV1Api instance of the client.
func (c *client) SoftwareManagementCallbacksV1Api() *SoftwareManagementCallbacksV1Api {
    return &c.softwareManagementCallbacksV1Api
}

// SoftwareManagementReportsV1Api returns the softwareManagementReportsV1Api instance of the client.
func (c *client) SoftwareManagementReportsV1Api() *SoftwareManagementReportsV1Api {
    return &c.softwareManagementReportsV1Api
}

// SoftwareManagementSubscriptionsV2Api returns the softwareManagementSubscriptionsV2Api instance of the client.
func (c *client) SoftwareManagementSubscriptionsV2Api() *SoftwareManagementSubscriptionsV2Api {
    return &c.softwareManagementSubscriptionsV2Api
}

// SoftwareManagementLicensesV2Api returns the softwareManagementLicensesV2Api instance of the client.
func (c *client) SoftwareManagementLicensesV2Api() *SoftwareManagementLicensesV2Api {
    return &c.softwareManagementLicensesV2Api
}

// CampaignsV2Api returns the campaignsV2Api instance of the client.
func (c *client) CampaignsV2Api() *CampaignsV2Api {
    return &c.campaignsV2Api
}

// SoftwareManagementCallbacksV2Api returns the softwareManagementCallbacksV2Api instance of the client.
func (c *client) SoftwareManagementCallbacksV2Api() *SoftwareManagementCallbacksV2Api {
    return &c.softwareManagementCallbacksV2Api
}

// SoftwareManagementReportsV2Api returns the softwareManagementReportsV2Api instance of the client.
func (c *client) SoftwareManagementReportsV2Api() *SoftwareManagementReportsV2Api {
    return &c.softwareManagementReportsV2Api
}

// ClientLoggingApi returns the clientLoggingApi instance of the client.
func (c *client) ClientLoggingApi() *ClientLoggingApi {
    return &c.clientLoggingApi
}

// ServerLoggingApi returns the serverLoggingApi instance of the client.
func (c *client) ServerLoggingApi() *ServerLoggingApi {
    return &c.serverLoggingApi
}

// ConfigurationFilesApi returns the configurationFilesApi instance of the client.
func (c *client) ConfigurationFilesApi() *ConfigurationFilesApi {
    return &c.configurationFilesApi
}

// SoftwareManagementSubscriptionsV3Api returns the softwareManagementSubscriptionsV3Api instance of the client.
func (c *client) SoftwareManagementSubscriptionsV3Api() *SoftwareManagementSubscriptionsV3Api {
    return &c.softwareManagementSubscriptionsV3Api
}

// SoftwareManagementLicensesV3Api returns the softwareManagementLicensesV3Api instance of the client.
func (c *client) SoftwareManagementLicensesV3Api() *SoftwareManagementLicensesV3Api {
    return &c.softwareManagementLicensesV3Api
}

// CampaignsV3Api returns the campaignsV3Api instance of the client.
func (c *client) CampaignsV3Api() *CampaignsV3Api {
    return &c.campaignsV3Api
}

// SoftwareManagementReportsV3Api returns the softwareManagementReportsV3Api instance of the client.
func (c *client) SoftwareManagementReportsV3Api() *SoftwareManagementReportsV3Api {
    return &c.softwareManagementReportsV3Api
}

// FirmwareV3Api returns the firmwareV3Api instance of the client.
func (c *client) FirmwareV3Api() *FirmwareV3Api {
    return &c.firmwareV3Api
}

// AccountDevicesApi returns the accountDevicesApi instance of the client.
func (c *client) AccountDevicesApi() *AccountDevicesApi {
    return &c.accountDevicesApi
}

// SoftwareManagementCallbacksV3Api returns the softwareManagementCallbacksV3Api instance of the client.
func (c *client) SoftwareManagementCallbacksV3Api() *SoftwareManagementCallbacksV3Api {
    return &c.softwareManagementCallbacksV3Api
}

// SimSecureForIoTLicensesApi returns the simSecureForIoTLicensesApi instance of the client.
func (c *client) SimSecureForIoTLicensesApi() *SimSecureForIoTLicensesApi {
    return &c.simSecureForIoTLicensesApi
}

// AccountSubscriptionsApi returns the accountSubscriptionsApi instance of the client.
func (c *client) AccountSubscriptionsApi() *AccountSubscriptionsApi {
    return &c.accountSubscriptionsApi
}

// PerformanceMetricsApi returns the performanceMetricsApi instance of the client.
func (c *client) PerformanceMetricsApi() *PerformanceMetricsApi {
    return &c.performanceMetricsApi
}

// DiagnosticsSubscriptionsApi returns the diagnosticsSubscriptionsApi instance of the client.
func (c *client) DiagnosticsSubscriptionsApi() *DiagnosticsSubscriptionsApi {
    return &c.diagnosticsSubscriptionsApi
}

// DiagnosticsObservationsApi returns the diagnosticsObservationsApi instance of the client.
func (c *client) DiagnosticsObservationsApi() *DiagnosticsObservationsApi {
    return &c.diagnosticsObservationsApi
}

// DiagnosticsHistoryApi returns the diagnosticsHistoryApi instance of the client.
func (c *client) DiagnosticsHistoryApi() *DiagnosticsHistoryApi {
    return &c.diagnosticsHistoryApi
}

// DiagnosticsSettingsApi returns the diagnosticsSettingsApi instance of the client.
func (c *client) DiagnosticsSettingsApi() *DiagnosticsSettingsApi {
    return &c.diagnosticsSettingsApi
}

// DiagnosticsCallbacksApi returns the diagnosticsCallbacksApi instance of the client.
func (c *client) DiagnosticsCallbacksApi() *DiagnosticsCallbacksApi {
    return &c.diagnosticsCallbacksApi
}

// DiagnosticsFactoryResetApi returns the diagnosticsFactoryResetApi instance of the client.
func (c *client) DiagnosticsFactoryResetApi() *DiagnosticsFactoryResetApi {
    return &c.diagnosticsFactoryResetApi
}

// TargetsApi returns the targetsApi instance of the client.
func (c *client) TargetsApi() *TargetsApi {
    return &c.targetsApi
}

// CloudConnectorSubscriptionsApi returns the cloudConnectorSubscriptionsApi instance of the client.
func (c *client) CloudConnectorSubscriptionsApi() *CloudConnectorSubscriptionsApi {
    return &c.cloudConnectorSubscriptionsApi
}

// CloudConnectorDevicesApi returns the cloudConnectorDevicesApi instance of the client.
func (c *client) CloudConnectorDevicesApi() *CloudConnectorDevicesApi {
    return &c.cloudConnectorDevicesApi
}

// DeviceServiceManagementApi returns the deviceServiceManagementApi instance of the client.
func (c *client) DeviceServiceManagementApi() *DeviceServiceManagementApi {
    return &c.deviceServiceManagementApi
}

// DeviceReportsApi returns the deviceReportsApi instance of the client.
func (c *client) DeviceReportsApi() *DeviceReportsApi {
    return &c.deviceReportsApi
}

// HyperPreciseLocationCallbacksApi returns the hyperPreciseLocationCallbacksApi instance of the client.
func (c *client) HyperPreciseLocationCallbacksApi() *HyperPreciseLocationCallbacksApi {
    return &c.hyperPreciseLocationCallbacksApi
}

// AnomalySettingsApi returns the anomalySettingsApi instance of the client.
func (c *client) AnomalySettingsApi() *AnomalySettingsApi {
    return &c.anomalySettingsApi
}

// AnomalyTriggersApi returns the anomalyTriggersApi instance of the client.
func (c *client) AnomalyTriggersApi() *AnomalyTriggersApi {
    return &c.anomalyTriggersApi
}

// AnomalyTriggersV2Api returns the anomalyTriggersV2Api instance of the client.
func (c *client) AnomalyTriggersV2Api() *AnomalyTriggersV2Api {
    return &c.anomalyTriggersV2Api
}

// WirelessNetworkPerformanceApi returns the wirelessNetworkPerformanceApi instance of the client.
func (c *client) WirelessNetworkPerformanceApi() *WirelessNetworkPerformanceApi {
    return &c.wirelessNetworkPerformanceApi
}

// ManagingEsimProfilesApi returns the managingEsimProfilesApi instance of the client.
func (c *client) ManagingEsimProfilesApi() *ManagingEsimProfilesApi {
    return &c.managingEsimProfilesApi
}

// DeviceSmsMessagingApi returns the deviceSmsMessagingApi instance of the client.
func (c *client) DeviceSmsMessagingApi() *DeviceSmsMessagingApi {
    return &c.deviceSmsMessagingApi
}

// DeviceActionsApi returns the deviceActionsApi instance of the client.
func (c *client) DeviceActionsApi() *DeviceActionsApi {
    return &c.deviceActionsApi
}

// ThingSpaceQualityOfServiceApiActionsApi returns the thingSpaceQualityOfServiceApiActionsApi instance of the client.
func (c *client) ThingSpaceQualityOfServiceApiActionsApi() *ThingSpaceQualityOfServiceApiActionsApi {
    return &c.thingSpaceQualityOfServiceApiActionsApi
}

// PwnApi returns the pwnApi instance of the client.
func (c *client) PwnApi() *PwnApi {
    return &c.pwnApi
}

// PromotionPeriodInformationApi returns the promotionPeriodInformationApi instance of the client.
func (c *client) PromotionPeriodInformationApi() *PromotionPeriodInformationApi {
    return &c.promotionPeriodInformationApi
}

// RetrieveTheTriggersApi returns the retrieveTheTriggersApi instance of the client.
func (c *client) RetrieveTheTriggersApi() *RetrieveTheTriggersApi {
    return &c.retrieveTheTriggersApi
}

// UpdateTriggersApi returns the updateTriggersApi instance of the client.
func (c *client) UpdateTriggersApi() *UpdateTriggersApi {
    return &c.updateTriggersApi
}

// SimActionsApi returns the simActionsApi instance of the client.
func (c *client) SimActionsApi() *SimActionsApi {
    return &c.simActionsApi
}

// GlobalReportingApi returns the globalReportingApi instance of the client.
func (c *client) GlobalReportingApi() *GlobalReportingApi {
    return &c.globalReportingApi
}

// RetrieveRatePlanListApi returns the retrieveRatePlanListApi instance of the client.
func (c *client) RetrieveRatePlanListApi() *RetrieveRatePlanListApi {
    return &c.retrieveRatePlanListApi
}

// CreatePricePlanTriggersApi returns the createPricePlanTriggersApi instance of the client.
func (c *client) CreatePricePlanTriggersApi() *CreatePricePlanTriggersApi {
    return &c.createPricePlanTriggersApi
}

// UpdatePricePlanTriggersApi returns the updatePricePlanTriggersApi instance of the client.
func (c *client) UpdatePricePlanTriggersApi() *UpdatePricePlanTriggersApi {
    return &c.updatePricePlanTriggersApi
}

// M5GBiDeviceActionsApi returns the m5GBiDeviceActionsApi instance of the client.
func (c *client) M5GBiDeviceActionsApi() *M5GBiDeviceActionsApi {
    return &c.m5GBiDeviceActionsApi
}

// SensorInsightsSensorsApi returns the sensorInsightsSensorsApi instance of the client.
func (c *client) SensorInsightsSensorsApi() *SensorInsightsSensorsApi {
    return &c.sensorInsightsSensorsApi
}

// SensorInsightsDevicesApi returns the sensorInsightsDevicesApi instance of the client.
func (c *client) SensorInsightsDevicesApi() *SensorInsightsDevicesApi {
    return &c.sensorInsightsDevicesApi
}

// SensorInsightsGatewaysApi returns the sensorInsightsGatewaysApi instance of the client.
func (c *client) SensorInsightsGatewaysApi() *SensorInsightsGatewaysApi {
    return &c.sensorInsightsGatewaysApi
}

// SensorInsightsSmartAlertsApi returns the sensorInsightsSmartAlertsApi instance of the client.
func (c *client) SensorInsightsSmartAlertsApi() *SensorInsightsSmartAlertsApi {
    return &c.sensorInsightsSmartAlertsApi
}

// SensorInsightsRulesApi returns the sensorInsightsRulesApi instance of the client.
func (c *client) SensorInsightsRulesApi() *SensorInsightsRulesApi {
    return &c.sensorInsightsRulesApi
}

// SensorInsightsHealthScoreApi returns the sensorInsightsHealthScoreApi instance of the client.
func (c *client) SensorInsightsHealthScoreApi() *SensorInsightsHealthScoreApi {
    return &c.sensorInsightsHealthScoreApi
}

// SensorInsightsNotificationGroupsApi returns the sensorInsightsNotificationGroupsApi instance of the client.
func (c *client) SensorInsightsNotificationGroupsApi() *SensorInsightsNotificationGroupsApi {
    return &c.sensorInsightsNotificationGroupsApi
}

// SensorInsightsUsersApi returns the sensorInsightsUsersApi instance of the client.
func (c *client) SensorInsightsUsersApi() *SensorInsightsUsersApi {
    return &c.sensorInsightsUsersApi
}

// SensorInsightsDeviceProfileApi returns the sensorInsightsDeviceProfileApi instance of the client.
func (c *client) SensorInsightsDeviceProfileApi() *SensorInsightsDeviceProfileApi {
    return &c.sensorInsightsDeviceProfileApi
}

// SensorInsightsSmartAlertMetricsApi returns the sensorInsightsSmartAlertMetricsApi instance of the client.
func (c *client) SensorInsightsSmartAlertMetricsApi() *SensorInsightsSmartAlertMetricsApi {
    return &c.sensorInsightsSmartAlertMetricsApi
}

// AppConfigServiceApi returns the appConfigServiceApi instance of the client.
func (c *client) AppConfigServiceApi() *AppConfigServiceApi {
    return &c.appConfigServiceApi
}

// RegistrationApi returns the registrationApi instance of the client.
func (c *client) RegistrationApi() *RegistrationApi {
    return &c.registrationApi
}

// MapDataManagerApi returns the mapDataManagerApi instance of the client.
func (c *client) MapDataManagerApi() *MapDataManagerApi {
    return &c.mapDataManagerApi
}

// OauthAuthorizationApi returns the oauthAuthorizationApi instance of the client.
func (c *client) OauthAuthorizationApi() *OauthAuthorizationApi {
    return &c.oauthAuthorizationApi
}

// ThingspaceOauthManager returns the thingspaceOauthManager instance of the client.
func (c *client) ThingspaceOauthManager() *ThingspaceOauthManager {
    return &c.thingspaceOauthManager
}

// ThingspaceOauth1Manager returns the thingspaceOauth1Manager instance of the client.
func (c *client) ThingspaceOauth1Manager() *ThingspaceOauth1Manager {
    return &c.thingspaceOauth1Manager
}

// UserAgent returns the userAgent instance of the client.
func (c *client) UserAgent() *string {
    return &c.userAgent
}

// GetCallBuilder returns the CallBuilderFactory used by the client.
func (c *client) GetCallBuilder() https.CallBuilderFactory {
    return c.callBuilderFactory
}

// getBaseUri returns the base URI based on the server and configuration.
func getBaseUri(
    server Server,
    configuration Configuration) string {
    if configuration.Environment() == Environment(PRODUCTION) {
        if server == Server(EdgeDiscovery) {
            return "https://5gedge.verizon.com/api/mec/eds"
        }
        if server == Server(ImpServer) {
            return "https://imp.thingspace.verizon.com"
        }
        if server == Server(Thingspace) {
            return "https://thingspace.verizon.com/api"
        }
        if server == Server(OauthServer) {
            return "https://thingspace.verizon.com/api/ts/v1"
        }
        if server == Server(M2M) {
            return "https://thingspace.verizon.com/api/m2m"
        }
        if server == Server(DeviceLocation) {
            return "https://thingspace.verizon.com/api/loc/v1"
        }
        if server == Server(SubscriptionServer) {
            return "https://thingspace.verizon.com/api/subsc/v1"
        }
        if server == Server(SoftwareManagementV1) {
            return "https://thingspace.verizon.com/api/fota/v1"
        }
        if server == Server(SoftwareManagementV2) {
            return "https://thingspace.verizon.com/api/fota/v2"
        }
        if server == Server(SoftwareManagementV3) {
            return "https://thingspace.verizon.com/api/fota/v3"
        }
        if server == Server(Performance) {
            return "https://5gedge.verizon.com/api/mec"
        }
        if server == Server(DeviceDiagnostics) {
            return "https://thingspace.verizon.com/api/diagnostics/v1"
        }
        if server == Server(CloudConnector) {
            return "https://thingspace.verizon.com/api/cc/v1"
        }
        if server == Server(HyperPreciseLocation) {
            return "https://thingspace.verizon.com/api/hyper-precise/v1"
        }
        if server == Server(Services) {
            return "https://5gedge.verizon.com/api/mec/services"
        }
        if server == Server(QualityOfService) {
            return "https://thingspace.verizon.com/api/m2m/v1/devices"
        }
    }
    if configuration.Environment() == Environment(MOCK_SERVER_FOR_LIMITED_AVAILABILITY_SEE_QUICK_START) {
        if server == Server(EdgeDiscovery) {
            return "https://mock.thingspace.verizon.com/api/mec/eds"
        }
        if server == Server(ImpServer) {
            return "https://mock.thingspace.verizon.com"
        }
        if server == Server(Thingspace) {
            return "https://mock.thingspace.verizon.com/api"
        }
        if server == Server(OauthServer) {
            return "https://mock.thingspace.verizon.com/api/ts/v1"
        }
        if server == Server(M2M) {
            return "https://mock.thingspace.verizon.com/api/m2m"
        }
        if server == Server(DeviceLocation) {
            return "https://mock.thingspace.verizon.com/api/loc/v1"
        }
        if server == Server(SubscriptionServer) {
            return "https://mock.thingspace.verizon.com/api/subsc/v1"
        }
        if server == Server(SoftwareManagementV1) {
            return "https://mock.thingspace.verizon.com/api/fota/v1"
        }
        if server == Server(SoftwareManagementV2) {
            return "https://mock.thingspace.verizon.com/api/fota/v2"
        }
        if server == Server(SoftwareManagementV3) {
            return "https://mock.thingspace.verizon.com/api/fota/v3"
        }
        if server == Server(Performance) {
            return "https://mock.thingspace.verizon.com/api/mec"
        }
        if server == Server(DeviceDiagnostics) {
            return "https://mock.thingspace.verizon.com/api/diagnostics/v1"
        }
        if server == Server(CloudConnector) {
            return "https://mock.thingspace.verizon.com/api/cc/v1"
        }
        if server == Server(HyperPreciseLocation) {
            return "https://mock.thingspace.verizon.com/api/hyper-precise/v1"
        }
        if server == Server(Services) {
            return "https://mock.thingspace.verizon.com/api/mec/services"
        }
        if server == Server(QualityOfService) {
            return "https://mock.thingspace.verizon.com/api/m2m/v1/devices"
        }
    }
    return "TODO: Select a valid server."
}

// clientOptions is a function type representing options for the client.
type clientOptions func(cb https.CallBuilder)

// callBuilderHandler creates the call builder factory with various options.
func callBuilderHandler(
    baseUrlProvider func(server string) string,
    auth map[string]https.AuthInterface,
    httpClient https.HttpClient,
    retryConfig RetryConfiguration,
    arraySerializationOption https.ArraySerializationOption,
    opts ...clientOptions) https.CallBuilderFactory {
    callBuilderFactory := https.CreateCallBuilderFactory(baseUrlProvider, auth, httpClient, retryConfig, arraySerializationOption)
    return tap(callBuilderFactory, opts...)
}

// tap is a utility function to apply client options to the call builder factory.
func tap(
    callBuilderFactory https.CallBuilderFactory,
    opts ...clientOptions) https.CallBuilderFactory {
    return func(ctx context.Context, httpMethod, path string) https.CallBuilder {
    	callBuilder := callBuilderFactory(ctx, httpMethod, path)
    	for _, opt := range opts {
    		opt(callBuilder)
    	}
    	return callBuilder
    }
}

// withUserAgent is an option to add a user agent header to the HTTP request.
func withUserAgent(userAgent string) clientOptions {
    f := func(request *http.Request) *http.Request {
    	request.Header.Set("user-agent", userAgent)
    	return request
    }
    return func(cb https.CallBuilder) {
    	cb.InterceptRequest(f)
    }
}

// withLogger will add a new instance of SdkLoggerInterface to callBuilder.
func withLogger(loggerConfiguration LoggerConfiguration) clientOptions {
    return func(cb https.CallBuilder) {
        cb.Logger(NewSdkLogger(loggerConfiguration))
    }
}
