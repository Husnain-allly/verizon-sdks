/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.verizon.m5gedge.models.containers.Message3;
import java.util.List;

/**
 * This is a model class for GeoFenceConfigurationResponse type.
 */
public class GeoFenceConfigurationResponse {
    private String id;
    private String vendorId;
    private String name;
    private String description;
    private EtxGeofence geoFence;
    private List<Message3> messages;
    private boolean isActive;

    /**
     * Default constructor.
     */
    public GeoFenceConfigurationResponse() {
    }

    /**
     * Initialization constructor.
     * @param  id  String value for id.
     * @param  vendorId  String value for vendorId.
     * @param  geoFence  EtxGeofence value for geoFence.
     * @param  messages  List of Message3 value for messages.
     * @param  isActive  boolean value for isActive.
     * @param  name  String value for name.
     * @param  description  String value for description.
     */
    public GeoFenceConfigurationResponse(
            String id,
            String vendorId,
            EtxGeofence geoFence,
            List<Message3> messages,
            boolean isActive,
            String name,
            String description) {
        this.id = id;
        this.vendorId = vendorId;
        this.name = name;
        this.description = description;
        this.geoFence = geoFence;
        this.messages = messages;
        this.isActive = isActive;
    }

    /**
     * Getter for Id.
     * The generated ID (UUID v4) for the configuration. It has to be used when asking for changing
     * any of the configuration parameters.
     * @return Returns the String
     */
    @JsonGetter("id")
    public String getId() {
        return id;
    }

    /**
     * Setter for Id.
     * The generated ID (UUID v4) for the configuration. It has to be used when asking for changing
     * any of the configuration parameters.
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for VendorId.
     * The vendor that the configuration belongs to. E.g. Verizon, GM, Ford, etc.
     * @return Returns the String
     */
    @JsonGetter("vendorId")
    public String getVendorId() {
        return vendorId;
    }

    /**
     * Setter for VendorId.
     * The vendor that the configuration belongs to. E.g. Verizon, GM, Ford, etc.
     * @param vendorId Value for String
     */
    @JsonSetter("vendorId")
    public void setVendorId(String vendorId) {
        this.vendorId = vendorId;
    }

    /**
     * Getter for Name.
     * Name of the configuration.
     * @return Returns the String
     */
    @JsonGetter("name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * Name of the configuration.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for Description.
     * Description of the configuration.
     * @return Returns the String
     */
    @JsonGetter("description")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDescription() {
        return description;
    }

    /**
     * Setter for Description.
     * Description of the configuration.
     * @param description Value for String
     */
    @JsonSetter("description")
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for GeoFence.
     * The GeoJSON representation of geofence. Geofence supports the following geometry types:
     * LineString, Polygon, MultiLineString, and MultiPolygon. The system only supports a single
     * Feature in the FeatureCollection, so only one Line, Polygon, MultiLine or MultiPolygon can be
     * defined within one Geofencing configuration.
     * @return Returns the EtxGeofence
     */
    @JsonGetter("geoFence")
    public EtxGeofence getGeoFence() {
        return geoFence;
    }

    /**
     * Setter for GeoFence.
     * The GeoJSON representation of geofence. Geofence supports the following geometry types:
     * LineString, Polygon, MultiLineString, and MultiPolygon. The system only supports a single
     * Feature in the FeatureCollection, so only one Line, Polygon, MultiLine or MultiPolygon can be
     * defined within one Geofencing configuration.
     * @param geoFence Value for EtxGeofence
     */
    @JsonSetter("geoFence")
    public void setGeoFence(EtxGeofence geoFence) {
        this.geoFence = geoFence;
    }

    /**
     * Getter for Messages.
     * List of predefined messages that belongs to the geofence. These are the messages that are
     * sent out by the system when the Trigger Condition for the message is met.
     * @return Returns the List of Message3
     */
    @JsonGetter("messages")
    public List<Message3> getMessages() {
        return messages;
    }

    /**
     * Setter for Messages.
     * List of predefined messages that belongs to the geofence. These are the messages that are
     * sent out by the system when the Trigger Condition for the message is met.
     * @param messages Value for List of Message3
     */
    @JsonSetter("messages")
    public void setMessages(List<Message3> messages) {
        this.messages = messages;
    }

    /**
     * Getter for IsActive.
     * @return Returns the boolean
     */
    @JsonGetter("isActive")
    public boolean getIsActive() {
        return isActive;
    }

    /**
     * Setter for IsActive.
     * @param isActive Value for boolean
     */
    @JsonSetter("isActive")
    public void setIsActive(boolean isActive) {
        this.isActive = isActive;
    }

    /**
     * Converts this GeoFenceConfigurationResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "GeoFenceConfigurationResponse [" + "id=" + id + ", vendorId=" + vendorId
                + ", geoFence=" + geoFence + ", messages=" + messages + ", isActive=" + isActive
                + ", name=" + name + ", description=" + description + "]";
    }

    /**
     * Builds a new {@link GeoFenceConfigurationResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link GeoFenceConfigurationResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(id, vendorId, geoFence, messages, isActive)
                .name(getName())
                .description(getDescription());
        return builder;
    }

    /**
     * Class to build instances of {@link GeoFenceConfigurationResponse}.
     */
    public static class Builder {
        private String id;
        private String vendorId;
        private EtxGeofence geoFence;
        private List<Message3> messages;
        private boolean isActive;
        private String name;
        private String description;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  id  String value for id.
         * @param  vendorId  String value for vendorId.
         * @param  geoFence  EtxGeofence value for geoFence.
         * @param  messages  List of Message3 value for messages.
         * @param  isActive  boolean value for isActive.
         */
        public Builder(String id, String vendorId, EtxGeofence geoFence, List<Message3> messages,
                boolean isActive) {
            this.id = id;
            this.vendorId = vendorId;
            this.geoFence = geoFence;
            this.messages = messages;
            this.isActive = isActive;
        }

        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for vendorId.
         * @param  vendorId  String value for vendorId.
         * @return Builder
         */
        public Builder vendorId(String vendorId) {
            this.vendorId = vendorId;
            return this;
        }

        /**
         * Setter for geoFence.
         * @param  geoFence  EtxGeofence value for geoFence.
         * @return Builder
         */
        public Builder geoFence(EtxGeofence geoFence) {
            this.geoFence = geoFence;
            return this;
        }

        /**
         * Setter for messages.
         * @param  messages  List of Message3 value for messages.
         * @return Builder
         */
        public Builder messages(List<Message3> messages) {
            this.messages = messages;
            return this;
        }

        /**
         * Setter for isActive.
         * @param  isActive  boolean value for isActive.
         * @return Builder
         */
        public Builder isActive(boolean isActive) {
            this.isActive = isActive;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for description.
         * @param  description  String value for description.
         * @return Builder
         */
        public Builder description(String description) {
            this.description = description;
            return this;
        }

        /**
         * Builds a new {@link GeoFenceConfigurationResponse} object using the set fields.
         * @return {@link GeoFenceConfigurationResponse}
         */
        public GeoFenceConfigurationResponse build() {
            return new GeoFenceConfigurationResponse(id, vendorId, geoFence, messages, isActive,
                    name, description);
        }
    }
}
