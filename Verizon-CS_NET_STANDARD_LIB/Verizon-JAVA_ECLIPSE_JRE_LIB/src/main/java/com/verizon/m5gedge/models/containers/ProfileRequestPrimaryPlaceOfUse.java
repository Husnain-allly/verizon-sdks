/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models.containers;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.verizon.m5gedge.ApiHelper;
import com.verizon.m5gedge.models.Addressquery;
import com.verizon.m5gedge.models.Customernamequery;
import io.apimatic.core.annotations.TypeCombinator.TypeCombinatorCase;
import java.io.IOException;
import java.util.Arrays;

/**
 * This is a container class for any-of types.
 */
@JsonDeserialize(using = ProfileRequestPrimaryPlaceOfUse.ProfileRequestPrimaryPlaceOfUseDeserializer.class)
public abstract class ProfileRequestPrimaryPlaceOfUse {
    
    /**
     * This is customernamequery case.
     * @param customernamequery Customernamequery value for customernamequery.
     * @return The CustomernamequeryCase object.
     */
    public static ProfileRequestPrimaryPlaceOfUse fromCustomernamequery(
            Customernamequery customernamequery) {
        return customernamequery == null ? null : new CustomernamequeryCase(customernamequery);
    }

    /**
     * This is addressquery case.
     * @param addressquery Addressquery value for addressquery.
     * @return The AddressqueryCase object.
     */
    public static ProfileRequestPrimaryPlaceOfUse fromAddressquery(Addressquery addressquery) {
        return addressquery == null ? null : new AddressqueryCase(addressquery);
    }

    /**
     * Method to match from the provided any-of cases.
     * @param <R> The type to return after applying callback.
     * @param cases The any-of type cases callback.
     * @return The any-of matched case.
     */
    public abstract <R> R match(Cases<R> cases);

    /**
     * This is interface for any-of cases.
     * @param <R> The type to return after applying callback.
     */
    public interface Cases<R> {
        R customernamequery(Customernamequery customernamequery);

        R addressquery(Addressquery addressquery);
    }

    /**
     * This is a implementation class for CustomernamequeryCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "Customernamequery")
    private static class CustomernamequeryCase extends ProfileRequestPrimaryPlaceOfUse {

        @JsonValue
        private Customernamequery customernamequery;

        CustomernamequeryCase(Customernamequery customernamequery) {
            this.customernamequery = customernamequery;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.customernamequery(this.customernamequery);
        }

        @JsonCreator
        private CustomernamequeryCase(JsonNode jsonNode) throws IOException {
            this.customernamequery = ApiHelper.deserialize(jsonNode,
                Customernamequery.class);
        }

        @Override
        public String toString() {
            return customernamequery.toString();
        }
    }

    /**
     * This is a implementation class for AddressqueryCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "Addressquery")
    private static class AddressqueryCase extends ProfileRequestPrimaryPlaceOfUse {

        @JsonValue
        private Addressquery addressquery;

        AddressqueryCase(Addressquery addressquery) {
            this.addressquery = addressquery;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.addressquery(this.addressquery);
        }

        @JsonCreator
        private AddressqueryCase(JsonNode jsonNode) throws IOException {
            this.addressquery = ApiHelper.deserialize(jsonNode,
                Addressquery.class);
        }

        @Override
        public String toString() {
            return addressquery.toString();
        }
    }

    /**
     * This is a custom deserializer class for ProfileRequestPrimaryPlaceOfUse.
     */
    protected static class ProfileRequestPrimaryPlaceOfUseDeserializer
            extends JsonDeserializer<ProfileRequestPrimaryPlaceOfUse> {

        @Override
        public ProfileRequestPrimaryPlaceOfUse deserialize(JsonParser jp, DeserializationContext ctxt)
                throws IOException, JsonProcessingException {
            ObjectCodec oc = jp.getCodec();
            JsonNode node = oc.readTree(jp);
            return ApiHelper.deserialize(node, Arrays.asList(CustomernamequeryCase.class,
                    AddressqueryCase.class), false);
        }
    }

}
