/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.AdditionalProperties;
import io.apimatic.core.utilities.ConversionHelper;
import java.util.Map;

/**
 * This is a model class for V3SoftwareInfo type.
 */
public class V3SoftwareInfo {
    private String name;
    private String version;
    private String upgradeTime;
    private AdditionalProperties<Object> additionalProperties = 
            new AdditionalProperties<Object>(this.getClass());

    /**
     * Default constructor.
     */
    public V3SoftwareInfo() {
    }

    /**
     * Initialization constructor.
     * @param  name  String value for name.
     * @param  version  String value for version.
     * @param  upgradeTime  String value for upgradeTime.
     */
    public V3SoftwareInfo(
            String name,
            String version,
            String upgradeTime) {
        this.name = name;
        this.version = version;
        this.upgradeTime = upgradeTime;
    }

    /**
     * Getter for Name.
     * Software name.
     * @return Returns the String
     */
    @JsonGetter("name")
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * Software name.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for Version.
     * Software version.
     * @return Returns the String
     */
    @JsonGetter("version")
    public String getVersion() {
        return version;
    }

    /**
     * Setter for Version.
     * Software version.
     * @param version Value for String
     */
    @JsonSetter("version")
    public void setVersion(String version) {
        this.version = version;
    }

    /**
     * Getter for UpgradeTime.
     * Upgrade time.
     * @return Returns the String
     */
    @JsonGetter("upgradeTime")
    public String getUpgradeTime() {
        return upgradeTime;
    }

    /**
     * Setter for UpgradeTime.
     * Upgrade time.
     * @param upgradeTime Value for String
     */
    @JsonSetter("upgradeTime")
    public void setUpgradeTime(String upgradeTime) {
        this.upgradeTime = upgradeTime;
    }

    /**
     * Hidden method for the serialization of additional properties.
     * @return The map of additionally set properties.
     */
    @JsonAnyGetter
    private Map<String, Object> getAdditionalProperties() {
        return additionalProperties.getAdditionalProperties();
    }

    /**
     * Hidden method for the de-serialization of additional properties.
     * @param name The name of the additional property.
     * @param value The Object value of the additional property.
     */
    @JsonAnySetter
    private void setAdditionalProperties(String name, Object value) {
        additionalProperties.setAdditionalProperty(name,
                ConversionHelper.convertToSimpleType(value,
                        x -> x),
                true);
    }

    /**
     * Getter for the value of additional properties based on provided property name.
     * @param name The name of the additional property.
     * @return Either the Object property value or null if not exist.
     */
    
    public Object getAdditionalProperty(String name) {
        return additionalProperties.getAdditionalProperty(name);
    }

    /**
     * Converts this V3SoftwareInfo into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "V3SoftwareInfo [" + "name=" + name + ", version=" + version + ", upgradeTime="
                + upgradeTime + ", additionalProperties=" + additionalProperties + "]";
    }

    /**
     * Builds a new {@link V3SoftwareInfo.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link V3SoftwareInfo.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(name, version, upgradeTime);
        builder.additionalProperties = additionalProperties;
        return builder;
    }

    /**
     * Class to build instances of {@link V3SoftwareInfo}.
     */
    public static class Builder {
        private String name;
        private String version;
        private String upgradeTime;
        private AdditionalProperties<Object> additionalProperties =
                new AdditionalProperties<Object>();

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  name  String value for name.
         * @param  version  String value for version.
         * @param  upgradeTime  String value for upgradeTime.
         */
        public Builder(String name, String version, String upgradeTime) {
            this.name = name;
            this.version = version;
            this.upgradeTime = upgradeTime;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for version.
         * @param  version  String value for version.
         * @return Builder
         */
        public Builder version(String version) {
            this.version = version;
            return this;
        }

        /**
         * Setter for upgradeTime.
         * @param  upgradeTime  String value for upgradeTime.
         * @return Builder
         */
        public Builder upgradeTime(String upgradeTime) {
            this.upgradeTime = upgradeTime;
            return this;
        }

        /**
         * Setter for additional property that are not in model fields.
         * @param name The name of the additional property.
         * @param value The Object value of the additional property.
         * @return Builder.
         */
        public Builder additionalProperty(String name, Object value) {
            this.additionalProperties.setAdditionalProperty(name, value);
            return this;
        }

        /**
         * Builds a new {@link V3SoftwareInfo} object using the set fields.
         * @return {@link V3SoftwareInfo}
         */
        public V3SoftwareInfo build() {
            V3SoftwareInfo model =
                    new V3SoftwareInfo(name, version, upgradeTime);
            model.additionalProperties = additionalProperties;
            return model;
        }
    }
}
