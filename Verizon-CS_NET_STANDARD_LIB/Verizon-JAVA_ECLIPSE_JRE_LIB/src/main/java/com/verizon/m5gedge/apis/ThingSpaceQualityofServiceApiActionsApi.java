/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.apis;

import com.verizon.m5gedge.ApiHelper;
import com.verizon.m5gedge.Server;
import com.verizon.m5gedge.exceptions.ApiException;
import com.verizon.m5gedge.exceptions.DefaultResponseException;
import com.verizon.m5gedge.http.request.HttpMethod;
import com.verizon.m5gedge.http.response.ApiResponse;
import com.verizon.m5gedge.models.M201Success;
import com.verizon.m5gedge.models.SubscribeRequest;
import io.apimatic.core.ApiCall;
import io.apimatic.core.ErrorCase;
import io.apimatic.core.GlobalConfiguration;
import io.apimatic.coreinterfaces.http.request.ResponseClassType;
import java.io.IOException;
import java.util.concurrent.CompletableFuture;
import java.util.concurrent.CompletionException;

/**
 * This class lists all the endpoints of the groups.
 */
public final class ThingSpaceQualityofServiceApiActionsApi extends BaseApi {

    /**
     * Initializes the controller.
     * @param globalConfig    Configurations added in client.
     */
    public ThingSpaceQualityofServiceApiActionsApi(GlobalConfiguration globalConfig) {
        super(globalConfig);
    }

    /**
     * Creates a QoS elevation subscription ID and activates the subscription.
     * @param  body  Required parameter: The request details to create a ThingSpace Quality of
     *         Service API subscription.
     * @return    Returns the M201Success wrapped in ApiResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    public ApiResponse<M201Success> createAThingSpaceQualityOfServiceApiSubscription(
            final SubscribeRequest body) throws ApiException, IOException {
        return prepareCreateAThingSpaceQualityOfServiceApiSubscriptionRequest(body).execute();
    }

    /**
     * Creates a QoS elevation subscription ID and activates the subscription.
     * @param  body  Required parameter: The request details to create a ThingSpace Quality of
     *         Service API subscription.
     * @return    Returns the M201Success wrapped in ApiResponse response from the API call
     */
    public CompletableFuture<ApiResponse<M201Success>> createAThingSpaceQualityOfServiceApiSubscriptionAsync(
            final SubscribeRequest body) {
        try {
            return prepareCreateAThingSpaceQualityOfServiceApiSubscriptionRequest(body).executeAsync();
        } catch (Exception e) {
            throw new CompletionException(e);
        }
    }

    /**
     * Builds the ApiCall object for createAThingSpaceQualityOfServiceApiSubscription.
     */
    private ApiCall<ApiResponse<M201Success>, ApiException> prepareCreateAThingSpaceQualityOfServiceApiSubscriptionRequest(
            final SubscribeRequest body) {
        return new ApiCall.Builder<ApiResponse<M201Success>, ApiException>()
                .globalConfig(getGlobalConfiguration())
                .requestBuilder(requestBuilder -> requestBuilder
                        .server(Server.THINGSPACE.value())
                        .path("/m2m/v1/devices/actions/enhanceQoS")
                        .bodyParam(param -> param.value(body))
                        .bodySerializer(() ->  ApiHelper.serialize(body))
                        .headerParam(param -> param.key("Content-Type")
                                .value("application/json").isRequired(false))
                        .headerParam(param -> param.key("accept").value("application/json"))
                        .withAuth(auth -> auth
                                .and(andAuth -> andAuth
                                        .add("thingspace_oauth")
                                        .add("VZ-M2M-Token")))
                        .httpMethod(HttpMethod.POST))
                .responseHandler(responseHandler -> responseHandler
                        .responseClassType(ResponseClassType.API_RESPONSE)
                        .apiResponseDeserializer(
                                response -> ApiHelper.deserialize(response, M201Success.class))
                        .nullify404(false)
                        .localErrorCase(ErrorCase.DEFAULT,
                                 ErrorCase.setReason("Error Response",
                                (reason, context) -> new DefaultResponseException(reason, context)))
                        .globalErrorCase(GLOBAL_ERROR_CASES))
                .build();
    }

    /**
     * Stops an active ThingSpace Quality of Service API subscription using the account name and the
     * subscription ID.
     * @param  accountName  Required parameter:
     * @param  qosSubscriptionId  Required parameter:
     * @return    Returns the M201Success wrapped in ApiResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    public ApiResponse<M201Success> stopAThingSpaceQualityOfServiceApiSubscription(
            final String accountName,
            final String qosSubscriptionId) throws ApiException, IOException {
        return prepareStopAThingSpaceQualityOfServiceApiSubscriptionRequest(accountName,
                qosSubscriptionId).execute();
    }

    /**
     * Stops an active ThingSpace Quality of Service API subscription using the account name and the
     * subscription ID.
     * @param  accountName  Required parameter:
     * @param  qosSubscriptionId  Required parameter:
     * @return    Returns the M201Success wrapped in ApiResponse response from the API call
     */
    public CompletableFuture<ApiResponse<M201Success>> stopAThingSpaceQualityOfServiceApiSubscriptionAsync(
            final String accountName,
            final String qosSubscriptionId) {
        try {
            return prepareStopAThingSpaceQualityOfServiceApiSubscriptionRequest(accountName,
            qosSubscriptionId).executeAsync();
        } catch (Exception e) {
            throw new CompletionException(e);
        }
    }

    /**
     * Builds the ApiCall object for stopAThingSpaceQualityOfServiceApiSubscription.
     */
    private ApiCall<ApiResponse<M201Success>, ApiException> prepareStopAThingSpaceQualityOfServiceApiSubscriptionRequest(
            final String accountName,
            final String qosSubscriptionId) {
        return new ApiCall.Builder<ApiResponse<M201Success>, ApiException>()
                .globalConfig(getGlobalConfiguration())
                .requestBuilder(requestBuilder -> requestBuilder
                        .server(Server.THINGSPACE.value())
                        .path("/m2m/v1/devices/actions/enhanceQoS")
                        .queryParam(param -> param.key("accountName")
                                .value(accountName))
                        .queryParam(param -> param.key("qosSubscriptionId")
                                .value(qosSubscriptionId))
                        .headerParam(param -> param.key("accept").value("application/json"))
                        .withAuth(auth -> auth
                                .and(andAuth -> andAuth
                                        .add("thingspace_oauth")
                                        .add("VZ-M2M-Token")))
                        .httpMethod(HttpMethod.DELETE))
                .responseHandler(responseHandler -> responseHandler
                        .responseClassType(ResponseClassType.API_RESPONSE)
                        .apiResponseDeserializer(
                                response -> ApiHelper.deserialize(response, M201Success.class))
                        .nullify404(false)
                        .localErrorCase(ErrorCase.DEFAULT,
                                 ErrorCase.setReason("Error Response",
                                (reason, context) -> new DefaultResponseException(reason, context)))
                        .globalErrorCase(GLOBAL_ERROR_CASES))
                .build();
    }
}