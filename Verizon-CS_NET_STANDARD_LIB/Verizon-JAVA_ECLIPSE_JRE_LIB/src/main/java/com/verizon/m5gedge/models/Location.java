/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.AdditionalProperties;
import io.apimatic.core.utilities.ConversionHelper;
import java.util.Map;

/**
 * This is a model class for Location type.
 */
public class Location {
    private String msid;
    private PositionData pd;
    private PositionError error;
    private AdditionalProperties<Object> additionalProperties = 
            new AdditionalProperties<Object>(this.getClass());

    /**
     * Default constructor.
     */
    public Location() {
    }

    /**
     * Initialization constructor.
     * @param  msid  String value for msid.
     * @param  pd  PositionData value for pd.
     * @param  error  PositionError value for error.
     */
    public Location(
            String msid,
            PositionData pd,
            PositionError error) {
        this.msid = msid;
        this.pd = pd;
        this.error = error;
    }

    /**
     * Getter for Msid.
     * MDN.
     * @return Returns the String
     */
    @JsonGetter("msid")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getMsid() {
        return msid;
    }

    /**
     * Setter for Msid.
     * MDN.
     * @param msid Value for String
     */
    @JsonSetter("msid")
    public void setMsid(String msid) {
        this.msid = msid;
    }

    /**
     * Getter for Pd.
     * Position data.
     * @return Returns the PositionData
     */
    @JsonGetter("pd")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public PositionData getPd() {
        return pd;
    }

    /**
     * Setter for Pd.
     * Position data.
     * @param pd Value for PositionData
     */
    @JsonSetter("pd")
    public void setPd(PositionData pd) {
        this.pd = pd;
    }

    /**
     * Getter for Error.
     * Position error.
     * @return Returns the PositionError
     */
    @JsonGetter("error")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public PositionError getError() {
        return error;
    }

    /**
     * Setter for Error.
     * Position error.
     * @param error Value for PositionError
     */
    @JsonSetter("error")
    public void setError(PositionError error) {
        this.error = error;
    }

    /**
     * Hidden method for the serialization of additional properties.
     * @return The map of additionally set properties.
     */
    @JsonAnyGetter
    private Map<String, Object> getAdditionalProperties() {
        return additionalProperties.getAdditionalProperties();
    }

    /**
     * Hidden method for the de-serialization of additional properties.
     * @param name The name of the additional property.
     * @param value The Object value of the additional property.
     */
    @JsonAnySetter
    private void setAdditionalProperties(String name, Object value) {
        additionalProperties.setAdditionalProperty(name,
                ConversionHelper.convertToSimpleType(value,
                        x -> x),
                true);
    }

    /**
     * Getter for the value of additional properties based on provided property name.
     * @param name The name of the additional property.
     * @return Either the Object property value or null if not exist.
     */
    
    public Object getAdditionalProperty(String name) {
        return additionalProperties.getAdditionalProperty(name);
    }

    /**
     * Converts this Location into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Location [" + "msid=" + msid + ", pd=" + pd + ", error=" + error
                + ", additionalProperties=" + additionalProperties + "]";
    }

    /**
     * Builds a new {@link Location.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Location.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .msid(getMsid())
                .pd(getPd())
                .error(getError());
        builder.additionalProperties = additionalProperties;
        return builder;
    }

    /**
     * Class to build instances of {@link Location}.
     */
    public static class Builder {
        private String msid;
        private PositionData pd;
        private PositionError error;
        private AdditionalProperties<Object> additionalProperties =
                new AdditionalProperties<Object>();



        /**
         * Setter for msid.
         * @param  msid  String value for msid.
         * @return Builder
         */
        public Builder msid(String msid) {
            this.msid = msid;
            return this;
        }

        /**
         * Setter for pd.
         * @param  pd  PositionData value for pd.
         * @return Builder
         */
        public Builder pd(PositionData pd) {
            this.pd = pd;
            return this;
        }

        /**
         * Setter for error.
         * @param  error  PositionError value for error.
         * @return Builder
         */
        public Builder error(PositionError error) {
            this.error = error;
            return this;
        }

        /**
         * Setter for additional property that are not in model fields.
         * @param name The name of the additional property.
         * @param value The Object value of the additional property.
         * @return Builder.
         */
        public Builder additionalProperty(String name, Object value) {
            this.additionalProperties.setAdditionalProperty(name, value);
            return this;
        }

        /**
         * Builds a new {@link Location} object using the set fields.
         * @return {@link Location}
         */
        public Location build() {
            Location model =
                    new Location(msid, pd, error);
            model.additionalProperties = additionalProperties;
            return model;
        }
    }
}
