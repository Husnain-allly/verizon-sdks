/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.verizon.m5gedge.DateTimeHelper;
import io.apimatic.core.types.AdditionalProperties;
import io.apimatic.core.utilities.ConversionHelper;
import java.time.LocalDateTime;
import java.util.Map;

/**
 * This is a model class for V3DeviceStatus type.
 */
public class V3DeviceStatus {
    private String deviceId;
    private String status;
    private String resultReason;
    private LocalDateTime updatedTime;
    private LocalDateTime recentAttemptTime;
    private LocalDateTime nextAttemptTime;
    private AdditionalProperties<Object> additionalProperties = 
            new AdditionalProperties<Object>(this.getClass());

    /**
     * Default constructor.
     */
    public V3DeviceStatus() {
    }

    /**
     * Initialization constructor.
     * @param  deviceId  String value for deviceId.
     * @param  status  String value for status.
     * @param  resultReason  String value for resultReason.
     * @param  updatedTime  LocalDateTime value for updatedTime.
     * @param  recentAttemptTime  LocalDateTime value for recentAttemptTime.
     * @param  nextAttemptTime  LocalDateTime value for nextAttemptTime.
     */
    public V3DeviceStatus(
            String deviceId,
            String status,
            String resultReason,
            LocalDateTime updatedTime,
            LocalDateTime recentAttemptTime,
            LocalDateTime nextAttemptTime) {
        this.deviceId = deviceId;
        this.status = status;
        this.resultReason = resultReason;
        this.updatedTime = updatedTime;
        this.recentAttemptTime = recentAttemptTime;
        this.nextAttemptTime = nextAttemptTime;
    }

    /**
     * Getter for DeviceId.
     * Device IMEI.
     * @return Returns the String
     */
    @JsonGetter("deviceId")
    public String getDeviceId() {
        return deviceId;
    }

    /**
     * Setter for DeviceId.
     * Device IMEI.
     * @param deviceId Value for String
     */
    @JsonSetter("deviceId")
    public void setDeviceId(String deviceId) {
        this.deviceId = deviceId;
    }

    /**
     * Getter for Status.
     * Success or failure.
     * @return Returns the String
     */
    @JsonGetter("status")
    public String getStatus() {
        return status;
    }

    /**
     * Setter for Status.
     * Success or failure.
     * @param status Value for String
     */
    @JsonSetter("status")
    public void setStatus(String status) {
        this.status = status;
    }

    /**
     * Getter for ResultReason.
     * Result reason.
     * @return Returns the String
     */
    @JsonGetter("resultReason")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getResultReason() {
        return resultReason;
    }

    /**
     * Setter for ResultReason.
     * Result reason.
     * @param resultReason Value for String
     */
    @JsonSetter("resultReason")
    public void setResultReason(String resultReason) {
        this.resultReason = resultReason;
    }

    /**
     * Getter for UpdatedTime.
     * Updated Time.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("updatedTime")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getUpdatedTime() {
        return updatedTime;
    }

    /**
     * Setter for UpdatedTime.
     * Updated Time.
     * @param updatedTime Value for LocalDateTime
     */
    @JsonSetter("updatedTime")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setUpdatedTime(LocalDateTime updatedTime) {
        this.updatedTime = updatedTime;
    }

    /**
     * Getter for RecentAttemptTime.
     * The most recent attempt time.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("recentAttemptTime")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getRecentAttemptTime() {
        return recentAttemptTime;
    }

    /**
     * Setter for RecentAttemptTime.
     * The most recent attempt time.
     * @param recentAttemptTime Value for LocalDateTime
     */
    @JsonSetter("recentAttemptTime")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setRecentAttemptTime(LocalDateTime recentAttemptTime) {
        this.recentAttemptTime = recentAttemptTime;
    }

    /**
     * Getter for NextAttemptTime.
     * Next attempt time.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("nextAttemptTime")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getNextAttemptTime() {
        return nextAttemptTime;
    }

    /**
     * Setter for NextAttemptTime.
     * Next attempt time.
     * @param nextAttemptTime Value for LocalDateTime
     */
    @JsonSetter("nextAttemptTime")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setNextAttemptTime(LocalDateTime nextAttemptTime) {
        this.nextAttemptTime = nextAttemptTime;
    }

    /**
     * Hidden method for the serialization of additional properties.
     * @return The map of additionally set properties.
     */
    @JsonAnyGetter
    private Map<String, Object> getAdditionalProperties() {
        return additionalProperties.getAdditionalProperties();
    }

    /**
     * Hidden method for the de-serialization of additional properties.
     * @param name The name of the additional property.
     * @param value The Object value of the additional property.
     */
    @JsonAnySetter
    private void setAdditionalProperties(String name, Object value) {
        additionalProperties.setAdditionalProperty(name,
                ConversionHelper.convertToSimpleType(value,
                        x -> x),
                true);
    }

    /**
     * Getter for the value of additional properties based on provided property name.
     * @param name The name of the additional property.
     * @return Either the Object property value or null if not exist.
     */
    
    public Object getAdditionalProperty(String name) {
        return additionalProperties.getAdditionalProperty(name);
    }

    /**
     * Converts this V3DeviceStatus into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "V3DeviceStatus [" + "deviceId=" + deviceId + ", status=" + status
                + ", resultReason=" + resultReason + ", updatedTime=" + updatedTime
                + ", recentAttemptTime=" + recentAttemptTime + ", nextAttemptTime="
                + nextAttemptTime + ", additionalProperties=" + additionalProperties + "]";
    }

    /**
     * Builds a new {@link V3DeviceStatus.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link V3DeviceStatus.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(deviceId, status)
                .resultReason(getResultReason())
                .updatedTime(getUpdatedTime())
                .recentAttemptTime(getRecentAttemptTime())
                .nextAttemptTime(getNextAttemptTime());
        builder.additionalProperties = additionalProperties;
        return builder;
    }

    /**
     * Class to build instances of {@link V3DeviceStatus}.
     */
    public static class Builder {
        private String deviceId;
        private String status;
        private String resultReason;
        private LocalDateTime updatedTime;
        private LocalDateTime recentAttemptTime;
        private LocalDateTime nextAttemptTime;
        private AdditionalProperties<Object> additionalProperties =
                new AdditionalProperties<Object>();

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  deviceId  String value for deviceId.
         * @param  status  String value for status.
         */
        public Builder(String deviceId, String status) {
            this.deviceId = deviceId;
            this.status = status;
        }

        /**
         * Setter for deviceId.
         * @param  deviceId  String value for deviceId.
         * @return Builder
         */
        public Builder deviceId(String deviceId) {
            this.deviceId = deviceId;
            return this;
        }

        /**
         * Setter for status.
         * @param  status  String value for status.
         * @return Builder
         */
        public Builder status(String status) {
            this.status = status;
            return this;
        }

        /**
         * Setter for resultReason.
         * @param  resultReason  String value for resultReason.
         * @return Builder
         */
        public Builder resultReason(String resultReason) {
            this.resultReason = resultReason;
            return this;
        }

        /**
         * Setter for updatedTime.
         * @param  updatedTime  LocalDateTime value for updatedTime.
         * @return Builder
         */
        public Builder updatedTime(LocalDateTime updatedTime) {
            this.updatedTime = updatedTime;
            return this;
        }

        /**
         * Setter for recentAttemptTime.
         * @param  recentAttemptTime  LocalDateTime value for recentAttemptTime.
         * @return Builder
         */
        public Builder recentAttemptTime(LocalDateTime recentAttemptTime) {
            this.recentAttemptTime = recentAttemptTime;
            return this;
        }

        /**
         * Setter for nextAttemptTime.
         * @param  nextAttemptTime  LocalDateTime value for nextAttemptTime.
         * @return Builder
         */
        public Builder nextAttemptTime(LocalDateTime nextAttemptTime) {
            this.nextAttemptTime = nextAttemptTime;
            return this;
        }

        /**
         * Setter for additional property that are not in model fields.
         * @param name The name of the additional property.
         * @param value The Object value of the additional property.
         * @return Builder.
         */
        public Builder additionalProperty(String name, Object value) {
            this.additionalProperties.setAdditionalProperty(name, value);
            return this;
        }

        /**
         * Builds a new {@link V3DeviceStatus} object using the set fields.
         * @return {@link V3DeviceStatus}
         */
        public V3DeviceStatus build() {
            V3DeviceStatus model =
                    new V3DeviceStatus(deviceId, status, resultReason, updatedTime,
                            recentAttemptTime, nextAttemptTime);
            model.additionalProperties = additionalProperties;
            return model;
        }
    }
}
