/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.verizon.m5gedge.DateTimeHelper;
import io.apimatic.core.types.AdditionalProperties;
import io.apimatic.core.utilities.ConversionHelper;
import java.time.LocalDateTime;
import java.util.Map;

/**
 * This is a model class for DtoProfileResponse type.
 */
public class DtoProfileResponse {
    private String id;
    private String kind;
    private String version;
    private String versionid;
    private LocalDateTime createdon;
    private LocalDateTime lastupdated;
    private String name;
    private String foreignid;
    private String billingaccountid;
    private String modelid;
    private Object configuration;
    private AdditionalProperties<Object> additionalProperties = 
            new AdditionalProperties<Object>(this.getClass());

    /**
     * Default constructor.
     */
    public DtoProfileResponse() {
    }

    /**
     * Initialization constructor.
     * @param  id  String value for id.
     * @param  kind  String value for kind.
     * @param  version  String value for version.
     * @param  versionid  String value for versionid.
     * @param  createdon  LocalDateTime value for createdon.
     * @param  lastupdated  LocalDateTime value for lastupdated.
     * @param  name  String value for name.
     * @param  foreignid  String value for foreignid.
     * @param  billingaccountid  String value for billingaccountid.
     * @param  modelid  String value for modelid.
     * @param  configuration  Object value for configuration.
     */
    public DtoProfileResponse(
            String id,
            String kind,
            String version,
            String versionid,
            LocalDateTime createdon,
            LocalDateTime lastupdated,
            String name,
            String foreignid,
            String billingaccountid,
            String modelid,
            Object configuration) {
        this.id = id;
        this.kind = kind;
        this.version = version;
        this.versionid = versionid;
        this.createdon = createdon;
        this.lastupdated = lastupdated;
        this.name = name;
        this.foreignid = foreignid;
        this.billingaccountid = billingaccountid;
        this.modelid = modelid;
        this.configuration = configuration;
    }

    /**
     * Getter for Id.
     * @return Returns the String
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getId() {
        return id;
    }

    /**
     * Setter for Id.
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for Kind.
     * the user defined profile kind
     * @return Returns the String
     */
    @JsonGetter("kind")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getKind() {
        return kind;
    }

    /**
     * Setter for Kind.
     * the user defined profile kind
     * @param kind Value for String
     */
    @JsonSetter("kind")
    public void setKind(String kind) {
        this.kind = kind;
    }

    /**
     * Getter for Version.
     * The resource version
     * @return Returns the String
     */
    @JsonGetter("version")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getVersion() {
        return version;
    }

    /**
     * Setter for Version.
     * The resource version
     * @param version Value for String
     */
    @JsonSetter("version")
    public void setVersion(String version) {
        this.version = version;
    }

    /**
     * Getter for Versionid.
     * @return Returns the String
     */
    @JsonGetter("versionid")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getVersionid() {
        return versionid;
    }

    /**
     * Setter for Versionid.
     * @param versionid Value for String
     */
    @JsonSetter("versionid")
    public void setVersionid(String versionid) {
        this.versionid = versionid;
    }

    /**
     * Getter for Createdon.
     * Timestamp of the record
     * @return Returns the LocalDateTime
     */
    @JsonGetter("createdon")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getCreatedon() {
        return createdon;
    }

    /**
     * Setter for Createdon.
     * Timestamp of the record
     * @param createdon Value for LocalDateTime
     */
    @JsonSetter("createdon")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCreatedon(LocalDateTime createdon) {
        this.createdon = createdon;
    }

    /**
     * Getter for Lastupdated.
     * Timestamp of the record
     * @return Returns the LocalDateTime
     */
    @JsonGetter("lastupdated")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getLastupdated() {
        return lastupdated;
    }

    /**
     * Setter for Lastupdated.
     * Timestamp of the record
     * @param lastupdated Value for LocalDateTime
     */
    @JsonSetter("lastupdated")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setLastupdated(LocalDateTime lastupdated) {
        this.lastupdated = lastupdated;
    }

    /**
     * Getter for Name.
     * user defined profile name
     * @return Returns the String
     */
    @JsonGetter("name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * user defined profile name
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for Foreignid.
     * UUID of the ECPD account the user belongs to
     * @return Returns the String
     */
    @JsonGetter("foreignid")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getForeignid() {
        return foreignid;
    }

    /**
     * Setter for Foreignid.
     * UUID of the ECPD account the user belongs to
     * @param foreignid Value for String
     */
    @JsonSetter("foreignid")
    public void setForeignid(String foreignid) {
        this.foreignid = foreignid;
    }

    /**
     * Getter for Billingaccountid.
     * The billing account ID. This is the same value as the Account ID
     * @return Returns the String
     */
    @JsonGetter("billingaccountid")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getBillingaccountid() {
        return billingaccountid;
    }

    /**
     * Setter for Billingaccountid.
     * The billing account ID. This is the same value as the Account ID
     * @param billingaccountid Value for String
     */
    @JsonSetter("billingaccountid")
    public void setBillingaccountid(String billingaccountid) {
        this.billingaccountid = billingaccountid;
    }

    /**
     * Getter for Modelid.
     * device model id
     * @return Returns the String
     */
    @JsonGetter("modelid")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getModelid() {
        return modelid;
    }

    /**
     * Setter for Modelid.
     * device model id
     * @param modelid Value for String
     */
    @JsonSetter("modelid")
    public void setModelid(String modelid) {
        this.modelid = modelid;
    }

    /**
     * Getter for Configuration.
     * @return Returns the Object
     */
    @JsonGetter("configuration")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Object getConfiguration() {
        return configuration;
    }

    /**
     * Setter for Configuration.
     * @param configuration Value for Object
     */
    @JsonSetter("configuration")
    public void setConfiguration(Object configuration) {
        this.configuration = configuration;
    }

    /**
     * Hidden method for the serialization of additional properties.
     * @return The map of additionally set properties.
     */
    @JsonAnyGetter
    private Map<String, Object> getAdditionalProperties() {
        return additionalProperties.getAdditionalProperties();
    }

    /**
     * Hidden method for the de-serialization of additional properties.
     * @param name The name of the additional property.
     * @param value The Object value of the additional property.
     */
    @JsonAnySetter
    private void setAdditionalProperties(String name, Object value) {
        additionalProperties.setAdditionalProperty(name,
                ConversionHelper.convertToSimpleType(value,
                        x -> x),
                true);
    }

    /**
     * Getter for the value of additional properties based on provided property name.
     * @param name The name of the additional property.
     * @return Either the Object property value or null if not exist.
     */
    
    public Object getAdditionalProperty(String name) {
        return additionalProperties.getAdditionalProperty(name);
    }

    /**
     * Converts this DtoProfileResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "DtoProfileResponse [" + "id=" + id + ", kind=" + kind + ", version=" + version
                + ", versionid=" + versionid + ", createdon=" + createdon + ", lastupdated="
                + lastupdated + ", name=" + name + ", foreignid=" + foreignid
                + ", billingaccountid=" + billingaccountid + ", modelid=" + modelid
                + ", configuration=" + configuration + ", additionalProperties="
                + additionalProperties + "]";
    }

    /**
     * Builds a new {@link DtoProfileResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link DtoProfileResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .id(getId())
                .kind(getKind())
                .version(getVersion())
                .versionid(getVersionid())
                .createdon(getCreatedon())
                .lastupdated(getLastupdated())
                .name(getName())
                .foreignid(getForeignid())
                .billingaccountid(getBillingaccountid())
                .modelid(getModelid())
                .configuration(getConfiguration());
        builder.additionalProperties = additionalProperties;
        return builder;
    }

    /**
     * Class to build instances of {@link DtoProfileResponse}.
     */
    public static class Builder {
        private String id;
        private String kind;
        private String version;
        private String versionid;
        private LocalDateTime createdon;
        private LocalDateTime lastupdated;
        private String name;
        private String foreignid;
        private String billingaccountid;
        private String modelid;
        private Object configuration;
        private AdditionalProperties<Object> additionalProperties =
                new AdditionalProperties<Object>();



        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for kind.
         * @param  kind  String value for kind.
         * @return Builder
         */
        public Builder kind(String kind) {
            this.kind = kind;
            return this;
        }

        /**
         * Setter for version.
         * @param  version  String value for version.
         * @return Builder
         */
        public Builder version(String version) {
            this.version = version;
            return this;
        }

        /**
         * Setter for versionid.
         * @param  versionid  String value for versionid.
         * @return Builder
         */
        public Builder versionid(String versionid) {
            this.versionid = versionid;
            return this;
        }

        /**
         * Setter for createdon.
         * @param  createdon  LocalDateTime value for createdon.
         * @return Builder
         */
        public Builder createdon(LocalDateTime createdon) {
            this.createdon = createdon;
            return this;
        }

        /**
         * Setter for lastupdated.
         * @param  lastupdated  LocalDateTime value for lastupdated.
         * @return Builder
         */
        public Builder lastupdated(LocalDateTime lastupdated) {
            this.lastupdated = lastupdated;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for foreignid.
         * @param  foreignid  String value for foreignid.
         * @return Builder
         */
        public Builder foreignid(String foreignid) {
            this.foreignid = foreignid;
            return this;
        }

        /**
         * Setter for billingaccountid.
         * @param  billingaccountid  String value for billingaccountid.
         * @return Builder
         */
        public Builder billingaccountid(String billingaccountid) {
            this.billingaccountid = billingaccountid;
            return this;
        }

        /**
         * Setter for modelid.
         * @param  modelid  String value for modelid.
         * @return Builder
         */
        public Builder modelid(String modelid) {
            this.modelid = modelid;
            return this;
        }

        /**
         * Setter for configuration.
         * @param  configuration  Object value for configuration.
         * @return Builder
         */
        public Builder configuration(Object configuration) {
            this.configuration = configuration;
            return this;
        }

        /**
         * Setter for additional property that are not in model fields.
         * @param name The name of the additional property.
         * @param value The Object value of the additional property.
         * @return Builder.
         */
        public Builder additionalProperty(String name, Object value) {
            this.additionalProperties.setAdditionalProperty(name, value);
            return this;
        }

        /**
         * Builds a new {@link DtoProfileResponse} object using the set fields.
         * @return {@link DtoProfileResponse}
         */
        public DtoProfileResponse build() {
            DtoProfileResponse model =
                    new DtoProfileResponse(id, kind, version, versionid, createdon, lastupdated,
                            name, foreignid, billingaccountid, modelid, configuration);
            model.additionalProperties = additionalProperties;
            return model;
        }
    }
}
