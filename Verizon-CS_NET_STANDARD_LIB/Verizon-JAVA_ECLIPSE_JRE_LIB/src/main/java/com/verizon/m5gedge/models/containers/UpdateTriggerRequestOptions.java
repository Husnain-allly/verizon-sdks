/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models.containers;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.verizon.m5gedge.ApiHelper;
import com.verizon.m5gedge.models.ActiveAnomalyIndicator;
import com.verizon.m5gedge.models.TriggerType3;
import io.apimatic.core.annotations.TypeCombinator.TypeCombinatorCase;
import java.io.IOException;
import java.util.Arrays;

/**
 * This is a container class for any-of types.
 */
@JsonDeserialize(using = UpdateTriggerRequestOptions.UpdateTriggerRequestOptionsDeserializer.class)
public abstract class UpdateTriggerRequestOptions {
    
    /**
     * This is TriggerType3 case.
     * @param triggerType3 TriggerType3 value for triggerType3.
     * @return The TriggerType3Case object.
     */
    public static UpdateTriggerRequestOptions fromTriggerType3(TriggerType3 triggerType3) {
        return triggerType3 == null ? null : new TriggerType3Case(triggerType3);
    }

    /**
     * This is ActiveAnomalyIndicator case.
     * @param activeAnomalyIndicator ActiveAnomalyIndicator value for activeAnomalyIndicator.
     * @return The ActiveAnomalyIndicatorCase object.
     */
    public static UpdateTriggerRequestOptions fromActiveAnomalyIndicator(
            ActiveAnomalyIndicator activeAnomalyIndicator) {
        return activeAnomalyIndicator == null ? null : new ActiveAnomalyIndicatorCase(activeAnomalyIndicator);
    }

    /**
     * Method to match from the provided any-of cases.
     * @param <R> The type to return after applying callback.
     * @param cases The any-of type cases callback.
     * @return The any-of matched case.
     */
    public abstract <R> R match(Cases<R> cases);

    /**
     * This is interface for any-of cases.
     * @param <R> The type to return after applying callback.
     */
    public interface Cases<R> {
        R triggerType3(TriggerType3 triggerType3);

        R activeAnomalyIndicator(ActiveAnomalyIndicator activeAnomalyIndicator);
    }

    /**
     * This is a implementation class for TriggerType3Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "TriggerType3")
    private static class TriggerType3Case extends UpdateTriggerRequestOptions {

        @JsonValue
        private TriggerType3 triggerType3;

        TriggerType3Case(TriggerType3 triggerType3) {
            this.triggerType3 = triggerType3;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.triggerType3(this.triggerType3);
        }

        @JsonCreator
        private TriggerType3Case(JsonNode jsonNode) throws IOException {
            this.triggerType3 = ApiHelper.deserialize(jsonNode,
                TriggerType3.class);
        }

        @Override
        public String toString() {
            return triggerType3.toString();
        }
    }

    /**
     * This is a implementation class for ActiveAnomalyIndicatorCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "ActiveAnomalyIndicator")
    private static class ActiveAnomalyIndicatorCase extends UpdateTriggerRequestOptions {

        @JsonValue
        private ActiveAnomalyIndicator activeAnomalyIndicator;

        ActiveAnomalyIndicatorCase(ActiveAnomalyIndicator activeAnomalyIndicator) {
            this.activeAnomalyIndicator = activeAnomalyIndicator;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.activeAnomalyIndicator(this.activeAnomalyIndicator);
        }

        @JsonCreator
        private ActiveAnomalyIndicatorCase(JsonNode jsonNode) throws IOException {
            this.activeAnomalyIndicator = ApiHelper.deserialize(jsonNode,
                ActiveAnomalyIndicator.class);
        }

        @Override
        public String toString() {
            return activeAnomalyIndicator.toString();
        }
    }

    /**
     * This is a custom deserializer class for UpdateTriggerRequestOptions.
     */
    protected static class UpdateTriggerRequestOptionsDeserializer
            extends JsonDeserializer<UpdateTriggerRequestOptions> {

        @Override
        public UpdateTriggerRequestOptions deserialize(JsonParser jp, DeserializationContext ctxt)
                throws IOException, JsonProcessingException {
            ObjectCodec oc = jp.getCodec();
            JsonNode node = oc.readTree(jp);
            return ApiHelper.deserialize(node, Arrays.asList(TriggerType3Case.class,
                    ActiveAnomalyIndicatorCase.class), false);
        }
    }

}
