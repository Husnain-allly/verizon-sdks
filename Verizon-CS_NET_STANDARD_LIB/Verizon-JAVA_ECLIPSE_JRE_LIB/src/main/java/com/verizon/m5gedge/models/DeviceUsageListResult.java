/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.AdditionalProperties;
import io.apimatic.core.utilities.ConversionHelper;
import java.util.List;
import java.util.Map;

/**
 * This is a model class for DeviceUsageListResult type.
 */
public class DeviceUsageListResult {
    private Boolean hasMoreData;
    private List<Usage> usageHistory;
    private AdditionalProperties<Object> additionalProperties = 
            new AdditionalProperties<Object>(this.getClass());

    /**
     * Default constructor.
     */
    public DeviceUsageListResult() {
    }

    /**
     * Initialization constructor.
     * @param  hasMoreData  Boolean value for hasMoreData.
     * @param  usageHistory  List of Usage value for usageHistory.
     */
    public DeviceUsageListResult(
            Boolean hasMoreData,
            List<Usage> usageHistory) {
        this.hasMoreData = hasMoreData;
        this.usageHistory = usageHistory;
    }

    /**
     * Getter for HasMoreData.
     * False for a status 200 response.True for a status 202 response, indicating that there is more
     * data to be retrieved.
     * @return Returns the Boolean
     */
    @JsonGetter("hasMoreData")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getHasMoreData() {
        return hasMoreData;
    }

    /**
     * Setter for HasMoreData.
     * False for a status 200 response.True for a status 202 response, indicating that there is more
     * data to be retrieved.
     * @param hasMoreData Value for Boolean
     */
    @JsonSetter("hasMoreData")
    public void setHasMoreData(Boolean hasMoreData) {
        this.hasMoreData = hasMoreData;
    }

    /**
     * Getter for UsageHistory.
     * Placeholder.
     * @return Returns the List of Usage
     */
    @JsonGetter("usageHistory")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<Usage> getUsageHistory() {
        return usageHistory;
    }

    /**
     * Setter for UsageHistory.
     * Placeholder.
     * @param usageHistory Value for List of Usage
     */
    @JsonSetter("usageHistory")
    public void setUsageHistory(List<Usage> usageHistory) {
        this.usageHistory = usageHistory;
    }

    /**
     * Hidden method for the serialization of additional properties.
     * @return The map of additionally set properties.
     */
    @JsonAnyGetter
    private Map<String, Object> getAdditionalProperties() {
        return additionalProperties.getAdditionalProperties();
    }

    /**
     * Hidden method for the de-serialization of additional properties.
     * @param name The name of the additional property.
     * @param value The Object value of the additional property.
     */
    @JsonAnySetter
    private void setAdditionalProperties(String name, Object value) {
        additionalProperties.setAdditionalProperty(name,
                ConversionHelper.convertToSimpleType(value,
                        x -> x),
                true);
    }

    /**
     * Getter for the value of additional properties based on provided property name.
     * @param name The name of the additional property.
     * @return Either the Object property value or null if not exist.
     */
    
    public Object getAdditionalProperty(String name) {
        return additionalProperties.getAdditionalProperty(name);
    }

    /**
     * Converts this DeviceUsageListResult into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "DeviceUsageListResult [" + "hasMoreData=" + hasMoreData + ", usageHistory="
                + usageHistory + ", additionalProperties=" + additionalProperties + "]";
    }

    /**
     * Builds a new {@link DeviceUsageListResult.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link DeviceUsageListResult.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .hasMoreData(getHasMoreData())
                .usageHistory(getUsageHistory());
        builder.additionalProperties = additionalProperties;
        return builder;
    }

    /**
     * Class to build instances of {@link DeviceUsageListResult}.
     */
    public static class Builder {
        private Boolean hasMoreData;
        private List<Usage> usageHistory;
        private AdditionalProperties<Object> additionalProperties =
                new AdditionalProperties<Object>();



        /**
         * Setter for hasMoreData.
         * @param  hasMoreData  Boolean value for hasMoreData.
         * @return Builder
         */
        public Builder hasMoreData(Boolean hasMoreData) {
            this.hasMoreData = hasMoreData;
            return this;
        }

        /**
         * Setter for usageHistory.
         * @param  usageHistory  List of Usage value for usageHistory.
         * @return Builder
         */
        public Builder usageHistory(List<Usage> usageHistory) {
            this.usageHistory = usageHistory;
            return this;
        }

        /**
         * Setter for additional property that are not in model fields.
         * @param name The name of the additional property.
         * @param value The Object value of the additional property.
         * @return Builder.
         */
        public Builder additionalProperty(String name, Object value) {
            this.additionalProperties.setAdditionalProperty(name, value);
            return this;
        }

        /**
         * Builds a new {@link DeviceUsageListResult} object using the set fields.
         * @return {@link DeviceUsageListResult}
         */
        public DeviceUsageListResult build() {
            DeviceUsageListResult model =
                    new DeviceUsageListResult(hasMoreData, usageHistory);
            model.additionalProperties = additionalProperties;
            return model;
        }
    }
}
