/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.apis;

import com.verizon.m5gedge.ApiHelper;
import com.verizon.m5gedge.Server;
import com.verizon.m5gedge.exceptions.ApiException;
import com.verizon.m5gedge.http.request.HttpMethod;
import com.verizon.m5gedge.http.response.ApiResponse;
import com.verizon.m5gedge.models.ChangePwnDeviceIpaddressRequest;
import com.verizon.m5gedge.models.ChangePwnDeviceIpaddressResponse;
import com.verizon.m5gedge.models.ChangePwnDeviceProfileRequest;
import com.verizon.m5gedge.models.ChangePwnDeviceProfileResponse;
import com.verizon.m5gedge.models.ChangePwnDeviceStateActivateRequest;
import com.verizon.m5gedge.models.ChangePwnDeviceStateDeactivateRequest;
import com.verizon.m5gedge.models.ChangePwnDeviceStateResponse;
import com.verizon.m5gedge.models.GetPwnPerformanceConsentResponse;
import com.verizon.m5gedge.models.KpiInfoList;
import com.verizon.m5gedge.models.PwnProfileList;
import io.apimatic.core.ApiCall;
import io.apimatic.core.GlobalConfiguration;
import io.apimatic.coreinterfaces.http.request.ResponseClassType;
import java.io.IOException;
import java.util.concurrent.CompletableFuture;
import java.util.concurrent.CompletionException;

/**
 * This class lists all the endpoints of the groups.
 */
public final class PwnApi extends BaseApi {

    /**
     * Initializes the controller.
     * @param globalConfig    Configurations added in client.
     */
    public PwnApi(GlobalConfiguration globalConfig) {
        super(globalConfig);
    }

    /**
     * @param  aname  Required parameter: Account name.
     * @return    Returns the KpiInfoList wrapped in ApiResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    public ApiResponse<KpiInfoList> kpiList(
            final String aname) throws ApiException, IOException {
        return prepareKpiListRequest(aname).execute();
    }

    /**
     * @param  aname  Required parameter: Account name.
     * @return    Returns the KpiInfoList wrapped in ApiResponse response from the API call
     */
    public CompletableFuture<ApiResponse<KpiInfoList>> kpiListAsync(
            final String aname) {
        try {
            return prepareKpiListRequest(aname).executeAsync();
        } catch (Exception e) {
            throw new CompletionException(e);
        }
    }

    /**
     * Builds the ApiCall object for kpiList.
     */
    private ApiCall<ApiResponse<KpiInfoList>, ApiException> prepareKpiListRequest(
            final String aname) {
        return new ApiCall.Builder<ApiResponse<KpiInfoList>, ApiException>()
                .globalConfig(getGlobalConfiguration())
                .requestBuilder(requestBuilder -> requestBuilder
                        .server(Server.THINGSPACE.value())
                        .path("/m2m/v1/devices/pwn/kpi/list/{aname}")
                        .templateParam(param -> param.key("aname").value(aname)
                                .shouldEncode(true))
                        .headerParam(param -> param.key("accept").value("application/json"))
                        .withAuth(auth -> auth
                                .and(andAuth -> andAuth
                                        .add("thingspace_oauth")
                                        .add("VZ-M2M-Token")))
                        .httpMethod(HttpMethod.GET))
                .responseHandler(responseHandler -> responseHandler
                        .responseClassType(ResponseClassType.API_RESPONSE)
                        .apiResponseDeserializer(
                                response -> ApiHelper.deserialize(response, KpiInfoList.class))
                        .nullify404(false)
                        .globalErrorCase(GLOBAL_ERROR_CASES))
                .build();
    }

    /**
     * @param  aname  Required parameter: Account name.
     * @return    Returns the PwnProfileList wrapped in ApiResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    public ApiResponse<PwnProfileList> getProfileList(
            final String aname) throws ApiException, IOException {
        return prepareGetProfileListRequest(aname).execute();
    }

    /**
     * @param  aname  Required parameter: Account name.
     * @return    Returns the PwnProfileList wrapped in ApiResponse response from the API call
     */
    public CompletableFuture<ApiResponse<PwnProfileList>> getProfileListAsync(
            final String aname) {
        try {
            return prepareGetProfileListRequest(aname).executeAsync();
        } catch (Exception e) {
            throw new CompletionException(e);
        }
    }

    /**
     * Builds the ApiCall object for getProfileList.
     */
    private ApiCall<ApiResponse<PwnProfileList>, ApiException> prepareGetProfileListRequest(
            final String aname) {
        return new ApiCall.Builder<ApiResponse<PwnProfileList>, ApiException>()
                .globalConfig(getGlobalConfiguration())
                .requestBuilder(requestBuilder -> requestBuilder
                        .server(Server.THINGSPACE.value())
                        .path("/m2m/v1/devices/pwn/profiles/list/{aname}")
                        .templateParam(param -> param.key("aname").value(aname)
                                .shouldEncode(true))
                        .headerParam(param -> param.key("accept").value("application/json"))
                        .withAuth(auth -> auth
                                .and(andAuth -> andAuth
                                        .add("thingspace_oauth")
                                        .add("VZ-M2M-Token")))
                        .httpMethod(HttpMethod.GET))
                .responseHandler(responseHandler -> responseHandler
                        .responseClassType(ResponseClassType.API_RESPONSE)
                        .apiResponseDeserializer(
                                response -> ApiHelper.deserialize(response, PwnProfileList.class))
                        .nullify404(false)
                        .globalErrorCase(GLOBAL_ERROR_CASES))
                .build();
    }

    /**
     * @param  body  Required parameter:
     * @return    Returns the ChangePwnDeviceStateResponse wrapped in ApiResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    public ApiResponse<ChangePwnDeviceStateResponse> changePwnDeviceStateActivate(
            final ChangePwnDeviceStateActivateRequest body) throws ApiException, IOException {
        return prepareChangePwnDeviceStateActivateRequest(body).execute();
    }

    /**
     * @param  body  Required parameter:
     * @return    Returns the ChangePwnDeviceStateResponse wrapped in ApiResponse response from the API call
     */
    public CompletableFuture<ApiResponse<ChangePwnDeviceStateResponse>> changePwnDeviceStateActivateAsync(
            final ChangePwnDeviceStateActivateRequest body) {
        try {
            return prepareChangePwnDeviceStateActivateRequest(body).executeAsync();
        } catch (Exception e) {
            throw new CompletionException(e);
        }
    }

    /**
     * Builds the ApiCall object for changePwnDeviceStateActivate.
     */
    private ApiCall<ApiResponse<ChangePwnDeviceStateResponse>, ApiException> prepareChangePwnDeviceStateActivateRequest(
            final ChangePwnDeviceStateActivateRequest body) {
        return new ApiCall.Builder<ApiResponse<ChangePwnDeviceStateResponse>, ApiException>()
                .globalConfig(getGlobalConfiguration())
                .requestBuilder(requestBuilder -> requestBuilder
                        .server(Server.THINGSPACE.value())
                        .path("/m2m/v1/devices/pwn/actions/state/activate")
                        .bodyParam(param -> param.value(body))
                        .bodySerializer(() ->  ApiHelper.serialize(body))
                        .headerParam(param -> param.key("Content-Type")
                                .value("application/json").isRequired(false))
                        .headerParam(param -> param.key("accept").value("application/json"))
                        .withAuth(auth -> auth
                                .and(andAuth -> andAuth
                                        .add("thingspace_oauth")
                                        .add("VZ-M2M-Token")))
                        .httpMethod(HttpMethod.POST))
                .responseHandler(responseHandler -> responseHandler
                        .responseClassType(ResponseClassType.API_RESPONSE)
                        .apiResponseDeserializer(
                                response -> ApiHelper.deserialize(response, ChangePwnDeviceStateResponse.class))
                        .nullify404(false)
                        .globalErrorCase(GLOBAL_ERROR_CASES))
                .build();
    }

    /**
     * @param  body  Required parameter:
     * @return    Returns the ChangePwnDeviceStateResponse wrapped in ApiResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    public ApiResponse<ChangePwnDeviceStateResponse> changePwnDeviceStateDeactivate(
            final ChangePwnDeviceStateDeactivateRequest body) throws ApiException, IOException {
        return prepareChangePwnDeviceStateDeactivateRequest(body).execute();
    }

    /**
     * @param  body  Required parameter:
     * @return    Returns the ChangePwnDeviceStateResponse wrapped in ApiResponse response from the API call
     */
    public CompletableFuture<ApiResponse<ChangePwnDeviceStateResponse>> changePwnDeviceStateDeactivateAsync(
            final ChangePwnDeviceStateDeactivateRequest body) {
        try {
            return prepareChangePwnDeviceStateDeactivateRequest(body).executeAsync();
        } catch (Exception e) {
            throw new CompletionException(e);
        }
    }

    /**
     * Builds the ApiCall object for changePwnDeviceStateDeactivate.
     */
    private ApiCall<ApiResponse<ChangePwnDeviceStateResponse>, ApiException> prepareChangePwnDeviceStateDeactivateRequest(
            final ChangePwnDeviceStateDeactivateRequest body) {
        return new ApiCall.Builder<ApiResponse<ChangePwnDeviceStateResponse>, ApiException>()
                .globalConfig(getGlobalConfiguration())
                .requestBuilder(requestBuilder -> requestBuilder
                        .server(Server.THINGSPACE.value())
                        .path("/m2m/v1/devices/pwn/actions/state/deactivate")
                        .bodyParam(param -> param.value(body))
                        .bodySerializer(() ->  ApiHelper.serialize(body))
                        .headerParam(param -> param.key("Content-Type")
                                .value("application/json").isRequired(false))
                        .headerParam(param -> param.key("accept").value("application/json"))
                        .withAuth(auth -> auth
                                .and(andAuth -> andAuth
                                        .add("thingspace_oauth")
                                        .add("VZ-M2M-Token")))
                        .httpMethod(HttpMethod.POST))
                .responseHandler(responseHandler -> responseHandler
                        .responseClassType(ResponseClassType.API_RESPONSE)
                        .apiResponseDeserializer(
                                response -> ApiHelper.deserialize(response, ChangePwnDeviceStateResponse.class))
                        .nullify404(false)
                        .globalErrorCase(GLOBAL_ERROR_CASES))
                .build();
    }

    /**
     * @param  body  Required parameter:
     * @return    Returns the ChangePwnDeviceProfileResponse wrapped in ApiResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    public ApiResponse<ChangePwnDeviceProfileResponse> changePwnDeviceProfile(
            final ChangePwnDeviceProfileRequest body) throws ApiException, IOException {
        return prepareChangePwnDeviceProfileRequest(body).execute();
    }

    /**
     * @param  body  Required parameter:
     * @return    Returns the ChangePwnDeviceProfileResponse wrapped in ApiResponse response from the API call
     */
    public CompletableFuture<ApiResponse<ChangePwnDeviceProfileResponse>> changePwnDeviceProfileAsync(
            final ChangePwnDeviceProfileRequest body) {
        try {
            return prepareChangePwnDeviceProfileRequest(body).executeAsync();
        } catch (Exception e) {
            throw new CompletionException(e);
        }
    }

    /**
     * Builds the ApiCall object for changePwnDeviceProfile.
     */
    private ApiCall<ApiResponse<ChangePwnDeviceProfileResponse>, ApiException> prepareChangePwnDeviceProfileRequest(
            final ChangePwnDeviceProfileRequest body) {
        return new ApiCall.Builder<ApiResponse<ChangePwnDeviceProfileResponse>, ApiException>()
                .globalConfig(getGlobalConfiguration())
                .requestBuilder(requestBuilder -> requestBuilder
                        .server(Server.THINGSPACE.value())
                        .path("/m2m/v1/devices/pwn/actions/profile")
                        .bodyParam(param -> param.value(body))
                        .bodySerializer(() ->  ApiHelper.serialize(body))
                        .headerParam(param -> param.key("Content-Type")
                                .value("application/json").isRequired(false))
                        .headerParam(param -> param.key("accept").value("application/json"))
                        .withAuth(auth -> auth
                                .and(andAuth -> andAuth
                                        .add("thingspace_oauth")
                                        .add("VZ-M2M-Token")))
                        .httpMethod(HttpMethod.POST))
                .responseHandler(responseHandler -> responseHandler
                        .responseClassType(ResponseClassType.API_RESPONSE)
                        .apiResponseDeserializer(
                                response -> ApiHelper.deserialize(response, ChangePwnDeviceProfileResponse.class))
                        .nullify404(false)
                        .globalErrorCase(GLOBAL_ERROR_CASES))
                .build();
    }

    /**
     * @param  body  Required parameter:
     * @return    Returns the ChangePwnDeviceIpaddressResponse wrapped in ApiResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    public ApiResponse<ChangePwnDeviceIpaddressResponse> changePwnDeviceIpaddress(
            final ChangePwnDeviceIpaddressRequest body) throws ApiException, IOException {
        return prepareChangePwnDeviceIpaddressRequest(body).execute();
    }

    /**
     * @param  body  Required parameter:
     * @return    Returns the ChangePwnDeviceIpaddressResponse wrapped in ApiResponse response from the API call
     */
    public CompletableFuture<ApiResponse<ChangePwnDeviceIpaddressResponse>> changePwnDeviceIpaddressAsync(
            final ChangePwnDeviceIpaddressRequest body) {
        try {
            return prepareChangePwnDeviceIpaddressRequest(body).executeAsync();
        } catch (Exception e) {
            throw new CompletionException(e);
        }
    }

    /**
     * Builds the ApiCall object for changePwnDeviceIpaddress.
     */
    private ApiCall<ApiResponse<ChangePwnDeviceIpaddressResponse>, ApiException> prepareChangePwnDeviceIpaddressRequest(
            final ChangePwnDeviceIpaddressRequest body) {
        return new ApiCall.Builder<ApiResponse<ChangePwnDeviceIpaddressResponse>, ApiException>()
                .globalConfig(getGlobalConfiguration())
                .requestBuilder(requestBuilder -> requestBuilder
                        .server(Server.THINGSPACE.value())
                        .path("/m2m/v1/devices/pwn/actions/ipaddress")
                        .bodyParam(param -> param.value(body))
                        .bodySerializer(() ->  ApiHelper.serialize(body))
                        .headerParam(param -> param.key("Content-Type")
                                .value("application/json").isRequired(false))
                        .headerParam(param -> param.key("accept").value("application/json"))
                        .withAuth(auth -> auth
                                .and(andAuth -> andAuth
                                        .add("thingspace_oauth")
                                        .add("VZ-M2M-Token")))
                        .httpMethod(HttpMethod.PUT))
                .responseHandler(responseHandler -> responseHandler
                        .responseClassType(ResponseClassType.API_RESPONSE)
                        .apiResponseDeserializer(
                                response -> ApiHelper.deserialize(response, ChangePwnDeviceIpaddressResponse.class))
                        .nullify404(false)
                        .globalErrorCase(GLOBAL_ERROR_CASES))
                .build();
    }

    /**
     * @param  aname  Required parameter: Account name.
     * @return    Returns the GetPwnPerformanceConsentResponse wrapped in ApiResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    public ApiResponse<GetPwnPerformanceConsentResponse> getPwnPerformanceConsent(
            final String aname) throws ApiException, IOException {
        return prepareGetPwnPerformanceConsentRequest(aname).execute();
    }

    /**
     * @param  aname  Required parameter: Account name.
     * @return    Returns the GetPwnPerformanceConsentResponse wrapped in ApiResponse response from the API call
     */
    public CompletableFuture<ApiResponse<GetPwnPerformanceConsentResponse>> getPwnPerformanceConsentAsync(
            final String aname) {
        try {
            return prepareGetPwnPerformanceConsentRequest(aname).executeAsync();
        } catch (Exception e) {
            throw new CompletionException(e);
        }
    }

    /**
     * Builds the ApiCall object for getPwnPerformanceConsent.
     */
    private ApiCall<ApiResponse<GetPwnPerformanceConsentResponse>, ApiException> prepareGetPwnPerformanceConsentRequest(
            final String aname) {
        return new ApiCall.Builder<ApiResponse<GetPwnPerformanceConsentResponse>, ApiException>()
                .globalConfig(getGlobalConfiguration())
                .requestBuilder(requestBuilder -> requestBuilder
                        .server(Server.THINGSPACE.value())
                        .path("/m2m/v1/devices/pwn/performance/consent/{aname}")
                        .templateParam(param -> param.key("aname").value(aname)
                                .shouldEncode(true))
                        .headerParam(param -> param.key("accept").value("application/json"))
                        .withAuth(auth -> auth
                                .and(andAuth -> andAuth
                                        .add("thingspace_oauth")
                                        .add("VZ-M2M-Token")))
                        .httpMethod(HttpMethod.GET))
                .responseHandler(responseHandler -> responseHandler
                        .responseClassType(ResponseClassType.API_RESPONSE)
                        .apiResponseDeserializer(
                                response -> ApiHelper.deserialize(response, GetPwnPerformanceConsentResponse.class))
                        .nullify404(false)
                        .globalErrorCase(GLOBAL_ERROR_CASES))
                .build();
    }
}