/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for NodeLl type.
 */
public class NodeLl {
    private NodeOffsetPointLl delta;

    /**
     * Default constructor.
     */
    public NodeLl() {
    }

    /**
     * Initialization constructor.
     * @param  delta  NodeOffsetPointLl value for delta.
     */
    public NodeLl(
            NodeOffsetPointLl delta) {
        this.delta = delta;
    }

    /**
     * Getter for Delta.
     * The NodeOffsetPointLL data frame presents a structure to hold 64 bits sized data frames for a
     * single node geometry path. Nodes are described in terms of latitude and longitude.
     * @return Returns the NodeOffsetPointLl
     */
    @JsonGetter("delta")
    public NodeOffsetPointLl getDelta() {
        return delta;
    }

    /**
     * Setter for Delta.
     * The NodeOffsetPointLL data frame presents a structure to hold 64 bits sized data frames for a
     * single node geometry path. Nodes are described in terms of latitude and longitude.
     * @param delta Value for NodeOffsetPointLl
     */
    @JsonSetter("delta")
    public void setDelta(NodeOffsetPointLl delta) {
        this.delta = delta;
    }

    /**
     * Converts this NodeLl into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "NodeLl [" + "delta=" + delta + "]";
    }

    /**
     * Builds a new {@link NodeLl.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link NodeLl.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(delta);
        return builder;
    }

    /**
     * Class to build instances of {@link NodeLl}.
     */
    public static class Builder {
        private NodeOffsetPointLl delta;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  delta  NodeOffsetPointLl value for delta.
         */
        public Builder(NodeOffsetPointLl delta) {
            this.delta = delta;
        }

        /**
         * Setter for delta.
         * @param  delta  NodeOffsetPointLl value for delta.
         * @return Builder
         */
        public Builder delta(NodeOffsetPointLl delta) {
            this.delta = delta;
            return this;
        }

        /**
         * Builds a new {@link NodeLl} object using the set fields.
         * @return {@link NodeLl}
         */
        public NodeLl build() {
            return new NodeLl(delta);
        }
    }
}
