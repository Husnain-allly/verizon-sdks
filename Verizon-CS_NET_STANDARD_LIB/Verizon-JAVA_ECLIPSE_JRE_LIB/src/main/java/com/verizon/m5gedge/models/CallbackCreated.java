/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.AdditionalProperties;
import io.apimatic.core.utilities.ConversionHelper;
import java.util.Map;

/**
 * This is a model class for CallbackCreated type.
 */
public class CallbackCreated {
    private String aname;
    private String name;
    private String url;
    private AdditionalProperties<Object> additionalProperties = 
            new AdditionalProperties<Object>(this.getClass());

    /**
     * Default constructor.
     */
    public CallbackCreated() {
    }

    /**
     * Initialization constructor.
     * @param  aname  String value for aname.
     * @param  name  String value for name.
     * @param  url  String value for url.
     */
    public CallbackCreated(
            String aname,
            String name,
            String url) {
        this.aname = aname;
        this.name = name;
        this.url = url;
    }

    /**
     * Getter for Aname.
     * The billing account number for which callback messages will be sent.
     * @return Returns the String
     */
    @JsonGetter("aname")
    public String getAname() {
        return aname;
    }

    /**
     * Setter for Aname.
     * The billing account number for which callback messages will be sent.
     * @param aname Value for String
     */
    @JsonSetter("aname")
    public void setAname(String aname) {
        this.aname = aname;
    }

    /**
     * Getter for Name.
     * The name of the callback service, which identifies the type and format of messages that will
     * be sent to the registered URL.
     * @return Returns the String
     */
    @JsonGetter("name")
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * The name of the callback service, which identifies the type and format of messages that will
     * be sent to the registered URL.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for Url.
     * The address of the callback listening service where the ThingSpace Platform will send
     * callback messages for the service type.
     * @return Returns the String
     */
    @JsonGetter("url")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getUrl() {
        return url;
    }

    /**
     * Setter for Url.
     * The address of the callback listening service where the ThingSpace Platform will send
     * callback messages for the service type.
     * @param url Value for String
     */
    @JsonSetter("url")
    public void setUrl(String url) {
        this.url = url;
    }

    /**
     * Hidden method for the serialization of additional properties.
     * @return The map of additionally set properties.
     */
    @JsonAnyGetter
    private Map<String, Object> getAdditionalProperties() {
        return additionalProperties.getAdditionalProperties();
    }

    /**
     * Hidden method for the de-serialization of additional properties.
     * @param name The name of the additional property.
     * @param value The Object value of the additional property.
     */
    @JsonAnySetter
    private void setAdditionalProperties(String name, Object value) {
        additionalProperties.setAdditionalProperty(name,
                ConversionHelper.convertToSimpleType(value,
                        x -> x),
                true);
    }

    /**
     * Getter for the value of additional properties based on provided property name.
     * @param name The name of the additional property.
     * @return Either the Object property value or null if not exist.
     */
    
    public Object getAdditionalProperty(String name) {
        return additionalProperties.getAdditionalProperty(name);
    }

    /**
     * Converts this CallbackCreated into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "CallbackCreated [" + "aname=" + aname + ", name=" + name + ", url=" + url
                + ", additionalProperties=" + additionalProperties + "]";
    }

    /**
     * Builds a new {@link CallbackCreated.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link CallbackCreated.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(aname, name)
                .url(getUrl());
        builder.additionalProperties = additionalProperties;
        return builder;
    }

    /**
     * Class to build instances of {@link CallbackCreated}.
     */
    public static class Builder {
        private String aname;
        private String name;
        private String url;
        private AdditionalProperties<Object> additionalProperties =
                new AdditionalProperties<Object>();

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  aname  String value for aname.
         * @param  name  String value for name.
         */
        public Builder(String aname, String name) {
            this.aname = aname;
            this.name = name;
        }

        /**
         * Setter for aname.
         * @param  aname  String value for aname.
         * @return Builder
         */
        public Builder aname(String aname) {
            this.aname = aname;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for url.
         * @param  url  String value for url.
         * @return Builder
         */
        public Builder url(String url) {
            this.url = url;
            return this;
        }

        /**
         * Setter for additional property that are not in model fields.
         * @param name The name of the additional property.
         * @param value The Object value of the additional property.
         * @return Builder.
         */
        public Builder additionalProperty(String name, Object value) {
            this.additionalProperties.setAdditionalProperty(name, value);
            return this;
        }

        /**
         * Builds a new {@link CallbackCreated} object using the set fields.
         * @return {@link CallbackCreated}
         */
        public CallbackCreated build() {
            CallbackCreated model =
                    new CallbackCreated(aname, name, url);
            model.additionalProperties = additionalProperties;
            return model;
        }
    }
}
