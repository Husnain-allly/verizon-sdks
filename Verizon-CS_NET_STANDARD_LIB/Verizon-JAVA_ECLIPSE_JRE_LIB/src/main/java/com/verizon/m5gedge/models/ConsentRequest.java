/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.AdditionalProperties;
import io.apimatic.core.utilities.ConversionHelper;
import java.util.List;
import java.util.Map;

/**
 * This is a model class for ConsentRequest type.
 */
public class ConsentRequest {
    private String accountName;
    private Boolean allDevice;
    private String type;
    private List<String> exclusion;
    private AdditionalProperties<Object> additionalProperties = 
            new AdditionalProperties<Object>(this.getClass());

    /**
     * Default constructor.
     */
    public ConsentRequest() {
    }

    /**
     * Initialization constructor.
     * @param  accountName  String value for accountName.
     * @param  allDevice  Boolean value for allDevice.
     * @param  type  String value for type.
     * @param  exclusion  List of String value for exclusion.
     */
    public ConsentRequest(
            String accountName,
            Boolean allDevice,
            String type,
            List<String> exclusion) {
        this.accountName = accountName;
        this.allDevice = allDevice;
        this.type = type;
        this.exclusion = exclusion;
    }

    /**
     * Getter for AccountName.
     * Account identifier in "##########-#####".
     * @return Returns the String
     */
    @JsonGetter("accountName")
    public String getAccountName() {
        return accountName;
    }

    /**
     * Setter for AccountName.
     * Account identifier in "##########-#####".
     * @param accountName Value for String
     */
    @JsonSetter("accountName")
    public void setAccountName(String accountName) {
        this.accountName = accountName;
    }

    /**
     * Getter for AllDevice.
     * Exclude all devices or not.
     * @return Returns the Boolean
     */
    @JsonGetter("allDevice")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getAllDevice() {
        return allDevice;
    }

    /**
     * Setter for AllDevice.
     * Exclude all devices or not.
     * @param allDevice Value for Boolean
     */
    @JsonSetter("allDevice")
    public void setAllDevice(Boolean allDevice) {
        this.allDevice = allDevice;
    }

    /**
     * Getter for Type.
     * The change to make: append or replace.
     * @return Returns the String
     */
    @JsonGetter("type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getType() {
        return type;
    }

    /**
     * Setter for Type.
     * The change to make: append or replace.
     * @param type Value for String
     */
    @JsonSetter("type")
    public void setType(String type) {
        this.type = type;
    }

    /**
     * Getter for Exclusion.
     * Device ID list.
     * @return Returns the List of String
     */
    @JsonGetter("exclusion")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<String> getExclusion() {
        return exclusion;
    }

    /**
     * Setter for Exclusion.
     * Device ID list.
     * @param exclusion Value for List of String
     */
    @JsonSetter("exclusion")
    public void setExclusion(List<String> exclusion) {
        this.exclusion = exclusion;
    }

    /**
     * Hidden method for the serialization of additional properties.
     * @return The map of additionally set properties.
     */
    @JsonAnyGetter
    private Map<String, Object> getAdditionalProperties() {
        return additionalProperties.getAdditionalProperties();
    }

    /**
     * Hidden method for the de-serialization of additional properties.
     * @param name The name of the additional property.
     * @param value The Object value of the additional property.
     */
    @JsonAnySetter
    private void setAdditionalProperties(String name, Object value) {
        additionalProperties.setAdditionalProperty(name,
                ConversionHelper.convertToSimpleType(value,
                        x -> x),
                true);
    }

    /**
     * Getter for the value of additional properties based on provided property name.
     * @param name The name of the additional property.
     * @return Either the Object property value or null if not exist.
     */
    
    public Object getAdditionalProperty(String name) {
        return additionalProperties.getAdditionalProperty(name);
    }

    /**
     * Converts this ConsentRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ConsentRequest [" + "accountName=" + accountName + ", allDevice=" + allDevice
                + ", type=" + type + ", exclusion=" + exclusion + ", additionalProperties="
                + additionalProperties + "]";
    }

    /**
     * Builds a new {@link ConsentRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ConsentRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(accountName)
                .allDevice(getAllDevice())
                .type(getType())
                .exclusion(getExclusion());
        builder.additionalProperties = additionalProperties;
        return builder;
    }

    /**
     * Class to build instances of {@link ConsentRequest}.
     */
    public static class Builder {
        private String accountName;
        private Boolean allDevice;
        private String type;
        private List<String> exclusion;
        private AdditionalProperties<Object> additionalProperties =
                new AdditionalProperties<Object>();

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  accountName  String value for accountName.
         */
        public Builder(String accountName) {
            this.accountName = accountName;
        }

        /**
         * Setter for accountName.
         * @param  accountName  String value for accountName.
         * @return Builder
         */
        public Builder accountName(String accountName) {
            this.accountName = accountName;
            return this;
        }

        /**
         * Setter for allDevice.
         * @param  allDevice  Boolean value for allDevice.
         * @return Builder
         */
        public Builder allDevice(Boolean allDevice) {
            this.allDevice = allDevice;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = type;
            return this;
        }

        /**
         * Setter for exclusion.
         * @param  exclusion  List of String value for exclusion.
         * @return Builder
         */
        public Builder exclusion(List<String> exclusion) {
            this.exclusion = exclusion;
            return this;
        }

        /**
         * Setter for additional property that are not in model fields.
         * @param name The name of the additional property.
         * @param value The Object value of the additional property.
         * @return Builder.
         */
        public Builder additionalProperty(String name, Object value) {
            this.additionalProperties.setAdditionalProperty(name, value);
            return this;
        }

        /**
         * Builds a new {@link ConsentRequest} object using the set fields.
         * @return {@link ConsentRequest}
         */
        public ConsentRequest build() {
            ConsentRequest model =
                    new ConsentRequest(accountName, allDevice, type, exclusion);
            model.additionalProperties = additionalProperties;
            return model;
        }
    }
}
