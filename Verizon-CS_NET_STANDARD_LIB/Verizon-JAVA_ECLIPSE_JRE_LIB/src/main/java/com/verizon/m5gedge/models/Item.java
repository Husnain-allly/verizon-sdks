/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for Item type.
 */
public class Item {
    private int itis;

    /**
     * Default constructor.
     */
    public Item() {
    }

    /**
     * Initialization constructor.
     * @param  itis  int value for itis.
     */
    public Item(
            int itis) {
        this.itis = itis;
    }

    /**
     * Getter for Itis.
     * The ITIS Code that describes the alert/danger/hazard. All ITS standards use the same types
     * here to explain the type of the alert/danger/hazard involved. The complete set of ITIS codes
     * can be found in Volume Two of the SAE J2540 standard. This is a set of over 1000 items which
     * are used to encode common events and list items in ITS.
     * @return Returns the int
     */
    @JsonGetter("itis")
    public int getItis() {
        return itis;
    }

    /**
     * Setter for Itis.
     * The ITIS Code that describes the alert/danger/hazard. All ITS standards use the same types
     * here to explain the type of the alert/danger/hazard involved. The complete set of ITIS codes
     * can be found in Volume Two of the SAE J2540 standard. This is a set of over 1000 items which
     * are used to encode common events and list items in ITS.
     * @param itis Value for int
     */
    @JsonSetter("itis")
    public void setItis(int itis) {
        this.itis = itis;
    }

    /**
     * Converts this Item into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Item [" + "itis=" + itis + "]";
    }

    /**
     * Builds a new {@link Item.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Item.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(itis);
        return builder;
    }

    /**
     * Class to build instances of {@link Item}.
     */
    public static class Builder {
        private int itis;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  itis  int value for itis.
         */
        public Builder(int itis) {
            this.itis = itis;
        }

        /**
         * Setter for itis.
         * @param  itis  int value for itis.
         * @return Builder
         */
        public Builder itis(int itis) {
            this.itis = itis;
            return this;
        }

        /**
         * Builds a new {@link Item} object using the set fields.
         * @return {@link Item}
         */
        public Item build() {
            return new Item(itis);
        }
    }
}
