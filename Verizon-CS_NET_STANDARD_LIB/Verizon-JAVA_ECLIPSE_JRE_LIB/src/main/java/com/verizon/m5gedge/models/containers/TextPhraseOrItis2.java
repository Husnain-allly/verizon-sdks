/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models.containers;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.verizon.m5gedge.ApiHelper;
import com.verizon.m5gedge.models.TextPhraseOrItis;
import com.verizon.m5gedge.models.TextPhraseOrItis1;
import io.apimatic.core.annotations.TypeCombinator.TypeCombinatorCase;
import java.io.IOException;
import java.util.Arrays;

/**
 * This is a container class for one-of types.
 */
@JsonDeserialize(using = TextPhraseOrItis2.TextPhraseOrItis2Deserializer.class)
public abstract class TextPhraseOrItis2 {
    
    /**
     * This is TextPhraseOrITIS case.
     * @param textPhraseOrItis TextPhraseOrItis value for textPhraseOrItis.
     * @return The TextPhraseOrItisCase object.
     */
    public static TextPhraseOrItis2 fromTextPhraseOrItis(TextPhraseOrItis textPhraseOrItis) {
        return textPhraseOrItis == null ? null : new TextPhraseOrItisCase(textPhraseOrItis);
    }

    /**
     * This is TextPhraseOrITIS1 case.
     * @param textPhraseOrItis1 TextPhraseOrItis1 value for textPhraseOrItis1.
     * @return The TextPhraseOrItis1Case object.
     */
    public static TextPhraseOrItis2 fromTextPhraseOrItis1(TextPhraseOrItis1 textPhraseOrItis1) {
        return textPhraseOrItis1 == null ? null : new TextPhraseOrItis1Case(textPhraseOrItis1);
    }

    /**
     * Method to match from the provided one-of cases.
     * @param <R> The type to return after applying callback.
     * @param cases The one-of type cases callback.
     * @return The one-of matched case.
     */
    public abstract <R> R match(Cases<R> cases);

    /**
     * This is interface for one-of cases.
     * @param <R> The type to return after applying callback.
     */
    public interface Cases<R> {
        R textPhraseOrItis(TextPhraseOrItis textPhraseOrItis);

        R textPhraseOrItis1(TextPhraseOrItis1 textPhraseOrItis1);
    }

    /**
     * This is a implementation class for TextPhraseOrItisCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "TextPhraseOrItis")
    private static class TextPhraseOrItisCase extends TextPhraseOrItis2 {

        @JsonValue
        private TextPhraseOrItis textPhraseOrItis;

        TextPhraseOrItisCase(TextPhraseOrItis textPhraseOrItis) {
            this.textPhraseOrItis = textPhraseOrItis;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.textPhraseOrItis(this.textPhraseOrItis);
        }

        @JsonCreator
        private TextPhraseOrItisCase(JsonNode jsonNode) throws IOException {
            this.textPhraseOrItis = ApiHelper.deserialize(jsonNode,
                TextPhraseOrItis.class);
        }

        @Override
        public String toString() {
            return textPhraseOrItis.toString();
        }
    }

    /**
     * This is a implementation class for TextPhraseOrItis1Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "TextPhraseOrItis1")
    private static class TextPhraseOrItis1Case extends TextPhraseOrItis2 {

        @JsonValue
        private TextPhraseOrItis1 textPhraseOrItis1;

        TextPhraseOrItis1Case(TextPhraseOrItis1 textPhraseOrItis1) {
            this.textPhraseOrItis1 = textPhraseOrItis1;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.textPhraseOrItis1(this.textPhraseOrItis1);
        }

        @JsonCreator
        private TextPhraseOrItis1Case(JsonNode jsonNode) throws IOException {
            this.textPhraseOrItis1 = ApiHelper.deserialize(jsonNode,
                TextPhraseOrItis1.class);
        }

        @Override
        public String toString() {
            return textPhraseOrItis1.toString();
        }
    }

    /**
     * This is a custom deserializer class for TextPhraseOrItis2.
     */
    protected static class TextPhraseOrItis2Deserializer
            extends JsonDeserializer<TextPhraseOrItis2> {

        @Override
        public TextPhraseOrItis2 deserialize(JsonParser jp, DeserializationContext ctxt)
                throws IOException, JsonProcessingException {
            ObjectCodec oc = jp.getCodec();
            JsonNode node = oc.readTree(jp);
            return ApiHelper.deserialize(node, Arrays.asList(TextPhraseOrItisCase.class,
                    TextPhraseOrItis1Case.class), true);
        }
    }

}
