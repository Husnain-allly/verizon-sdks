/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.AdditionalProperties;
import io.apimatic.core.utilities.ConversionHelper;
import java.util.List;
import java.util.Map;

/**
 * This is a model class for SensorInsightsBle type.
 */
public class SensorInsightsBle {
    private Integer dataMode;
    private Integer manufacturerId;
    private Integer maxNumScan;
    private Integer minSigStr;
    private Integer monitorPeriod;
    private List<Object> moreManufId;
    private Integer opMode;
    private Integer reportOffset;
    private Integer reportPeriod;
    private Integer reportType;
    private Integer scanDuration;
    private AdditionalProperties<Object> additionalProperties = 
            new AdditionalProperties<Object>(this.getClass());

    /**
     * Default constructor.
     */
    public SensorInsightsBle() {
    }

    /**
     * Initialization constructor.
     * @param  dataMode  Integer value for dataMode.
     * @param  manufacturerId  Integer value for manufacturerId.
     * @param  maxNumScan  Integer value for maxNumScan.
     * @param  minSigStr  Integer value for minSigStr.
     * @param  monitorPeriod  Integer value for monitorPeriod.
     * @param  moreManufId  List of Object value for moreManufId.
     * @param  opMode  Integer value for opMode.
     * @param  reportOffset  Integer value for reportOffset.
     * @param  reportPeriod  Integer value for reportPeriod.
     * @param  reportType  Integer value for reportType.
     * @param  scanDuration  Integer value for scanDuration.
     */
    public SensorInsightsBle(
            Integer dataMode,
            Integer manufacturerId,
            Integer maxNumScan,
            Integer minSigStr,
            Integer monitorPeriod,
            List<Object> moreManufId,
            Integer opMode,
            Integer reportOffset,
            Integer reportPeriod,
            Integer reportType,
            Integer scanDuration) {
        this.dataMode = dataMode;
        this.manufacturerId = manufacturerId;
        this.maxNumScan = maxNumScan;
        this.minSigStr = minSigStr;
        this.monitorPeriod = monitorPeriod;
        this.moreManufId = moreManufId;
        this.opMode = opMode;
        this.reportOffset = reportOffset;
        this.reportPeriod = reportPeriod;
        this.reportType = reportType;
        this.scanDuration = scanDuration;
    }

    /**
     * Getter for DataMode.
     * The data mode the sensor is using
     * @return Returns the Integer
     */
    @JsonGetter("dataMode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getDataMode() {
        return dataMode;
    }

    /**
     * Setter for DataMode.
     * The data mode the sensor is using
     * @param dataMode Value for Integer
     */
    @JsonSetter("dataMode")
    public void setDataMode(Integer dataMode) {
        this.dataMode = dataMode;
    }

    /**
     * Getter for ManufacturerId.
     * The numeric manufacturer ID
     * @return Returns the Integer
     */
    @JsonGetter("manufacturerId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getManufacturerId() {
        return manufacturerId;
    }

    /**
     * Setter for ManufacturerId.
     * The numeric manufacturer ID
     * @param manufacturerId Value for Integer
     */
    @JsonSetter("manufacturerId")
    public void setManufacturerId(Integer manufacturerId) {
        this.manufacturerId = manufacturerId;
    }

    /**
     * Getter for MaxNumScan.
     * How frequently the device can be scanned
     * @return Returns the Integer
     */
    @JsonGetter("maxNumScan")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getMaxNumScan() {
        return maxNumScan;
    }

    /**
     * Setter for MaxNumScan.
     * How frequently the device can be scanned
     * @param maxNumScan Value for Integer
     */
    @JsonSetter("maxNumScan")
    public void setMaxNumScan(Integer maxNumScan) {
        this.maxNumScan = maxNumScan;
    }

    /**
     * Getter for MinSigStr.
     * The minimum signal strength needed for the sensor to transmit (in Decibels or dB)
     * @return Returns the Integer
     */
    @JsonGetter("minSigStr")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getMinSigStr() {
        return minSigStr;
    }

    /**
     * Setter for MinSigStr.
     * The minimum signal strength needed for the sensor to transmit (in Decibels or dB)
     * @param minSigStr Value for Integer
     */
    @JsonSetter("minSigStr")
    public void setMinSigStr(Integer minSigStr) {
        this.minSigStr = minSigStr;
    }

    /**
     * Getter for MonitorPeriod.
     * The ammount of time to monitor the sensor and varies by device
     * @return Returns the Integer
     */
    @JsonGetter("monitorPeriod")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getMonitorPeriod() {
        return monitorPeriod;
    }

    /**
     * Setter for MonitorPeriod.
     * The ammount of time to monitor the sensor and varies by device
     * @param monitorPeriod Value for Integer
     */
    @JsonSetter("monitorPeriod")
    public void setMonitorPeriod(Integer monitorPeriod) {
        this.monitorPeriod = monitorPeriod;
    }

    /**
     * Getter for MoreManufId.
     * Values for the manufacturer and these vary by device
     * @return Returns the List of Object
     */
    @JsonGetter("moreManufId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<Object> getMoreManufId() {
        return moreManufId;
    }

    /**
     * Setter for MoreManufId.
     * Values for the manufacturer and these vary by device
     * @param moreManufId Value for List of Object
     */
    @JsonSetter("moreManufId")
    public void setMoreManufId(List<Object> moreManufId) {
        this.moreManufId = moreManufId;
    }

    /**
     * Getter for OpMode.
     * The operation mode
     * @return Returns the Integer
     */
    @JsonGetter("opMode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getOpMode() {
        return opMode;
    }

    /**
     * Setter for OpMode.
     * The operation mode
     * @param opMode Value for Integer
     */
    @JsonSetter("opMode")
    public void setOpMode(Integer opMode) {
        this.opMode = opMode;
    }

    /**
     * Getter for ReportOffset.
     * The ammount of time between sensor readings and reports
     * @return Returns the Integer
     */
    @JsonGetter("reportOffset")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getReportOffset() {
        return reportOffset;
    }

    /**
     * Setter for ReportOffset.
     * The ammount of time between sensor readings and reports
     * @param reportOffset Value for Integer
     */
    @JsonSetter("reportOffset")
    public void setReportOffset(Integer reportOffset) {
        this.reportOffset = reportOffset;
    }

    /**
     * Getter for ReportPeriod.
     * The ammount of time between reports
     * @return Returns the Integer
     */
    @JsonGetter("reportPeriod")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getReportPeriod() {
        return reportPeriod;
    }

    /**
     * Setter for ReportPeriod.
     * The ammount of time between reports
     * @param reportPeriod Value for Integer
     */
    @JsonSetter("reportPeriod")
    public void setReportPeriod(Integer reportPeriod) {
        this.reportPeriod = reportPeriod;
    }

    /**
     * Getter for ReportType.
     * The report type
     * @return Returns the Integer
     */
    @JsonGetter("reportType")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getReportType() {
        return reportType;
    }

    /**
     * Setter for ReportType.
     * The report type
     * @param reportType Value for Integer
     */
    @JsonSetter("reportType")
    public void setReportType(Integer reportType) {
        this.reportType = reportType;
    }

    /**
     * Getter for ScanDuration.
     * The ammount of time the sensor is queried for data
     * @return Returns the Integer
     */
    @JsonGetter("scanDuration")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getScanDuration() {
        return scanDuration;
    }

    /**
     * Setter for ScanDuration.
     * The ammount of time the sensor is queried for data
     * @param scanDuration Value for Integer
     */
    @JsonSetter("scanDuration")
    public void setScanDuration(Integer scanDuration) {
        this.scanDuration = scanDuration;
    }

    /**
     * Hidden method for the serialization of additional properties.
     * @return The map of additionally set properties.
     */
    @JsonAnyGetter
    private Map<String, Object> getAdditionalProperties() {
        return additionalProperties.getAdditionalProperties();
    }

    /**
     * Hidden method for the de-serialization of additional properties.
     * @param name The name of the additional property.
     * @param value The Object value of the additional property.
     */
    @JsonAnySetter
    private void setAdditionalProperties(String name, Object value) {
        additionalProperties.setAdditionalProperty(name,
                ConversionHelper.convertToSimpleType(value,
                        x -> x),
                true);
    }

    /**
     * Getter for the value of additional properties based on provided property name.
     * @param name The name of the additional property.
     * @return Either the Object property value or null if not exist.
     */
    
    public Object getAdditionalProperty(String name) {
        return additionalProperties.getAdditionalProperty(name);
    }

    /**
     * Converts this SensorInsightsBle into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "SensorInsightsBle [" + "dataMode=" + dataMode + ", manufacturerId=" + manufacturerId
                + ", maxNumScan=" + maxNumScan + ", minSigStr=" + minSigStr + ", monitorPeriod="
                + monitorPeriod + ", moreManufId=" + moreManufId + ", opMode=" + opMode
                + ", reportOffset=" + reportOffset + ", reportPeriod=" + reportPeriod
                + ", reportType=" + reportType + ", scanDuration=" + scanDuration
                + ", additionalProperties=" + additionalProperties + "]";
    }

    /**
     * Builds a new {@link SensorInsightsBle.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link SensorInsightsBle.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .dataMode(getDataMode())
                .manufacturerId(getManufacturerId())
                .maxNumScan(getMaxNumScan())
                .minSigStr(getMinSigStr())
                .monitorPeriod(getMonitorPeriod())
                .moreManufId(getMoreManufId())
                .opMode(getOpMode())
                .reportOffset(getReportOffset())
                .reportPeriod(getReportPeriod())
                .reportType(getReportType())
                .scanDuration(getScanDuration());
        builder.additionalProperties = additionalProperties;
        return builder;
    }

    /**
     * Class to build instances of {@link SensorInsightsBle}.
     */
    public static class Builder {
        private Integer dataMode;
        private Integer manufacturerId;
        private Integer maxNumScan;
        private Integer minSigStr;
        private Integer monitorPeriod;
        private List<Object> moreManufId;
        private Integer opMode;
        private Integer reportOffset;
        private Integer reportPeriod;
        private Integer reportType;
        private Integer scanDuration;
        private AdditionalProperties<Object> additionalProperties =
                new AdditionalProperties<Object>();



        /**
         * Setter for dataMode.
         * @param  dataMode  Integer value for dataMode.
         * @return Builder
         */
        public Builder dataMode(Integer dataMode) {
            this.dataMode = dataMode;
            return this;
        }

        /**
         * Setter for manufacturerId.
         * @param  manufacturerId  Integer value for manufacturerId.
         * @return Builder
         */
        public Builder manufacturerId(Integer manufacturerId) {
            this.manufacturerId = manufacturerId;
            return this;
        }

        /**
         * Setter for maxNumScan.
         * @param  maxNumScan  Integer value for maxNumScan.
         * @return Builder
         */
        public Builder maxNumScan(Integer maxNumScan) {
            this.maxNumScan = maxNumScan;
            return this;
        }

        /**
         * Setter for minSigStr.
         * @param  minSigStr  Integer value for minSigStr.
         * @return Builder
         */
        public Builder minSigStr(Integer minSigStr) {
            this.minSigStr = minSigStr;
            return this;
        }

        /**
         * Setter for monitorPeriod.
         * @param  monitorPeriod  Integer value for monitorPeriod.
         * @return Builder
         */
        public Builder monitorPeriod(Integer monitorPeriod) {
            this.monitorPeriod = monitorPeriod;
            return this;
        }

        /**
         * Setter for moreManufId.
         * @param  moreManufId  List of Object value for moreManufId.
         * @return Builder
         */
        public Builder moreManufId(List<Object> moreManufId) {
            this.moreManufId = moreManufId;
            return this;
        }

        /**
         * Setter for opMode.
         * @param  opMode  Integer value for opMode.
         * @return Builder
         */
        public Builder opMode(Integer opMode) {
            this.opMode = opMode;
            return this;
        }

        /**
         * Setter for reportOffset.
         * @param  reportOffset  Integer value for reportOffset.
         * @return Builder
         */
        public Builder reportOffset(Integer reportOffset) {
            this.reportOffset = reportOffset;
            return this;
        }

        /**
         * Setter for reportPeriod.
         * @param  reportPeriod  Integer value for reportPeriod.
         * @return Builder
         */
        public Builder reportPeriod(Integer reportPeriod) {
            this.reportPeriod = reportPeriod;
            return this;
        }

        /**
         * Setter for reportType.
         * @param  reportType  Integer value for reportType.
         * @return Builder
         */
        public Builder reportType(Integer reportType) {
            this.reportType = reportType;
            return this;
        }

        /**
         * Setter for scanDuration.
         * @param  scanDuration  Integer value for scanDuration.
         * @return Builder
         */
        public Builder scanDuration(Integer scanDuration) {
            this.scanDuration = scanDuration;
            return this;
        }

        /**
         * Setter for additional property that are not in model fields.
         * @param name The name of the additional property.
         * @param value The Object value of the additional property.
         * @return Builder.
         */
        public Builder additionalProperty(String name, Object value) {
            this.additionalProperties.setAdditionalProperty(name, value);
            return this;
        }

        /**
         * Builds a new {@link SensorInsightsBle} object using the set fields.
         * @return {@link SensorInsightsBle}
         */
        public SensorInsightsBle build() {
            SensorInsightsBle model =
                    new SensorInsightsBle(dataMode, manufacturerId, maxNumScan, minSigStr,
                            monitorPeriod, moreManufId, opMode, reportOffset, reportPeriod,
                            reportType, scanDuration);
            model.additionalProperties = additionalProperties;
            return model;
        }
    }
}
