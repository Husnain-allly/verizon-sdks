/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models.containers;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.verizon.m5gedge.ApiHelper;
import com.verizon.m5gedge.models.DeviceId;
import com.verizon.m5gedge.models.PropertyDeviceId;
import io.apimatic.core.annotations.TypeCombinator.TypeCombinatorCase;
import java.io.IOException;
import java.util.Arrays;

/**
 * This is a container class for any-of types.
 */
@JsonDeserialize(using = DeactivateDeviceListIds.DeactivateDeviceListIdsDeserializer.class)
public abstract class DeactivateDeviceListIds {
    
    /**
     * This is DeviceId case.
     * @param deviceId DeviceId value for deviceId.
     * @return The DeviceIdCase object.
     */
    public static DeactivateDeviceListIds fromDeviceId(DeviceId deviceId) {
        return deviceId == null ? null : new DeviceIdCase(deviceId);
    }

    /**
     * This is PropertyDeviceId case.
     * @param propertyDeviceId PropertyDeviceId value for propertyDeviceId.
     * @return The PropertyDeviceIdCase object.
     */
    public static DeactivateDeviceListIds fromPropertyDeviceId(PropertyDeviceId propertyDeviceId) {
        return propertyDeviceId == null ? null : new PropertyDeviceIdCase(propertyDeviceId);
    }

    /**
     * Method to match from the provided any-of cases.
     * @param <R> The type to return after applying callback.
     * @param cases The any-of type cases callback.
     * @return The any-of matched case.
     */
    public abstract <R> R match(Cases<R> cases);

    /**
     * This is interface for any-of cases.
     * @param <R> The type to return after applying callback.
     */
    public interface Cases<R> {
        R deviceId(DeviceId deviceId);

        R propertyDeviceId(PropertyDeviceId propertyDeviceId);
    }

    /**
     * This is a implementation class for DeviceIdCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "DeviceId")
    private static class DeviceIdCase extends DeactivateDeviceListIds {

        @JsonValue
        private DeviceId deviceId;

        DeviceIdCase(DeviceId deviceId) {
            this.deviceId = deviceId;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.deviceId(this.deviceId);
        }

        @JsonCreator
        private DeviceIdCase(JsonNode jsonNode) throws IOException {
            this.deviceId = ApiHelper.deserialize(jsonNode,
                DeviceId.class);
        }

        @Override
        public String toString() {
            return deviceId.toString();
        }
    }

    /**
     * This is a implementation class for PropertyDeviceIdCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PropertyDeviceId")
    private static class PropertyDeviceIdCase extends DeactivateDeviceListIds {

        @JsonValue
        private PropertyDeviceId propertyDeviceId;

        PropertyDeviceIdCase(PropertyDeviceId propertyDeviceId) {
            this.propertyDeviceId = propertyDeviceId;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.propertyDeviceId(this.propertyDeviceId);
        }

        @JsonCreator
        private PropertyDeviceIdCase(JsonNode jsonNode) throws IOException {
            this.propertyDeviceId = ApiHelper.deserialize(jsonNode,
                PropertyDeviceId.class);
        }

        @Override
        public String toString() {
            return propertyDeviceId.toString();
        }
    }

    /**
     * This is a custom deserializer class for DeactivateDeviceListIds.
     */
    protected static class DeactivateDeviceListIdsDeserializer
            extends JsonDeserializer<DeactivateDeviceListIds> {

        @Override
        public DeactivateDeviceListIds deserialize(JsonParser jp, DeserializationContext ctxt)
                throws IOException, JsonProcessingException {
            ObjectCodec oc = jp.getCodec();
            JsonNode node = oc.readTree(jp);
            return ApiHelper.deserialize(node, Arrays.asList(DeviceIdCase.class,
                    PropertyDeviceIdCase.class), false);
        }
    }

}
