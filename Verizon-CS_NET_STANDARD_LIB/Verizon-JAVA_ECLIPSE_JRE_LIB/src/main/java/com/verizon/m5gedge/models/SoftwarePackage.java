/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.verizon.m5gedge.DateTimeHelper;
import io.apimatic.core.types.AdditionalProperties;
import io.apimatic.core.utilities.ConversionHelper;
import java.time.LocalDate;
import java.util.Map;

/**
 * This is a model class for SoftwarePackage type.
 */
public class SoftwarePackage {
    private String softwareName;
    private LocalDate launchDate;
    private String releaseNote;
    private String model;
    private String make;
    private String distributionType;
    private String devicePlatformId;
    private AdditionalProperties<Object> additionalProperties = 
            new AdditionalProperties<Object>(this.getClass());

    /**
     * Default constructor.
     */
    public SoftwarePackage() {
    }

    /**
     * Initialization constructor.
     * @param  softwareName  String value for softwareName.
     * @param  launchDate  LocalDate value for launchDate.
     * @param  model  String value for model.
     * @param  make  String value for make.
     * @param  distributionType  String value for distributionType.
     * @param  devicePlatformId  String value for devicePlatformId.
     * @param  releaseNote  String value for releaseNote.
     */
    public SoftwarePackage(
            String softwareName,
            LocalDate launchDate,
            String model,
            String make,
            String distributionType,
            String devicePlatformId,
            String releaseNote) {
        this.softwareName = softwareName;
        this.launchDate = launchDate;
        this.releaseNote = releaseNote;
        this.model = model;
        this.make = make;
        this.distributionType = distributionType;
        this.devicePlatformId = devicePlatformId;
    }

    /**
     * Getter for SoftwareName.
     * Software name.
     * @return Returns the String
     */
    @JsonGetter("softwareName")
    public String getSoftwareName() {
        return softwareName;
    }

    /**
     * Setter for SoftwareName.
     * Software name.
     * @param softwareName Value for String
     */
    @JsonSetter("softwareName")
    public void setSoftwareName(String softwareName) {
        this.softwareName = softwareName;
    }

    /**
     * Getter for LaunchDate.
     * Software launch date.
     * @return Returns the LocalDate
     */
    @JsonGetter("launchDate")
    @JsonSerialize(using = DateTimeHelper.SimpleDateSerializer.class)
    public LocalDate getLaunchDate() {
        return launchDate;
    }

    /**
     * Setter for LaunchDate.
     * Software launch date.
     * @param launchDate Value for LocalDate
     */
    @JsonSetter("launchDate")
    @JsonDeserialize(using = DateTimeHelper.SimpleDateDeserializer.class)
    public void setLaunchDate(LocalDate launchDate) {
        this.launchDate = launchDate;
    }

    /**
     * Getter for ReleaseNote.
     * Software release note reserved for future use.
     * @return Returns the String
     */
    @JsonGetter("releaseNote")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getReleaseNote() {
        return releaseNote;
    }

    /**
     * Setter for ReleaseNote.
     * Software release note reserved for future use.
     * @param releaseNote Value for String
     */
    @JsonSetter("releaseNote")
    public void setReleaseNote(String releaseNote) {
        this.releaseNote = releaseNote;
    }

    /**
     * Getter for Model.
     * Software applicable device model.
     * @return Returns the String
     */
    @JsonGetter("model")
    public String getModel() {
        return model;
    }

    /**
     * Setter for Model.
     * Software applicable device model.
     * @param model Value for String
     */
    @JsonSetter("model")
    public void setModel(String model) {
        this.model = model;
    }

    /**
     * Getter for Make.
     * Software applicable device make.
     * @return Returns the String
     */
    @JsonGetter("make")
    public String getMake() {
        return make;
    }

    /**
     * Setter for Make.
     * Software applicable device make.
     * @param make Value for String
     */
    @JsonSetter("make")
    public void setMake(String make) {
        this.make = make;
    }

    /**
     * Getter for DistributionType.
     * LWM2M, OMD-DM or HTTP.
     * @return Returns the String
     */
    @JsonGetter("distributionType")
    public String getDistributionType() {
        return distributionType;
    }

    /**
     * Setter for DistributionType.
     * LWM2M, OMD-DM or HTTP.
     * @param distributionType Value for String
     */
    @JsonSetter("distributionType")
    public void setDistributionType(String distributionType) {
        this.distributionType = distributionType;
    }

    /**
     * Getter for DevicePlatformId.
     * The platform (Android, iOS, etc.) that the software can be applied to.
     * @return Returns the String
     */
    @JsonGetter("devicePlatformId")
    public String getDevicePlatformId() {
        return devicePlatformId;
    }

    /**
     * Setter for DevicePlatformId.
     * The platform (Android, iOS, etc.) that the software can be applied to.
     * @param devicePlatformId Value for String
     */
    @JsonSetter("devicePlatformId")
    public void setDevicePlatformId(String devicePlatformId) {
        this.devicePlatformId = devicePlatformId;
    }

    /**
     * Hidden method for the serialization of additional properties.
     * @return The map of additionally set properties.
     */
    @JsonAnyGetter
    private Map<String, Object> getAdditionalProperties() {
        return additionalProperties.getAdditionalProperties();
    }

    /**
     * Hidden method for the de-serialization of additional properties.
     * @param name The name of the additional property.
     * @param value The Object value of the additional property.
     */
    @JsonAnySetter
    private void setAdditionalProperties(String name, Object value) {
        additionalProperties.setAdditionalProperty(name,
                ConversionHelper.convertToSimpleType(value,
                        x -> x),
                true);
    }

    /**
     * Getter for the value of additional properties based on provided property name.
     * @param name The name of the additional property.
     * @return Either the Object property value or null if not exist.
     */
    
    public Object getAdditionalProperty(String name) {
        return additionalProperties.getAdditionalProperty(name);
    }

    /**
     * Converts this SoftwarePackage into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "SoftwarePackage [" + "softwareName=" + softwareName + ", launchDate=" + launchDate
                + ", model=" + model + ", make=" + make + ", distributionType=" + distributionType
                + ", devicePlatformId=" + devicePlatformId + ", releaseNote=" + releaseNote
                + ", additionalProperties=" + additionalProperties + "]";
    }

    /**
     * Builds a new {@link SoftwarePackage.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link SoftwarePackage.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(softwareName, launchDate, model, make, distributionType,
                devicePlatformId)
                .releaseNote(getReleaseNote());
        builder.additionalProperties = additionalProperties;
        return builder;
    }

    /**
     * Class to build instances of {@link SoftwarePackage}.
     */
    public static class Builder {
        private String softwareName;
        private LocalDate launchDate;
        private String model;
        private String make;
        private String distributionType;
        private String devicePlatformId;
        private String releaseNote;
        private AdditionalProperties<Object> additionalProperties =
                new AdditionalProperties<Object>();

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  softwareName  String value for softwareName.
         * @param  launchDate  LocalDate value for launchDate.
         * @param  model  String value for model.
         * @param  make  String value for make.
         * @param  distributionType  String value for distributionType.
         * @param  devicePlatformId  String value for devicePlatformId.
         */
        public Builder(String softwareName, LocalDate launchDate, String model, String make,
                String distributionType, String devicePlatformId) {
            this.softwareName = softwareName;
            this.launchDate = launchDate;
            this.model = model;
            this.make = make;
            this.distributionType = distributionType;
            this.devicePlatformId = devicePlatformId;
        }

        /**
         * Setter for softwareName.
         * @param  softwareName  String value for softwareName.
         * @return Builder
         */
        public Builder softwareName(String softwareName) {
            this.softwareName = softwareName;
            return this;
        }

        /**
         * Setter for launchDate.
         * @param  launchDate  LocalDate value for launchDate.
         * @return Builder
         */
        public Builder launchDate(LocalDate launchDate) {
            this.launchDate = launchDate;
            return this;
        }

        /**
         * Setter for model.
         * @param  model  String value for model.
         * @return Builder
         */
        public Builder model(String model) {
            this.model = model;
            return this;
        }

        /**
         * Setter for make.
         * @param  make  String value for make.
         * @return Builder
         */
        public Builder make(String make) {
            this.make = make;
            return this;
        }

        /**
         * Setter for distributionType.
         * @param  distributionType  String value for distributionType.
         * @return Builder
         */
        public Builder distributionType(String distributionType) {
            this.distributionType = distributionType;
            return this;
        }

        /**
         * Setter for devicePlatformId.
         * @param  devicePlatformId  String value for devicePlatformId.
         * @return Builder
         */
        public Builder devicePlatformId(String devicePlatformId) {
            this.devicePlatformId = devicePlatformId;
            return this;
        }

        /**
         * Setter for releaseNote.
         * @param  releaseNote  String value for releaseNote.
         * @return Builder
         */
        public Builder releaseNote(String releaseNote) {
            this.releaseNote = releaseNote;
            return this;
        }

        /**
         * Setter for additional property that are not in model fields.
         * @param name The name of the additional property.
         * @param value The Object value of the additional property.
         * @return Builder.
         */
        public Builder additionalProperty(String name, Object value) {
            this.additionalProperties.setAdditionalProperty(name, value);
            return this;
        }

        /**
         * Builds a new {@link SoftwarePackage} object using the set fields.
         * @return {@link SoftwarePackage}
         */
        public SoftwarePackage build() {
            SoftwarePackage model2 =
                    new SoftwarePackage(softwareName, launchDate, model, make, distributionType,
                            devicePlatformId, releaseNote);
            model2.additionalProperties = additionalProperties;
            return model2;
        }
    }
}
