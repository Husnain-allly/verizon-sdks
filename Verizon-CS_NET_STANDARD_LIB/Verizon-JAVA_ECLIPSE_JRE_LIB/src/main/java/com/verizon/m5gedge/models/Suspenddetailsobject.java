/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.AdditionalProperties;
import io.apimatic.core.utilities.ConversionHelper;
import java.util.List;
import java.util.Map;

/**
 * This is a model class for Suspenddetailsobject type.
 */
public class Suspenddetailsobject {
    private List<String> suspendFromAccounts;
    private Integer suspendDuration;
    private String suspendOption;
    private Integer threshold;
    private ThresholdUnit thresholdUnit;
    private AdditionalProperties<Object> additionalProperties = 
            new AdditionalProperties<Object>(this.getClass());

    /**
     * Default constructor.
     */
    public Suspenddetailsobject() {
    }

    /**
     * Initialization constructor.
     * @param  suspendFromAccounts  List of String value for suspendFromAccounts.
     * @param  suspendDuration  Integer value for suspendDuration.
     * @param  suspendOption  String value for suspendOption.
     * @param  threshold  Integer value for threshold.
     * @param  thresholdUnit  ThresholdUnit value for thresholdUnit.
     */
    public Suspenddetailsobject(
            List<String> suspendFromAccounts,
            Integer suspendDuration,
            String suspendOption,
            Integer threshold,
            ThresholdUnit thresholdUnit) {
        this.suspendFromAccounts = suspendFromAccounts;
        this.suspendDuration = suspendDuration;
        this.suspendOption = suspendOption;
        this.threshold = threshold;
        this.thresholdUnit = thresholdUnit;
    }

    /**
     * Getter for SuspendFromAccounts.
     * @return Returns the List of String
     */
    @JsonGetter("suspendFromAccounts")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<String> getSuspendFromAccounts() {
        return suspendFromAccounts;
    }

    /**
     * Setter for SuspendFromAccounts.
     * @param suspendFromAccounts Value for List of String
     */
    @JsonSetter("suspendFromAccounts")
    public void setSuspendFromAccounts(List<String> suspendFromAccounts) {
        this.suspendFromAccounts = suspendFromAccounts;
    }

    /**
     * Getter for SuspendDuration.
     * @return Returns the Integer
     */
    @JsonGetter("suspendDuration")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getSuspendDuration() {
        return suspendDuration;
    }

    /**
     * Setter for SuspendDuration.
     * @param suspendDuration Value for Integer
     */
    @JsonSetter("suspendDuration")
    public void setSuspendDuration(Integer suspendDuration) {
        this.suspendDuration = suspendDuration;
    }

    /**
     * Getter for SuspendOption.
     * @return Returns the String
     */
    @JsonGetter("suspendOption")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSuspendOption() {
        return suspendOption;
    }

    /**
     * Setter for SuspendOption.
     * @param suspendOption Value for String
     */
    @JsonSetter("suspendOption")
    public void setSuspendOption(String suspendOption) {
        this.suspendOption = suspendOption;
    }

    /**
     * Getter for Threshold.
     * The threshold value the trigger monitors for
     * @return Returns the Integer
     */
    @JsonGetter("threshold")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getThreshold() {
        return threshold;
    }

    /**
     * Setter for Threshold.
     * The threshold value the trigger monitors for
     * @param threshold Value for Integer
     */
    @JsonSetter("threshold")
    public void setThreshold(Integer threshold) {
        this.threshold = threshold;
    }

    /**
     * Getter for ThresholdUnit.
     * The units of the threshold. This can be KB, Kilobits, MB, Megabits, or GB, Gigabits
     * @return Returns the ThresholdUnit
     */
    @JsonGetter("thresholdUnit")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public ThresholdUnit getThresholdUnit() {
        return thresholdUnit;
    }

    /**
     * Setter for ThresholdUnit.
     * The units of the threshold. This can be KB, Kilobits, MB, Megabits, or GB, Gigabits
     * @param thresholdUnit Value for ThresholdUnit
     */
    @JsonSetter("thresholdUnit")
    public void setThresholdUnit(ThresholdUnit thresholdUnit) {
        this.thresholdUnit = thresholdUnit;
    }

    /**
     * Hidden method for the serialization of additional properties.
     * @return The map of additionally set properties.
     */
    @JsonAnyGetter
    private Map<String, Object> getAdditionalProperties() {
        return additionalProperties.getAdditionalProperties();
    }

    /**
     * Hidden method for the de-serialization of additional properties.
     * @param name The name of the additional property.
     * @param value The Object value of the additional property.
     */
    @JsonAnySetter
    private void setAdditionalProperties(String name, Object value) {
        additionalProperties.setAdditionalProperty(name,
                ConversionHelper.convertToSimpleType(value,
                        x -> x),
                true);
    }

    /**
     * Getter for the value of additional properties based on provided property name.
     * @param name The name of the additional property.
     * @return Either the Object property value or null if not exist.
     */
    
    public Object getAdditionalProperty(String name) {
        return additionalProperties.getAdditionalProperty(name);
    }

    /**
     * Converts this Suspenddetailsobject into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Suspenddetailsobject [" + "suspendFromAccounts=" + suspendFromAccounts
                + ", suspendDuration=" + suspendDuration + ", suspendOption=" + suspendOption
                + ", threshold=" + threshold + ", thresholdUnit=" + thresholdUnit
                + ", additionalProperties=" + additionalProperties + "]";
    }

    /**
     * Builds a new {@link Suspenddetailsobject.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Suspenddetailsobject.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .suspendFromAccounts(getSuspendFromAccounts())
                .suspendDuration(getSuspendDuration())
                .suspendOption(getSuspendOption())
                .threshold(getThreshold())
                .thresholdUnit(getThresholdUnit());
        builder.additionalProperties = additionalProperties;
        return builder;
    }

    /**
     * Class to build instances of {@link Suspenddetailsobject}.
     */
    public static class Builder {
        private List<String> suspendFromAccounts;
        private Integer suspendDuration;
        private String suspendOption;
        private Integer threshold;
        private ThresholdUnit thresholdUnit;
        private AdditionalProperties<Object> additionalProperties =
                new AdditionalProperties<Object>();



        /**
         * Setter for suspendFromAccounts.
         * @param  suspendFromAccounts  List of String value for suspendFromAccounts.
         * @return Builder
         */
        public Builder suspendFromAccounts(List<String> suspendFromAccounts) {
            this.suspendFromAccounts = suspendFromAccounts;
            return this;
        }

        /**
         * Setter for suspendDuration.
         * @param  suspendDuration  Integer value for suspendDuration.
         * @return Builder
         */
        public Builder suspendDuration(Integer suspendDuration) {
            this.suspendDuration = suspendDuration;
            return this;
        }

        /**
         * Setter for suspendOption.
         * @param  suspendOption  String value for suspendOption.
         * @return Builder
         */
        public Builder suspendOption(String suspendOption) {
            this.suspendOption = suspendOption;
            return this;
        }

        /**
         * Setter for threshold.
         * @param  threshold  Integer value for threshold.
         * @return Builder
         */
        public Builder threshold(Integer threshold) {
            this.threshold = threshold;
            return this;
        }

        /**
         * Setter for thresholdUnit.
         * @param  thresholdUnit  ThresholdUnit value for thresholdUnit.
         * @return Builder
         */
        public Builder thresholdUnit(ThresholdUnit thresholdUnit) {
            this.thresholdUnit = thresholdUnit;
            return this;
        }

        /**
         * Setter for additional property that are not in model fields.
         * @param name The name of the additional property.
         * @param value The Object value of the additional property.
         * @return Builder.
         */
        public Builder additionalProperty(String name, Object value) {
            this.additionalProperties.setAdditionalProperty(name, value);
            return this;
        }

        /**
         * Builds a new {@link Suspenddetailsobject} object using the set fields.
         * @return {@link Suspenddetailsobject}
         */
        public Suspenddetailsobject build() {
            Suspenddetailsobject model =
                    new Suspenddetailsobject(suspendFromAccounts, suspendDuration, suspendOption,
                            threshold, thresholdUnit);
            model.additionalProperties = additionalProperties;
            return model;
        }
    }
}
