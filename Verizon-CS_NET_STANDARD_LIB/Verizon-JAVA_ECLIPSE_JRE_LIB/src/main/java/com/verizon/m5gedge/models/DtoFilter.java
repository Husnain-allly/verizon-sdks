/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;
import java.util.Map;

/**
 * This is a model class for DtoFilter type.
 */
public class DtoFilter {
    private String mExpand;
    private Integer mLimitnumber;
    private Boolean mNopagination;
    private String mPage;
    private Integer mPagenumber;
    private List<String> mProjection;
    private Map<String, Object> mSelection;

    /**
     * Default constructor.
     */
    public DtoFilter() {
    }

    /**
     * Initialization constructor.
     * @param  mExpand  String value for mExpand.
     * @param  mLimitnumber  Integer value for mLimitnumber.
     * @param  mNopagination  Boolean value for mNopagination.
     * @param  mPage  String value for mPage.
     * @param  mPagenumber  Integer value for mPagenumber.
     * @param  mProjection  List of String value for mProjection.
     * @param  mSelection  Map of String, value for mSelection.
     */
    public DtoFilter(
            String mExpand,
            Integer mLimitnumber,
            Boolean mNopagination,
            String mPage,
            Integer mPagenumber,
            List<String> mProjection,
            Map<String, Object> mSelection) {
        this.mExpand = mExpand;
        this.mLimitnumber = mLimitnumber;
        this.mNopagination = mNopagination;
        this.mPage = mPage;
        this.mPagenumber = mPagenumber;
        this.mProjection = mProjection;
        this.mSelection = mSelection;
    }

    /**
     * Getter for MExpand.
     * Use to provide device details for alerts specific to a device
     * @return Returns the String
     */
    @JsonGetter("$expand")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getMExpand() {
        return mExpand;
    }

    /**
     * Setter for MExpand.
     * Use to provide device details for alerts specific to a device
     * @param mExpand Value for String
     */
    @JsonSetter("$expand")
    public void setMExpand(String mExpand) {
        this.mExpand = mExpand;
    }

    /**
     * Getter for MLimitnumber.
     * Limit the number of results returned
     * @return Returns the Integer
     */
    @JsonGetter("$limitnumber")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getMLimitnumber() {
        return mLimitnumber;
    }

    /**
     * Setter for MLimitnumber.
     * Limit the number of results returned
     * @param mLimitnumber Value for Integer
     */
    @JsonSetter("$limitnumber")
    public void setMLimitnumber(Integer mLimitnumber) {
        this.mLimitnumber = mLimitnumber;
    }

    /**
     * Getter for MNopagination.
     * A flag set to show if pagination requested (false) or not (true)
     * @return Returns the Boolean
     */
    @JsonGetter("$nopagination")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getMNopagination() {
        return mNopagination;
    }

    /**
     * Setter for MNopagination.
     * A flag set to show if pagination requested (false) or not (true)
     * @param mNopagination Value for Boolean
     */
    @JsonSetter("$nopagination")
    public void setMNopagination(Boolean mNopagination) {
        this.mNopagination = mNopagination;
    }

    /**
     * Getter for MPage.
     * @return Returns the String
     */
    @JsonGetter("$page")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getMPage() {
        return mPage;
    }

    /**
     * Setter for MPage.
     * @param mPage Value for String
     */
    @JsonSetter("$page")
    public void setMPage(String mPage) {
        this.mPage = mPage;
    }

    /**
     * Getter for MPagenumber.
     * @return Returns the Integer
     */
    @JsonGetter("$pagenumber")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getMPagenumber() {
        return mPagenumber;
    }

    /**
     * Setter for MPagenumber.
     * @param mPagenumber Value for Integer
     */
    @JsonSetter("$pagenumber")
    public void setMPagenumber(Integer mPagenumber) {
        this.mPagenumber = mPagenumber;
    }

    /**
     * Getter for MProjection.
     * Limits the fields of the device that the user is interested in rather than all of the fields
     * @return Returns the List of String
     */
    @JsonGetter("$projection")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<String> getMProjection() {
        return mProjection;
    }

    /**
     * Setter for MProjection.
     * Limits the fields of the device that the user is interested in rather than all of the fields
     * @param mProjection Value for List of String
     */
    @JsonSetter("$projection")
    public void setMProjection(List<String> mProjection) {
        this.mProjection = mProjection;
    }

    /**
     * Getter for MSelection.
     * Filters results based on user defined criteria
     * @return Returns the Map of String, Object
     */
    @JsonGetter("$selection")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Map<String, Object> getMSelection() {
        return mSelection;
    }

    /**
     * Setter for MSelection.
     * Filters results based on user defined criteria
     * @param mSelection Value for Map of String, Object
     */
    @JsonSetter("$selection")
    public void setMSelection(Map<String, Object> mSelection) {
        this.mSelection = mSelection;
    }

    /**
     * Converts this DtoFilter into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "DtoFilter [" + "mExpand=" + mExpand + ", mLimitnumber=" + mLimitnumber
                + ", mNopagination=" + mNopagination + ", mPage=" + mPage + ", mPagenumber="
                + mPagenumber + ", mProjection=" + mProjection + ", mSelection=" + mSelection + "]";
    }

    /**
     * Builds a new {@link DtoFilter.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link DtoFilter.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .mExpand(getMExpand())
                .mLimitnumber(getMLimitnumber())
                .mNopagination(getMNopagination())
                .mPage(getMPage())
                .mPagenumber(getMPagenumber())
                .mProjection(getMProjection())
                .mSelection(getMSelection());
        return builder;
    }

    /**
     * Class to build instances of {@link DtoFilter}.
     */
    public static class Builder {
        private String mExpand;
        private Integer mLimitnumber;
        private Boolean mNopagination;
        private String mPage;
        private Integer mPagenumber;
        private List<String> mProjection;
        private Map<String, Object> mSelection;



        /**
         * Setter for mExpand.
         * @param  mExpand  String value for mExpand.
         * @return Builder
         */
        public Builder mExpand(String mExpand) {
            this.mExpand = mExpand;
            return this;
        }

        /**
         * Setter for mLimitnumber.
         * @param  mLimitnumber  Integer value for mLimitnumber.
         * @return Builder
         */
        public Builder mLimitnumber(Integer mLimitnumber) {
            this.mLimitnumber = mLimitnumber;
            return this;
        }

        /**
         * Setter for mNopagination.
         * @param  mNopagination  Boolean value for mNopagination.
         * @return Builder
         */
        public Builder mNopagination(Boolean mNopagination) {
            this.mNopagination = mNopagination;
            return this;
        }

        /**
         * Setter for mPage.
         * @param  mPage  String value for mPage.
         * @return Builder
         */
        public Builder mPage(String mPage) {
            this.mPage = mPage;
            return this;
        }

        /**
         * Setter for mPagenumber.
         * @param  mPagenumber  Integer value for mPagenumber.
         * @return Builder
         */
        public Builder mPagenumber(Integer mPagenumber) {
            this.mPagenumber = mPagenumber;
            return this;
        }

        /**
         * Setter for mProjection.
         * @param  mProjection  List of String value for mProjection.
         * @return Builder
         */
        public Builder mProjection(List<String> mProjection) {
            this.mProjection = mProjection;
            return this;
        }

        /**
         * Setter for mSelection.
         * @param  mSelection  Map of String, value for mSelection.
         * @return Builder
         */
        public Builder mSelection(Map<String, Object> mSelection) {
            this.mSelection = mSelection;
            return this;
        }

        /**
         * Builds a new {@link DtoFilter} object using the set fields.
         * @return {@link DtoFilter}
         */
        public DtoFilter build() {
            return new DtoFilter(mExpand, mLimitnumber, mNopagination, mPage, mPagenumber,
                    mProjection, mSelection);
        }
    }
}
