/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models.containers;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.verizon.m5gedge.ApiHelper;
import com.verizon.m5gedge.models.AccountGroupShareCreateTriggerRequest;
import com.verizon.m5gedge.models.AccountLevelCreateTriggerRequest;
import com.verizon.m5gedge.models.AccountLevelObject;
import com.verizon.m5gedge.models.AccountShareCreateTriggerRequest;
import com.verizon.m5gedge.models.Createtriggerchunk;
import com.verizon.m5gedge.models.DeviceLevelCreateTriggerRequest;
import com.verizon.m5gedge.models.PayAsYouGoCreateTriggerRequest;
import io.apimatic.core.annotations.TypeCombinator.TypeCombinatorCase;
import java.io.IOException;
import java.util.Arrays;

/**
 * This is a container class for any-of types.
 */
@JsonDeserialize(using = CreateTriggerRulesBody.CreateTriggerRulesBodyDeserializer.class)
public abstract class CreateTriggerRulesBody {
    
    /**
     * This is accountLevelCreateTriggerRequest case.
     * @param accountLevelCreateTriggerRequest AccountLevelCreateTriggerRequest value for accountLevelCreateTriggerRequest.
     * @return The AccountLevelCreateTriggerRequestCase object.
     */
    public static CreateTriggerRulesBody fromAccountLevelCreateTriggerRequest(
            AccountLevelCreateTriggerRequest accountLevelCreateTriggerRequest) {
        return accountLevelCreateTriggerRequest == null ? null : new AccountLevelCreateTriggerRequestCase(accountLevelCreateTriggerRequest);
    }

    /**
     * This is accountLevelObject case.
     * @param accountLevelObject AccountLevelObject value for accountLevelObject.
     * @return The AccountLevelObjectCase object.
     */
    public static CreateTriggerRulesBody fromAccountLevelObject(
            AccountLevelObject accountLevelObject) {
        return accountLevelObject == null ? null : new AccountLevelObjectCase(accountLevelObject);
    }

    /**
     * This is deviceLevelCreateTriggerRequest case.
     * @param deviceLevelCreateTriggerRequest DeviceLevelCreateTriggerRequest value for deviceLevelCreateTriggerRequest.
     * @return The DeviceLevelCreateTriggerRequestCase object.
     */
    public static CreateTriggerRulesBody fromDeviceLevelCreateTriggerRequest(
            DeviceLevelCreateTriggerRequest deviceLevelCreateTriggerRequest) {
        return deviceLevelCreateTriggerRequest == null ? null : new DeviceLevelCreateTriggerRequestCase(deviceLevelCreateTriggerRequest);
    }

    /**
     * This is accountGroupShareCreateTriggerRequest case.
     * @param accountGroupShareCreateTriggerRequest AccountGroupShareCreateTriggerRequest value for accountGroupShareCreateTriggerRequest.
     * @return The AccountGroupShareCreateTriggerRequestCase object.
     */
    public static CreateTriggerRulesBody fromAccountGroupShareCreateTriggerRequest(
            AccountGroupShareCreateTriggerRequest accountGroupShareCreateTriggerRequest) {
        return accountGroupShareCreateTriggerRequest == null ? null : new AccountGroupShareCreateTriggerRequestCase(accountGroupShareCreateTriggerRequest);
    }

    /**
     * This is accountShareCreateTriggerRequest case.
     * @param accountShareCreateTriggerRequest AccountShareCreateTriggerRequest value for accountShareCreateTriggerRequest.
     * @return The AccountShareCreateTriggerRequestCase object.
     */
    public static CreateTriggerRulesBody fromAccountShareCreateTriggerRequest(
            AccountShareCreateTriggerRequest accountShareCreateTriggerRequest) {
        return accountShareCreateTriggerRequest == null ? null : new AccountShareCreateTriggerRequestCase(accountShareCreateTriggerRequest);
    }

    /**
     * This is payAsYouGoCreateTriggerRequest case.
     * @param payAsYouGoCreateTriggerRequest PayAsYouGoCreateTriggerRequest value for payAsYouGoCreateTriggerRequest.
     * @return The PayAsYouGoCreateTriggerRequestCase object.
     */
    public static CreateTriggerRulesBody fromPayAsYouGoCreateTriggerRequest(
            PayAsYouGoCreateTriggerRequest payAsYouGoCreateTriggerRequest) {
        return payAsYouGoCreateTriggerRequest == null ? null : new PayAsYouGoCreateTriggerRequestCase(payAsYouGoCreateTriggerRequest);
    }

    /**
     * This is createtriggerchunk case.
     * @param createtriggerchunk Createtriggerchunk value for createtriggerchunk.
     * @return The CreatetriggerchunkCase object.
     */
    public static CreateTriggerRulesBody fromCreatetriggerchunk(
            Createtriggerchunk createtriggerchunk) {
        return createtriggerchunk == null ? null : new CreatetriggerchunkCase(createtriggerchunk);
    }

    /**
     * Method to match from the provided any-of cases.
     * @param <R> The type to return after applying callback.
     * @param cases The any-of type cases callback.
     * @return The any-of matched case.
     */
    public abstract <R> R match(Cases<R> cases);

    /**
     * This is interface for any-of cases.
     * @param <R> The type to return after applying callback.
     */
    public interface Cases<R> {
        R accountLevelCreateTriggerRequest(AccountLevelCreateTriggerRequest accountLevelCreateTriggerRequest);

        R accountLevelObject(AccountLevelObject accountLevelObject);

        R deviceLevelCreateTriggerRequest(DeviceLevelCreateTriggerRequest deviceLevelCreateTriggerRequest);

        R accountGroupShareCreateTriggerRequest(AccountGroupShareCreateTriggerRequest accountGroupShareCreateTriggerRequest);

        R accountShareCreateTriggerRequest(AccountShareCreateTriggerRequest accountShareCreateTriggerRequest);

        R payAsYouGoCreateTriggerRequest(PayAsYouGoCreateTriggerRequest payAsYouGoCreateTriggerRequest);

        R createtriggerchunk(Createtriggerchunk createtriggerchunk);
    }

    /**
     * This is a implementation class for AccountLevelCreateTriggerRequestCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "AccountLevelCreateTriggerRequest")
    private static class AccountLevelCreateTriggerRequestCase extends CreateTriggerRulesBody {

        @JsonValue
        private AccountLevelCreateTriggerRequest accountLevelCreateTriggerRequest;

        AccountLevelCreateTriggerRequestCase(AccountLevelCreateTriggerRequest accountLevelCreateTriggerRequest) {
            this.accountLevelCreateTriggerRequest = accountLevelCreateTriggerRequest;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.accountLevelCreateTriggerRequest(this.accountLevelCreateTriggerRequest);
        }

        @JsonCreator
        private AccountLevelCreateTriggerRequestCase(JsonNode jsonNode) throws IOException {
            this.accountLevelCreateTriggerRequest = ApiHelper.deserialize(jsonNode,
                AccountLevelCreateTriggerRequest.class);
        }

        @Override
        public String toString() {
            return accountLevelCreateTriggerRequest.toString();
        }
    }

    /**
     * This is a implementation class for AccountLevelObjectCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "AccountLevelObject")
    private static class AccountLevelObjectCase extends CreateTriggerRulesBody {

        @JsonValue
        private AccountLevelObject accountLevelObject;

        AccountLevelObjectCase(AccountLevelObject accountLevelObject) {
            this.accountLevelObject = accountLevelObject;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.accountLevelObject(this.accountLevelObject);
        }

        @JsonCreator
        private AccountLevelObjectCase(JsonNode jsonNode) throws IOException {
            this.accountLevelObject = ApiHelper.deserialize(jsonNode,
                AccountLevelObject.class);
        }

        @Override
        public String toString() {
            return accountLevelObject.toString();
        }
    }

    /**
     * This is a implementation class for DeviceLevelCreateTriggerRequestCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "DeviceLevelCreateTriggerRequest")
    private static class DeviceLevelCreateTriggerRequestCase extends CreateTriggerRulesBody {

        @JsonValue
        private DeviceLevelCreateTriggerRequest deviceLevelCreateTriggerRequest;

        DeviceLevelCreateTriggerRequestCase(DeviceLevelCreateTriggerRequest deviceLevelCreateTriggerRequest) {
            this.deviceLevelCreateTriggerRequest = deviceLevelCreateTriggerRequest;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.deviceLevelCreateTriggerRequest(this.deviceLevelCreateTriggerRequest);
        }

        @JsonCreator
        private DeviceLevelCreateTriggerRequestCase(JsonNode jsonNode) throws IOException {
            this.deviceLevelCreateTriggerRequest = ApiHelper.deserialize(jsonNode,
                DeviceLevelCreateTriggerRequest.class);
        }

        @Override
        public String toString() {
            return deviceLevelCreateTriggerRequest.toString();
        }
    }

    /**
     * This is a implementation class for AccountGroupShareCreateTriggerRequestCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "AccountGroupShareCreateTriggerRequest")
    private static class AccountGroupShareCreateTriggerRequestCase extends CreateTriggerRulesBody {

        @JsonValue
        private AccountGroupShareCreateTriggerRequest accountGroupShareCreateTriggerRequest;

        AccountGroupShareCreateTriggerRequestCase(AccountGroupShareCreateTriggerRequest accountGroupShareCreateTriggerRequest) {
            this.accountGroupShareCreateTriggerRequest = accountGroupShareCreateTriggerRequest;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.accountGroupShareCreateTriggerRequest(this.accountGroupShareCreateTriggerRequest);
        }

        @JsonCreator
        private AccountGroupShareCreateTriggerRequestCase(JsonNode jsonNode) throws IOException {
            this.accountGroupShareCreateTriggerRequest = ApiHelper.deserialize(jsonNode,
                AccountGroupShareCreateTriggerRequest.class);
        }

        @Override
        public String toString() {
            return accountGroupShareCreateTriggerRequest.toString();
        }
    }

    /**
     * This is a implementation class for AccountShareCreateTriggerRequestCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "AccountShareCreateTriggerRequest")
    private static class AccountShareCreateTriggerRequestCase extends CreateTriggerRulesBody {

        @JsonValue
        private AccountShareCreateTriggerRequest accountShareCreateTriggerRequest;

        AccountShareCreateTriggerRequestCase(AccountShareCreateTriggerRequest accountShareCreateTriggerRequest) {
            this.accountShareCreateTriggerRequest = accountShareCreateTriggerRequest;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.accountShareCreateTriggerRequest(this.accountShareCreateTriggerRequest);
        }

        @JsonCreator
        private AccountShareCreateTriggerRequestCase(JsonNode jsonNode) throws IOException {
            this.accountShareCreateTriggerRequest = ApiHelper.deserialize(jsonNode,
                AccountShareCreateTriggerRequest.class);
        }

        @Override
        public String toString() {
            return accountShareCreateTriggerRequest.toString();
        }
    }

    /**
     * This is a implementation class for PayAsYouGoCreateTriggerRequestCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "PayAsYouGoCreateTriggerRequest")
    private static class PayAsYouGoCreateTriggerRequestCase extends CreateTriggerRulesBody {

        @JsonValue
        private PayAsYouGoCreateTriggerRequest payAsYouGoCreateTriggerRequest;

        PayAsYouGoCreateTriggerRequestCase(PayAsYouGoCreateTriggerRequest payAsYouGoCreateTriggerRequest) {
            this.payAsYouGoCreateTriggerRequest = payAsYouGoCreateTriggerRequest;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.payAsYouGoCreateTriggerRequest(this.payAsYouGoCreateTriggerRequest);
        }

        @JsonCreator
        private PayAsYouGoCreateTriggerRequestCase(JsonNode jsonNode) throws IOException {
            this.payAsYouGoCreateTriggerRequest = ApiHelper.deserialize(jsonNode,
                PayAsYouGoCreateTriggerRequest.class);
        }

        @Override
        public String toString() {
            return payAsYouGoCreateTriggerRequest.toString();
        }
    }

    /**
     * This is a implementation class for CreatetriggerchunkCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "Createtriggerchunk")
    private static class CreatetriggerchunkCase extends CreateTriggerRulesBody {

        @JsonValue
        private Createtriggerchunk createtriggerchunk;

        CreatetriggerchunkCase(Createtriggerchunk createtriggerchunk) {
            this.createtriggerchunk = createtriggerchunk;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.createtriggerchunk(this.createtriggerchunk);
        }

        @JsonCreator
        private CreatetriggerchunkCase(JsonNode jsonNode) throws IOException {
            this.createtriggerchunk = ApiHelper.deserialize(jsonNode,
                Createtriggerchunk.class);
        }

        @Override
        public String toString() {
            return createtriggerchunk.toString();
        }
    }

    /**
     * This is a custom deserializer class for CreateTriggerRulesBody.
     */
    protected static class CreateTriggerRulesBodyDeserializer
            extends JsonDeserializer<CreateTriggerRulesBody> {

        @Override
        public CreateTriggerRulesBody deserialize(JsonParser jp, DeserializationContext ctxt)
                throws IOException, JsonProcessingException {
            ObjectCodec oc = jp.getCodec();
            JsonNode node = oc.readTree(jp);
            return ApiHelper.deserialize(node, Arrays.asList(
                    AccountLevelCreateTriggerRequestCase.class, AccountLevelObjectCase.class,
                    DeviceLevelCreateTriggerRequestCase.class,
                    AccountGroupShareCreateTriggerRequestCase.class,
                    AccountShareCreateTriggerRequestCase.class,
                    PayAsYouGoCreateTriggerRequestCase.class, CreatetriggerchunkCase.class), false);
        }
    }

}
