/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.UUID;

/**
 * This is a model class for ConnectionRequest type.
 */
public class ConnectionRequest {
    private UUID deviceId;
    private Geolocation geolocation;
    private EtxNetworkType networkType;

    /**
     * Default constructor.
     */
    public ConnectionRequest() {
    }

    /**
     * Initialization constructor.
     * @param  deviceId  UUID value for deviceId.
     * @param  geolocation  Geolocation value for geolocation.
     * @param  networkType  EtxNetworkType value for networkType.
     */
    public ConnectionRequest(
            UUID deviceId,
            Geolocation geolocation,
            EtxNetworkType networkType) {
        this.deviceId = deviceId;
        this.geolocation = geolocation;
        this.networkType = networkType;
    }

    /**
     * Getter for DeviceId.
     * The generated ID (UUID v4) for the device. It can be used as: - the MQTT Client ID when
     * connecting to the Message Exchange system - a parameter when asking for the connection
     * endpoint - a parameter when finishing the device registration - a parameter when
     * unregistering the device
     * @return Returns the UUID
     */
    @JsonGetter("DeviceID")
    public UUID getDeviceId() {
        return deviceId;
    }

    /**
     * Setter for DeviceId.
     * The generated ID (UUID v4) for the device. It can be used as: - the MQTT Client ID when
     * connecting to the Message Exchange system - a parameter when asking for the connection
     * endpoint - a parameter when finishing the device registration - a parameter when
     * unregistering the device
     * @param deviceId Value for UUID
     */
    @JsonSetter("DeviceID")
    public void setDeviceId(UUID deviceId) {
        this.deviceId = deviceId;
    }

    /**
     * Getter for Geolocation.
     * Geolocation of the device at the time of the connection request in GPS coordinates.
     * @return Returns the Geolocation
     */
    @JsonGetter("Geolocation")
    public Geolocation getGeolocation() {
        return geolocation;
    }

    /**
     * Setter for Geolocation.
     * Geolocation of the device at the time of the connection request in GPS coordinates.
     * @param geolocation Value for Geolocation
     */
    @JsonSetter("Geolocation")
    public void setGeolocation(Geolocation geolocation) {
        this.geolocation = geolocation;
    }

    /**
     * Getter for NetworkType.
     * The type of the device's network connection at the time of the request. If the device is on
     * the Verizon cellular network it should use the "VZ" value otherwise the "non-VZ" value.
     * Devices on the Verizon network can directly access the ETX Message Exchange on the MEC
     * (Mobile Edge Compute server)
     * @return Returns the EtxNetworkType
     */
    @JsonGetter("NetworkType")
    public EtxNetworkType getNetworkType() {
        return networkType;
    }

    /**
     * Setter for NetworkType.
     * The type of the device's network connection at the time of the request. If the device is on
     * the Verizon cellular network it should use the "VZ" value otherwise the "non-VZ" value.
     * Devices on the Verizon network can directly access the ETX Message Exchange on the MEC
     * (Mobile Edge Compute server)
     * @param networkType Value for EtxNetworkType
     */
    @JsonSetter("NetworkType")
    public void setNetworkType(EtxNetworkType networkType) {
        this.networkType = networkType;
    }

    /**
     * Converts this ConnectionRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ConnectionRequest [" + "deviceId=" + deviceId + ", geolocation=" + geolocation
                + ", networkType=" + networkType + "]";
    }

    /**
     * Builds a new {@link ConnectionRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ConnectionRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(deviceId, geolocation, networkType);
        return builder;
    }

    /**
     * Class to build instances of {@link ConnectionRequest}.
     */
    public static class Builder {
        private UUID deviceId;
        private Geolocation geolocation;
        private EtxNetworkType networkType;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  deviceId  UUID value for deviceId.
         * @param  geolocation  Geolocation value for geolocation.
         * @param  networkType  EtxNetworkType value for networkType.
         */
        public Builder(UUID deviceId, Geolocation geolocation, EtxNetworkType networkType) {
            this.deviceId = deviceId;
            this.geolocation = geolocation;
            this.networkType = networkType;
        }

        /**
         * Setter for deviceId.
         * @param  deviceId  UUID value for deviceId.
         * @return Builder
         */
        public Builder deviceId(UUID deviceId) {
            this.deviceId = deviceId;
            return this;
        }

        /**
         * Setter for geolocation.
         * @param  geolocation  Geolocation value for geolocation.
         * @return Builder
         */
        public Builder geolocation(Geolocation geolocation) {
            this.geolocation = geolocation;
            return this;
        }

        /**
         * Setter for networkType.
         * @param  networkType  EtxNetworkType value for networkType.
         * @return Builder
         */
        public Builder networkType(EtxNetworkType networkType) {
            this.networkType = networkType;
            return this;
        }

        /**
         * Builds a new {@link ConnectionRequest} object using the set fields.
         * @return {@link ConnectionRequest}
         */
        public ConnectionRequest build() {
            return new ConnectionRequest(deviceId, geolocation, networkType);
        }
    }
}
