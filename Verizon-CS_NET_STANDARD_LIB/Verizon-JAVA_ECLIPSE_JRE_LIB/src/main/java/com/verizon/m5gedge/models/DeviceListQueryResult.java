/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.AdditionalProperties;
import io.apimatic.core.utilities.ConversionHelper;
import java.util.List;
import java.util.Map;

/**
 * This is a model class for DeviceListQueryResult type.
 */
public class DeviceListQueryResult {
    private String accountName;
    private Boolean hasMoreData;
    private Long lastSeenDeviceId;
    private List<DeviceListQueryItem> deviceList;
    private AdditionalProperties<Object> additionalProperties = 
            new AdditionalProperties<Object>(this.getClass());

    /**
     * Default constructor.
     */
    public DeviceListQueryResult() {
    }

    /**
     * Initialization constructor.
     * @param  accountName  String value for accountName.
     * @param  hasMoreData  Boolean value for hasMoreData.
     * @param  lastSeenDeviceId  Long value for lastSeenDeviceId.
     * @param  deviceList  List of DeviceListQueryItem value for deviceList.
     */
    public DeviceListQueryResult(
            String accountName,
            Boolean hasMoreData,
            Long lastSeenDeviceId,
            List<DeviceListQueryItem> deviceList) {
        this.accountName = accountName;
        this.hasMoreData = hasMoreData;
        this.lastSeenDeviceId = lastSeenDeviceId;
        this.deviceList = deviceList;
    }

    /**
     * Getter for AccountName.
     * Account identifier in "##########-#####".
     * @return Returns the String
     */
    @JsonGetter("accountName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAccountName() {
        return accountName;
    }

    /**
     * Setter for AccountName.
     * Account identifier in "##########-#####".
     * @param accountName Value for String
     */
    @JsonSetter("accountName")
    public void setAccountName(String accountName) {
        this.accountName = accountName;
    }

    /**
     * Getter for HasMoreData.
     * True if there are more devices to retrieve.
     * @return Returns the Boolean
     */
    @JsonGetter("hasMoreData")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getHasMoreData() {
        return hasMoreData;
    }

    /**
     * Setter for HasMoreData.
     * True if there are more devices to retrieve.
     * @param hasMoreData Value for Boolean
     */
    @JsonSetter("hasMoreData")
    public void setHasMoreData(Boolean hasMoreData) {
        this.hasMoreData = hasMoreData;
    }

    /**
     * Getter for LastSeenDeviceId.
     * If hasMoreData=true, the startIndex to use for the next request. 0 if hasMoreData=false.
     * @return Returns the Long
     */
    @JsonGetter("lastSeenDeviceId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Long getLastSeenDeviceId() {
        return lastSeenDeviceId;
    }

    /**
     * Setter for LastSeenDeviceId.
     * If hasMoreData=true, the startIndex to use for the next request. 0 if hasMoreData=false.
     * @param lastSeenDeviceId Value for Long
     */
    @JsonSetter("lastSeenDeviceId")
    public void setLastSeenDeviceId(Long lastSeenDeviceId) {
        this.lastSeenDeviceId = lastSeenDeviceId;
    }

    /**
     * Getter for DeviceList.
     * The list of devices in the account.
     * @return Returns the List of DeviceListQueryItem
     */
    @JsonGetter("deviceList")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<DeviceListQueryItem> getDeviceList() {
        return deviceList;
    }

    /**
     * Setter for DeviceList.
     * The list of devices in the account.
     * @param deviceList Value for List of DeviceListQueryItem
     */
    @JsonSetter("deviceList")
    public void setDeviceList(List<DeviceListQueryItem> deviceList) {
        this.deviceList = deviceList;
    }

    /**
     * Hidden method for the serialization of additional properties.
     * @return The map of additionally set properties.
     */
    @JsonAnyGetter
    private Map<String, Object> getAdditionalProperties() {
        return additionalProperties.getAdditionalProperties();
    }

    /**
     * Hidden method for the de-serialization of additional properties.
     * @param name The name of the additional property.
     * @param value The Object value of the additional property.
     */
    @JsonAnySetter
    private void setAdditionalProperties(String name, Object value) {
        additionalProperties.setAdditionalProperty(name,
                ConversionHelper.convertToSimpleType(value,
                        x -> x),
                true);
    }

    /**
     * Getter for the value of additional properties based on provided property name.
     * @param name The name of the additional property.
     * @return Either the Object property value or null if not exist.
     */
    
    public Object getAdditionalProperty(String name) {
        return additionalProperties.getAdditionalProperty(name);
    }

    /**
     * Converts this DeviceListQueryResult into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "DeviceListQueryResult [" + "accountName=" + accountName + ", hasMoreData="
                + hasMoreData + ", lastSeenDeviceId=" + lastSeenDeviceId + ", deviceList="
                + deviceList + ", additionalProperties=" + additionalProperties + "]";
    }

    /**
     * Builds a new {@link DeviceListQueryResult.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link DeviceListQueryResult.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .accountName(getAccountName())
                .hasMoreData(getHasMoreData())
                .lastSeenDeviceId(getLastSeenDeviceId())
                .deviceList(getDeviceList());
        builder.additionalProperties = additionalProperties;
        return builder;
    }

    /**
     * Class to build instances of {@link DeviceListQueryResult}.
     */
    public static class Builder {
        private String accountName;
        private Boolean hasMoreData;
        private Long lastSeenDeviceId;
        private List<DeviceListQueryItem> deviceList;
        private AdditionalProperties<Object> additionalProperties =
                new AdditionalProperties<Object>();



        /**
         * Setter for accountName.
         * @param  accountName  String value for accountName.
         * @return Builder
         */
        public Builder accountName(String accountName) {
            this.accountName = accountName;
            return this;
        }

        /**
         * Setter for hasMoreData.
         * @param  hasMoreData  Boolean value for hasMoreData.
         * @return Builder
         */
        public Builder hasMoreData(Boolean hasMoreData) {
            this.hasMoreData = hasMoreData;
            return this;
        }

        /**
         * Setter for lastSeenDeviceId.
         * @param  lastSeenDeviceId  Long value for lastSeenDeviceId.
         * @return Builder
         */
        public Builder lastSeenDeviceId(Long lastSeenDeviceId) {
            this.lastSeenDeviceId = lastSeenDeviceId;
            return this;
        }

        /**
         * Setter for deviceList.
         * @param  deviceList  List of DeviceListQueryItem value for deviceList.
         * @return Builder
         */
        public Builder deviceList(List<DeviceListQueryItem> deviceList) {
            this.deviceList = deviceList;
            return this;
        }

        /**
         * Setter for additional property that are not in model fields.
         * @param name The name of the additional property.
         * @param value The Object value of the additional property.
         * @return Builder.
         */
        public Builder additionalProperty(String name, Object value) {
            this.additionalProperties.setAdditionalProperty(name, value);
            return this;
        }

        /**
         * Builds a new {@link DeviceListQueryResult} object using the set fields.
         * @return {@link DeviceListQueryResult}
         */
        public DeviceListQueryResult build() {
            DeviceListQueryResult model =
                    new DeviceListQueryResult(accountName, hasMoreData, lastSeenDeviceId,
                            deviceList);
            model.additionalProperties = additionalProperties;
            return model;
        }
    }
}
