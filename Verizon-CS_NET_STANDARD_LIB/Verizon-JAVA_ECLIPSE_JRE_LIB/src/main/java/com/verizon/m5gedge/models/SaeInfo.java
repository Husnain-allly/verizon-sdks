/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.List;

/**
 * This is a model class for SaeInfo type.
 */
public class SaeInfo {
    private List<DataFrame> dataFrames;

    /**
     * Default constructor.
     */
    public SaeInfo() {
    }

    /**
     * Initialization constructor.
     * @param  dataFrames  List of DataFrame value for dataFrames.
     */
    public SaeInfo(
            List<DataFrame> dataFrames) {
        this.dataFrames = dataFrames;
    }

    /**
     * Getter for DataFrames.
     * List of data frames.
     * @return Returns the List of DataFrame
     */
    @JsonGetter("dataFrames")
    public List<DataFrame> getDataFrames() {
        return dataFrames;
    }

    /**
     * Setter for DataFrames.
     * List of data frames.
     * @param dataFrames Value for List of DataFrame
     */
    @JsonSetter("dataFrames")
    public void setDataFrames(List<DataFrame> dataFrames) {
        this.dataFrames = dataFrames;
    }

    /**
     * Converts this SaeInfo into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "SaeInfo [" + "dataFrames=" + dataFrames + "]";
    }

    /**
     * Builds a new {@link SaeInfo.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link SaeInfo.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(dataFrames);
        return builder;
    }

    /**
     * Class to build instances of {@link SaeInfo}.
     */
    public static class Builder {
        private List<DataFrame> dataFrames;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  dataFrames  List of DataFrame value for dataFrames.
         */
        public Builder(List<DataFrame> dataFrames) {
            this.dataFrames = dataFrames;
        }

        /**
         * Setter for dataFrames.
         * @param  dataFrames  List of DataFrame value for dataFrames.
         * @return Builder
         */
        public Builder dataFrames(List<DataFrame> dataFrames) {
            this.dataFrames = dataFrames;
            return this;
        }

        /**
         * Builds a new {@link SaeInfo} object using the set fields.
         * @return {@link SaeInfo}
         */
        public SaeInfo build() {
            return new SaeInfo(dataFrames);
        }
    }
}
