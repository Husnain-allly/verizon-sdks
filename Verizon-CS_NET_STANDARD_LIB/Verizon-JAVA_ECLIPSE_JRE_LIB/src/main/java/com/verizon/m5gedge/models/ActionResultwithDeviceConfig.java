/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.verizon.m5gedge.DateTimeHelper;
import io.apimatic.core.types.AdditionalProperties;
import io.apimatic.core.utilities.ConversionHelper;
import java.time.LocalDateTime;
import java.util.Map;

/**
 * This is a model class for ActionResultwithDeviceConfig type.
 */
public class ActionResultwithDeviceConfig {
    private LocalDateTime createdon;
    private String description;
    private String deviceid;
    private String errmsg;
    private DtoDeviceActionSetConfiguration fields;
    private String foreignid;
    private String id;
    private LocalDateTime lastupdated;
    private String state;
    private String transactionid;
    private String version;
    private String versionid;
    private AdditionalProperties<Object> additionalProperties = 
            new AdditionalProperties<Object>(this.getClass());

    /**
     * Default constructor.
     */
    public ActionResultwithDeviceConfig() {
    }

    /**
     * Initialization constructor.
     * @param  createdon  LocalDateTime value for createdon.
     * @param  description  String value for description.
     * @param  deviceid  String value for deviceid.
     * @param  errmsg  String value for errmsg.
     * @param  fields  DtoDeviceActionSetConfiguration value for fields.
     * @param  foreignid  String value for foreignid.
     * @param  id  String value for id.
     * @param  lastupdated  LocalDateTime value for lastupdated.
     * @param  state  String value for state.
     * @param  transactionid  String value for transactionid.
     * @param  version  String value for version.
     * @param  versionid  String value for versionid.
     */
    public ActionResultwithDeviceConfig(
            LocalDateTime createdon,
            String description,
            String deviceid,
            String errmsg,
            DtoDeviceActionSetConfiguration fields,
            String foreignid,
            String id,
            LocalDateTime lastupdated,
            String state,
            String transactionid,
            String version,
            String versionid) {
        this.createdon = createdon;
        this.description = description;
        this.deviceid = deviceid;
        this.errmsg = errmsg;
        this.fields = fields;
        this.foreignid = foreignid;
        this.id = id;
        this.lastupdated = lastupdated;
        this.state = state;
        this.transactionid = transactionid;
        this.version = version;
        this.versionid = versionid;
    }

    /**
     * Getter for Createdon.
     * Timestamp of the record
     * @return Returns the LocalDateTime
     */
    @JsonGetter("createdon")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getCreatedon() {
        return createdon;
    }

    /**
     * Setter for Createdon.
     * Timestamp of the record
     * @param createdon Value for LocalDateTime
     */
    @JsonSetter("createdon")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCreatedon(LocalDateTime createdon) {
        this.createdon = createdon;
    }

    /**
     * Getter for Description.
     * @return Returns the String
     */
    @JsonGetter("description")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDescription() {
        return description;
    }

    /**
     * Setter for Description.
     * @param description Value for String
     */
    @JsonSetter("description")
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for Deviceid.
     * This is a UUID value of the device created when the device is onboarded
     * @return Returns the String
     */
    @JsonGetter("deviceid")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDeviceid() {
        return deviceid;
    }

    /**
     * Setter for Deviceid.
     * This is a UUID value of the device created when the device is onboarded
     * @param deviceid Value for String
     */
    @JsonSetter("deviceid")
    public void setDeviceid(String deviceid) {
        this.deviceid = deviceid;
    }

    /**
     * Getter for Errmsg.
     * Error message
     * @return Returns the String
     */
    @JsonGetter("errmsg")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getErrmsg() {
        return errmsg;
    }

    /**
     * Setter for Errmsg.
     * Error message
     * @param errmsg Value for String
     */
    @JsonSetter("errmsg")
    public void setErrmsg(String errmsg) {
        this.errmsg = errmsg;
    }

    /**
     * Getter for Fields.
     * @return Returns the DtoDeviceActionSetConfiguration
     */
    @JsonGetter("fields")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public DtoDeviceActionSetConfiguration getFields() {
        return fields;
    }

    /**
     * Setter for Fields.
     * @param fields Value for DtoDeviceActionSetConfiguration
     */
    @JsonSetter("fields")
    public void setFields(DtoDeviceActionSetConfiguration fields) {
        this.fields = fields;
    }

    /**
     * Getter for Foreignid.
     * UUID of the ECPD account the user belongs to
     * @return Returns the String
     */
    @JsonGetter("foreignid")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getForeignid() {
        return foreignid;
    }

    /**
     * Setter for Foreignid.
     * UUID of the ECPD account the user belongs to
     * @param foreignid Value for String
     */
    @JsonSetter("foreignid")
    public void setForeignid(String foreignid) {
        this.foreignid = foreignid;
    }

    /**
     * Getter for Id.
     * UUID of the user record, assigned at creation
     * @return Returns the String
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getId() {
        return id;
    }

    /**
     * Setter for Id.
     * UUID of the user record, assigned at creation
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for Lastupdated.
     * Timestamp of the record
     * @return Returns the LocalDateTime
     */
    @JsonGetter("lastupdated")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getLastupdated() {
        return lastupdated;
    }

    /**
     * Setter for Lastupdated.
     * Timestamp of the record
     * @param lastupdated Value for LocalDateTime
     */
    @JsonSetter("lastupdated")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setLastupdated(LocalDateTime lastupdated) {
        this.lastupdated = lastupdated;
    }

    /**
     * Getter for State.
     * The current status of the device or transaction and will be `success` or `failed`
     * @return Returns the String
     */
    @JsonGetter("state")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getState() {
        return state;
    }

    /**
     * Setter for State.
     * The current status of the device or transaction and will be `success` or `failed`
     * @param state Value for String
     */
    @JsonSetter("state")
    public void setState(String state) {
        this.state = state;
    }

    /**
     * Getter for Transactionid.
     * The system-generated UUID of the transaction
     * @return Returns the String
     */
    @JsonGetter("transactionid")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getTransactionid() {
        return transactionid;
    }

    /**
     * Setter for Transactionid.
     * The system-generated UUID of the transaction
     * @param transactionid Value for String
     */
    @JsonSetter("transactionid")
    public void setTransactionid(String transactionid) {
        this.transactionid = transactionid;
    }

    /**
     * Getter for Version.
     * The resource version
     * @return Returns the String
     */
    @JsonGetter("version")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getVersion() {
        return version;
    }

    /**
     * Setter for Version.
     * The resource version
     * @param version Value for String
     */
    @JsonSetter("version")
    public void setVersion(String version) {
        this.version = version;
    }

    /**
     * Getter for Versionid.
     * The UUID of the resource version
     * @return Returns the String
     */
    @JsonGetter("versionid")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getVersionid() {
        return versionid;
    }

    /**
     * Setter for Versionid.
     * The UUID of the resource version
     * @param versionid Value for String
     */
    @JsonSetter("versionid")
    public void setVersionid(String versionid) {
        this.versionid = versionid;
    }

    /**
     * Hidden method for the serialization of additional properties.
     * @return The map of additionally set properties.
     */
    @JsonAnyGetter
    private Map<String, Object> getAdditionalProperties() {
        return additionalProperties.getAdditionalProperties();
    }

    /**
     * Hidden method for the de-serialization of additional properties.
     * @param name The name of the additional property.
     * @param value The Object value of the additional property.
     */
    @JsonAnySetter
    private void setAdditionalProperties(String name, Object value) {
        additionalProperties.setAdditionalProperty(name,
                ConversionHelper.convertToSimpleType(value,
                        x -> x),
                true);
    }

    /**
     * Getter for the value of additional properties based on provided property name.
     * @param name The name of the additional property.
     * @return Either the Object property value or null if not exist.
     */
    
    public Object getAdditionalProperty(String name) {
        return additionalProperties.getAdditionalProperty(name);
    }

    /**
     * Converts this ActionResultwithDeviceConfig into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ActionResultwithDeviceConfig [" + "createdon=" + createdon + ", description="
                + description + ", deviceid=" + deviceid + ", errmsg=" + errmsg + ", fields="
                + fields + ", foreignid=" + foreignid + ", id=" + id + ", lastupdated="
                + lastupdated + ", state=" + state + ", transactionid=" + transactionid
                + ", version=" + version + ", versionid=" + versionid + ", additionalProperties="
                + additionalProperties + "]";
    }

    /**
     * Builds a new {@link ActionResultwithDeviceConfig.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ActionResultwithDeviceConfig.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .createdon(getCreatedon())
                .description(getDescription())
                .deviceid(getDeviceid())
                .errmsg(getErrmsg())
                .fields(getFields())
                .foreignid(getForeignid())
                .id(getId())
                .lastupdated(getLastupdated())
                .state(getState())
                .transactionid(getTransactionid())
                .version(getVersion())
                .versionid(getVersionid());
        builder.additionalProperties = additionalProperties;
        return builder;
    }

    /**
     * Class to build instances of {@link ActionResultwithDeviceConfig}.
     */
    public static class Builder {
        private LocalDateTime createdon;
        private String description;
        private String deviceid;
        private String errmsg;
        private DtoDeviceActionSetConfiguration fields;
        private String foreignid;
        private String id;
        private LocalDateTime lastupdated;
        private String state;
        private String transactionid;
        private String version;
        private String versionid;
        private AdditionalProperties<Object> additionalProperties =
                new AdditionalProperties<Object>();



        /**
         * Setter for createdon.
         * @param  createdon  LocalDateTime value for createdon.
         * @return Builder
         */
        public Builder createdon(LocalDateTime createdon) {
            this.createdon = createdon;
            return this;
        }

        /**
         * Setter for description.
         * @param  description  String value for description.
         * @return Builder
         */
        public Builder description(String description) {
            this.description = description;
            return this;
        }

        /**
         * Setter for deviceid.
         * @param  deviceid  String value for deviceid.
         * @return Builder
         */
        public Builder deviceid(String deviceid) {
            this.deviceid = deviceid;
            return this;
        }

        /**
         * Setter for errmsg.
         * @param  errmsg  String value for errmsg.
         * @return Builder
         */
        public Builder errmsg(String errmsg) {
            this.errmsg = errmsg;
            return this;
        }

        /**
         * Setter for fields.
         * @param  fields  DtoDeviceActionSetConfiguration value for fields.
         * @return Builder
         */
        public Builder fields(DtoDeviceActionSetConfiguration fields) {
            this.fields = fields;
            return this;
        }

        /**
         * Setter for foreignid.
         * @param  foreignid  String value for foreignid.
         * @return Builder
         */
        public Builder foreignid(String foreignid) {
            this.foreignid = foreignid;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for lastupdated.
         * @param  lastupdated  LocalDateTime value for lastupdated.
         * @return Builder
         */
        public Builder lastupdated(LocalDateTime lastupdated) {
            this.lastupdated = lastupdated;
            return this;
        }

        /**
         * Setter for state.
         * @param  state  String value for state.
         * @return Builder
         */
        public Builder state(String state) {
            this.state = state;
            return this;
        }

        /**
         * Setter for transactionid.
         * @param  transactionid  String value for transactionid.
         * @return Builder
         */
        public Builder transactionid(String transactionid) {
            this.transactionid = transactionid;
            return this;
        }

        /**
         * Setter for version.
         * @param  version  String value for version.
         * @return Builder
         */
        public Builder version(String version) {
            this.version = version;
            return this;
        }

        /**
         * Setter for versionid.
         * @param  versionid  String value for versionid.
         * @return Builder
         */
        public Builder versionid(String versionid) {
            this.versionid = versionid;
            return this;
        }

        /**
         * Setter for additional property that are not in model fields.
         * @param name The name of the additional property.
         * @param value The Object value of the additional property.
         * @return Builder.
         */
        public Builder additionalProperty(String name, Object value) {
            this.additionalProperties.setAdditionalProperty(name, value);
            return this;
        }

        /**
         * Builds a new {@link ActionResultwithDeviceConfig} object using the set fields.
         * @return {@link ActionResultwithDeviceConfig}
         */
        public ActionResultwithDeviceConfig build() {
            ActionResultwithDeviceConfig model =
                    new ActionResultwithDeviceConfig(createdon, description, deviceid, errmsg,
                            fields, foreignid, id, lastupdated, state, transactionid, version,
                            versionid);
            model.additionalProperties = additionalProperties;
            return model;
        }
    }
}
