/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for Generic type.
 */
public class Generic {
    private String messageType;
    private String messageFormat;
    private String payload;

    /**
     * Default constructor.
     */
    public Generic() {
    }

    /**
     * Initialization constructor.
     * @param  messageType  String value for messageType.
     * @param  messageFormat  String value for messageFormat.
     * @param  payload  String value for payload.
     */
    public Generic(
            String messageType,
            String messageFormat,
            String payload) {
        this.messageType = messageType;
        this.messageFormat = messageFormat;
        this.payload = payload;
    }

    /**
     * Getter for MessageType.
     * The type of message. This can be any of the standard V2X messages specified in the SAE J2735
     * standard (e.g. BSM, PSM, RSA, TIM, MAP, SPAT, etc.), or it can be a vendor specific message
     * type that is not defined by the standard.
     * @return Returns the String
     */
    @JsonGetter("messageType")
    public String getMessageType() {
        return messageType;
    }

    /**
     * Setter for MessageType.
     * The type of message. This can be any of the standard V2X messages specified in the SAE J2735
     * standard (e.g. BSM, PSM, RSA, TIM, MAP, SPAT, etc.), or it can be a vendor specific message
     * type that is not defined by the standard.
     * @param messageType Value for String
     */
    @JsonSetter("messageType")
    public void setMessageType(String messageType) {
        this.messageType = messageType;
    }

    /**
     * Getter for MessageFormat.
     * The encoding of the message (e.g. j2735, protobuf, json, Avro, etc.). If the message is
     * encapsulated within a GeoRoutedMsg protocol buffer wrapper, append _gr to the message format
     * (e.g. j2735 =&gt; j2735_gr). **Note:** ETX prefers the j2735 or the j2735_gr encoding and only
     * vendor specific message types are allowed to be published in different message formats.
     * @return Returns the String
     */
    @JsonGetter("messageFormat")
    public String getMessageFormat() {
        return messageFormat;
    }

    /**
     * Setter for MessageFormat.
     * The encoding of the message (e.g. j2735, protobuf, json, Avro, etc.). If the message is
     * encapsulated within a GeoRoutedMsg protocol buffer wrapper, append _gr to the message format
     * (e.g. j2735 =&gt; j2735_gr). **Note:** ETX prefers the j2735 or the j2735_gr encoding and only
     * vendor specific message types are allowed to be published in different message formats.
     * @param messageFormat Value for String
     */
    @JsonSetter("messageFormat")
    public void setMessageFormat(String messageFormat) {
        this.messageFormat = messageFormat;
    }

    /**
     * Getter for Payload.
     * The base64 encoded message.
     * @return Returns the String
     */
    @JsonGetter("payload")
    public String getPayload() {
        return payload;
    }

    /**
     * Setter for Payload.
     * The base64 encoded message.
     * @param payload Value for String
     */
    @JsonSetter("payload")
    public void setPayload(String payload) {
        this.payload = payload;
    }

    /**
     * Converts this Generic into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Generic [" + "messageType=" + messageType + ", messageFormat=" + messageFormat
                + ", payload=" + payload + "]";
    }

    /**
     * Builds a new {@link Generic.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Generic.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(messageType, messageFormat, payload);
        return builder;
    }

    /**
     * Class to build instances of {@link Generic}.
     */
    public static class Builder {
        private String messageType;
        private String messageFormat;
        private String payload;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  messageType  String value for messageType.
         * @param  messageFormat  String value for messageFormat.
         * @param  payload  String value for payload.
         */
        public Builder(String messageType, String messageFormat, String payload) {
            this.messageType = messageType;
            this.messageFormat = messageFormat;
            this.payload = payload;
        }

        /**
         * Setter for messageType.
         * @param  messageType  String value for messageType.
         * @return Builder
         */
        public Builder messageType(String messageType) {
            this.messageType = messageType;
            return this;
        }

        /**
         * Setter for messageFormat.
         * @param  messageFormat  String value for messageFormat.
         * @return Builder
         */
        public Builder messageFormat(String messageFormat) {
            this.messageFormat = messageFormat;
            return this;
        }

        /**
         * Setter for payload.
         * @param  payload  String value for payload.
         * @return Builder
         */
        public Builder payload(String payload) {
            this.payload = payload;
            return this;
        }

        /**
         * Builds a new {@link Generic} object using the set fields.
         * @return {@link Generic}
         */
        public Generic build() {
            return new Generic(messageType, messageFormat, payload);
        }
    }
}
