/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.AdditionalProperties;
import io.apimatic.core.utilities.ConversionHelper;
import java.util.Map;

/**
 * This is a model class for Carriercode1 type.
 */
public class Carriercode1 {
    private String carrierCode;
    private AllowanceThreshold percentage;
    private AdditionalProperties<Object> additionalProperties = 
            new AdditionalProperties<Object>(this.getClass());

    /**
     * Default constructor.
     */
    public Carriercode1() {
    }

    /**
     * Initialization constructor.
     * @param  carrierCode  String value for carrierCode.
     * @param  percentage  AllowanceThreshold value for percentage.
     */
    public Carriercode1(
            String carrierCode,
            AllowanceThreshold percentage) {
        this.carrierCode = carrierCode;
        this.percentage = percentage;
    }

    /**
     * Getter for CarrierCode.
     * @return Returns the String
     */
    @JsonGetter("carrierCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCarrierCode() {
        return carrierCode;
    }

    /**
     * Setter for CarrierCode.
     * @param carrierCode Value for String
     */
    @JsonSetter("carrierCode")
    public void setCarrierCode(String carrierCode) {
        this.carrierCode = carrierCode;
    }

    /**
     * Getter for Percentage.
     * @return Returns the AllowanceThreshold
     */
    @JsonGetter("percentage")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public AllowanceThreshold getPercentage() {
        return percentage;
    }

    /**
     * Setter for Percentage.
     * @param percentage Value for AllowanceThreshold
     */
    @JsonSetter("percentage")
    public void setPercentage(AllowanceThreshold percentage) {
        this.percentage = percentage;
    }

    /**
     * Hidden method for the serialization of additional properties.
     * @return The map of additionally set properties.
     */
    @JsonAnyGetter
    private Map<String, Object> getAdditionalProperties() {
        return additionalProperties.getAdditionalProperties();
    }

    /**
     * Hidden method for the de-serialization of additional properties.
     * @param name The name of the additional property.
     * @param value The Object value of the additional property.
     */
    @JsonAnySetter
    private void setAdditionalProperties(String name, Object value) {
        additionalProperties.setAdditionalProperty(name,
                ConversionHelper.convertToSimpleType(value,
                        x -> x),
                true);
    }

    /**
     * Getter for the value of additional properties based on provided property name.
     * @param name The name of the additional property.
     * @return Either the Object property value or null if not exist.
     */
    
    public Object getAdditionalProperty(String name) {
        return additionalProperties.getAdditionalProperty(name);
    }

    /**
     * Converts this Carriercode1 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Carriercode1 [" + "carrierCode=" + carrierCode + ", percentage=" + percentage
                + ", additionalProperties=" + additionalProperties + "]";
    }

    /**
     * Builds a new {@link Carriercode1.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Carriercode1.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .carrierCode(getCarrierCode())
                .percentage(getPercentage());
        builder.additionalProperties = additionalProperties;
        return builder;
    }

    /**
     * Class to build instances of {@link Carriercode1}.
     */
    public static class Builder {
        private String carrierCode;
        private AllowanceThreshold percentage;
        private AdditionalProperties<Object> additionalProperties =
                new AdditionalProperties<Object>();



        /**
         * Setter for carrierCode.
         * @param  carrierCode  String value for carrierCode.
         * @return Builder
         */
        public Builder carrierCode(String carrierCode) {
            this.carrierCode = carrierCode;
            return this;
        }

        /**
         * Setter for percentage.
         * @param  percentage  AllowanceThreshold value for percentage.
         * @return Builder
         */
        public Builder percentage(AllowanceThreshold percentage) {
            this.percentage = percentage;
            return this;
        }

        /**
         * Setter for additional property that are not in model fields.
         * @param name The name of the additional property.
         * @param value The Object value of the additional property.
         * @return Builder.
         */
        public Builder additionalProperty(String name, Object value) {
            this.additionalProperties.setAdditionalProperty(name, value);
            return this;
        }

        /**
         * Builds a new {@link Carriercode1} object using the set fields.
         * @return {@link Carriercode1}
         */
        public Carriercode1 build() {
            Carriercode1 model =
                    new Carriercode1(carrierCode, percentage);
            model.additionalProperties = additionalProperties;
            return model;
        }
    }
}
