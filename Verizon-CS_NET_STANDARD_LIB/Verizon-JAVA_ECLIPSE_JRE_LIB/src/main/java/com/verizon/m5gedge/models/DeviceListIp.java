/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.AdditionalProperties;
import io.apimatic.core.utilities.ConversionHelper;
import java.util.List;
import java.util.Map;

/**
 * This is a model class for DeviceListIp type.
 */
public class DeviceListIp {
    private List<PwnDeviceId> deviceIds;
    private String ipaddress;
    private AdditionalProperties<Object> additionalProperties = 
            new AdditionalProperties<Object>(this.getClass());

    /**
     * Default constructor.
     */
    public DeviceListIp() {
    }

    /**
     * Initialization constructor.
     * @param  deviceIds  List of PwnDeviceId value for deviceIds.
     * @param  ipaddress  String value for ipaddress.
     */
    public DeviceListIp(
            List<PwnDeviceId> deviceIds,
            String ipaddress) {
        this.deviceIds = deviceIds;
        this.ipaddress = ipaddress;
    }

    /**
     * Getter for DeviceIds.
     * @return Returns the List of PwnDeviceId
     */
    @JsonGetter("deviceIds")
    public List<PwnDeviceId> getDeviceIds() {
        return deviceIds;
    }

    /**
     * Setter for DeviceIds.
     * @param deviceIds Value for List of PwnDeviceId
     */
    @JsonSetter("deviceIds")
    public void setDeviceIds(List<PwnDeviceId> deviceIds) {
        this.deviceIds = deviceIds;
    }

    /**
     * Getter for Ipaddress.
     * @return Returns the String
     */
    @JsonGetter("ipAddress")
    public String getIpaddress() {
        return ipaddress;
    }

    /**
     * Setter for Ipaddress.
     * @param ipaddress Value for String
     */
    @JsonSetter("ipAddress")
    public void setIpaddress(String ipaddress) {
        this.ipaddress = ipaddress;
    }

    /**
     * Hidden method for the serialization of additional properties.
     * @return The map of additionally set properties.
     */
    @JsonAnyGetter
    private Map<String, Object> getAdditionalProperties() {
        return additionalProperties.getAdditionalProperties();
    }

    /**
     * Hidden method for the de-serialization of additional properties.
     * @param name The name of the additional property.
     * @param value The Object value of the additional property.
     */
    @JsonAnySetter
    private void setAdditionalProperties(String name, Object value) {
        additionalProperties.setAdditionalProperty(name,
                ConversionHelper.convertToSimpleType(value,
                        x -> x),
                true);
    }

    /**
     * Getter for the value of additional properties based on provided property name.
     * @param name The name of the additional property.
     * @return Either the Object property value or null if not exist.
     */
    
    public Object getAdditionalProperty(String name) {
        return additionalProperties.getAdditionalProperty(name);
    }

    /**
     * Converts this DeviceListIp into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "DeviceListIp [" + "deviceIds=" + deviceIds + ", ipaddress=" + ipaddress
                + ", additionalProperties=" + additionalProperties + "]";
    }

    /**
     * Builds a new {@link DeviceListIp.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link DeviceListIp.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(deviceIds, ipaddress);
        builder.additionalProperties = additionalProperties;
        return builder;
    }

    /**
     * Class to build instances of {@link DeviceListIp}.
     */
    public static class Builder {
        private List<PwnDeviceId> deviceIds;
        private String ipaddress;
        private AdditionalProperties<Object> additionalProperties =
                new AdditionalProperties<Object>();

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  deviceIds  List of PwnDeviceId value for deviceIds.
         * @param  ipaddress  String value for ipaddress.
         */
        public Builder(List<PwnDeviceId> deviceIds, String ipaddress) {
            this.deviceIds = deviceIds;
            this.ipaddress = ipaddress;
        }

        /**
         * Setter for deviceIds.
         * @param  deviceIds  List of PwnDeviceId value for deviceIds.
         * @return Builder
         */
        public Builder deviceIds(List<PwnDeviceId> deviceIds) {
            this.deviceIds = deviceIds;
            return this;
        }

        /**
         * Setter for ipaddress.
         * @param  ipaddress  String value for ipaddress.
         * @return Builder
         */
        public Builder ipaddress(String ipaddress) {
            this.ipaddress = ipaddress;
            return this;
        }

        /**
         * Setter for additional property that are not in model fields.
         * @param name The name of the additional property.
         * @param value The Object value of the additional property.
         * @return Builder.
         */
        public Builder additionalProperty(String name, Object value) {
            this.additionalProperties.setAdditionalProperty(name, value);
            return this;
        }

        /**
         * Builds a new {@link DeviceListIp} object using the set fields.
         * @return {@link DeviceListIp}
         */
        public DeviceListIp build() {
            DeviceListIp model =
                    new DeviceListIp(deviceIds, ipaddress);
            model.additionalProperties = additionalProperties;
            return model;
        }
    }
}
