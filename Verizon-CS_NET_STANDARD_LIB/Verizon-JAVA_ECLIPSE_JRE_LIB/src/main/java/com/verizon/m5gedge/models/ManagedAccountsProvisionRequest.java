/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.AdditionalProperties;
import io.apimatic.core.utilities.ConversionHelper;
import java.util.Map;

/**
 * This is a model class for ManagedAccountsProvisionRequest type.
 */
public class ManagedAccountsProvisionRequest {
    private String accountName;
    private String paccountName;
    private ServiceName serviceName;
    private String type;
    private String txid;
    private AdditionalProperties<Object> additionalProperties = 
            new AdditionalProperties<Object>(this.getClass());

    /**
     * Default constructor.
     */
    public ManagedAccountsProvisionRequest() {
        serviceName = ServiceName.LOCATION;
    }

    /**
     * Initialization constructor.
     * @param  accountName  String value for accountName.
     * @param  paccountName  String value for paccountName.
     * @param  serviceName  ServiceName value for serviceName.
     * @param  type  String value for type.
     * @param  txid  String value for txid.
     */
    public ManagedAccountsProvisionRequest(
            String accountName,
            String paccountName,
            ServiceName serviceName,
            String type,
            String txid) {
        this.accountName = accountName;
        this.paccountName = paccountName;
        this.serviceName = serviceName;
        this.type = type;
        this.txid = txid;
    }

    /**
     * Getter for AccountName.
     * Managed account identifier
     * @return Returns the String
     */
    @JsonGetter("accountName")
    public String getAccountName() {
        return accountName;
    }

    /**
     * Setter for AccountName.
     * Managed account identifier
     * @param accountName Value for String
     */
    @JsonSetter("accountName")
    public void setAccountName(String accountName) {
        this.accountName = accountName;
    }

    /**
     * Getter for PaccountName.
     * Primary Account identifier
     * @return Returns the String
     */
    @JsonGetter("paccountName")
    public String getPaccountName() {
        return paccountName;
    }

    /**
     * Setter for PaccountName.
     * Primary Account identifier
     * @param paccountName Value for String
     */
    @JsonSetter("paccountName")
    public void setPaccountName(String paccountName) {
        this.paccountName = paccountName;
    }

    /**
     * Getter for ServiceName.
     * Service name
     * @return Returns the ServiceName
     */
    @JsonGetter("serviceName")
    public ServiceName getServiceName() {
        return serviceName;
    }

    /**
     * Setter for ServiceName.
     * Service name
     * @param serviceName Value for ServiceName
     */
    @JsonSetter("serviceName")
    public void setServiceName(ServiceName serviceName) {
        this.serviceName = serviceName;
    }

    /**
     * Getter for Type.
     * SKU name
     * @return Returns the String
     */
    @JsonGetter("type")
    public String getType() {
        return type;
    }

    /**
     * Setter for Type.
     * SKU name
     * @param type Value for String
     */
    @JsonSetter("type")
    public void setType(String type) {
        this.type = type;
    }

    /**
     * Getter for Txid.
     * Transaction identifier returned by add request
     * @return Returns the String
     */
    @JsonGetter("txid")
    public String getTxid() {
        return txid;
    }

    /**
     * Setter for Txid.
     * Transaction identifier returned by add request
     * @param txid Value for String
     */
    @JsonSetter("txid")
    public void setTxid(String txid) {
        this.txid = txid;
    }

    /**
     * Hidden method for the serialization of additional properties.
     * @return The map of additionally set properties.
     */
    @JsonAnyGetter
    private Map<String, Object> getAdditionalProperties() {
        return additionalProperties.getAdditionalProperties();
    }

    /**
     * Hidden method for the de-serialization of additional properties.
     * @param name The name of the additional property.
     * @param value The Object value of the additional property.
     */
    @JsonAnySetter
    private void setAdditionalProperties(String name, Object value) {
        additionalProperties.setAdditionalProperty(name,
                ConversionHelper.convertToSimpleType(value,
                        x -> x),
                true);
    }

    /**
     * Getter for the value of additional properties based on provided property name.
     * @param name The name of the additional property.
     * @return Either the Object property value or null if not exist.
     */
    
    public Object getAdditionalProperty(String name) {
        return additionalProperties.getAdditionalProperty(name);
    }

    /**
     * Converts this ManagedAccountsProvisionRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ManagedAccountsProvisionRequest [" + "accountName=" + accountName
                + ", paccountName=" + paccountName + ", serviceName=" + serviceName + ", type="
                + type + ", txid=" + txid + ", additionalProperties=" + additionalProperties + "]";
    }

    /**
     * Builds a new {@link ManagedAccountsProvisionRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ManagedAccountsProvisionRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(accountName, paccountName, serviceName, type, txid);
        builder.additionalProperties = additionalProperties;
        return builder;
    }

    /**
     * Class to build instances of {@link ManagedAccountsProvisionRequest}.
     */
    public static class Builder {
        private String accountName;
        private String paccountName;
        private ServiceName serviceName = ServiceName.LOCATION;
        private String type;
        private String txid;
        private AdditionalProperties<Object> additionalProperties =
                new AdditionalProperties<Object>();

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  accountName  String value for accountName.
         * @param  paccountName  String value for paccountName.
         * @param  serviceName  ServiceName value for serviceName.
         * @param  type  String value for type.
         * @param  txid  String value for txid.
         */
        public Builder(String accountName, String paccountName, ServiceName serviceName,
                String type, String txid) {
            this.accountName = accountName;
            this.paccountName = paccountName;
            this.serviceName = serviceName;
            this.type = type;
            this.txid = txid;
        }

        /**
         * Setter for accountName.
         * @param  accountName  String value for accountName.
         * @return Builder
         */
        public Builder accountName(String accountName) {
            this.accountName = accountName;
            return this;
        }

        /**
         * Setter for paccountName.
         * @param  paccountName  String value for paccountName.
         * @return Builder
         */
        public Builder paccountName(String paccountName) {
            this.paccountName = paccountName;
            return this;
        }

        /**
         * Setter for serviceName.
         * @param  serviceName  ServiceName value for serviceName.
         * @return Builder
         */
        public Builder serviceName(ServiceName serviceName) {
            this.serviceName = serviceName;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = type;
            return this;
        }

        /**
         * Setter for txid.
         * @param  txid  String value for txid.
         * @return Builder
         */
        public Builder txid(String txid) {
            this.txid = txid;
            return this;
        }

        /**
         * Setter for additional property that are not in model fields.
         * @param name The name of the additional property.
         * @param value The Object value of the additional property.
         * @return Builder.
         */
        public Builder additionalProperty(String name, Object value) {
            this.additionalProperties.setAdditionalProperty(name, value);
            return this;
        }

        /**
         * Builds a new {@link ManagedAccountsProvisionRequest} object using the set fields.
         * @return {@link ManagedAccountsProvisionRequest}
         */
        public ManagedAccountsProvisionRequest build() {
            ManagedAccountsProvisionRequest model =
                    new ManagedAccountsProvisionRequest(accountName, paccountName, serviceName,
                            type, txid);
            model.additionalProperties = additionalProperties;
            return model;
        }
    }
}
