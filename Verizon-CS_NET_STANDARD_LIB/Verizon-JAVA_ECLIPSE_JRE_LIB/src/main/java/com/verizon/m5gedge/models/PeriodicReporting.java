/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.AdditionalProperties;
import io.apimatic.core.utilities.ConversionHelper;
import java.util.Map;

/**
 * This is a model class for PeriodicReporting type.
 */
public class PeriodicReporting {
    private Unit unit;
    private Integer hours;
    private Integer minutes;
    private AdditionalProperties<Object> additionalProperties = 
            new AdditionalProperties<Object>(this.getClass());

    /**
     * Default constructor.
     */
    public PeriodicReporting() {
    }

    /**
     * Initialization constructor.
     * @param  unit  Unit value for unit.
     * @param  hours  Integer value for hours.
     * @param  minutes  Integer value for minutes.
     */
    public PeriodicReporting(
            Unit unit,
            Integer hours,
            Integer minutes) {
        this.unit = unit;
        this.hours = hours;
        this.minutes = minutes;
    }

    /**
     * Getter for Unit.
     * @return Returns the Unit
     */
    @JsonGetter("unit")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Unit getUnit() {
        return unit;
    }

    /**
     * Setter for Unit.
     * @param unit Value for Unit
     */
    @JsonSetter("unit")
    public void setUnit(Unit unit) {
        this.unit = unit;
    }

    /**
     * Getter for Hours.
     * whole numbers from 0 to 24
     * @return Returns the Integer
     */
    @JsonGetter("hours")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getHours() {
        return hours;
    }

    /**
     * Setter for Hours.
     * whole numbers from 0 to 24
     * @param hours Value for Integer
     */
    @JsonSetter("hours")
    public void setHours(Integer hours) {
        this.hours = hours;
    }

    /**
     * Getter for Minutes.
     * whole numbers from 0 to 59
     * @return Returns the Integer
     */
    @JsonGetter("minutes")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getMinutes() {
        return minutes;
    }

    /**
     * Setter for Minutes.
     * whole numbers from 0 to 59
     * @param minutes Value for Integer
     */
    @JsonSetter("minutes")
    public void setMinutes(Integer minutes) {
        this.minutes = minutes;
    }

    /**
     * Hidden method for the serialization of additional properties.
     * @return The map of additionally set properties.
     */
    @JsonAnyGetter
    private Map<String, Object> getAdditionalProperties() {
        return additionalProperties.getAdditionalProperties();
    }

    /**
     * Hidden method for the de-serialization of additional properties.
     * @param name The name of the additional property.
     * @param value The Object value of the additional property.
     */
    @JsonAnySetter
    private void setAdditionalProperties(String name, Object value) {
        additionalProperties.setAdditionalProperty(name,
                ConversionHelper.convertToSimpleType(value,
                        x -> x),
                true);
    }

    /**
     * Getter for the value of additional properties based on provided property name.
     * @param name The name of the additional property.
     * @return Either the Object property value or null if not exist.
     */
    
    public Object getAdditionalProperty(String name) {
        return additionalProperties.getAdditionalProperty(name);
    }

    /**
     * Converts this PeriodicReporting into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "PeriodicReporting [" + "unit=" + unit + ", hours=" + hours + ", minutes=" + minutes
                + ", additionalProperties=" + additionalProperties + "]";
    }

    /**
     * Builds a new {@link PeriodicReporting.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link PeriodicReporting.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .unit(getUnit())
                .hours(getHours())
                .minutes(getMinutes());
        builder.additionalProperties = additionalProperties;
        return builder;
    }

    /**
     * Class to build instances of {@link PeriodicReporting}.
     */
    public static class Builder {
        private Unit unit;
        private Integer hours;
        private Integer minutes;
        private AdditionalProperties<Object> additionalProperties =
                new AdditionalProperties<Object>();



        /**
         * Setter for unit.
         * @param  unit  Unit value for unit.
         * @return Builder
         */
        public Builder unit(Unit unit) {
            this.unit = unit;
            return this;
        }

        /**
         * Setter for hours.
         * @param  hours  Integer value for hours.
         * @return Builder
         */
        public Builder hours(Integer hours) {
            this.hours = hours;
            return this;
        }

        /**
         * Setter for minutes.
         * @param  minutes  Integer value for minutes.
         * @return Builder
         */
        public Builder minutes(Integer minutes) {
            this.minutes = minutes;
            return this;
        }

        /**
         * Setter for additional property that are not in model fields.
         * @param name The name of the additional property.
         * @param value The Object value of the additional property.
         * @return Builder.
         */
        public Builder additionalProperty(String name, Object value) {
            this.additionalProperties.setAdditionalProperty(name, value);
            return this;
        }

        /**
         * Builds a new {@link PeriodicReporting} object using the set fields.
         * @return {@link PeriodicReporting}
         */
        public PeriodicReporting build() {
            PeriodicReporting model =
                    new PeriodicReporting(unit, hours, minutes);
            model.additionalProperties = additionalProperties;
            return model;
        }
    }
}
