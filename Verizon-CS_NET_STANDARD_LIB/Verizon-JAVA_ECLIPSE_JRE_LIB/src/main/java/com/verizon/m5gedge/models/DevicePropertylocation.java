/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.AdditionalProperties;
import io.apimatic.core.utilities.ConversionHelper;
import java.util.Map;

/**
 * This is a model class for DevicePropertylocation type.
 */
public class DevicePropertylocation {
    private String latitude;
    private String longitude;
    private AdditionalProperties<Object> additionalProperties = 
            new AdditionalProperties<Object>(this.getClass());

    /**
     * Default constructor.
     */
    public DevicePropertylocation() {
    }

    /**
     * Initialization constructor.
     * @param  latitude  String value for latitude.
     * @param  longitude  String value for longitude.
     */
    public DevicePropertylocation(
            String latitude,
            String longitude) {
        this.latitude = latitude;
        this.longitude = longitude;
    }

    /**
     * Getter for Latitude.
     * @return Returns the String
     */
    @JsonGetter("latitude")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getLatitude() {
        return latitude;
    }

    /**
     * Setter for Latitude.
     * @param latitude Value for String
     */
    @JsonSetter("latitude")
    public void setLatitude(String latitude) {
        this.latitude = latitude;
    }

    /**
     * Getter for Longitude.
     * @return Returns the String
     */
    @JsonGetter("longitude")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getLongitude() {
        return longitude;
    }

    /**
     * Setter for Longitude.
     * @param longitude Value for String
     */
    @JsonSetter("longitude")
    public void setLongitude(String longitude) {
        this.longitude = longitude;
    }

    /**
     * Hidden method for the serialization of additional properties.
     * @return The map of additionally set properties.
     */
    @JsonAnyGetter
    private Map<String, Object> getAdditionalProperties() {
        return additionalProperties.getAdditionalProperties();
    }

    /**
     * Hidden method for the de-serialization of additional properties.
     * @param name The name of the additional property.
     * @param value The Object value of the additional property.
     */
    @JsonAnySetter
    private void setAdditionalProperties(String name, Object value) {
        additionalProperties.setAdditionalProperty(name,
                ConversionHelper.convertToSimpleType(value,
                        x -> x),
                true);
    }

    /**
     * Getter for the value of additional properties based on provided property name.
     * @param name The name of the additional property.
     * @return Either the Object property value or null if not exist.
     */
    
    public Object getAdditionalProperty(String name) {
        return additionalProperties.getAdditionalProperty(name);
    }

    /**
     * Converts this DevicePropertylocation into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "DevicePropertylocation [" + "latitude=" + latitude + ", longitude=" + longitude
                + ", additionalProperties=" + additionalProperties + "]";
    }

    /**
     * Builds a new {@link DevicePropertylocation.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link DevicePropertylocation.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .latitude(getLatitude())
                .longitude(getLongitude());
        builder.additionalProperties = additionalProperties;
        return builder;
    }

    /**
     * Class to build instances of {@link DevicePropertylocation}.
     */
    public static class Builder {
        private String latitude;
        private String longitude;
        private AdditionalProperties<Object> additionalProperties =
                new AdditionalProperties<Object>();



        /**
         * Setter for latitude.
         * @param  latitude  String value for latitude.
         * @return Builder
         */
        public Builder latitude(String latitude) {
            this.latitude = latitude;
            return this;
        }

        /**
         * Setter for longitude.
         * @param  longitude  String value for longitude.
         * @return Builder
         */
        public Builder longitude(String longitude) {
            this.longitude = longitude;
            return this;
        }

        /**
         * Setter for additional property that are not in model fields.
         * @param name The name of the additional property.
         * @param value The Object value of the additional property.
         * @return Builder.
         */
        public Builder additionalProperty(String name, Object value) {
            this.additionalProperties.setAdditionalProperty(name, value);
            return this;
        }

        /**
         * Builds a new {@link DevicePropertylocation} object using the set fields.
         * @return {@link DevicePropertylocation}
         */
        public DevicePropertylocation build() {
            DevicePropertylocation model =
                    new DevicePropertylocation(latitude, longitude);
            model.additionalProperties = additionalProperties;
            return model;
        }
    }
}
