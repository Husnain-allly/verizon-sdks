/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.AdditionalProperties;
import io.apimatic.core.utilities.ConversionHelper;
import java.util.Map;

/**
 * This is a model class for AllowanceThreshold type.
 */
public class AllowanceThreshold {
    private Boolean percentage50;
    private Boolean percentage75;
    private Boolean percentage90;
    private Boolean percentage100;
    private AdditionalProperties<Object> additionalProperties = 
            new AdditionalProperties<Object>(this.getClass());

    /**
     * Default constructor.
     */
    public AllowanceThreshold() {
    }

    /**
     * Initialization constructor.
     * @param  percentage50  Boolean value for percentage50.
     * @param  percentage75  Boolean value for percentage75.
     * @param  percentage90  Boolean value for percentage90.
     * @param  percentage100  Boolean value for percentage100.
     */
    public AllowanceThreshold(
            Boolean percentage50,
            Boolean percentage75,
            Boolean percentage90,
            Boolean percentage100) {
        this.percentage50 = percentage50;
        this.percentage75 = percentage75;
        this.percentage90 = percentage90;
        this.percentage100 = percentage100;
    }

    /**
     * Getter for Percentage50.
     * @return Returns the Boolean
     */
    @JsonGetter("percentage50")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getPercentage50() {
        return percentage50;
    }

    /**
     * Setter for Percentage50.
     * @param percentage50 Value for Boolean
     */
    @JsonSetter("percentage50")
    public void setPercentage50(Boolean percentage50) {
        this.percentage50 = percentage50;
    }

    /**
     * Getter for Percentage75.
     * @return Returns the Boolean
     */
    @JsonGetter("percentage75")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getPercentage75() {
        return percentage75;
    }

    /**
     * Setter for Percentage75.
     * @param percentage75 Value for Boolean
     */
    @JsonSetter("percentage75")
    public void setPercentage75(Boolean percentage75) {
        this.percentage75 = percentage75;
    }

    /**
     * Getter for Percentage90.
     * @return Returns the Boolean
     */
    @JsonGetter("percentage90")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getPercentage90() {
        return percentage90;
    }

    /**
     * Setter for Percentage90.
     * @param percentage90 Value for Boolean
     */
    @JsonSetter("percentage90")
    public void setPercentage90(Boolean percentage90) {
        this.percentage90 = percentage90;
    }

    /**
     * Getter for Percentage100.
     * @return Returns the Boolean
     */
    @JsonGetter("percentage100")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getPercentage100() {
        return percentage100;
    }

    /**
     * Setter for Percentage100.
     * @param percentage100 Value for Boolean
     */
    @JsonSetter("percentage100")
    public void setPercentage100(Boolean percentage100) {
        this.percentage100 = percentage100;
    }

    /**
     * Hidden method for the serialization of additional properties.
     * @return The map of additionally set properties.
     */
    @JsonAnyGetter
    private Map<String, Object> getAdditionalProperties() {
        return additionalProperties.getAdditionalProperties();
    }

    /**
     * Hidden method for the de-serialization of additional properties.
     * @param name The name of the additional property.
     * @param value The Object value of the additional property.
     */
    @JsonAnySetter
    private void setAdditionalProperties(String name, Object value) {
        additionalProperties.setAdditionalProperty(name,
                ConversionHelper.convertToSimpleType(value,
                        x -> x),
                true);
    }

    /**
     * Getter for the value of additional properties based on provided property name.
     * @param name The name of the additional property.
     * @return Either the Object property value or null if not exist.
     */
    
    public Object getAdditionalProperty(String name) {
        return additionalProperties.getAdditionalProperty(name);
    }

    /**
     * Converts this AllowanceThreshold into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "AllowanceThreshold [" + "percentage50=" + percentage50 + ", percentage75="
                + percentage75 + ", percentage90=" + percentage90 + ", percentage100="
                + percentage100 + ", additionalProperties=" + additionalProperties + "]";
    }

    /**
     * Builds a new {@link AllowanceThreshold.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link AllowanceThreshold.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .percentage50(getPercentage50())
                .percentage75(getPercentage75())
                .percentage90(getPercentage90())
                .percentage100(getPercentage100());
        builder.additionalProperties = additionalProperties;
        return builder;
    }

    /**
     * Class to build instances of {@link AllowanceThreshold}.
     */
    public static class Builder {
        private Boolean percentage50;
        private Boolean percentage75;
        private Boolean percentage90;
        private Boolean percentage100;
        private AdditionalProperties<Object> additionalProperties =
                new AdditionalProperties<Object>();



        /**
         * Setter for percentage50.
         * @param  percentage50  Boolean value for percentage50.
         * @return Builder
         */
        public Builder percentage50(Boolean percentage50) {
            this.percentage50 = percentage50;
            return this;
        }

        /**
         * Setter for percentage75.
         * @param  percentage75  Boolean value for percentage75.
         * @return Builder
         */
        public Builder percentage75(Boolean percentage75) {
            this.percentage75 = percentage75;
            return this;
        }

        /**
         * Setter for percentage90.
         * @param  percentage90  Boolean value for percentage90.
         * @return Builder
         */
        public Builder percentage90(Boolean percentage90) {
            this.percentage90 = percentage90;
            return this;
        }

        /**
         * Setter for percentage100.
         * @param  percentage100  Boolean value for percentage100.
         * @return Builder
         */
        public Builder percentage100(Boolean percentage100) {
            this.percentage100 = percentage100;
            return this;
        }

        /**
         * Setter for additional property that are not in model fields.
         * @param name The name of the additional property.
         * @param value The Object value of the additional property.
         * @return Builder.
         */
        public Builder additionalProperty(String name, Object value) {
            this.additionalProperties.setAdditionalProperty(name, value);
            return this;
        }

        /**
         * Builds a new {@link AllowanceThreshold} object using the set fields.
         * @return {@link AllowanceThreshold}
         */
        public AllowanceThreshold build() {
            AllowanceThreshold model =
                    new AllowanceThreshold(percentage50, percentage75, percentage90, percentage100);
            model.additionalProperties = additionalProperties;
            return model;
        }
    }
}
