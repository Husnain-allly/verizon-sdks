/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models.containers;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.verizon.m5gedge.ApiHelper;
import com.verizon.m5gedge.models.EnablePromoExp;
import com.verizon.m5gedge.models.KeyDataPercentage50;
import com.verizon.m5gedge.models.KeyServicePlan;
import com.verizon.m5gedge.models.KeysmsPercentage50;
import com.verizon.m5gedge.models.NoOfDaysB4PromoExp;
import io.apimatic.core.annotations.TypeCombinator.TypeCombinatorCase;
import java.io.IOException;
import java.util.Arrays;

/**
 * This is a container class for any-of types.
 */
@JsonDeserialize(using = KeysChunk.KeysChunkDeserializer.class)
public abstract class KeysChunk {
    
    /**
     * This is keyServicePlan case.
     * @param keyServicePlan KeyServicePlan value for keyServicePlan.
     * @return The KeyServicePlanCase object.
     */
    public static KeysChunk fromKeyServicePlan(KeyServicePlan keyServicePlan) {
        return keyServicePlan == null ? null : new KeyServicePlanCase(keyServicePlan);
    }

    /**
     * This is keyDataPercentage50 case.
     * @param keyDataPercentage50 KeyDataPercentage50 value for keyDataPercentage50.
     * @return The KeyDataPercentage50Case object.
     */
    public static KeysChunk fromKeyDataPercentage50(KeyDataPercentage50 keyDataPercentage50) {
        return keyDataPercentage50 == null ? null : new KeyDataPercentage50Case(keyDataPercentage50);
    }

    /**
     * This is keysmsPercentage50 case.
     * @param keysmsPercentage50 KeysmsPercentage50 value for keysmsPercentage50.
     * @return The KeysmsPercentage50Case object.
     */
    public static KeysChunk fromKeysmsPercentage50(KeysmsPercentage50 keysmsPercentage50) {
        return keysmsPercentage50 == null ? null : new KeysmsPercentage50Case(keysmsPercentage50);
    }

    /**
     * This is NoOfDaysB4PromoExp case.
     * @param noOfDaysB4PromoExp NoOfDaysB4PromoExp value for noOfDaysB4PromoExp.
     * @return The NoOfDaysB4PromoExpCase object.
     */
    public static KeysChunk fromNoOfDaysB4PromoExp(NoOfDaysB4PromoExp noOfDaysB4PromoExp) {
        return noOfDaysB4PromoExp == null ? null : new NoOfDaysB4PromoExpCase(noOfDaysB4PromoExp);
    }

    /**
     * This is EnablePromoExp case.
     * @param enablePromoExp EnablePromoExp value for enablePromoExp.
     * @return The EnablePromoExpCase object.
     */
    public static KeysChunk fromEnablePromoExp(EnablePromoExp enablePromoExp) {
        return enablePromoExp == null ? null : new EnablePromoExpCase(enablePromoExp);
    }

    /**
     * Method to match from the provided any-of cases.
     * @param <R> The type to return after applying callback.
     * @param cases The any-of type cases callback.
     * @return The any-of matched case.
     */
    public abstract <R> R match(Cases<R> cases);

    /**
     * This is interface for any-of cases.
     * @param <R> The type to return after applying callback.
     */
    public interface Cases<R> {
        R keyServicePlan(KeyServicePlan keyServicePlan);

        R keyDataPercentage50(KeyDataPercentage50 keyDataPercentage50);

        R keysmsPercentage50(KeysmsPercentage50 keysmsPercentage50);

        R noOfDaysB4PromoExp(NoOfDaysB4PromoExp noOfDaysB4PromoExp);

        R enablePromoExp(EnablePromoExp enablePromoExp);
    }

    /**
     * This is a implementation class for KeyServicePlanCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "KeyServicePlan")
    private static class KeyServicePlanCase extends KeysChunk {

        @JsonValue
        private KeyServicePlan keyServicePlan;

        KeyServicePlanCase(KeyServicePlan keyServicePlan) {
            this.keyServicePlan = keyServicePlan;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.keyServicePlan(this.keyServicePlan);
        }

        @JsonCreator
        private KeyServicePlanCase(JsonNode jsonNode) throws IOException {
            this.keyServicePlan = ApiHelper.deserialize(jsonNode,
                KeyServicePlan.class);
        }

        @Override
        public String toString() {
            return keyServicePlan.toString();
        }
    }

    /**
     * This is a implementation class for KeyDataPercentage50Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "KeyDataPercentage50")
    private static class KeyDataPercentage50Case extends KeysChunk {

        @JsonValue
        private KeyDataPercentage50 keyDataPercentage50;

        KeyDataPercentage50Case(KeyDataPercentage50 keyDataPercentage50) {
            this.keyDataPercentage50 = keyDataPercentage50;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.keyDataPercentage50(this.keyDataPercentage50);
        }

        @JsonCreator
        private KeyDataPercentage50Case(JsonNode jsonNode) throws IOException {
            this.keyDataPercentage50 = ApiHelper.deserialize(jsonNode,
                KeyDataPercentage50.class);
        }

        @Override
        public String toString() {
            return keyDataPercentage50.toString();
        }
    }

    /**
     * This is a implementation class for KeysmsPercentage50Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "KeysmsPercentage50")
    private static class KeysmsPercentage50Case extends KeysChunk {

        @JsonValue
        private KeysmsPercentage50 keysmsPercentage50;

        KeysmsPercentage50Case(KeysmsPercentage50 keysmsPercentage50) {
            this.keysmsPercentage50 = keysmsPercentage50;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.keysmsPercentage50(this.keysmsPercentage50);
        }

        @JsonCreator
        private KeysmsPercentage50Case(JsonNode jsonNode) throws IOException {
            this.keysmsPercentage50 = ApiHelper.deserialize(jsonNode,
                KeysmsPercentage50.class);
        }

        @Override
        public String toString() {
            return keysmsPercentage50.toString();
        }
    }

    /**
     * This is a implementation class for NoOfDaysB4PromoExpCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "NoOfDaysB4PromoExp")
    private static class NoOfDaysB4PromoExpCase extends KeysChunk {

        @JsonValue
        private NoOfDaysB4PromoExp noOfDaysB4PromoExp;

        NoOfDaysB4PromoExpCase(NoOfDaysB4PromoExp noOfDaysB4PromoExp) {
            this.noOfDaysB4PromoExp = noOfDaysB4PromoExp;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.noOfDaysB4PromoExp(this.noOfDaysB4PromoExp);
        }

        @JsonCreator
        private NoOfDaysB4PromoExpCase(JsonNode jsonNode) throws IOException {
            this.noOfDaysB4PromoExp = ApiHelper.deserialize(jsonNode,
                NoOfDaysB4PromoExp.class);
        }

        @Override
        public String toString() {
            return noOfDaysB4PromoExp.toString();
        }
    }

    /**
     * This is a implementation class for EnablePromoExpCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "EnablePromoExp")
    private static class EnablePromoExpCase extends KeysChunk {

        @JsonValue
        private EnablePromoExp enablePromoExp;

        EnablePromoExpCase(EnablePromoExp enablePromoExp) {
            this.enablePromoExp = enablePromoExp;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.enablePromoExp(this.enablePromoExp);
        }

        @JsonCreator
        private EnablePromoExpCase(JsonNode jsonNode) throws IOException {
            this.enablePromoExp = ApiHelper.deserialize(jsonNode,
                EnablePromoExp.class);
        }

        @Override
        public String toString() {
            return enablePromoExp.toString();
        }
    }

    /**
     * This is a custom deserializer class for KeysChunk.
     */
    protected static class KeysChunkDeserializer
            extends JsonDeserializer<KeysChunk> {

        @Override
        public KeysChunk deserialize(JsonParser jp, DeserializationContext ctxt)
                throws IOException, JsonProcessingException {
            ObjectCodec oc = jp.getCodec();
            JsonNode node = oc.readTree(jp);
            return ApiHelper.deserialize(node, Arrays.asList(KeyServicePlanCase.class,
                    KeyDataPercentage50Case.class, KeysmsPercentage50Case.class,
                    NoOfDaysB4PromoExpCase.class, EnablePromoExpCase.class), false);
        }
    }

}
