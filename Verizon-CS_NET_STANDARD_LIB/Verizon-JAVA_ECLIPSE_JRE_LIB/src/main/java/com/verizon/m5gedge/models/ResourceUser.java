/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.verizon.m5gedge.DateTimeHelper;
import java.time.LocalDateTime;
import java.util.List;
import java.util.Map;

/**
 * This is a model class for ResourceUser type.
 */
public class ResourceUser {
    private String accountclientid;
    private Boolean ackterms;
    private LocalDateTime acktermson;
    private String billingaccountid;
    private LocalDateTime createdon;
    private String credentialsid;
    private String credentialstype;
    private Map<String, Object> customdata;
    private String description;
    private String displayname;
    private String email;
    private String firstname;
    private String foreignid;
    private String id;
    private String lastname;
    private LocalDateTime lastupdated;
    private String mdn;
    private String middlename;
    private String name;
    private List<String> secondarybillingaccountids;
    private String state;
    private String version;
    private String versionid;

    /**
     * Default constructor.
     */
    public ResourceUser() {
    }

    /**
     * Initialization constructor.
     * @param  createdon  LocalDateTime value for createdon.
     * @param  credentialstype  String value for credentialstype.
     * @param  foreignid  String value for foreignid.
     * @param  lastupdated  LocalDateTime value for lastupdated.
     * @param  versionid  String value for versionid.
     * @param  accountclientid  String value for accountclientid.
     * @param  ackterms  Boolean value for ackterms.
     * @param  acktermson  LocalDateTime value for acktermson.
     * @param  billingaccountid  String value for billingaccountid.
     * @param  credentialsid  String value for credentialsid.
     * @param  customdata  Map of String, value for customdata.
     * @param  description  String value for description.
     * @param  displayname  String value for displayname.
     * @param  email  String value for email.
     * @param  firstname  String value for firstname.
     * @param  id  String value for id.
     * @param  lastname  String value for lastname.
     * @param  mdn  String value for mdn.
     * @param  middlename  String value for middlename.
     * @param  name  String value for name.
     * @param  secondarybillingaccountids  List of String value for secondarybillingaccountids.
     * @param  state  String value for state.
     * @param  version  String value for version.
     */
    public ResourceUser(
            LocalDateTime createdon,
            String credentialstype,
            String foreignid,
            LocalDateTime lastupdated,
            String versionid,
            String accountclientid,
            Boolean ackterms,
            LocalDateTime acktermson,
            String billingaccountid,
            String credentialsid,
            Map<String, Object> customdata,
            String description,
            String displayname,
            String email,
            String firstname,
            String id,
            String lastname,
            String mdn,
            String middlename,
            String name,
            List<String> secondarybillingaccountids,
            String state,
            String version) {
        this.accountclientid = accountclientid;
        this.ackterms = ackterms;
        this.acktermson = acktermson;
        this.billingaccountid = billingaccountid;
        this.createdon = createdon;
        this.credentialsid = credentialsid;
        this.credentialstype = credentialstype;
        this.customdata = customdata;
        this.description = description;
        this.displayname = displayname;
        this.email = email;
        this.firstname = firstname;
        this.foreignid = foreignid;
        this.id = id;
        this.lastname = lastname;
        this.lastupdated = lastupdated;
        this.mdn = mdn;
        this.middlename = middlename;
        this.name = name;
        this.secondarybillingaccountids = secondarybillingaccountids;
        this.state = state;
        this.version = version;
        this.versionid = versionid;
    }

    /**
     * Getter for Accountclientid.
     * Not used in this release, future functionality
     * @return Returns the String
     */
    @JsonGetter("accountclientid")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAccountclientid() {
        return accountclientid;
    }

    /**
     * Setter for Accountclientid.
     * Not used in this release, future functionality
     * @param accountclientid Value for String
     */
    @JsonSetter("accountclientid")
    public void setAccountclientid(String accountclientid) {
        this.accountclientid = accountclientid;
    }

    /**
     * Getter for Ackterms.
     * Indicates if terms are agreed to (true) or not
     * @return Returns the Boolean
     */
    @JsonGetter("ackterms")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getAckterms() {
        return ackterms;
    }

    /**
     * Setter for Ackterms.
     * Indicates if terms are agreed to (true) or not
     * @param ackterms Value for Boolean
     */
    @JsonSetter("ackterms")
    public void setAckterms(Boolean ackterms) {
        this.ackterms = ackterms;
    }

    /**
     * Getter for Acktermson.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("acktermson")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getAcktermson() {
        return acktermson;
    }

    /**
     * Setter for Acktermson.
     * @param acktermson Value for LocalDateTime
     */
    @JsonSetter("acktermson")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setAcktermson(LocalDateTime acktermson) {
        this.acktermson = acktermson;
    }

    /**
     * Getter for Billingaccountid.
     * The billing account ID. This is the same value as the Account ID
     * @return Returns the String
     */
    @JsonGetter("billingaccountid")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getBillingaccountid() {
        return billingaccountid;
    }

    /**
     * Setter for Billingaccountid.
     * The billing account ID. This is the same value as the Account ID
     * @param billingaccountid Value for String
     */
    @JsonSetter("billingaccountid")
    public void setBillingaccountid(String billingaccountid) {
        this.billingaccountid = billingaccountid;
    }

    /**
     * Getter for Createdon.
     * Timestamp of the record
     * @return Returns the LocalDateTime
     */
    @JsonGetter("createdon")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getCreatedon() {
        return createdon;
    }

    /**
     * Setter for Createdon.
     * Timestamp of the record
     * @param createdon Value for LocalDateTime
     */
    @JsonSetter("createdon")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCreatedon(LocalDateTime createdon) {
        this.createdon = createdon;
    }

    /**
     * Getter for Credentialsid.
     * User credentials. The only valid value is an email address
     * @return Returns the String
     */
    @JsonGetter("credentialsid")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCredentialsid() {
        return credentialsid;
    }

    /**
     * Setter for Credentialsid.
     * User credentials. The only valid value is an email address
     * @param credentialsid Value for String
     */
    @JsonSetter("credentialsid")
    public void setCredentialsid(String credentialsid) {
        this.credentialsid = credentialsid;
    }

    /**
     * Getter for Credentialstype.
     * The type of credential represented by the ID. The only valid value is `email`
     * @return Returns the String
     */
    @JsonGetter("credentialstype")
    public String getCredentialstype() {
        return credentialstype;
    }

    /**
     * Setter for Credentialstype.
     * The type of credential represented by the ID. The only valid value is `email`
     * @param credentialstype Value for String
     */
    @JsonSetter("credentialstype")
    public void setCredentialstype(String credentialstype) {
        this.credentialstype = credentialstype;
    }

    /**
     * Getter for Customdata.
     * Name/value pair, where the value is client defined. The purpose is to keep track of current
     * state per device action.
     * @return Returns the Map of String, Object
     */
    @JsonGetter("customdata")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Map<String, Object> getCustomdata() {
        return customdata;
    }

    /**
     * Setter for Customdata.
     * Name/value pair, where the value is client defined. The purpose is to keep track of current
     * state per device action.
     * @param customdata Value for Map of String, Object
     */
    @JsonSetter("customdata")
    public void setCustomdata(Map<String, Object> customdata) {
        this.customdata = customdata;
    }

    /**
     * Getter for Description.
     * a short description
     * @return Returns the String
     */
    @JsonGetter("description")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDescription() {
        return description;
    }

    /**
     * Setter for Description.
     * a short description
     * @param description Value for String
     */
    @JsonSetter("description")
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for Displayname.
     * the user name value to display
     * @return Returns the String
     */
    @JsonGetter("displayname")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDisplayname() {
        return displayname;
    }

    /**
     * Setter for Displayname.
     * the user name value to display
     * @param displayname Value for String
     */
    @JsonSetter("displayname")
    public void setDisplayname(String displayname) {
        this.displayname = displayname;
    }

    /**
     * Getter for Email.
     * Contact email for the group
     * @return Returns the String
     */
    @JsonGetter("email")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getEmail() {
        return email;
    }

    /**
     * Setter for Email.
     * Contact email for the group
     * @param email Value for String
     */
    @JsonSetter("email")
    public void setEmail(String email) {
        this.email = email;
    }

    /**
     * Getter for Firstname.
     * The first name in the user record
     * @return Returns the String
     */
    @JsonGetter("firstname")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getFirstname() {
        return firstname;
    }

    /**
     * Setter for Firstname.
     * The first name in the user record
     * @param firstname Value for String
     */
    @JsonSetter("firstname")
    public void setFirstname(String firstname) {
        this.firstname = firstname;
    }

    /**
     * Getter for Foreignid.
     * UUID of the ECPD account the user belongs to
     * @return Returns the String
     */
    @JsonGetter("foreignid")
    public String getForeignid() {
        return foreignid;
    }

    /**
     * Setter for Foreignid.
     * UUID of the ECPD account the user belongs to
     * @param foreignid Value for String
     */
    @JsonSetter("foreignid")
    public void setForeignid(String foreignid) {
        this.foreignid = foreignid;
    }

    /**
     * Getter for Id.
     * UUID of the user record, assigned at creation
     * @return Returns the String
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getId() {
        return id;
    }

    /**
     * Setter for Id.
     * UUID of the user record, assigned at creation
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for Lastname.
     * The last name in the user record
     * @return Returns the String
     */
    @JsonGetter("lastname")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getLastname() {
        return lastname;
    }

    /**
     * Setter for Lastname.
     * The last name in the user record
     * @param lastname Value for String
     */
    @JsonSetter("lastname")
    public void setLastname(String lastname) {
        this.lastname = lastname;
    }

    /**
     * Getter for Lastupdated.
     * Timestamp of the record
     * @return Returns the LocalDateTime
     */
    @JsonGetter("lastupdated")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getLastupdated() {
        return lastupdated;
    }

    /**
     * Setter for Lastupdated.
     * Timestamp of the record
     * @param lastupdated Value for LocalDateTime
     */
    @JsonSetter("lastupdated")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setLastupdated(LocalDateTime lastupdated) {
        this.lastupdated = lastupdated;
    }

    /**
     * Getter for Mdn.
     * The Mobile Directory Number
     * @return Returns the String
     */
    @JsonGetter("mdn")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getMdn() {
        return mdn;
    }

    /**
     * Setter for Mdn.
     * The Mobile Directory Number
     * @param mdn Value for String
     */
    @JsonSetter("mdn")
    public void setMdn(String mdn) {
        this.mdn = mdn;
    }

    /**
     * Getter for Middlename.
     * optional field for middle name or initial
     * @return Returns the String
     */
    @JsonGetter("middlename")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getMiddlename() {
        return middlename;
    }

    /**
     * Setter for Middlename.
     * optional field for middle name or initial
     * @param middlename Value for String
     */
    @JsonSetter("middlename")
    public void setMiddlename(String middlename) {
        this.middlename = middlename;
    }

    /**
     * Getter for Name.
     * User defined name of the record
     * @return Returns the String
     */
    @JsonGetter("name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * User defined name of the record
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for Secondarybillingaccountids.
     * Virtual field; will not be used in this implementation
     * @return Returns the List of String
     */
    @JsonGetter("secondarybillingaccountids")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<String> getSecondarybillingaccountids() {
        return secondarybillingaccountids;
    }

    /**
     * Setter for Secondarybillingaccountids.
     * Virtual field; will not be used in this implementation
     * @param secondarybillingaccountids Value for List of String
     */
    @JsonSetter("secondarybillingaccountids")
    public void setSecondarybillingaccountids(List<String> secondarybillingaccountids) {
        this.secondarybillingaccountids = secondarybillingaccountids;
    }

    /**
     * Getter for State.
     * The current status of the device or transaction and will be `success` or `failed`
     * @return Returns the String
     */
    @JsonGetter("state")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getState() {
        return state;
    }

    /**
     * Setter for State.
     * The current status of the device or transaction and will be `success` or `failed`
     * @param state Value for String
     */
    @JsonSetter("state")
    public void setState(String state) {
        this.state = state;
    }

    /**
     * Getter for Version.
     * The resource version
     * @return Returns the String
     */
    @JsonGetter("version")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getVersion() {
        return version;
    }

    /**
     * Setter for Version.
     * The resource version
     * @param version Value for String
     */
    @JsonSetter("version")
    public void setVersion(String version) {
        this.version = version;
    }

    /**
     * Getter for Versionid.
     * The UUID of the resource version
     * @return Returns the String
     */
    @JsonGetter("versionid")
    public String getVersionid() {
        return versionid;
    }

    /**
     * Setter for Versionid.
     * The UUID of the resource version
     * @param versionid Value for String
     */
    @JsonSetter("versionid")
    public void setVersionid(String versionid) {
        this.versionid = versionid;
    }

    /**
     * Converts this ResourceUser into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ResourceUser [" + "createdon=" + createdon + ", credentialstype=" + credentialstype
                + ", foreignid=" + foreignid + ", lastupdated=" + lastupdated + ", versionid="
                + versionid + ", accountclientid=" + accountclientid + ", ackterms=" + ackterms
                + ", acktermson=" + acktermson + ", billingaccountid=" + billingaccountid
                + ", credentialsid=" + credentialsid + ", customdata=" + customdata
                + ", description=" + description + ", displayname=" + displayname + ", email="
                + email + ", firstname=" + firstname + ", id=" + id + ", lastname=" + lastname
                + ", mdn=" + mdn + ", middlename=" + middlename + ", name=" + name
                + ", secondarybillingaccountids=" + secondarybillingaccountids + ", state=" + state
                + ", version=" + version + "]";
    }

    /**
     * Builds a new {@link ResourceUser.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ResourceUser.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(createdon, credentialstype, foreignid, lastupdated, versionid)
                .accountclientid(getAccountclientid())
                .ackterms(getAckterms())
                .acktermson(getAcktermson())
                .billingaccountid(getBillingaccountid())
                .credentialsid(getCredentialsid())
                .customdata(getCustomdata())
                .description(getDescription())
                .displayname(getDisplayname())
                .email(getEmail())
                .firstname(getFirstname())
                .id(getId())
                .lastname(getLastname())
                .mdn(getMdn())
                .middlename(getMiddlename())
                .name(getName())
                .secondarybillingaccountids(getSecondarybillingaccountids())
                .state(getState())
                .version(getVersion());
        return builder;
    }

    /**
     * Class to build instances of {@link ResourceUser}.
     */
    public static class Builder {
        private LocalDateTime createdon;
        private String credentialstype;
        private String foreignid;
        private LocalDateTime lastupdated;
        private String versionid;
        private String accountclientid;
        private Boolean ackterms;
        private LocalDateTime acktermson;
        private String billingaccountid;
        private String credentialsid;
        private Map<String, Object> customdata;
        private String description;
        private String displayname;
        private String email;
        private String firstname;
        private String id;
        private String lastname;
        private String mdn;
        private String middlename;
        private String name;
        private List<String> secondarybillingaccountids;
        private String state;
        private String version;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  createdon  LocalDateTime value for createdon.
         * @param  credentialstype  String value for credentialstype.
         * @param  foreignid  String value for foreignid.
         * @param  lastupdated  LocalDateTime value for lastupdated.
         * @param  versionid  String value for versionid.
         */
        public Builder(LocalDateTime createdon, String credentialstype, String foreignid,
                LocalDateTime lastupdated, String versionid) {
            this.createdon = createdon;
            this.credentialstype = credentialstype;
            this.foreignid = foreignid;
            this.lastupdated = lastupdated;
            this.versionid = versionid;
        }

        /**
         * Setter for createdon.
         * @param  createdon  LocalDateTime value for createdon.
         * @return Builder
         */
        public Builder createdon(LocalDateTime createdon) {
            this.createdon = createdon;
            return this;
        }

        /**
         * Setter for credentialstype.
         * @param  credentialstype  String value for credentialstype.
         * @return Builder
         */
        public Builder credentialstype(String credentialstype) {
            this.credentialstype = credentialstype;
            return this;
        }

        /**
         * Setter for foreignid.
         * @param  foreignid  String value for foreignid.
         * @return Builder
         */
        public Builder foreignid(String foreignid) {
            this.foreignid = foreignid;
            return this;
        }

        /**
         * Setter for lastupdated.
         * @param  lastupdated  LocalDateTime value for lastupdated.
         * @return Builder
         */
        public Builder lastupdated(LocalDateTime lastupdated) {
            this.lastupdated = lastupdated;
            return this;
        }

        /**
         * Setter for versionid.
         * @param  versionid  String value for versionid.
         * @return Builder
         */
        public Builder versionid(String versionid) {
            this.versionid = versionid;
            return this;
        }

        /**
         * Setter for accountclientid.
         * @param  accountclientid  String value for accountclientid.
         * @return Builder
         */
        public Builder accountclientid(String accountclientid) {
            this.accountclientid = accountclientid;
            return this;
        }

        /**
         * Setter for ackterms.
         * @param  ackterms  Boolean value for ackterms.
         * @return Builder
         */
        public Builder ackterms(Boolean ackterms) {
            this.ackterms = ackterms;
            return this;
        }

        /**
         * Setter for acktermson.
         * @param  acktermson  LocalDateTime value for acktermson.
         * @return Builder
         */
        public Builder acktermson(LocalDateTime acktermson) {
            this.acktermson = acktermson;
            return this;
        }

        /**
         * Setter for billingaccountid.
         * @param  billingaccountid  String value for billingaccountid.
         * @return Builder
         */
        public Builder billingaccountid(String billingaccountid) {
            this.billingaccountid = billingaccountid;
            return this;
        }

        /**
         * Setter for credentialsid.
         * @param  credentialsid  String value for credentialsid.
         * @return Builder
         */
        public Builder credentialsid(String credentialsid) {
            this.credentialsid = credentialsid;
            return this;
        }

        /**
         * Setter for customdata.
         * @param  customdata  Map of String, value for customdata.
         * @return Builder
         */
        public Builder customdata(Map<String, Object> customdata) {
            this.customdata = customdata;
            return this;
        }

        /**
         * Setter for description.
         * @param  description  String value for description.
         * @return Builder
         */
        public Builder description(String description) {
            this.description = description;
            return this;
        }

        /**
         * Setter for displayname.
         * @param  displayname  String value for displayname.
         * @return Builder
         */
        public Builder displayname(String displayname) {
            this.displayname = displayname;
            return this;
        }

        /**
         * Setter for email.
         * @param  email  String value for email.
         * @return Builder
         */
        public Builder email(String email) {
            this.email = email;
            return this;
        }

        /**
         * Setter for firstname.
         * @param  firstname  String value for firstname.
         * @return Builder
         */
        public Builder firstname(String firstname) {
            this.firstname = firstname;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for lastname.
         * @param  lastname  String value for lastname.
         * @return Builder
         */
        public Builder lastname(String lastname) {
            this.lastname = lastname;
            return this;
        }

        /**
         * Setter for mdn.
         * @param  mdn  String value for mdn.
         * @return Builder
         */
        public Builder mdn(String mdn) {
            this.mdn = mdn;
            return this;
        }

        /**
         * Setter for middlename.
         * @param  middlename  String value for middlename.
         * @return Builder
         */
        public Builder middlename(String middlename) {
            this.middlename = middlename;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for secondarybillingaccountids.
         * @param  secondarybillingaccountids  List of String value for secondarybillingaccountids.
         * @return Builder
         */
        public Builder secondarybillingaccountids(List<String> secondarybillingaccountids) {
            this.secondarybillingaccountids = secondarybillingaccountids;
            return this;
        }

        /**
         * Setter for state.
         * @param  state  String value for state.
         * @return Builder
         */
        public Builder state(String state) {
            this.state = state;
            return this;
        }

        /**
         * Setter for version.
         * @param  version  String value for version.
         * @return Builder
         */
        public Builder version(String version) {
            this.version = version;
            return this;
        }

        /**
         * Builds a new {@link ResourceUser} object using the set fields.
         * @return {@link ResourceUser}
         */
        public ResourceUser build() {
            return new ResourceUser(createdon, credentialstype, foreignid, lastupdated, versionid,
                    accountclientid, ackterms, acktermson, billingaccountid, credentialsid,
                    customdata, description, displayname, email, firstname, id, lastname, mdn,
                    middlename, name, secondarybillingaccountids, state, version);
        }
    }
}
