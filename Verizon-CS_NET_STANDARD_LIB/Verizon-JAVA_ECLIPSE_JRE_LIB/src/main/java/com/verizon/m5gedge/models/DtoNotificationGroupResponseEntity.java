/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.verizon.m5gedge.DateTimeHelper;
import java.time.LocalDateTime;
import java.util.List;

/**
 * This is a model class for DtoNotificationGroupResponseEntity type.
 */
public class DtoNotificationGroupResponseEntity {
    private LocalDateTime createdon;
    private String description;
    private String foreignid;
    private String groupemail;
    private String id;
    private LocalDateTime lastupdated;
    private String name;
    private List<DtoUserDto> users;
    private String version;
    private String versionid;

    /**
     * Default constructor.
     */
    public DtoNotificationGroupResponseEntity() {
    }

    /**
     * Initialization constructor.
     * @param  createdon  LocalDateTime value for createdon.
     * @param  description  String value for description.
     * @param  foreignid  String value for foreignid.
     * @param  groupemail  String value for groupemail.
     * @param  id  String value for id.
     * @param  lastupdated  LocalDateTime value for lastupdated.
     * @param  name  String value for name.
     * @param  users  List of DtoUserDto value for users.
     * @param  version  String value for version.
     * @param  versionid  String value for versionid.
     */
    public DtoNotificationGroupResponseEntity(
            LocalDateTime createdon,
            String description,
            String foreignid,
            String groupemail,
            String id,
            LocalDateTime lastupdated,
            String name,
            List<DtoUserDto> users,
            String version,
            String versionid) {
        this.createdon = createdon;
        this.description = description;
        this.foreignid = foreignid;
        this.groupemail = groupemail;
        this.id = id;
        this.lastupdated = lastupdated;
        this.name = name;
        this.users = users;
        this.version = version;
        this.versionid = versionid;
    }

    /**
     * Getter for Createdon.
     * Timestamp of the record
     * @return Returns the LocalDateTime
     */
    @JsonGetter("createdon")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getCreatedon() {
        return createdon;
    }

    /**
     * Setter for Createdon.
     * Timestamp of the record
     * @param createdon Value for LocalDateTime
     */
    @JsonSetter("createdon")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCreatedon(LocalDateTime createdon) {
        this.createdon = createdon;
    }

    /**
     * Getter for Description.
     * a short description
     * @return Returns the String
     */
    @JsonGetter("description")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDescription() {
        return description;
    }

    /**
     * Setter for Description.
     * a short description
     * @param description Value for String
     */
    @JsonSetter("description")
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for Foreignid.
     * UUID of the ECPD account the user belongs to
     * @return Returns the String
     */
    @JsonGetter("foreignid")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getForeignid() {
        return foreignid;
    }

    /**
     * Setter for Foreignid.
     * UUID of the ECPD account the user belongs to
     * @param foreignid Value for String
     */
    @JsonSetter("foreignid")
    public void setForeignid(String foreignid) {
        this.foreignid = foreignid;
    }

    /**
     * Getter for Groupemail.
     * Contact email for the group
     * @return Returns the String
     */
    @JsonGetter("groupemail")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getGroupemail() {
        return groupemail;
    }

    /**
     * Setter for Groupemail.
     * Contact email for the group
     * @param groupemail Value for String
     */
    @JsonSetter("groupemail")
    public void setGroupemail(String groupemail) {
        this.groupemail = groupemail;
    }

    /**
     * Getter for Id.
     * UUID of the user record, assigned at creation
     * @return Returns the String
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getId() {
        return id;
    }

    /**
     * Setter for Id.
     * UUID of the user record, assigned at creation
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for Lastupdated.
     * Timestamp of the record
     * @return Returns the LocalDateTime
     */
    @JsonGetter("lastupdated")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getLastupdated() {
        return lastupdated;
    }

    /**
     * Setter for Lastupdated.
     * Timestamp of the record
     * @param lastupdated Value for LocalDateTime
     */
    @JsonSetter("lastupdated")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setLastupdated(LocalDateTime lastupdated) {
        this.lastupdated = lastupdated;
    }

    /**
     * Getter for Name.
     * User defined name of the record
     * @return Returns the String
     */
    @JsonGetter("name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * User defined name of the record
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for Users.
     * @return Returns the List of DtoUserDto
     */
    @JsonGetter("users")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<DtoUserDto> getUsers() {
        return users;
    }

    /**
     * Setter for Users.
     * @param users Value for List of DtoUserDto
     */
    @JsonSetter("users")
    public void setUsers(List<DtoUserDto> users) {
        this.users = users;
    }

    /**
     * Getter for Version.
     * The resource version
     * @return Returns the String
     */
    @JsonGetter("version")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getVersion() {
        return version;
    }

    /**
     * Setter for Version.
     * The resource version
     * @param version Value for String
     */
    @JsonSetter("version")
    public void setVersion(String version) {
        this.version = version;
    }

    /**
     * Getter for Versionid.
     * The UUID of the resource version
     * @return Returns the String
     */
    @JsonGetter("versionid")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getVersionid() {
        return versionid;
    }

    /**
     * Setter for Versionid.
     * The UUID of the resource version
     * @param versionid Value for String
     */
    @JsonSetter("versionid")
    public void setVersionid(String versionid) {
        this.versionid = versionid;
    }

    /**
     * Converts this DtoNotificationGroupResponseEntity into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "DtoNotificationGroupResponseEntity [" + "createdon=" + createdon + ", description="
                + description + ", foreignid=" + foreignid + ", groupemail=" + groupemail + ", id="
                + id + ", lastupdated=" + lastupdated + ", name=" + name + ", users=" + users
                + ", version=" + version + ", versionid=" + versionid + "]";
    }

    /**
     * Builds a new {@link DtoNotificationGroupResponseEntity.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link DtoNotificationGroupResponseEntity.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .createdon(getCreatedon())
                .description(getDescription())
                .foreignid(getForeignid())
                .groupemail(getGroupemail())
                .id(getId())
                .lastupdated(getLastupdated())
                .name(getName())
                .users(getUsers())
                .version(getVersion())
                .versionid(getVersionid());
        return builder;
    }

    /**
     * Class to build instances of {@link DtoNotificationGroupResponseEntity}.
     */
    public static class Builder {
        private LocalDateTime createdon;
        private String description;
        private String foreignid;
        private String groupemail;
        private String id;
        private LocalDateTime lastupdated;
        private String name;
        private List<DtoUserDto> users;
        private String version;
        private String versionid;



        /**
         * Setter for createdon.
         * @param  createdon  LocalDateTime value for createdon.
         * @return Builder
         */
        public Builder createdon(LocalDateTime createdon) {
            this.createdon = createdon;
            return this;
        }

        /**
         * Setter for description.
         * @param  description  String value for description.
         * @return Builder
         */
        public Builder description(String description) {
            this.description = description;
            return this;
        }

        /**
         * Setter for foreignid.
         * @param  foreignid  String value for foreignid.
         * @return Builder
         */
        public Builder foreignid(String foreignid) {
            this.foreignid = foreignid;
            return this;
        }

        /**
         * Setter for groupemail.
         * @param  groupemail  String value for groupemail.
         * @return Builder
         */
        public Builder groupemail(String groupemail) {
            this.groupemail = groupemail;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for lastupdated.
         * @param  lastupdated  LocalDateTime value for lastupdated.
         * @return Builder
         */
        public Builder lastupdated(LocalDateTime lastupdated) {
            this.lastupdated = lastupdated;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for users.
         * @param  users  List of DtoUserDto value for users.
         * @return Builder
         */
        public Builder users(List<DtoUserDto> users) {
            this.users = users;
            return this;
        }

        /**
         * Setter for version.
         * @param  version  String value for version.
         * @return Builder
         */
        public Builder version(String version) {
            this.version = version;
            return this;
        }

        /**
         * Setter for versionid.
         * @param  versionid  String value for versionid.
         * @return Builder
         */
        public Builder versionid(String versionid) {
            this.versionid = versionid;
            return this;
        }

        /**
         * Builds a new {@link DtoNotificationGroupResponseEntity} object using the set fields.
         * @return {@link DtoNotificationGroupResponseEntity}
         */
        public DtoNotificationGroupResponseEntity build() {
            return new DtoNotificationGroupResponseEntity(createdon, description, foreignid,
                    groupemail, id, lastupdated, name, users, version, versionid);
        }
    }
}
