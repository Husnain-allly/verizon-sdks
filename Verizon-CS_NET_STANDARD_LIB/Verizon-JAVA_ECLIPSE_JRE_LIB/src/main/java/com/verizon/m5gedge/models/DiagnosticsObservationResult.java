/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.verizon.m5gedge.DateTimeHelper;
import io.apimatic.core.types.AdditionalProperties;
import io.apimatic.core.utilities.ConversionHelper;
import java.time.LocalDateTime;
import java.util.Map;

/**
 * This is a model class for DiagnosticsObservationResult type.
 */
public class DiagnosticsObservationResult {
    private String transactionId;
    private String status;
    private LocalDateTime createdOn;
    private AdditionalProperties<Object> additionalProperties = 
            new AdditionalProperties<Object>(this.getClass());

    /**
     * Default constructor.
     */
    public DiagnosticsObservationResult() {
    }

    /**
     * Initialization constructor.
     * @param  transactionId  String value for transactionId.
     * @param  status  String value for status.
     * @param  createdOn  LocalDateTime value for createdOn.
     */
    public DiagnosticsObservationResult(
            String transactionId,
            String status,
            LocalDateTime createdOn) {
        this.transactionId = transactionId;
        this.status = status;
        this.createdOn = createdOn;
    }

    /**
     * Getter for TransactionId.
     * Transaction identifier.
     * @return Returns the String
     */
    @JsonGetter("transactionID")
    public String getTransactionId() {
        return transactionId;
    }

    /**
     * Setter for TransactionId.
     * Transaction identifier.
     * @param transactionId Value for String
     */
    @JsonSetter("transactionID")
    public void setTransactionId(String transactionId) {
        this.transactionId = transactionId;
    }

    /**
     * Getter for Status.
     * Status of the request.
     * @return Returns the String
     */
    @JsonGetter("status")
    public String getStatus() {
        return status;
    }

    /**
     * Setter for Status.
     * Status of the request.
     * @param status Value for String
     */
    @JsonSetter("status")
    public void setStatus(String status) {
        this.status = status;
    }

    /**
     * Getter for CreatedOn.
     * The date and time of when this request was created.
     * @return Returns the LocalDateTime
     */
    @JsonGetter("createdOn")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getCreatedOn() {
        return createdOn;
    }

    /**
     * Setter for CreatedOn.
     * The date and time of when this request was created.
     * @param createdOn Value for LocalDateTime
     */
    @JsonSetter("createdOn")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCreatedOn(LocalDateTime createdOn) {
        this.createdOn = createdOn;
    }

    /**
     * Hidden method for the serialization of additional properties.
     * @return The map of additionally set properties.
     */
    @JsonAnyGetter
    private Map<String, Object> getAdditionalProperties() {
        return additionalProperties.getAdditionalProperties();
    }

    /**
     * Hidden method for the de-serialization of additional properties.
     * @param name The name of the additional property.
     * @param value The Object value of the additional property.
     */
    @JsonAnySetter
    private void setAdditionalProperties(String name, Object value) {
        additionalProperties.setAdditionalProperty(name,
                ConversionHelper.convertToSimpleType(value,
                        x -> x),
                true);
    }

    /**
     * Getter for the value of additional properties based on provided property name.
     * @param name The name of the additional property.
     * @return Either the Object property value or null if not exist.
     */
    
    public Object getAdditionalProperty(String name) {
        return additionalProperties.getAdditionalProperty(name);
    }

    /**
     * Converts this DiagnosticsObservationResult into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "DiagnosticsObservationResult [" + "transactionId=" + transactionId + ", status="
                + status + ", createdOn=" + createdOn + ", additionalProperties="
                + additionalProperties + "]";
    }

    /**
     * Builds a new {@link DiagnosticsObservationResult.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link DiagnosticsObservationResult.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(transactionId, status, createdOn);
        builder.additionalProperties = additionalProperties;
        return builder;
    }

    /**
     * Class to build instances of {@link DiagnosticsObservationResult}.
     */
    public static class Builder {
        private String transactionId;
        private String status;
        private LocalDateTime createdOn;
        private AdditionalProperties<Object> additionalProperties =
                new AdditionalProperties<Object>();

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  transactionId  String value for transactionId.
         * @param  status  String value for status.
         * @param  createdOn  LocalDateTime value for createdOn.
         */
        public Builder(String transactionId, String status, LocalDateTime createdOn) {
            this.transactionId = transactionId;
            this.status = status;
            this.createdOn = createdOn;
        }

        /**
         * Setter for transactionId.
         * @param  transactionId  String value for transactionId.
         * @return Builder
         */
        public Builder transactionId(String transactionId) {
            this.transactionId = transactionId;
            return this;
        }

        /**
         * Setter for status.
         * @param  status  String value for status.
         * @return Builder
         */
        public Builder status(String status) {
            this.status = status;
            return this;
        }

        /**
         * Setter for createdOn.
         * @param  createdOn  LocalDateTime value for createdOn.
         * @return Builder
         */
        public Builder createdOn(LocalDateTime createdOn) {
            this.createdOn = createdOn;
            return this;
        }

        /**
         * Setter for additional property that are not in model fields.
         * @param name The name of the additional property.
         * @param value The Object value of the additional property.
         * @return Builder.
         */
        public Builder additionalProperty(String name, Object value) {
            this.additionalProperties.setAdditionalProperty(name, value);
            return this;
        }

        /**
         * Builds a new {@link DiagnosticsObservationResult} object using the set fields.
         * @return {@link DiagnosticsObservationResult}
         */
        public DiagnosticsObservationResult build() {
            DiagnosticsObservationResult model =
                    new DiagnosticsObservationResult(transactionId, status, createdOn);
            model.additionalProperties = additionalProperties;
            return model;
        }
    }
}
