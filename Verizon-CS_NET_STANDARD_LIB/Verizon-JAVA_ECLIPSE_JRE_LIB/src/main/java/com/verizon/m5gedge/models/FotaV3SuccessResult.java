/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.AdditionalProperties;
import io.apimatic.core.utilities.ConversionHelper;
import java.util.Map;

/**
 * This is a model class for FotaV3SuccessResult type.
 */
public class FotaV3SuccessResult {
    private boolean success;
    private AdditionalProperties<Object> additionalProperties = 
            new AdditionalProperties<Object>(this.getClass());

    /**
     * Default constructor.
     */
    public FotaV3SuccessResult() {
    }

    /**
     * Initialization constructor.
     * @param  success  boolean value for success.
     */
    public FotaV3SuccessResult(
            boolean success) {
        this.success = success;
    }

    /**
     * Getter for Success.
     * True or false.
     * @return Returns the boolean
     */
    @JsonGetter("success")
    public boolean getSuccess() {
        return success;
    }

    /**
     * Setter for Success.
     * True or false.
     * @param success Value for boolean
     */
    @JsonSetter("success")
    public void setSuccess(boolean success) {
        this.success = success;
    }

    /**
     * Hidden method for the serialization of additional properties.
     * @return The map of additionally set properties.
     */
    @JsonAnyGetter
    private Map<String, Object> getAdditionalProperties() {
        return additionalProperties.getAdditionalProperties();
    }

    /**
     * Hidden method for the de-serialization of additional properties.
     * @param name The name of the additional property.
     * @param value The Object value of the additional property.
     */
    @JsonAnySetter
    private void setAdditionalProperties(String name, Object value) {
        additionalProperties.setAdditionalProperty(name,
                ConversionHelper.convertToSimpleType(value,
                        x -> x),
                true);
    }

    /**
     * Getter for the value of additional properties based on provided property name.
     * @param name The name of the additional property.
     * @return Either the Object property value or null if not exist.
     */
    
    public Object getAdditionalProperty(String name) {
        return additionalProperties.getAdditionalProperty(name);
    }

    /**
     * Converts this FotaV3SuccessResult into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "FotaV3SuccessResult [" + "success=" + success + ", additionalProperties="
                + additionalProperties + "]";
    }

    /**
     * Builds a new {@link FotaV3SuccessResult.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link FotaV3SuccessResult.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(success);
        builder.additionalProperties = additionalProperties;
        return builder;
    }

    /**
     * Class to build instances of {@link FotaV3SuccessResult}.
     */
    public static class Builder {
        private boolean success;
        private AdditionalProperties<Object> additionalProperties =
                new AdditionalProperties<Object>();

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  success  boolean value for success.
         */
        public Builder(boolean success) {
            this.success = success;
        }

        /**
         * Setter for success.
         * @param  success  boolean value for success.
         * @return Builder
         */
        public Builder success(boolean success) {
            this.success = success;
            return this;
        }

        /**
         * Setter for additional property that are not in model fields.
         * @param name The name of the additional property.
         * @param value The Object value of the additional property.
         * @return Builder.
         */
        public Builder additionalProperty(String name, Object value) {
            this.additionalProperties.setAdditionalProperty(name, value);
            return this;
        }

        /**
         * Builds a new {@link FotaV3SuccessResult} object using the set fields.
         * @return {@link FotaV3SuccessResult}
         */
        public FotaV3SuccessResult build() {
            FotaV3SuccessResult model =
                    new FotaV3SuccessResult(success);
            model.additionalProperties = additionalProperties;
            return model;
        }
    }
}
