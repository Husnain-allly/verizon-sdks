/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.verizon.m5gedge.models.containers.AccountSharePricePlanTriggerCondition;
import io.apimatic.core.types.AdditionalProperties;
import io.apimatic.core.utilities.ConversionHelper;
import java.util.Map;

/**
 * This is a model class for AccountSharePricePlanTrigger type.
 */
public class AccountSharePricePlanTrigger {
    private AccountShareFilterCriteria accountShare;
    private AccountSharePricePlanTriggerCondition condition;
    private Boolean changePlan;
    private ChangePlanDetails changePlanDetails;
    private AdditionalProperties<Object> additionalProperties = 
            new AdditionalProperties<Object>(this.getClass());

    /**
     * Default constructor.
     */
    public AccountSharePricePlanTrigger() {
    }

    /**
     * Initialization constructor.
     * @param  accountShare  AccountShareFilterCriteria value for accountShare.
     * @param  condition  AccountSharePricePlanTriggerCondition value for condition.
     * @param  changePlan  Boolean value for changePlan.
     * @param  changePlanDetails  ChangePlanDetails value for changePlanDetails.
     */
    public AccountSharePricePlanTrigger(
            AccountShareFilterCriteria accountShare,
            AccountSharePricePlanTriggerCondition condition,
            Boolean changePlan,
            ChangePlanDetails changePlanDetails) {
        this.accountShare = accountShare;
        this.condition = condition;
        this.changePlan = changePlan;
        this.changePlanDetails = changePlanDetails;
    }

    /**
     * Getter for AccountShare.
     * @return Returns the AccountShareFilterCriteria
     */
    @JsonGetter("accountShare")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public AccountShareFilterCriteria getAccountShare() {
        return accountShare;
    }

    /**
     * Setter for AccountShare.
     * @param accountShare Value for AccountShareFilterCriteria
     */
    @JsonSetter("accountShare")
    public void setAccountShare(AccountShareFilterCriteria accountShare) {
        this.accountShare = accountShare;
    }

    /**
     * Getter for Condition.
     * @return Returns the AccountSharePricePlanTriggerCondition
     */
    @JsonGetter("condition")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public AccountSharePricePlanTriggerCondition getCondition() {
        return condition;
    }

    /**
     * Setter for Condition.
     * @param condition Value for AccountSharePricePlanTriggerCondition
     */
    @JsonSetter("condition")
    public void setCondition(AccountSharePricePlanTriggerCondition condition) {
        this.condition = condition;
    }

    /**
     * Getter for ChangePlan.
     * a flag to set if the trigger changes service plans, true, or not, false
     * @return Returns the Boolean
     */
    @JsonGetter("changePlan")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getChangePlan() {
        return changePlan;
    }

    /**
     * Setter for ChangePlan.
     * a flag to set if the trigger changes service plans, true, or not, false
     * @param changePlan Value for Boolean
     */
    @JsonSetter("changePlan")
    public void setChangePlan(Boolean changePlan) {
        this.changePlan = changePlan;
    }

    /**
     * Getter for ChangePlanDetails.
     * The service plan code to switch to
     * @return Returns the ChangePlanDetails
     */
    @JsonGetter("changePlanDetails")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public ChangePlanDetails getChangePlanDetails() {
        return changePlanDetails;
    }

    /**
     * Setter for ChangePlanDetails.
     * The service plan code to switch to
     * @param changePlanDetails Value for ChangePlanDetails
     */
    @JsonSetter("changePlanDetails")
    public void setChangePlanDetails(ChangePlanDetails changePlanDetails) {
        this.changePlanDetails = changePlanDetails;
    }

    /**
     * Hidden method for the serialization of additional properties.
     * @return The map of additionally set properties.
     */
    @JsonAnyGetter
    private Map<String, Object> getAdditionalProperties() {
        return additionalProperties.getAdditionalProperties();
    }

    /**
     * Hidden method for the de-serialization of additional properties.
     * @param name The name of the additional property.
     * @param value The Object value of the additional property.
     */
    @JsonAnySetter
    private void setAdditionalProperties(String name, Object value) {
        additionalProperties.setAdditionalProperty(name,
                ConversionHelper.convertToSimpleType(value,
                        x -> x),
                true);
    }

    /**
     * Getter for the value of additional properties based on provided property name.
     * @param name The name of the additional property.
     * @return Either the Object property value or null if not exist.
     */
    
    public Object getAdditionalProperty(String name) {
        return additionalProperties.getAdditionalProperty(name);
    }

    /**
     * Converts this AccountSharePricePlanTrigger into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "AccountSharePricePlanTrigger [" + "accountShare=" + accountShare + ", condition="
                + condition + ", changePlan=" + changePlan + ", changePlanDetails="
                + changePlanDetails + ", additionalProperties=" + additionalProperties + "]";
    }

    /**
     * Builds a new {@link AccountSharePricePlanTrigger.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link AccountSharePricePlanTrigger.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .accountShare(getAccountShare())
                .condition(getCondition())
                .changePlan(getChangePlan())
                .changePlanDetails(getChangePlanDetails());
        builder.additionalProperties = additionalProperties;
        return builder;
    }

    /**
     * Class to build instances of {@link AccountSharePricePlanTrigger}.
     */
    public static class Builder {
        private AccountShareFilterCriteria accountShare;
        private AccountSharePricePlanTriggerCondition condition;
        private Boolean changePlan;
        private ChangePlanDetails changePlanDetails;
        private AdditionalProperties<Object> additionalProperties =
                new AdditionalProperties<Object>();



        /**
         * Setter for accountShare.
         * @param  accountShare  AccountShareFilterCriteria value for accountShare.
         * @return Builder
         */
        public Builder accountShare(AccountShareFilterCriteria accountShare) {
            this.accountShare = accountShare;
            return this;
        }

        /**
         * Setter for condition.
         * @param  condition  AccountSharePricePlanTriggerCondition value for condition.
         * @return Builder
         */
        public Builder condition(AccountSharePricePlanTriggerCondition condition) {
            this.condition = condition;
            return this;
        }

        /**
         * Setter for changePlan.
         * @param  changePlan  Boolean value for changePlan.
         * @return Builder
         */
        public Builder changePlan(Boolean changePlan) {
            this.changePlan = changePlan;
            return this;
        }

        /**
         * Setter for changePlanDetails.
         * @param  changePlanDetails  ChangePlanDetails value for changePlanDetails.
         * @return Builder
         */
        public Builder changePlanDetails(ChangePlanDetails changePlanDetails) {
            this.changePlanDetails = changePlanDetails;
            return this;
        }

        /**
         * Setter for additional property that are not in model fields.
         * @param name The name of the additional property.
         * @param value The Object value of the additional property.
         * @return Builder.
         */
        public Builder additionalProperty(String name, Object value) {
            this.additionalProperties.setAdditionalProperty(name, value);
            return this;
        }

        /**
         * Builds a new {@link AccountSharePricePlanTrigger} object using the set fields.
         * @return {@link AccountSharePricePlanTrigger}
         */
        public AccountSharePricePlanTrigger build() {
            AccountSharePricePlanTrigger model =
                    new AccountSharePricePlanTrigger(accountShare, condition, changePlan,
                            changePlanDetails);
            model.additionalProperties = additionalProperties;
            return model;
        }
    }
}
