/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.AdditionalProperties;
import io.apimatic.core.utilities.ConversionHelper;
import java.util.Map;

/**
 * This is a model class for HistorySearchRequest type.
 */
public class HistorySearchRequest {
    private HistorySearchFilter mFilter;
    private Integer mLimitNumber;
    private HistorySearchLimitTime mLimitTime;
    private String mPage;
    private AdditionalProperties<Object> additionalProperties = 
            new AdditionalProperties<Object>(this.getClass());

    /**
     * Default constructor.
     */
    public HistorySearchRequest() {
    }

    /**
     * Initialization constructor.
     * @param  mFilter  HistorySearchFilter value for mFilter.
     * @param  mLimitNumber  Integer value for mLimitNumber.
     * @param  mLimitTime  HistorySearchLimitTime value for mLimitTime.
     * @param  mPage  String value for mPage.
     */
    public HistorySearchRequest(
            HistorySearchFilter mFilter,
            Integer mLimitNumber,
            HistorySearchLimitTime mLimitTime,
            String mPage) {
        this.mFilter = mFilter;
        this.mLimitNumber = mLimitNumber;
        this.mLimitTime = mLimitTime;
        this.mPage = mPage;
    }

    /**
     * Getter for MFilter.
     * The selected device and attributes for which a request should retrieve data.
     * @return Returns the HistorySearchFilter
     */
    @JsonGetter("$filter")
    public HistorySearchFilter getMFilter() {
        return mFilter;
    }

    /**
     * Setter for MFilter.
     * The selected device and attributes for which a request should retrieve data.
     * @param mFilter Value for HistorySearchFilter
     */
    @JsonSetter("$filter")
    public void setMFilter(HistorySearchFilter mFilter) {
        this.mFilter = mFilter;
    }

    /**
     * Getter for MLimitNumber.
     * The maximum number of historical attributes to include in the response. If the request
     * matches more than this number of attributes, the response will contain an X-Next value in the
     * header that can be used as the page value in the next request to retrieve the next page of
     * events.
     * @return Returns the Integer
     */
    @JsonGetter("$limitNumber")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getMLimitNumber() {
        return mLimitNumber;
    }

    /**
     * Setter for MLimitNumber.
     * The maximum number of historical attributes to include in the response. If the request
     * matches more than this number of attributes, the response will contain an X-Next value in the
     * header that can be used as the page value in the next request to retrieve the next page of
     * events.
     * @param mLimitNumber Value for Integer
     */
    @JsonSetter("$limitNumber")
    public void setMLimitNumber(Integer mLimitNumber) {
        this.mLimitNumber = mLimitNumber;
    }

    /**
     * Getter for MLimitTime.
     * The time period for which a request should retrieve data, beginning with the
     * limitTime.startOn and proceeding with the limitTime.duration.
     * @return Returns the HistorySearchLimitTime
     */
    @JsonGetter("$limitTime")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public HistorySearchLimitTime getMLimitTime() {
        return mLimitTime;
    }

    /**
     * Setter for MLimitTime.
     * The time period for which a request should retrieve data, beginning with the
     * limitTime.startOn and proceeding with the limitTime.duration.
     * @param mLimitTime Value for HistorySearchLimitTime
     */
    @JsonSetter("$limitTime")
    public void setMLimitTime(HistorySearchLimitTime mLimitTime) {
        this.mLimitTime = mLimitTime;
    }

    /**
     * Getter for MPage.
     * Page number for pagination purposes.
     * @return Returns the String
     */
    @JsonGetter("$page")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getMPage() {
        return mPage;
    }

    /**
     * Setter for MPage.
     * Page number for pagination purposes.
     * @param mPage Value for String
     */
    @JsonSetter("$page")
    public void setMPage(String mPage) {
        this.mPage = mPage;
    }

    /**
     * Hidden method for the serialization of additional properties.
     * @return The map of additionally set properties.
     */
    @JsonAnyGetter
    private Map<String, Object> getAdditionalProperties() {
        return additionalProperties.getAdditionalProperties();
    }

    /**
     * Hidden method for the de-serialization of additional properties.
     * @param name The name of the additional property.
     * @param value The Object value of the additional property.
     */
    @JsonAnySetter
    private void setAdditionalProperties(String name, Object value) {
        additionalProperties.setAdditionalProperty(name,
                ConversionHelper.convertToSimpleType(value,
                        x -> x),
                true);
    }

    /**
     * Getter for the value of additional properties based on provided property name.
     * @param name The name of the additional property.
     * @return Either the Object property value or null if not exist.
     */
    
    public Object getAdditionalProperty(String name) {
        return additionalProperties.getAdditionalProperty(name);
    }

    /**
     * Converts this HistorySearchRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "HistorySearchRequest [" + "mFilter=" + mFilter + ", mLimitNumber=" + mLimitNumber
                + ", mLimitTime=" + mLimitTime + ", mPage=" + mPage + ", additionalProperties="
                + additionalProperties + "]";
    }

    /**
     * Builds a new {@link HistorySearchRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link HistorySearchRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(mFilter)
                .mLimitNumber(getMLimitNumber())
                .mLimitTime(getMLimitTime())
                .mPage(getMPage());
        builder.additionalProperties = additionalProperties;
        return builder;
    }

    /**
     * Class to build instances of {@link HistorySearchRequest}.
     */
    public static class Builder {
        private HistorySearchFilter mFilter;
        private Integer mLimitNumber;
        private HistorySearchLimitTime mLimitTime;
        private String mPage;
        private AdditionalProperties<Object> additionalProperties =
                new AdditionalProperties<Object>();

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  mFilter  HistorySearchFilter value for mFilter.
         */
        public Builder(HistorySearchFilter mFilter) {
            this.mFilter = mFilter;
        }

        /**
         * Setter for mFilter.
         * @param  mFilter  HistorySearchFilter value for mFilter.
         * @return Builder
         */
        public Builder mFilter(HistorySearchFilter mFilter) {
            this.mFilter = mFilter;
            return this;
        }

        /**
         * Setter for mLimitNumber.
         * @param  mLimitNumber  Integer value for mLimitNumber.
         * @return Builder
         */
        public Builder mLimitNumber(Integer mLimitNumber) {
            this.mLimitNumber = mLimitNumber;
            return this;
        }

        /**
         * Setter for mLimitTime.
         * @param  mLimitTime  HistorySearchLimitTime value for mLimitTime.
         * @return Builder
         */
        public Builder mLimitTime(HistorySearchLimitTime mLimitTime) {
            this.mLimitTime = mLimitTime;
            return this;
        }

        /**
         * Setter for mPage.
         * @param  mPage  String value for mPage.
         * @return Builder
         */
        public Builder mPage(String mPage) {
            this.mPage = mPage;
            return this;
        }

        /**
         * Setter for additional property that are not in model fields.
         * @param name The name of the additional property.
         * @param value The Object value of the additional property.
         * @return Builder.
         */
        public Builder additionalProperty(String name, Object value) {
            this.additionalProperties.setAdditionalProperty(name, value);
            return this;
        }

        /**
         * Builds a new {@link HistorySearchRequest} object using the set fields.
         * @return {@link HistorySearchRequest}
         */
        public HistorySearchRequest build() {
            HistorySearchRequest model =
                    new HistorySearchRequest(mFilter, mLimitNumber, mLimitTime, mPage);
            model.additionalProperties = additionalProperties;
            return model;
        }
    }
}
