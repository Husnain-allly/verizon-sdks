/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models.containers;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.verizon.m5gedge.ApiHelper;
import com.verizon.m5gedge.models.Rateplantype2;
import com.verizon.m5gedge.models.RateplantypeObject;
import io.apimatic.core.annotations.TypeCombinator.TypeCombinatorCase;
import java.io.IOException;
import java.util.Arrays;

/**
 * This is a container class for any-of types.
 */
@JsonDeserialize(using = RateplanRatePlanGroup.RateplanRatePlanGroupDeserializer.class)
public abstract class RateplanRatePlanGroup {
    
    /**
     * This is rateplantypeObject case.
     * @param rateplantypeObject RateplantypeObject value for rateplantypeObject.
     * @return The RateplantypeObjectCase object.
     */
    public static RateplanRatePlanGroup fromRateplantypeObject(
            RateplantypeObject rateplantypeObject) {
        return rateplantypeObject == null ? null : new RateplantypeObjectCase(rateplantypeObject);
    }

    /**
     * This is rateplantype2 case.
     * @param rateplantype2 Rateplantype2 value for rateplantype2.
     * @return The Rateplantype2Case object.
     */
    public static RateplanRatePlanGroup fromRateplantype2(Rateplantype2 rateplantype2) {
        return rateplantype2 == null ? null : new Rateplantype2Case(rateplantype2);
    }

    /**
     * Method to match from the provided any-of cases.
     * @param <R> The type to return after applying callback.
     * @param cases The any-of type cases callback.
     * @return The any-of matched case.
     */
    public abstract <R> R match(Cases<R> cases);

    /**
     * This is interface for any-of cases.
     * @param <R> The type to return after applying callback.
     */
    public interface Cases<R> {
        R rateplantypeObject(RateplantypeObject rateplantypeObject);

        R rateplantype2(Rateplantype2 rateplantype2);
    }

    /**
     * This is a implementation class for RateplantypeObjectCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "RateplantypeObject")
    private static class RateplantypeObjectCase extends RateplanRatePlanGroup {

        @JsonValue
        private RateplantypeObject rateplantypeObject;

        RateplantypeObjectCase(RateplantypeObject rateplantypeObject) {
            this.rateplantypeObject = rateplantypeObject;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.rateplantypeObject(this.rateplantypeObject);
        }

        @JsonCreator
        private RateplantypeObjectCase(JsonNode jsonNode) throws IOException {
            this.rateplantypeObject = ApiHelper.deserialize(jsonNode,
                RateplantypeObject.class);
        }

        @Override
        public String toString() {
            return rateplantypeObject.toString();
        }
    }

    /**
     * This is a implementation class for Rateplantype2Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "Rateplantype2")
    private static class Rateplantype2Case extends RateplanRatePlanGroup {

        @JsonValue
        private Rateplantype2 rateplantype2;

        Rateplantype2Case(Rateplantype2 rateplantype2) {
            this.rateplantype2 = rateplantype2;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.rateplantype2(this.rateplantype2);
        }

        @JsonCreator
        private Rateplantype2Case(JsonNode jsonNode) throws IOException {
            this.rateplantype2 = ApiHelper.deserialize(jsonNode,
                Rateplantype2.class);
        }

        @Override
        public String toString() {
            return rateplantype2.toString();
        }
    }

    /**
     * This is a custom deserializer class for RateplanRatePlanGroup.
     */
    protected static class RateplanRatePlanGroupDeserializer
            extends JsonDeserializer<RateplanRatePlanGroup> {

        @Override
        public RateplanRatePlanGroup deserialize(JsonParser jp, DeserializationContext ctxt)
                throws IOException, JsonProcessingException {
            ObjectCodec oc = jp.getCodec();
            JsonNode node = oc.readTree(jp);
            return ApiHelper.deserialize(node, Arrays.asList(RateplantypeObjectCase.class,
                    Rateplantype2Case.class), false);
        }
    }

}
