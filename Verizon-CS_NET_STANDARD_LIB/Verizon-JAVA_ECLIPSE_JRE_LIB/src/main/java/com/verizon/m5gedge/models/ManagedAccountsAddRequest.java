/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.AdditionalProperties;
import io.apimatic.core.utilities.ConversionHelper;
import java.util.List;
import java.util.Map;

/**
 * This is a model class for ManagedAccountsAddRequest type.
 */
public class ManagedAccountsAddRequest {
    private String accountName;
    private ServiceName serviceName;
    private String type;
    private List<String> managedAccList;
    private AdditionalProperties<Object> additionalProperties = 
            new AdditionalProperties<Object>(this.getClass());

    /**
     * Default constructor.
     */
    public ManagedAccountsAddRequest() {
        serviceName = ServiceName.LOCATION;
    }

    /**
     * Initialization constructor.
     * @param  accountName  String value for accountName.
     * @param  serviceName  ServiceName value for serviceName.
     * @param  type  String value for type.
     * @param  managedAccList  List of String value for managedAccList.
     */
    public ManagedAccountsAddRequest(
            String accountName,
            ServiceName serviceName,
            String type,
            List<String> managedAccList) {
        this.accountName = accountName;
        this.serviceName = serviceName;
        this.type = type;
        this.managedAccList = managedAccList;
    }

    /**
     * Getter for AccountName.
     * Account identifier
     * @return Returns the String
     */
    @JsonGetter("accountName")
    public String getAccountName() {
        return accountName;
    }

    /**
     * Setter for AccountName.
     * Account identifier
     * @param accountName Value for String
     */
    @JsonSetter("accountName")
    public void setAccountName(String accountName) {
        this.accountName = accountName;
    }

    /**
     * Getter for ServiceName.
     * Service name
     * @return Returns the ServiceName
     */
    @JsonGetter("serviceName")
    public ServiceName getServiceName() {
        return serviceName;
    }

    /**
     * Setter for ServiceName.
     * Service name
     * @param serviceName Value for ServiceName
     */
    @JsonSetter("serviceName")
    public void setServiceName(ServiceName serviceName) {
        this.serviceName = serviceName;
    }

    /**
     * Getter for Type.
     * SKU name
     * @return Returns the String
     */
    @JsonGetter("type")
    public String getType() {
        return type;
    }

    /**
     * Setter for Type.
     * SKU name
     * @param type Value for String
     */
    @JsonSetter("type")
    public void setType(String type) {
        this.type = type;
    }

    /**
     * Getter for ManagedAccList.
     * managed account list
     * @return Returns the List of String
     */
    @JsonGetter("managedAccList")
    public List<String> getManagedAccList() {
        return managedAccList;
    }

    /**
     * Setter for ManagedAccList.
     * managed account list
     * @param managedAccList Value for List of String
     */
    @JsonSetter("managedAccList")
    public void setManagedAccList(List<String> managedAccList) {
        this.managedAccList = managedAccList;
    }

    /**
     * Hidden method for the serialization of additional properties.
     * @return The map of additionally set properties.
     */
    @JsonAnyGetter
    private Map<String, Object> getAdditionalProperties() {
        return additionalProperties.getAdditionalProperties();
    }

    /**
     * Hidden method for the de-serialization of additional properties.
     * @param name The name of the additional property.
     * @param value The Object value of the additional property.
     */
    @JsonAnySetter
    private void setAdditionalProperties(String name, Object value) {
        additionalProperties.setAdditionalProperty(name,
                ConversionHelper.convertToSimpleType(value,
                        x -> x),
                true);
    }

    /**
     * Getter for the value of additional properties based on provided property name.
     * @param name The name of the additional property.
     * @return Either the Object property value or null if not exist.
     */
    
    public Object getAdditionalProperty(String name) {
        return additionalProperties.getAdditionalProperty(name);
    }

    /**
     * Converts this ManagedAccountsAddRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ManagedAccountsAddRequest [" + "accountName=" + accountName + ", serviceName="
                + serviceName + ", type=" + type + ", managedAccList=" + managedAccList
                + ", additionalProperties=" + additionalProperties + "]";
    }

    /**
     * Builds a new {@link ManagedAccountsAddRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ManagedAccountsAddRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(accountName, serviceName, type, managedAccList);
        builder.additionalProperties = additionalProperties;
        return builder;
    }

    /**
     * Class to build instances of {@link ManagedAccountsAddRequest}.
     */
    public static class Builder {
        private String accountName;
        private ServiceName serviceName = ServiceName.LOCATION;
        private String type;
        private List<String> managedAccList;
        private AdditionalProperties<Object> additionalProperties =
                new AdditionalProperties<Object>();

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  accountName  String value for accountName.
         * @param  serviceName  ServiceName value for serviceName.
         * @param  type  String value for type.
         * @param  managedAccList  List of String value for managedAccList.
         */
        public Builder(String accountName, ServiceName serviceName, String type,
                List<String> managedAccList) {
            this.accountName = accountName;
            this.serviceName = serviceName;
            this.type = type;
            this.managedAccList = managedAccList;
        }

        /**
         * Setter for accountName.
         * @param  accountName  String value for accountName.
         * @return Builder
         */
        public Builder accountName(String accountName) {
            this.accountName = accountName;
            return this;
        }

        /**
         * Setter for serviceName.
         * @param  serviceName  ServiceName value for serviceName.
         * @return Builder
         */
        public Builder serviceName(ServiceName serviceName) {
            this.serviceName = serviceName;
            return this;
        }

        /**
         * Setter for type.
         * @param  type  String value for type.
         * @return Builder
         */
        public Builder type(String type) {
            this.type = type;
            return this;
        }

        /**
         * Setter for managedAccList.
         * @param  managedAccList  List of String value for managedAccList.
         * @return Builder
         */
        public Builder managedAccList(List<String> managedAccList) {
            this.managedAccList = managedAccList;
            return this;
        }

        /**
         * Setter for additional property that are not in model fields.
         * @param name The name of the additional property.
         * @param value The Object value of the additional property.
         * @return Builder.
         */
        public Builder additionalProperty(String name, Object value) {
            this.additionalProperties.setAdditionalProperty(name, value);
            return this;
        }

        /**
         * Builds a new {@link ManagedAccountsAddRequest} object using the set fields.
         * @return {@link ManagedAccountsAddRequest}
         */
        public ManagedAccountsAddRequest build() {
            ManagedAccountsAddRequest model =
                    new ManagedAccountsAddRequest(accountName, serviceName, type, managedAccList);
            model.additionalProperties = additionalProperties;
            return model;
        }
    }
}
