/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.verizon.m5gedge.DateTimeHelper;
import io.apimatic.core.types.AdditionalProperties;
import io.apimatic.core.utilities.ConversionHelper;
import java.time.LocalDate;
import java.util.List;
import java.util.Map;

/**
 * This is a model class for V3ChangeCampaignDatesRequest type.
 */
public class V3ChangeCampaignDatesRequest {
    private LocalDate startDate;
    private LocalDate endDate;
    private List<V3TimeWindow> campaignTimeWindowList;
    private AdditionalProperties<Object> additionalProperties = 
            new AdditionalProperties<Object>(this.getClass());

    /**
     * Default constructor.
     */
    public V3ChangeCampaignDatesRequest() {
    }

    /**
     * Initialization constructor.
     * @param  startDate  LocalDate value for startDate.
     * @param  endDate  LocalDate value for endDate.
     * @param  campaignTimeWindowList  List of V3TimeWindow value for campaignTimeWindowList.
     */
    public V3ChangeCampaignDatesRequest(
            LocalDate startDate,
            LocalDate endDate,
            List<V3TimeWindow> campaignTimeWindowList) {
        this.startDate = startDate;
        this.endDate = endDate;
        this.campaignTimeWindowList = campaignTimeWindowList;
    }

    /**
     * Getter for StartDate.
     * Campaign start date.
     * @return Returns the LocalDate
     */
    @JsonGetter("startDate")
    @JsonSerialize(using = DateTimeHelper.SimpleDateSerializer.class)
    public LocalDate getStartDate() {
        return startDate;
    }

    /**
     * Setter for StartDate.
     * Campaign start date.
     * @param startDate Value for LocalDate
     */
    @JsonSetter("startDate")
    @JsonDeserialize(using = DateTimeHelper.SimpleDateDeserializer.class)
    public void setStartDate(LocalDate startDate) {
        this.startDate = startDate;
    }

    /**
     * Getter for EndDate.
     * Campaign end date.
     * @return Returns the LocalDate
     */
    @JsonGetter("endDate")
    @JsonSerialize(using = DateTimeHelper.SimpleDateSerializer.class)
    public LocalDate getEndDate() {
        return endDate;
    }

    /**
     * Setter for EndDate.
     * Campaign end date.
     * @param endDate Value for LocalDate
     */
    @JsonSetter("endDate")
    @JsonDeserialize(using = DateTimeHelper.SimpleDateDeserializer.class)
    public void setEndDate(LocalDate endDate) {
        this.endDate = endDate;
    }

    /**
     * Getter for CampaignTimeWindowList.
     * List of allowed campaign time windows.
     * @return Returns the List of V3TimeWindow
     */
    @JsonGetter("campaignTimeWindowList")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<V3TimeWindow> getCampaignTimeWindowList() {
        return campaignTimeWindowList;
    }

    /**
     * Setter for CampaignTimeWindowList.
     * List of allowed campaign time windows.
     * @param campaignTimeWindowList Value for List of V3TimeWindow
     */
    @JsonSetter("campaignTimeWindowList")
    public void setCampaignTimeWindowList(List<V3TimeWindow> campaignTimeWindowList) {
        this.campaignTimeWindowList = campaignTimeWindowList;
    }

    /**
     * Hidden method for the serialization of additional properties.
     * @return The map of additionally set properties.
     */
    @JsonAnyGetter
    private Map<String, Object> getAdditionalProperties() {
        return additionalProperties.getAdditionalProperties();
    }

    /**
     * Hidden method for the de-serialization of additional properties.
     * @param name The name of the additional property.
     * @param value The Object value of the additional property.
     */
    @JsonAnySetter
    private void setAdditionalProperties(String name, Object value) {
        additionalProperties.setAdditionalProperty(name,
                ConversionHelper.convertToSimpleType(value,
                        x -> x),
                true);
    }

    /**
     * Getter for the value of additional properties based on provided property name.
     * @param name The name of the additional property.
     * @return Either the Object property value or null if not exist.
     */
    
    public Object getAdditionalProperty(String name) {
        return additionalProperties.getAdditionalProperty(name);
    }

    /**
     * Converts this V3ChangeCampaignDatesRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "V3ChangeCampaignDatesRequest [" + "startDate=" + startDate + ", endDate=" + endDate
                + ", campaignTimeWindowList=" + campaignTimeWindowList + ", additionalProperties="
                + additionalProperties + "]";
    }

    /**
     * Builds a new {@link V3ChangeCampaignDatesRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link V3ChangeCampaignDatesRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(startDate, endDate)
                .campaignTimeWindowList(getCampaignTimeWindowList());
        builder.additionalProperties = additionalProperties;
        return builder;
    }

    /**
     * Class to build instances of {@link V3ChangeCampaignDatesRequest}.
     */
    public static class Builder {
        private LocalDate startDate;
        private LocalDate endDate;
        private List<V3TimeWindow> campaignTimeWindowList;
        private AdditionalProperties<Object> additionalProperties =
                new AdditionalProperties<Object>();

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  startDate  LocalDate value for startDate.
         * @param  endDate  LocalDate value for endDate.
         */
        public Builder(LocalDate startDate, LocalDate endDate) {
            this.startDate = startDate;
            this.endDate = endDate;
        }

        /**
         * Setter for startDate.
         * @param  startDate  LocalDate value for startDate.
         * @return Builder
         */
        public Builder startDate(LocalDate startDate) {
            this.startDate = startDate;
            return this;
        }

        /**
         * Setter for endDate.
         * @param  endDate  LocalDate value for endDate.
         * @return Builder
         */
        public Builder endDate(LocalDate endDate) {
            this.endDate = endDate;
            return this;
        }

        /**
         * Setter for campaignTimeWindowList.
         * @param  campaignTimeWindowList  List of V3TimeWindow value for campaignTimeWindowList.
         * @return Builder
         */
        public Builder campaignTimeWindowList(List<V3TimeWindow> campaignTimeWindowList) {
            this.campaignTimeWindowList = campaignTimeWindowList;
            return this;
        }

        /**
         * Setter for additional property that are not in model fields.
         * @param name The name of the additional property.
         * @param value The Object value of the additional property.
         * @return Builder.
         */
        public Builder additionalProperty(String name, Object value) {
            this.additionalProperties.setAdditionalProperty(name, value);
            return this;
        }

        /**
         * Builds a new {@link V3ChangeCampaignDatesRequest} object using the set fields.
         * @return {@link V3ChangeCampaignDatesRequest}
         */
        public V3ChangeCampaignDatesRequest build() {
            V3ChangeCampaignDatesRequest model =
                    new V3ChangeCampaignDatesRequest(startDate, endDate, campaignTimeWindowList);
            model.additionalProperties = additionalProperties;
            return model;
        }
    }
}
