/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models.containers;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.verizon.m5gedge.ApiHelper;
import com.verizon.m5gedge.models.AnomalyTriggerValue;
import com.verizon.m5gedge.models.TriggerType2;
import io.apimatic.core.annotations.TypeCombinator.TypeCombinatorCase;
import java.io.IOException;
import java.util.Arrays;

/**
 * This is a container class for any-of types.
 */
@JsonDeserialize(using = TriggersListOptions.TriggersListOptionsDeserializer.class)
public abstract class TriggersListOptions {
    
    /**
     * This is AnomalyTriggerValue case.
     * @param anomalyTriggerValue AnomalyTriggerValue value for anomalyTriggerValue.
     * @return The AnomalyTriggerValueCase object.
     */
    public static TriggersListOptions fromAnomalyTriggerValue(
            AnomalyTriggerValue anomalyTriggerValue) {
        return anomalyTriggerValue == null ? null : new AnomalyTriggerValueCase(anomalyTriggerValue);
    }

    /**
     * This is TriggerType2 case.
     * @param triggerType2 TriggerType2 value for triggerType2.
     * @return The TriggerType2Case object.
     */
    public static TriggersListOptions fromTriggerType2(TriggerType2 triggerType2) {
        return triggerType2 == null ? null : new TriggerType2Case(triggerType2);
    }

    /**
     * Method to match from the provided any-of cases.
     * @param <R> The type to return after applying callback.
     * @param cases The any-of type cases callback.
     * @return The any-of matched case.
     */
    public abstract <R> R match(Cases<R> cases);

    /**
     * This is interface for any-of cases.
     * @param <R> The type to return after applying callback.
     */
    public interface Cases<R> {
        R anomalyTriggerValue(AnomalyTriggerValue anomalyTriggerValue);

        R triggerType2(TriggerType2 triggerType2);
    }

    /**
     * This is a implementation class for AnomalyTriggerValueCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "AnomalyTriggerValue")
    private static class AnomalyTriggerValueCase extends TriggersListOptions {

        @JsonValue
        private AnomalyTriggerValue anomalyTriggerValue;

        AnomalyTriggerValueCase(AnomalyTriggerValue anomalyTriggerValue) {
            this.anomalyTriggerValue = anomalyTriggerValue;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.anomalyTriggerValue(this.anomalyTriggerValue);
        }

        @JsonCreator
        private AnomalyTriggerValueCase(JsonNode jsonNode) throws IOException {
            this.anomalyTriggerValue = ApiHelper.deserialize(jsonNode,
                AnomalyTriggerValue.class);
        }

        @Override
        public String toString() {
            return anomalyTriggerValue.toString();
        }
    }

    /**
     * This is a implementation class for TriggerType2Case.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "TriggerType2")
    private static class TriggerType2Case extends TriggersListOptions {

        @JsonValue
        private TriggerType2 triggerType2;

        TriggerType2Case(TriggerType2 triggerType2) {
            this.triggerType2 = triggerType2;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.triggerType2(this.triggerType2);
        }

        @JsonCreator
        private TriggerType2Case(JsonNode jsonNode) throws IOException {
            this.triggerType2 = ApiHelper.deserialize(jsonNode,
                TriggerType2.class);
        }

        @Override
        public String toString() {
            return triggerType2.toString();
        }
    }

    /**
     * This is a custom deserializer class for TriggersListOptions.
     */
    protected static class TriggersListOptionsDeserializer
            extends JsonDeserializer<TriggersListOptions> {

        @Override
        public TriggersListOptions deserialize(JsonParser jp, DeserializationContext ctxt)
                throws IOException, JsonProcessingException {
            ObjectCodec oc = jp.getCodec();
            JsonNode node = oc.readTree(jp);
            return ApiHelper.deserialize(node, Arrays.asList(AnomalyTriggerValueCase.class,
                    TriggerType2Case.class), false);
        }
    }

}
