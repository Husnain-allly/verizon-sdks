/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.verizon.m5gedge.DateTimeHelper;
import java.time.LocalDateTime;

/**
 * This is a model class for UserSmartAlert type.
 */
public class UserSmartAlert {
    private String accountclientid;
    private String billingaccountid;
    private String category;
    private Integer condition;
    private LocalDateTime createdon;
    private String description;
    private String deviceid;
    private String foreignid;
    private String id;
    private Boolean isacknowledged;
    private Boolean iscleared;
    private Boolean isdisabled;
    private LocalDateTime lastupdated;
    private String name;
    private String ruleid;
    private String severity;
    private String state;
    private String template;
    private String version;
    private String versionid;

    /**
     * Default constructor.
     */
    public UserSmartAlert() {
    }

    /**
     * Initialization constructor.
     * @param  createdon  LocalDateTime value for createdon.
     * @param  lastupdated  LocalDateTime value for lastupdated.
     * @param  versionid  String value for versionid.
     * @param  accountclientid  String value for accountclientid.
     * @param  billingaccountid  String value for billingaccountid.
     * @param  category  String value for category.
     * @param  condition  Integer value for condition.
     * @param  description  String value for description.
     * @param  deviceid  String value for deviceid.
     * @param  foreignid  String value for foreignid.
     * @param  id  String value for id.
     * @param  isacknowledged  Boolean value for isacknowledged.
     * @param  iscleared  Boolean value for iscleared.
     * @param  isdisabled  Boolean value for isdisabled.
     * @param  name  String value for name.
     * @param  ruleid  String value for ruleid.
     * @param  severity  String value for severity.
     * @param  state  String value for state.
     * @param  template  String value for template.
     * @param  version  String value for version.
     */
    public UserSmartAlert(
            LocalDateTime createdon,
            LocalDateTime lastupdated,
            String versionid,
            String accountclientid,
            String billingaccountid,
            String category,
            Integer condition,
            String description,
            String deviceid,
            String foreignid,
            String id,
            Boolean isacknowledged,
            Boolean iscleared,
            Boolean isdisabled,
            String name,
            String ruleid,
            String severity,
            String state,
            String template,
            String version) {
        this.accountclientid = accountclientid;
        this.billingaccountid = billingaccountid;
        this.category = category;
        this.condition = condition;
        this.createdon = createdon;
        this.description = description;
        this.deviceid = deviceid;
        this.foreignid = foreignid;
        this.id = id;
        this.isacknowledged = isacknowledged;
        this.iscleared = iscleared;
        this.isdisabled = isdisabled;
        this.lastupdated = lastupdated;
        this.name = name;
        this.ruleid = ruleid;
        this.severity = severity;
        this.state = state;
        this.template = template;
        this.version = version;
        this.versionid = versionid;
    }

    /**
     * Getter for Accountclientid.
     * Not used in this release, future functionality
     * @return Returns the String
     */
    @JsonGetter("accountclientid")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAccountclientid() {
        return accountclientid;
    }

    /**
     * Setter for Accountclientid.
     * Not used in this release, future functionality
     * @param accountclientid Value for String
     */
    @JsonSetter("accountclientid")
    public void setAccountclientid(String accountclientid) {
        this.accountclientid = accountclientid;
    }

    /**
     * Getter for Billingaccountid.
     * The billing account ID. This is the same value as the Account ID
     * @return Returns the String
     */
    @JsonGetter("billingaccountid")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getBillingaccountid() {
        return billingaccountid;
    }

    /**
     * Setter for Billingaccountid.
     * The billing account ID. This is the same value as the Account ID
     * @param billingaccountid Value for String
     */
    @JsonSetter("billingaccountid")
    public void setBillingaccountid(String billingaccountid) {
        this.billingaccountid = billingaccountid;
    }

    /**
     * Getter for Category.
     * The type of alert and will be either `telemetry` or `infrastructure`
     * @return Returns the String
     */
    @JsonGetter("category")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCategory() {
        return category;
    }

    /**
     * Setter for Category.
     * The type of alert and will be either `telemetry` or `infrastructure`
     * @param category Value for String
     */
    @JsonSetter("category")
    public void setCategory(String category) {
        this.category = category;
    }

    /**
     * Getter for Condition.
     * The condition or threshold for an alert
     * @return Returns the Integer
     */
    @JsonGetter("condition")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getCondition() {
        return condition;
    }

    /**
     * Setter for Condition.
     * The condition or threshold for an alert
     * @param condition Value for Integer
     */
    @JsonSetter("condition")
    public void setCondition(Integer condition) {
        this.condition = condition;
    }

    /**
     * Getter for Createdon.
     * Timestamp of the record
     * @return Returns the LocalDateTime
     */
    @JsonGetter("createdon")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getCreatedon() {
        return createdon;
    }

    /**
     * Setter for Createdon.
     * Timestamp of the record
     * @param createdon Value for LocalDateTime
     */
    @JsonSetter("createdon")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCreatedon(LocalDateTime createdon) {
        this.createdon = createdon;
    }

    /**
     * Getter for Description.
     * a short description
     * @return Returns the String
     */
    @JsonGetter("description")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDescription() {
        return description;
    }

    /**
     * Setter for Description.
     * a short description
     * @param description Value for String
     */
    @JsonSetter("description")
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for Deviceid.
     * This is a UUID value of the device created when the device is onboarded
     * @return Returns the String
     */
    @JsonGetter("deviceid")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDeviceid() {
        return deviceid;
    }

    /**
     * Setter for Deviceid.
     * This is a UUID value of the device created when the device is onboarded
     * @param deviceid Value for String
     */
    @JsonSetter("deviceid")
    public void setDeviceid(String deviceid) {
        this.deviceid = deviceid;
    }

    /**
     * Getter for Foreignid.
     * UUID of the ECPD account the user belongs to
     * @return Returns the String
     */
    @JsonGetter("foreignid")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getForeignid() {
        return foreignid;
    }

    /**
     * Setter for Foreignid.
     * UUID of the ECPD account the user belongs to
     * @param foreignid Value for String
     */
    @JsonSetter("foreignid")
    public void setForeignid(String foreignid) {
        this.foreignid = foreignid;
    }

    /**
     * Getter for Id.
     * UUID of the user record, assigned at creation
     * @return Returns the String
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getId() {
        return id;
    }

    /**
     * Setter for Id.
     * UUID of the user record, assigned at creation
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for Isacknowledged.
     * A flag that indicates if the alarm has been acknowledged
     * @return Returns the Boolean
     */
    @JsonGetter("isacknowledged")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getIsacknowledged() {
        return isacknowledged;
    }

    /**
     * Setter for Isacknowledged.
     * A flag that indicates if the alarm has been acknowledged
     * @param isacknowledged Value for Boolean
     */
    @JsonSetter("isacknowledged")
    public void setIsacknowledged(Boolean isacknowledged) {
        this.isacknowledged = isacknowledged;
    }

    /**
     * Getter for Iscleared.
     * A flag that indicates if the alarm has been cleared
     * @return Returns the Boolean
     */
    @JsonGetter("iscleared")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getIscleared() {
        return iscleared;
    }

    /**
     * Setter for Iscleared.
     * A flag that indicates if the alarm has been cleared
     * @param iscleared Value for Boolean
     */
    @JsonSetter("iscleared")
    public void setIscleared(Boolean iscleared) {
        this.iscleared = iscleared;
    }

    /**
     * Getter for Isdisabled.
     * A flag that indicates if the alarm has been disabled
     * @return Returns the Boolean
     */
    @JsonGetter("isdisabled")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getIsdisabled() {
        return isdisabled;
    }

    /**
     * Setter for Isdisabled.
     * A flag that indicates if the alarm has been disabled
     * @param isdisabled Value for Boolean
     */
    @JsonSetter("isdisabled")
    public void setIsdisabled(Boolean isdisabled) {
        this.isdisabled = isdisabled;
    }

    /**
     * Getter for Lastupdated.
     * Timestamp of the record
     * @return Returns the LocalDateTime
     */
    @JsonGetter("lastupdated")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getLastupdated() {
        return lastupdated;
    }

    /**
     * Setter for Lastupdated.
     * Timestamp of the record
     * @param lastupdated Value for LocalDateTime
     */
    @JsonSetter("lastupdated")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setLastupdated(LocalDateTime lastupdated) {
        this.lastupdated = lastupdated;
    }

    /**
     * Getter for Name.
     * User defined name of the record
     * @return Returns the String
     */
    @JsonGetter("name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * User defined name of the record
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for Ruleid.
     * The UUID of a rule for alerts
     * @return Returns the String
     */
    @JsonGetter("ruleid")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getRuleid() {
        return ruleid;
    }

    /**
     * Setter for Ruleid.
     * The UUID of a rule for alerts
     * @param ruleid Value for String
     */
    @JsonSetter("ruleid")
    public void setRuleid(String ruleid) {
        this.ruleid = ruleid;
    }

    /**
     * Getter for Severity.
     * The threshold value to trigger an alert and will be Critical, Major or Minor
     * @return Returns the String
     */
    @JsonGetter("severity")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSeverity() {
        return severity;
    }

    /**
     * Setter for Severity.
     * The threshold value to trigger an alert and will be Critical, Major or Minor
     * @param severity Value for String
     */
    @JsonSetter("severity")
    public void setSeverity(String severity) {
        this.severity = severity;
    }

    /**
     * Getter for State.
     * The current status of the device or transaction and will be `success` or `failed`
     * @return Returns the String
     */
    @JsonGetter("state")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getState() {
        return state;
    }

    /**
     * Setter for State.
     * The current status of the device or transaction and will be `success` or `failed`
     * @param state Value for String
     */
    @JsonSetter("state")
    public void setState(String state) {
        this.state = state;
    }

    /**
     * Getter for Template.
     * template of the rule which triggered a given alert
     * @return Returns the String
     */
    @JsonGetter("template")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getTemplate() {
        return template;
    }

    /**
     * Setter for Template.
     * template of the rule which triggered a given alert
     * @param template Value for String
     */
    @JsonSetter("template")
    public void setTemplate(String template) {
        this.template = template;
    }

    /**
     * Getter for Version.
     * The resource version
     * @return Returns the String
     */
    @JsonGetter("version")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getVersion() {
        return version;
    }

    /**
     * Setter for Version.
     * The resource version
     * @param version Value for String
     */
    @JsonSetter("version")
    public void setVersion(String version) {
        this.version = version;
    }

    /**
     * Getter for Versionid.
     * The UUID of the resource version
     * @return Returns the String
     */
    @JsonGetter("versionid")
    public String getVersionid() {
        return versionid;
    }

    /**
     * Setter for Versionid.
     * The UUID of the resource version
     * @param versionid Value for String
     */
    @JsonSetter("versionid")
    public void setVersionid(String versionid) {
        this.versionid = versionid;
    }

    /**
     * Converts this UserSmartAlert into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "UserSmartAlert [" + "createdon=" + createdon + ", lastupdated=" + lastupdated
                + ", versionid=" + versionid + ", accountclientid=" + accountclientid
                + ", billingaccountid=" + billingaccountid + ", category=" + category
                + ", condition=" + condition + ", description=" + description + ", deviceid="
                + deviceid + ", foreignid=" + foreignid + ", id=" + id + ", isacknowledged="
                + isacknowledged + ", iscleared=" + iscleared + ", isdisabled=" + isdisabled
                + ", name=" + name + ", ruleid=" + ruleid + ", severity=" + severity + ", state="
                + state + ", template=" + template + ", version=" + version + "]";
    }

    /**
     * Builds a new {@link UserSmartAlert.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link UserSmartAlert.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(createdon, lastupdated, versionid)
                .accountclientid(getAccountclientid())
                .billingaccountid(getBillingaccountid())
                .category(getCategory())
                .condition(getCondition())
                .description(getDescription())
                .deviceid(getDeviceid())
                .foreignid(getForeignid())
                .id(getId())
                .isacknowledged(getIsacknowledged())
                .iscleared(getIscleared())
                .isdisabled(getIsdisabled())
                .name(getName())
                .ruleid(getRuleid())
                .severity(getSeverity())
                .state(getState())
                .template(getTemplate())
                .version(getVersion());
        return builder;
    }

    /**
     * Class to build instances of {@link UserSmartAlert}.
     */
    public static class Builder {
        private LocalDateTime createdon;
        private LocalDateTime lastupdated;
        private String versionid;
        private String accountclientid;
        private String billingaccountid;
        private String category;
        private Integer condition;
        private String description;
        private String deviceid;
        private String foreignid;
        private String id;
        private Boolean isacknowledged;
        private Boolean iscleared;
        private Boolean isdisabled;
        private String name;
        private String ruleid;
        private String severity;
        private String state;
        private String template;
        private String version;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  createdon  LocalDateTime value for createdon.
         * @param  lastupdated  LocalDateTime value for lastupdated.
         * @param  versionid  String value for versionid.
         */
        public Builder(LocalDateTime createdon, LocalDateTime lastupdated, String versionid) {
            this.createdon = createdon;
            this.lastupdated = lastupdated;
            this.versionid = versionid;
        }

        /**
         * Setter for createdon.
         * @param  createdon  LocalDateTime value for createdon.
         * @return Builder
         */
        public Builder createdon(LocalDateTime createdon) {
            this.createdon = createdon;
            return this;
        }

        /**
         * Setter for lastupdated.
         * @param  lastupdated  LocalDateTime value for lastupdated.
         * @return Builder
         */
        public Builder lastupdated(LocalDateTime lastupdated) {
            this.lastupdated = lastupdated;
            return this;
        }

        /**
         * Setter for versionid.
         * @param  versionid  String value for versionid.
         * @return Builder
         */
        public Builder versionid(String versionid) {
            this.versionid = versionid;
            return this;
        }

        /**
         * Setter for accountclientid.
         * @param  accountclientid  String value for accountclientid.
         * @return Builder
         */
        public Builder accountclientid(String accountclientid) {
            this.accountclientid = accountclientid;
            return this;
        }

        /**
         * Setter for billingaccountid.
         * @param  billingaccountid  String value for billingaccountid.
         * @return Builder
         */
        public Builder billingaccountid(String billingaccountid) {
            this.billingaccountid = billingaccountid;
            return this;
        }

        /**
         * Setter for category.
         * @param  category  String value for category.
         * @return Builder
         */
        public Builder category(String category) {
            this.category = category;
            return this;
        }

        /**
         * Setter for condition.
         * @param  condition  Integer value for condition.
         * @return Builder
         */
        public Builder condition(Integer condition) {
            this.condition = condition;
            return this;
        }

        /**
         * Setter for description.
         * @param  description  String value for description.
         * @return Builder
         */
        public Builder description(String description) {
            this.description = description;
            return this;
        }

        /**
         * Setter for deviceid.
         * @param  deviceid  String value for deviceid.
         * @return Builder
         */
        public Builder deviceid(String deviceid) {
            this.deviceid = deviceid;
            return this;
        }

        /**
         * Setter for foreignid.
         * @param  foreignid  String value for foreignid.
         * @return Builder
         */
        public Builder foreignid(String foreignid) {
            this.foreignid = foreignid;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for isacknowledged.
         * @param  isacknowledged  Boolean value for isacknowledged.
         * @return Builder
         */
        public Builder isacknowledged(Boolean isacknowledged) {
            this.isacknowledged = isacknowledged;
            return this;
        }

        /**
         * Setter for iscleared.
         * @param  iscleared  Boolean value for iscleared.
         * @return Builder
         */
        public Builder iscleared(Boolean iscleared) {
            this.iscleared = iscleared;
            return this;
        }

        /**
         * Setter for isdisabled.
         * @param  isdisabled  Boolean value for isdisabled.
         * @return Builder
         */
        public Builder isdisabled(Boolean isdisabled) {
            this.isdisabled = isdisabled;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for ruleid.
         * @param  ruleid  String value for ruleid.
         * @return Builder
         */
        public Builder ruleid(String ruleid) {
            this.ruleid = ruleid;
            return this;
        }

        /**
         * Setter for severity.
         * @param  severity  String value for severity.
         * @return Builder
         */
        public Builder severity(String severity) {
            this.severity = severity;
            return this;
        }

        /**
         * Setter for state.
         * @param  state  String value for state.
         * @return Builder
         */
        public Builder state(String state) {
            this.state = state;
            return this;
        }

        /**
         * Setter for template.
         * @param  template  String value for template.
         * @return Builder
         */
        public Builder template(String template) {
            this.template = template;
            return this;
        }

        /**
         * Setter for version.
         * @param  version  String value for version.
         * @return Builder
         */
        public Builder version(String version) {
            this.version = version;
            return this;
        }

        /**
         * Builds a new {@link UserSmartAlert} object using the set fields.
         * @return {@link UserSmartAlert}
         */
        public UserSmartAlert build() {
            return new UserSmartAlert(createdon, lastupdated, versionid, accountclientid,
                    billingaccountid, category, condition, description, deviceid, foreignid, id,
                    isacknowledged, iscleared, isdisabled, name, ruleid, severity, state, template,
                    version);
        }
    }
}
