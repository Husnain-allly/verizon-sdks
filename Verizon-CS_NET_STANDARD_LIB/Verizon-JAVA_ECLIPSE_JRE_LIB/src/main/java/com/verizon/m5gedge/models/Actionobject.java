/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.AdditionalProperties;
import io.apimatic.core.utilities.ConversionHelper;
import java.util.Map;

/**
 * This is a model class for Actionobject type.
 */
public class Actionobject {
    private Boolean suspend;
    private Suspenddetailsobject suspendDetails;
    private Boolean changePlan;
    private ChangePlanDetails changePlanDetails;
    private AdditionalProperties<Object> additionalProperties = 
            new AdditionalProperties<Object>(this.getClass());

    /**
     * Default constructor.
     */
    public Actionobject() {
    }

    /**
     * Initialization constructor.
     * @param  suspend  Boolean value for suspend.
     * @param  suspendDetails  Suspenddetailsobject value for suspendDetails.
     * @param  changePlan  Boolean value for changePlan.
     * @param  changePlanDetails  ChangePlanDetails value for changePlanDetails.
     */
    public Actionobject(
            Boolean suspend,
            Suspenddetailsobject suspendDetails,
            Boolean changePlan,
            ChangePlanDetails changePlanDetails) {
        this.suspend = suspend;
        this.suspendDetails = suspendDetails;
        this.changePlan = changePlan;
        this.changePlanDetails = changePlanDetails;
    }

    /**
     * Getter for Suspend.
     * @return Returns the Boolean
     */
    @JsonGetter("suspend")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getSuspend() {
        return suspend;
    }

    /**
     * Setter for Suspend.
     * @param suspend Value for Boolean
     */
    @JsonSetter("suspend")
    public void setSuspend(Boolean suspend) {
        this.suspend = suspend;
    }

    /**
     * Getter for SuspendDetails.
     * @return Returns the Suspenddetailsobject
     */
    @JsonGetter("suspendDetails")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Suspenddetailsobject getSuspendDetails() {
        return suspendDetails;
    }

    /**
     * Setter for SuspendDetails.
     * @param suspendDetails Value for Suspenddetailsobject
     */
    @JsonSetter("suspendDetails")
    public void setSuspendDetails(Suspenddetailsobject suspendDetails) {
        this.suspendDetails = suspendDetails;
    }

    /**
     * Getter for ChangePlan.
     * a flag to set if the trigger changes service plans, true, or not, false
     * @return Returns the Boolean
     */
    @JsonGetter("changePlan")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getChangePlan() {
        return changePlan;
    }

    /**
     * Setter for ChangePlan.
     * a flag to set if the trigger changes service plans, true, or not, false
     * @param changePlan Value for Boolean
     */
    @JsonSetter("changePlan")
    public void setChangePlan(Boolean changePlan) {
        this.changePlan = changePlan;
    }

    /**
     * Getter for ChangePlanDetails.
     * The service plan code to switch to
     * @return Returns the ChangePlanDetails
     */
    @JsonGetter("changePlanDetails")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public ChangePlanDetails getChangePlanDetails() {
        return changePlanDetails;
    }

    /**
     * Setter for ChangePlanDetails.
     * The service plan code to switch to
     * @param changePlanDetails Value for ChangePlanDetails
     */
    @JsonSetter("changePlanDetails")
    public void setChangePlanDetails(ChangePlanDetails changePlanDetails) {
        this.changePlanDetails = changePlanDetails;
    }

    /**
     * Hidden method for the serialization of additional properties.
     * @return The map of additionally set properties.
     */
    @JsonAnyGetter
    private Map<String, Object> getAdditionalProperties() {
        return additionalProperties.getAdditionalProperties();
    }

    /**
     * Hidden method for the de-serialization of additional properties.
     * @param name The name of the additional property.
     * @param value The Object value of the additional property.
     */
    @JsonAnySetter
    private void setAdditionalProperties(String name, Object value) {
        additionalProperties.setAdditionalProperty(name,
                ConversionHelper.convertToSimpleType(value,
                        x -> x),
                true);
    }

    /**
     * Getter for the value of additional properties based on provided property name.
     * @param name The name of the additional property.
     * @return Either the Object property value or null if not exist.
     */
    
    public Object getAdditionalProperty(String name) {
        return additionalProperties.getAdditionalProperty(name);
    }

    /**
     * Converts this Actionobject into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Actionobject [" + "suspend=" + suspend + ", suspendDetails=" + suspendDetails
                + ", changePlan=" + changePlan + ", changePlanDetails=" + changePlanDetails
                + ", additionalProperties=" + additionalProperties + "]";
    }

    /**
     * Builds a new {@link Actionobject.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Actionobject.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .suspend(getSuspend())
                .suspendDetails(getSuspendDetails())
                .changePlan(getChangePlan())
                .changePlanDetails(getChangePlanDetails());
        builder.additionalProperties = additionalProperties;
        return builder;
    }

    /**
     * Class to build instances of {@link Actionobject}.
     */
    public static class Builder {
        private Boolean suspend;
        private Suspenddetailsobject suspendDetails;
        private Boolean changePlan;
        private ChangePlanDetails changePlanDetails;
        private AdditionalProperties<Object> additionalProperties =
                new AdditionalProperties<Object>();



        /**
         * Setter for suspend.
         * @param  suspend  Boolean value for suspend.
         * @return Builder
         */
        public Builder suspend(Boolean suspend) {
            this.suspend = suspend;
            return this;
        }

        /**
         * Setter for suspendDetails.
         * @param  suspendDetails  Suspenddetailsobject value for suspendDetails.
         * @return Builder
         */
        public Builder suspendDetails(Suspenddetailsobject suspendDetails) {
            this.suspendDetails = suspendDetails;
            return this;
        }

        /**
         * Setter for changePlan.
         * @param  changePlan  Boolean value for changePlan.
         * @return Builder
         */
        public Builder changePlan(Boolean changePlan) {
            this.changePlan = changePlan;
            return this;
        }

        /**
         * Setter for changePlanDetails.
         * @param  changePlanDetails  ChangePlanDetails value for changePlanDetails.
         * @return Builder
         */
        public Builder changePlanDetails(ChangePlanDetails changePlanDetails) {
            this.changePlanDetails = changePlanDetails;
            return this;
        }

        /**
         * Setter for additional property that are not in model fields.
         * @param name The name of the additional property.
         * @param value The Object value of the additional property.
         * @return Builder.
         */
        public Builder additionalProperty(String name, Object value) {
            this.additionalProperties.setAdditionalProperty(name, value);
            return this;
        }

        /**
         * Builds a new {@link Actionobject} object using the set fields.
         * @return {@link Actionobject}
         */
        public Actionobject build() {
            Actionobject model =
                    new Actionobject(suspend, suspendDetails, changePlan, changePlanDetails);
            model.additionalProperties = additionalProperties;
            return model;
        }
    }
}
