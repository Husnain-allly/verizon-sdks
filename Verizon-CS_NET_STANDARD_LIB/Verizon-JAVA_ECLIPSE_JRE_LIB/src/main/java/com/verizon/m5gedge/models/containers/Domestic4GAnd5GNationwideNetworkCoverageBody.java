/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models.containers;

import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.core.JsonParser;
import com.fasterxml.jackson.core.JsonProcessingException;
import com.fasterxml.jackson.core.ObjectCodec;
import com.fasterxml.jackson.databind.DeserializationContext;
import com.fasterxml.jackson.databind.JsonDeserializer;
import com.fasterxml.jackson.databind.JsonNode;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.verizon.m5gedge.ApiHelper;
import com.verizon.m5gedge.models.GetWirelessCoverageRequest;
import com.verizon.m5gedge.models.GetWirelessCoverageRequestFwa;
import io.apimatic.core.annotations.TypeCombinator.TypeCombinatorCase;
import java.io.IOException;
import java.util.Arrays;

/**
 * This is a container class for any-of types.
 */
@JsonDeserialize(using = Domestic4GAnd5GNationwideNetworkCoverageBody.Domestic4GAnd5GNationwideNetworkCoverageBodyDeserializer.class)
public abstract class Domestic4GAnd5GNationwideNetworkCoverageBody {
    
    /**
     * This is GetWirelessCoverageRequest case.
     * @param getWirelessCoverageRequest GetWirelessCoverageRequest value for getWirelessCoverageRequest.
     * @return The GetWirelessCoverageRequestCase object.
     */
    public static Domestic4GAnd5GNationwideNetworkCoverageBody fromGetWirelessCoverageRequest(
            GetWirelessCoverageRequest getWirelessCoverageRequest) {
        return getWirelessCoverageRequest == null ? null : new GetWirelessCoverageRequestCase(getWirelessCoverageRequest);
    }

    /**
     * This is GetWirelessCoverageRequestFWA case.
     * @param getWirelessCoverageRequestFwa GetWirelessCoverageRequestFwa value for getWirelessCoverageRequestFwa.
     * @return The GetWirelessCoverageRequestFwaCase object.
     */
    public static Domestic4GAnd5GNationwideNetworkCoverageBody fromGetWirelessCoverageRequestFwa(
            GetWirelessCoverageRequestFwa getWirelessCoverageRequestFwa) {
        return getWirelessCoverageRequestFwa == null ? null : new GetWirelessCoverageRequestFwaCase(getWirelessCoverageRequestFwa);
    }

    /**
     * Method to match from the provided any-of cases.
     * @param <R> The type to return after applying callback.
     * @param cases The any-of type cases callback.
     * @return The any-of matched case.
     */
    public abstract <R> R match(Cases<R> cases);

    /**
     * This is interface for any-of cases.
     * @param <R> The type to return after applying callback.
     */
    public interface Cases<R> {
        R getWirelessCoverageRequest(GetWirelessCoverageRequest getWirelessCoverageRequest);

        R getWirelessCoverageRequestFwa(GetWirelessCoverageRequestFwa getWirelessCoverageRequestFwa);
    }

    /**
     * This is a implementation class for GetWirelessCoverageRequestCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "GetWirelessCoverageRequest")
    private static class GetWirelessCoverageRequestCase extends Domestic4GAnd5GNationwideNetworkCoverageBody {

        @JsonValue
        private GetWirelessCoverageRequest getWirelessCoverageRequest;

        GetWirelessCoverageRequestCase(GetWirelessCoverageRequest getWirelessCoverageRequest) {
            this.getWirelessCoverageRequest = getWirelessCoverageRequest;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.getWirelessCoverageRequest(this.getWirelessCoverageRequest);
        }

        @JsonCreator
        private GetWirelessCoverageRequestCase(JsonNode jsonNode) throws IOException {
            this.getWirelessCoverageRequest = ApiHelper.deserialize(jsonNode,
                GetWirelessCoverageRequest.class);
        }

        @Override
        public String toString() {
            return getWirelessCoverageRequest.toString();
        }
    }

    /**
     * This is a implementation class for GetWirelessCoverageRequestFwaCase.
     */
    @JsonDeserialize(using = JsonDeserializer.None.class)
    @TypeCombinatorCase(type = "GetWirelessCoverageRequestFwa")
    private static class GetWirelessCoverageRequestFwaCase extends Domestic4GAnd5GNationwideNetworkCoverageBody {

        @JsonValue
        private GetWirelessCoverageRequestFwa getWirelessCoverageRequestFwa;

        GetWirelessCoverageRequestFwaCase(GetWirelessCoverageRequestFwa getWirelessCoverageRequestFwa) {
            this.getWirelessCoverageRequestFwa = getWirelessCoverageRequestFwa;
        }

        @Override
        public <R> R match(Cases<R> cases) {
            return cases.getWirelessCoverageRequestFwa(this.getWirelessCoverageRequestFwa);
        }

        @JsonCreator
        private GetWirelessCoverageRequestFwaCase(JsonNode jsonNode) throws IOException {
            this.getWirelessCoverageRequestFwa = ApiHelper.deserialize(jsonNode,
                GetWirelessCoverageRequestFwa.class);
        }

        @Override
        public String toString() {
            return getWirelessCoverageRequestFwa.toString();
        }
    }

    /**
     * This is a custom deserializer class for Domestic4GAnd5GNationwideNetworkCoverageBody.
     */
    protected static class Domestic4GAnd5GNationwideNetworkCoverageBodyDeserializer
            extends JsonDeserializer<Domestic4GAnd5GNationwideNetworkCoverageBody> {

        @Override
        public Domestic4GAnd5GNationwideNetworkCoverageBody deserialize(JsonParser jp, DeserializationContext ctxt)
                throws IOException, JsonProcessingException {
            ObjectCodec oc = jp.getCodec();
            JsonNode node = oc.readTree(jp);
            return ApiHelper.deserialize(node, Arrays.asList(GetWirelessCoverageRequestCase.class,
                    GetWirelessCoverageRequestFwaCase.class), false);
        }
    }

}
