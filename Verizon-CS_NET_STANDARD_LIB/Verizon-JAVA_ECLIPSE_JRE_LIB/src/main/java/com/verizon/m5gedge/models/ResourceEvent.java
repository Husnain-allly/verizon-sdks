/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.verizon.m5gedge.DateTimeHelper;
import java.time.LocalDateTime;
import java.util.List;

/**
 * This is a model class for ResourceEvent type.
 */
public class ResourceEvent {
    private String accountclientid;
    private String callbackurl;
    private LocalDateTime createdon;
    private String description;
    private String deviceid;
    private String errmsg;
    private String fieldid;
    private DtoFields fields;
    private List<Integer> fieldvalue;
    private String foreignid;
    private String id;
    private LocalDateTime lastupdated;
    private String modelid;
    private String name;
    private Boolean sensordataaggregation;
    private String state;
    private String transactionid;
    private String version;
    private String versionid;

    /**
     * Default constructor.
     */
    public ResourceEvent() {
    }

    /**
     * Initialization constructor.
     * @param  createdon  LocalDateTime value for createdon.
     * @param  fieldid  String value for fieldid.
     * @param  foreignid  String value for foreignid.
     * @param  lastupdated  LocalDateTime value for lastupdated.
     * @param  state  String value for state.
     * @param  versionid  String value for versionid.
     * @param  accountclientid  String value for accountclientid.
     * @param  callbackurl  String value for callbackurl.
     * @param  description  String value for description.
     * @param  deviceid  String value for deviceid.
     * @param  errmsg  String value for errmsg.
     * @param  fields  DtoFields value for fields.
     * @param  fieldvalue  List of Integer value for fieldvalue.
     * @param  id  String value for id.
     * @param  modelid  String value for modelid.
     * @param  name  String value for name.
     * @param  sensordataaggregation  Boolean value for sensordataaggregation.
     * @param  transactionid  String value for transactionid.
     * @param  version  String value for version.
     */
    public ResourceEvent(
            LocalDateTime createdon,
            String fieldid,
            String foreignid,
            LocalDateTime lastupdated,
            String state,
            String versionid,
            String accountclientid,
            String callbackurl,
            String description,
            String deviceid,
            String errmsg,
            DtoFields fields,
            List<Integer> fieldvalue,
            String id,
            String modelid,
            String name,
            Boolean sensordataaggregation,
            String transactionid,
            String version) {
        this.accountclientid = accountclientid;
        this.callbackurl = callbackurl;
        this.createdon = createdon;
        this.description = description;
        this.deviceid = deviceid;
        this.errmsg = errmsg;
        this.fieldid = fieldid;
        this.fields = fields;
        this.fieldvalue = fieldvalue;
        this.foreignid = foreignid;
        this.id = id;
        this.lastupdated = lastupdated;
        this.modelid = modelid;
        this.name = name;
        this.sensordataaggregation = sensordataaggregation;
        this.state = state;
        this.transactionid = transactionid;
        this.version = version;
        this.versionid = versionid;
    }

    /**
     * Getter for Accountclientid.
     * Not used in this release, future functionality
     * @return Returns the String
     */
    @JsonGetter("accountclientid")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAccountclientid() {
        return accountclientid;
    }

    /**
     * Setter for Accountclientid.
     * Not used in this release, future functionality
     * @param accountclientid Value for String
     */
    @JsonSetter("accountclientid")
    public void setAccountclientid(String accountclientid) {
        this.accountclientid = accountclientid;
    }

    /**
     * Getter for Callbackurl.
     * The URL of the callback listener
     * @return Returns the String
     */
    @JsonGetter("callbackurl")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getCallbackurl() {
        return callbackurl;
    }

    /**
     * Setter for Callbackurl.
     * The URL of the callback listener
     * @param callbackurl Value for String
     */
    @JsonSetter("callbackurl")
    public void setCallbackurl(String callbackurl) {
        this.callbackurl = callbackurl;
    }

    /**
     * Getter for Createdon.
     * Timestamp of the record
     * @return Returns the LocalDateTime
     */
    @JsonGetter("createdon")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getCreatedon() {
        return createdon;
    }

    /**
     * Setter for Createdon.
     * Timestamp of the record
     * @param createdon Value for LocalDateTime
     */
    @JsonSetter("createdon")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCreatedon(LocalDateTime createdon) {
        this.createdon = createdon;
    }

    /**
     * Getter for Description.
     * a short description
     * @return Returns the String
     */
    @JsonGetter("description")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDescription() {
        return description;
    }

    /**
     * Setter for Description.
     * a short description
     * @param description Value for String
     */
    @JsonSetter("description")
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for Deviceid.
     * This is a UUID value of the device created when the device is onboarded
     * @return Returns the String
     */
    @JsonGetter("deviceid")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDeviceid() {
        return deviceid;
    }

    /**
     * Setter for Deviceid.
     * This is a UUID value of the device created when the device is onboarded
     * @param deviceid Value for String
     */
    @JsonSetter("deviceid")
    public void setDeviceid(String deviceid) {
        this.deviceid = deviceid;
    }

    /**
     * Getter for Errmsg.
     * Error message
     * @return Returns the String
     */
    @JsonGetter("errmsg")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getErrmsg() {
        return errmsg;
    }

    /**
     * Setter for Errmsg.
     * Error message
     * @param errmsg Value for String
     */
    @JsonSetter("errmsg")
    public void setErrmsg(String errmsg) {
        this.errmsg = errmsg;
    }

    /**
     * Getter for Fieldid.
     * @return Returns the String
     */
    @JsonGetter("fieldid")
    public String getFieldid() {
        return fieldid;
    }

    /**
     * Setter for Fieldid.
     * @param fieldid Value for String
     */
    @JsonSetter("fieldid")
    public void setFieldid(String fieldid) {
        this.fieldid = fieldid;
    }

    /**
     * Getter for Fields.
     * Fields to return needed by search
     * @return Returns the DtoFields
     */
    @JsonGetter("fields")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public DtoFields getFields() {
        return fields;
    }

    /**
     * Setter for Fields.
     * Fields to return needed by search
     * @param fields Value for DtoFields
     */
    @JsonSetter("fields")
    public void setFields(DtoFields fields) {
        this.fields = fields;
    }

    /**
     * Getter for Fieldvalue.
     * @return Returns the List of Integer
     */
    @JsonGetter("fieldvalue")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<Integer> getFieldvalue() {
        return fieldvalue;
    }

    /**
     * Setter for Fieldvalue.
     * @param fieldvalue Value for List of Integer
     */
    @JsonSetter("fieldvalue")
    public void setFieldvalue(List<Integer> fieldvalue) {
        this.fieldvalue = fieldvalue;
    }

    /**
     * Getter for Foreignid.
     * UUID of the ECPD account the user belongs to
     * @return Returns the String
     */
    @JsonGetter("foreignid")
    public String getForeignid() {
        return foreignid;
    }

    /**
     * Setter for Foreignid.
     * UUID of the ECPD account the user belongs to
     * @param foreignid Value for String
     */
    @JsonSetter("foreignid")
    public void setForeignid(String foreignid) {
        this.foreignid = foreignid;
    }

    /**
     * Getter for Id.
     * UUID of the user record, assigned at creation
     * @return Returns the String
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getId() {
        return id;
    }

    /**
     * Setter for Id.
     * UUID of the user record, assigned at creation
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for Lastupdated.
     * Timestamp of the record
     * @return Returns the LocalDateTime
     */
    @JsonGetter("lastupdated")
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getLastupdated() {
        return lastupdated;
    }

    /**
     * Setter for Lastupdated.
     * Timestamp of the record
     * @param lastupdated Value for LocalDateTime
     */
    @JsonSetter("lastupdated")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setLastupdated(LocalDateTime lastupdated) {
        this.lastupdated = lastupdated;
    }

    /**
     * Getter for Modelid.
     * The model ID of the device
     * @return Returns the String
     */
    @JsonGetter("modelid")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getModelid() {
        return modelid;
    }

    /**
     * Setter for Modelid.
     * The model ID of the device
     * @param modelid Value for String
     */
    @JsonSetter("modelid")
    public void setModelid(String modelid) {
        this.modelid = modelid;
    }

    /**
     * Getter for Name.
     * User defined name of the record
     * @return Returns the String
     */
    @JsonGetter("name")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * User defined name of the record
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for Sensordataaggregation.
     * A flag to indicate if sensor data is to be aggregated (true) or not
     * @return Returns the Boolean
     */
    @JsonGetter("sensordataaggregation")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getSensordataaggregation() {
        return sensordataaggregation;
    }

    /**
     * Setter for Sensordataaggregation.
     * A flag to indicate if sensor data is to be aggregated (true) or not
     * @param sensordataaggregation Value for Boolean
     */
    @JsonSetter("sensordataaggregation")
    public void setSensordataaggregation(Boolean sensordataaggregation) {
        this.sensordataaggregation = sensordataaggregation;
    }

    /**
     * Getter for State.
     * The current status of the device or transaction and will be `success` or `failed`
     * @return Returns the String
     */
    @JsonGetter("state")
    public String getState() {
        return state;
    }

    /**
     * Setter for State.
     * The current status of the device or transaction and will be `success` or `failed`
     * @param state Value for String
     */
    @JsonSetter("state")
    public void setState(String state) {
        this.state = state;
    }

    /**
     * Getter for Transactionid.
     * The system-generated UUID of the transaction
     * @return Returns the String
     */
    @JsonGetter("transactionid")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getTransactionid() {
        return transactionid;
    }

    /**
     * Setter for Transactionid.
     * The system-generated UUID of the transaction
     * @param transactionid Value for String
     */
    @JsonSetter("transactionid")
    public void setTransactionid(String transactionid) {
        this.transactionid = transactionid;
    }

    /**
     * Getter for Version.
     * The resource version
     * @return Returns the String
     */
    @JsonGetter("version")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getVersion() {
        return version;
    }

    /**
     * Setter for Version.
     * The resource version
     * @param version Value for String
     */
    @JsonSetter("version")
    public void setVersion(String version) {
        this.version = version;
    }

    /**
     * Getter for Versionid.
     * The UUID of the resource version
     * @return Returns the String
     */
    @JsonGetter("versionid")
    public String getVersionid() {
        return versionid;
    }

    /**
     * Setter for Versionid.
     * The UUID of the resource version
     * @param versionid Value for String
     */
    @JsonSetter("versionid")
    public void setVersionid(String versionid) {
        this.versionid = versionid;
    }

    /**
     * Converts this ResourceEvent into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ResourceEvent [" + "createdon=" + createdon + ", fieldid=" + fieldid
                + ", foreignid=" + foreignid + ", lastupdated=" + lastupdated + ", state=" + state
                + ", versionid=" + versionid + ", accountclientid=" + accountclientid
                + ", callbackurl=" + callbackurl + ", description=" + description + ", deviceid="
                + deviceid + ", errmsg=" + errmsg + ", fields=" + fields + ", fieldvalue="
                + fieldvalue + ", id=" + id + ", modelid=" + modelid + ", name=" + name
                + ", sensordataaggregation=" + sensordataaggregation + ", transactionid="
                + transactionid + ", version=" + version + "]";
    }

    /**
     * Builds a new {@link ResourceEvent.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ResourceEvent.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(createdon, fieldid, foreignid, lastupdated, state, versionid)
                .accountclientid(getAccountclientid())
                .callbackurl(getCallbackurl())
                .description(getDescription())
                .deviceid(getDeviceid())
                .errmsg(getErrmsg())
                .fields(getFields())
                .fieldvalue(getFieldvalue())
                .id(getId())
                .modelid(getModelid())
                .name(getName())
                .sensordataaggregation(getSensordataaggregation())
                .transactionid(getTransactionid())
                .version(getVersion());
        return builder;
    }

    /**
     * Class to build instances of {@link ResourceEvent}.
     */
    public static class Builder {
        private LocalDateTime createdon;
        private String fieldid;
        private String foreignid;
        private LocalDateTime lastupdated;
        private String state;
        private String versionid;
        private String accountclientid;
        private String callbackurl;
        private String description;
        private String deviceid;
        private String errmsg;
        private DtoFields fields;
        private List<Integer> fieldvalue;
        private String id;
        private String modelid;
        private String name;
        private Boolean sensordataaggregation;
        private String transactionid;
        private String version;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  createdon  LocalDateTime value for createdon.
         * @param  fieldid  String value for fieldid.
         * @param  foreignid  String value for foreignid.
         * @param  lastupdated  LocalDateTime value for lastupdated.
         * @param  state  String value for state.
         * @param  versionid  String value for versionid.
         */
        public Builder(LocalDateTime createdon, String fieldid, String foreignid,
                LocalDateTime lastupdated, String state, String versionid) {
            this.createdon = createdon;
            this.fieldid = fieldid;
            this.foreignid = foreignid;
            this.lastupdated = lastupdated;
            this.state = state;
            this.versionid = versionid;
        }

        /**
         * Setter for createdon.
         * @param  createdon  LocalDateTime value for createdon.
         * @return Builder
         */
        public Builder createdon(LocalDateTime createdon) {
            this.createdon = createdon;
            return this;
        }

        /**
         * Setter for fieldid.
         * @param  fieldid  String value for fieldid.
         * @return Builder
         */
        public Builder fieldid(String fieldid) {
            this.fieldid = fieldid;
            return this;
        }

        /**
         * Setter for foreignid.
         * @param  foreignid  String value for foreignid.
         * @return Builder
         */
        public Builder foreignid(String foreignid) {
            this.foreignid = foreignid;
            return this;
        }

        /**
         * Setter for lastupdated.
         * @param  lastupdated  LocalDateTime value for lastupdated.
         * @return Builder
         */
        public Builder lastupdated(LocalDateTime lastupdated) {
            this.lastupdated = lastupdated;
            return this;
        }

        /**
         * Setter for state.
         * @param  state  String value for state.
         * @return Builder
         */
        public Builder state(String state) {
            this.state = state;
            return this;
        }

        /**
         * Setter for versionid.
         * @param  versionid  String value for versionid.
         * @return Builder
         */
        public Builder versionid(String versionid) {
            this.versionid = versionid;
            return this;
        }

        /**
         * Setter for accountclientid.
         * @param  accountclientid  String value for accountclientid.
         * @return Builder
         */
        public Builder accountclientid(String accountclientid) {
            this.accountclientid = accountclientid;
            return this;
        }

        /**
         * Setter for callbackurl.
         * @param  callbackurl  String value for callbackurl.
         * @return Builder
         */
        public Builder callbackurl(String callbackurl) {
            this.callbackurl = callbackurl;
            return this;
        }

        /**
         * Setter for description.
         * @param  description  String value for description.
         * @return Builder
         */
        public Builder description(String description) {
            this.description = description;
            return this;
        }

        /**
         * Setter for deviceid.
         * @param  deviceid  String value for deviceid.
         * @return Builder
         */
        public Builder deviceid(String deviceid) {
            this.deviceid = deviceid;
            return this;
        }

        /**
         * Setter for errmsg.
         * @param  errmsg  String value for errmsg.
         * @return Builder
         */
        public Builder errmsg(String errmsg) {
            this.errmsg = errmsg;
            return this;
        }

        /**
         * Setter for fields.
         * @param  fields  DtoFields value for fields.
         * @return Builder
         */
        public Builder fields(DtoFields fields) {
            this.fields = fields;
            return this;
        }

        /**
         * Setter for fieldvalue.
         * @param  fieldvalue  List of Integer value for fieldvalue.
         * @return Builder
         */
        public Builder fieldvalue(List<Integer> fieldvalue) {
            this.fieldvalue = fieldvalue;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for modelid.
         * @param  modelid  String value for modelid.
         * @return Builder
         */
        public Builder modelid(String modelid) {
            this.modelid = modelid;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for sensordataaggregation.
         * @param  sensordataaggregation  Boolean value for sensordataaggregation.
         * @return Builder
         */
        public Builder sensordataaggregation(Boolean sensordataaggregation) {
            this.sensordataaggregation = sensordataaggregation;
            return this;
        }

        /**
         * Setter for transactionid.
         * @param  transactionid  String value for transactionid.
         * @return Builder
         */
        public Builder transactionid(String transactionid) {
            this.transactionid = transactionid;
            return this;
        }

        /**
         * Setter for version.
         * @param  version  String value for version.
         * @return Builder
         */
        public Builder version(String version) {
            this.version = version;
            return this;
        }

        /**
         * Builds a new {@link ResourceEvent} object using the set fields.
         * @return {@link ResourceEvent}
         */
        public ResourceEvent build() {
            return new ResourceEvent(createdon, fieldid, foreignid, lastupdated, state, versionid,
                    accountclientid, callbackurl, description, deviceid, errmsg, fields, fieldvalue,
                    id, modelid, name, sensordataaggregation, transactionid, version);
        }
    }
}
