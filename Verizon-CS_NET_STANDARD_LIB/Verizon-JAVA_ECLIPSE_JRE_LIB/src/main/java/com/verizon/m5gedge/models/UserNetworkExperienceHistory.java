/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.verizon.m5gedge.DateTimeHelper;
import java.time.LocalDateTime;

/**
 * This is a model class for UserNetworkExperienceHistory type.
 */
public class UserNetworkExperienceHistory {
    private String billingaccountid;
    private LocalDateTime createdon;
    private LocalDateTime date;
    private Integer devicesbad;
    private Integer devicesfair;
    private Integer devicesgood;
    private Integer devicestotal;
    private String foreignid;
    private Integer hours;
    private String id;
    private LocalDateTime lastupdated;
    private Integer minutes;
    private String version;
    private String versionid;

    /**
     * Default constructor.
     */
    public UserNetworkExperienceHistory() {
    }

    /**
     * Initialization constructor.
     * @param  billingaccountid  String value for billingaccountid.
     * @param  createdon  LocalDateTime value for createdon.
     * @param  date  LocalDateTime value for date.
     * @param  devicesbad  Integer value for devicesbad.
     * @param  devicesfair  Integer value for devicesfair.
     * @param  devicesgood  Integer value for devicesgood.
     * @param  devicestotal  Integer value for devicestotal.
     * @param  foreignid  String value for foreignid.
     * @param  hours  Integer value for hours.
     * @param  id  String value for id.
     * @param  lastupdated  LocalDateTime value for lastupdated.
     * @param  minutes  Integer value for minutes.
     * @param  version  String value for version.
     * @param  versionid  String value for versionid.
     */
    public UserNetworkExperienceHistory(
            String billingaccountid,
            LocalDateTime createdon,
            LocalDateTime date,
            Integer devicesbad,
            Integer devicesfair,
            Integer devicesgood,
            Integer devicestotal,
            String foreignid,
            Integer hours,
            String id,
            LocalDateTime lastupdated,
            Integer minutes,
            String version,
            String versionid) {
        this.billingaccountid = billingaccountid;
        this.createdon = createdon;
        this.date = date;
        this.devicesbad = devicesbad;
        this.devicesfair = devicesfair;
        this.devicesgood = devicesgood;
        this.devicestotal = devicestotal;
        this.foreignid = foreignid;
        this.hours = hours;
        this.id = id;
        this.lastupdated = lastupdated;
        this.minutes = minutes;
        this.version = version;
        this.versionid = versionid;
    }

    /**
     * Getter for Billingaccountid.
     * The billing account ID. This is the same value as the Account ID
     * @return Returns the String
     */
    @JsonGetter("billingaccountid")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getBillingaccountid() {
        return billingaccountid;
    }

    /**
     * Setter for Billingaccountid.
     * The billing account ID. This is the same value as the Account ID
     * @param billingaccountid Value for String
     */
    @JsonSetter("billingaccountid")
    public void setBillingaccountid(String billingaccountid) {
        this.billingaccountid = billingaccountid;
    }

    /**
     * Getter for Createdon.
     * Timestamp of the record
     * @return Returns the LocalDateTime
     */
    @JsonGetter("createdon")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getCreatedon() {
        return createdon;
    }

    /**
     * Setter for Createdon.
     * Timestamp of the record
     * @param createdon Value for LocalDateTime
     */
    @JsonSetter("createdon")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCreatedon(LocalDateTime createdon) {
        this.createdon = createdon;
    }

    /**
     * Getter for Date.
     * Timestamp of the record
     * @return Returns the LocalDateTime
     */
    @JsonGetter("date")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getDate() {
        return date;
    }

    /**
     * Setter for Date.
     * Timestamp of the record
     * @param date Value for LocalDateTime
     */
    @JsonSetter("date")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setDate(LocalDateTime date) {
        this.date = date;
    }

    /**
     * Getter for Devicesbad.
     * This is a score based on combination of network coverage and network outage affecting the
     * device's ability to connect to the network. This is a count of devices that have failed
     * @return Returns the Integer
     */
    @JsonGetter("devicesbad")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getDevicesbad() {
        return devicesbad;
    }

    /**
     * Setter for Devicesbad.
     * This is a score based on combination of network coverage and network outage affecting the
     * device's ability to connect to the network. This is a count of devices that have failed
     * @param devicesbad Value for Integer
     */
    @JsonSetter("devicesbad")
    public void setDevicesbad(Integer devicesbad) {
        this.devicesbad = devicesbad;
    }

    /**
     * Getter for Devicesfair.
     * This is a score based on combination of network coverage and network outage affecting the
     * device's ability to connect to the network. This is a count of devices that are impaired
     * @return Returns the Integer
     */
    @JsonGetter("devicesfair")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getDevicesfair() {
        return devicesfair;
    }

    /**
     * Setter for Devicesfair.
     * This is a score based on combination of network coverage and network outage affecting the
     * device's ability to connect to the network. This is a count of devices that are impaired
     * @param devicesfair Value for Integer
     */
    @JsonSetter("devicesfair")
    public void setDevicesfair(Integer devicesfair) {
        this.devicesfair = devicesfair;
    }

    /**
     * Getter for Devicesgood.
     * This is a score based on combination of network coverage and network outage affecting the
     * device's ability to connect to the network. This is a count of devices that have no issues
     * @return Returns the Integer
     */
    @JsonGetter("devicesgood")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getDevicesgood() {
        return devicesgood;
    }

    /**
     * Setter for Devicesgood.
     * This is a score based on combination of network coverage and network outage affecting the
     * device's ability to connect to the network. This is a count of devices that have no issues
     * @param devicesgood Value for Integer
     */
    @JsonSetter("devicesgood")
    public void setDevicesgood(Integer devicesgood) {
        this.devicesgood = devicesgood;
    }

    /**
     * Getter for Devicestotal.
     * A count of all devices
     * @return Returns the Integer
     */
    @JsonGetter("devicestotal")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getDevicestotal() {
        return devicestotal;
    }

    /**
     * Setter for Devicestotal.
     * A count of all devices
     * @param devicestotal Value for Integer
     */
    @JsonSetter("devicestotal")
    public void setDevicestotal(Integer devicestotal) {
        this.devicestotal = devicestotal;
    }

    /**
     * Getter for Foreignid.
     * UUID of the ECPD account the user belongs to
     * @return Returns the String
     */
    @JsonGetter("foreignid")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getForeignid() {
        return foreignid;
    }

    /**
     * Setter for Foreignid.
     * UUID of the ECPD account the user belongs to
     * @param foreignid Value for String
     */
    @JsonSetter("foreignid")
    public void setForeignid(String foreignid) {
        this.foreignid = foreignid;
    }

    /**
     * Getter for Hours.
     * @return Returns the Integer
     */
    @JsonGetter("hours")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getHours() {
        return hours;
    }

    /**
     * Setter for Hours.
     * @param hours Value for Integer
     */
    @JsonSetter("hours")
    public void setHours(Integer hours) {
        this.hours = hours;
    }

    /**
     * Getter for Id.
     * UUID of the user record, assigned at creation
     * @return Returns the String
     */
    @JsonGetter("id")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getId() {
        return id;
    }

    /**
     * Setter for Id.
     * UUID of the user record, assigned at creation
     * @param id Value for String
     */
    @JsonSetter("id")
    public void setId(String id) {
        this.id = id;
    }

    /**
     * Getter for Lastupdated.
     * Timestamp of the record
     * @return Returns the LocalDateTime
     */
    @JsonGetter("lastupdated")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getLastupdated() {
        return lastupdated;
    }

    /**
     * Setter for Lastupdated.
     * Timestamp of the record
     * @param lastupdated Value for LocalDateTime
     */
    @JsonSetter("lastupdated")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setLastupdated(LocalDateTime lastupdated) {
        this.lastupdated = lastupdated;
    }

    /**
     * Getter for Minutes.
     * @return Returns the Integer
     */
    @JsonGetter("minutes")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getMinutes() {
        return minutes;
    }

    /**
     * Setter for Minutes.
     * @param minutes Value for Integer
     */
    @JsonSetter("minutes")
    public void setMinutes(Integer minutes) {
        this.minutes = minutes;
    }

    /**
     * Getter for Version.
     * The resource version
     * @return Returns the String
     */
    @JsonGetter("version")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getVersion() {
        return version;
    }

    /**
     * Setter for Version.
     * The resource version
     * @param version Value for String
     */
    @JsonSetter("version")
    public void setVersion(String version) {
        this.version = version;
    }

    /**
     * Getter for Versionid.
     * The UUID of the resource version
     * @return Returns the String
     */
    @JsonGetter("versionid")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getVersionid() {
        return versionid;
    }

    /**
     * Setter for Versionid.
     * The UUID of the resource version
     * @param versionid Value for String
     */
    @JsonSetter("versionid")
    public void setVersionid(String versionid) {
        this.versionid = versionid;
    }

    /**
     * Converts this UserNetworkExperienceHistory into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "UserNetworkExperienceHistory [" + "billingaccountid=" + billingaccountid
                + ", createdon=" + createdon + ", date=" + date + ", devicesbad=" + devicesbad
                + ", devicesfair=" + devicesfair + ", devicesgood=" + devicesgood
                + ", devicestotal=" + devicestotal + ", foreignid=" + foreignid + ", hours=" + hours
                + ", id=" + id + ", lastupdated=" + lastupdated + ", minutes=" + minutes
                + ", version=" + version + ", versionid=" + versionid + "]";
    }

    /**
     * Builds a new {@link UserNetworkExperienceHistory.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link UserNetworkExperienceHistory.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .billingaccountid(getBillingaccountid())
                .createdon(getCreatedon())
                .date(getDate())
                .devicesbad(getDevicesbad())
                .devicesfair(getDevicesfair())
                .devicesgood(getDevicesgood())
                .devicestotal(getDevicestotal())
                .foreignid(getForeignid())
                .hours(getHours())
                .id(getId())
                .lastupdated(getLastupdated())
                .minutes(getMinutes())
                .version(getVersion())
                .versionid(getVersionid());
        return builder;
    }

    /**
     * Class to build instances of {@link UserNetworkExperienceHistory}.
     */
    public static class Builder {
        private String billingaccountid;
        private LocalDateTime createdon;
        private LocalDateTime date;
        private Integer devicesbad;
        private Integer devicesfair;
        private Integer devicesgood;
        private Integer devicestotal;
        private String foreignid;
        private Integer hours;
        private String id;
        private LocalDateTime lastupdated;
        private Integer minutes;
        private String version;
        private String versionid;



        /**
         * Setter for billingaccountid.
         * @param  billingaccountid  String value for billingaccountid.
         * @return Builder
         */
        public Builder billingaccountid(String billingaccountid) {
            this.billingaccountid = billingaccountid;
            return this;
        }

        /**
         * Setter for createdon.
         * @param  createdon  LocalDateTime value for createdon.
         * @return Builder
         */
        public Builder createdon(LocalDateTime createdon) {
            this.createdon = createdon;
            return this;
        }

        /**
         * Setter for date.
         * @param  date  LocalDateTime value for date.
         * @return Builder
         */
        public Builder date(LocalDateTime date) {
            this.date = date;
            return this;
        }

        /**
         * Setter for devicesbad.
         * @param  devicesbad  Integer value for devicesbad.
         * @return Builder
         */
        public Builder devicesbad(Integer devicesbad) {
            this.devicesbad = devicesbad;
            return this;
        }

        /**
         * Setter for devicesfair.
         * @param  devicesfair  Integer value for devicesfair.
         * @return Builder
         */
        public Builder devicesfair(Integer devicesfair) {
            this.devicesfair = devicesfair;
            return this;
        }

        /**
         * Setter for devicesgood.
         * @param  devicesgood  Integer value for devicesgood.
         * @return Builder
         */
        public Builder devicesgood(Integer devicesgood) {
            this.devicesgood = devicesgood;
            return this;
        }

        /**
         * Setter for devicestotal.
         * @param  devicestotal  Integer value for devicestotal.
         * @return Builder
         */
        public Builder devicestotal(Integer devicestotal) {
            this.devicestotal = devicestotal;
            return this;
        }

        /**
         * Setter for foreignid.
         * @param  foreignid  String value for foreignid.
         * @return Builder
         */
        public Builder foreignid(String foreignid) {
            this.foreignid = foreignid;
            return this;
        }

        /**
         * Setter for hours.
         * @param  hours  Integer value for hours.
         * @return Builder
         */
        public Builder hours(Integer hours) {
            this.hours = hours;
            return this;
        }

        /**
         * Setter for id.
         * @param  id  String value for id.
         * @return Builder
         */
        public Builder id(String id) {
            this.id = id;
            return this;
        }

        /**
         * Setter for lastupdated.
         * @param  lastupdated  LocalDateTime value for lastupdated.
         * @return Builder
         */
        public Builder lastupdated(LocalDateTime lastupdated) {
            this.lastupdated = lastupdated;
            return this;
        }

        /**
         * Setter for minutes.
         * @param  minutes  Integer value for minutes.
         * @return Builder
         */
        public Builder minutes(Integer minutes) {
            this.minutes = minutes;
            return this;
        }

        /**
         * Setter for version.
         * @param  version  String value for version.
         * @return Builder
         */
        public Builder version(String version) {
            this.version = version;
            return this;
        }

        /**
         * Setter for versionid.
         * @param  versionid  String value for versionid.
         * @return Builder
         */
        public Builder versionid(String versionid) {
            this.versionid = versionid;
            return this;
        }

        /**
         * Builds a new {@link UserNetworkExperienceHistory} object using the set fields.
         * @return {@link UserNetworkExperienceHistory}
         */
        public UserNetworkExperienceHistory build() {
            return new UserNetworkExperienceHistory(billingaccountid, createdon, date, devicesbad,
                    devicesfair, devicesgood, devicestotal, foreignid, hours, id, lastupdated,
                    minutes, version, versionid);
        }
    }
}
