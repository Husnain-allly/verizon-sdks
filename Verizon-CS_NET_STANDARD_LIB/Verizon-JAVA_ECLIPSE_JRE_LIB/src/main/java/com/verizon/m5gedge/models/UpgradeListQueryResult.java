/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import io.apimatic.core.types.AdditionalProperties;
import io.apimatic.core.types.OptionalNullable;
import io.apimatic.core.utilities.ConversionHelper;
import java.util.List;
import java.util.Map;

/**
 * This is a model class for UpgradeListQueryResult type.
 */
public class UpgradeListQueryResult {
    private Boolean hasMoreFlag;
    private Integer lastSeenUpgradeId;
    private OptionalNullable<List<FirmwareUpgrade>> reportList;
    private AdditionalProperties<Object> additionalProperties = 
            new AdditionalProperties<Object>(this.getClass());

    /**
     * Default constructor.
     */
    public UpgradeListQueryResult() {
    }

    /**
     * Initialization constructor.
     * @param  hasMoreFlag  Boolean value for hasMoreFlag.
     * @param  lastSeenUpgradeId  Integer value for lastSeenUpgradeId.
     * @param  reportList  List of FirmwareUpgrade value for reportList.
     */
    public UpgradeListQueryResult(
            Boolean hasMoreFlag,
            Integer lastSeenUpgradeId,
            List<FirmwareUpgrade> reportList) {
        this.hasMoreFlag = hasMoreFlag;
        this.lastSeenUpgradeId = lastSeenUpgradeId;
        this.reportList = OptionalNullable.of(reportList);
    }

    /**
     * Initialization constructor.
     * @param  hasMoreFlag  Boolean value for hasMoreFlag.
     * @param  lastSeenUpgradeId  Integer value for lastSeenUpgradeId.
     * @param  reportList  List of FirmwareUpgrade value for reportList.
     */

    protected UpgradeListQueryResult(Boolean hasMoreFlag, Integer lastSeenUpgradeId,
            OptionalNullable<List<FirmwareUpgrade>> reportList) {
        this.hasMoreFlag = hasMoreFlag;
        this.lastSeenUpgradeId = lastSeenUpgradeId;
        this.reportList = reportList;
    }

    /**
     * Getter for HasMoreFlag.
     * True if there are more devices to retrieve.
     * @return Returns the Boolean
     */
    @JsonGetter("hasMoreFlag")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getHasMoreFlag() {
        return hasMoreFlag;
    }

    /**
     * Setter for HasMoreFlag.
     * True if there are more devices to retrieve.
     * @param hasMoreFlag Value for Boolean
     */
    @JsonSetter("hasMoreFlag")
    public void setHasMoreFlag(Boolean hasMoreFlag) {
        this.hasMoreFlag = hasMoreFlag;
    }

    /**
     * Getter for LastSeenUpgradeId.
     * If hasMoreData=true, the startIndex to use for the next request. 0 if hasMoreData=false.
     * @return Returns the Integer
     */
    @JsonGetter("lastSeenUpgradeId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getLastSeenUpgradeId() {
        return lastSeenUpgradeId;
    }

    /**
     * Setter for LastSeenUpgradeId.
     * If hasMoreData=true, the startIndex to use for the next request. 0 if hasMoreData=false.
     * @param lastSeenUpgradeId Value for Integer
     */
    @JsonSetter("lastSeenUpgradeId")
    public void setLastSeenUpgradeId(Integer lastSeenUpgradeId) {
        this.lastSeenUpgradeId = lastSeenUpgradeId;
    }

    /**
     * Internal Getter for ReportList.
     * Array of upgrade objects with the specified status.
     * @return Returns the Internal List of FirmwareUpgrade
     */
    @JsonGetter("reportList")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = OptionalNullable.Serializer.class)
    protected OptionalNullable<List<FirmwareUpgrade>> internalGetReportList() {
        return this.reportList;
    }

    /**
     * Getter for ReportList.
     * Array of upgrade objects with the specified status.
     * @return Returns the List of FirmwareUpgrade
     */
    public List<FirmwareUpgrade> getReportList() {
        return OptionalNullable.getFrom(reportList);
    }

    /**
     * Setter for ReportList.
     * Array of upgrade objects with the specified status.
     * @param reportList Value for List of FirmwareUpgrade
     */
    @JsonSetter("reportList")
    public void setReportList(List<FirmwareUpgrade> reportList) {
        this.reportList = OptionalNullable.of(reportList);
    }

    /**
     * UnSetter for ReportList.
     * Array of upgrade objects with the specified status.
     */
    public void unsetReportList() {
        reportList = null;
    }

    /**
     * Hidden method for the serialization of additional properties.
     * @return The map of additionally set properties.
     */
    @JsonAnyGetter
    private Map<String, Object> getAdditionalProperties() {
        return additionalProperties.getAdditionalProperties();
    }

    /**
     * Hidden method for the de-serialization of additional properties.
     * @param name The name of the additional property.
     * @param value The Object value of the additional property.
     */
    @JsonAnySetter
    private void setAdditionalProperties(String name, Object value) {
        additionalProperties.setAdditionalProperty(name,
                ConversionHelper.convertToSimpleType(value,
                        x -> x),
                true);
    }

    /**
     * Getter for the value of additional properties based on provided property name.
     * @param name The name of the additional property.
     * @return Either the Object property value or null if not exist.
     */
    
    public Object getAdditionalProperty(String name) {
        return additionalProperties.getAdditionalProperty(name);
    }

    /**
     * Converts this UpgradeListQueryResult into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "UpgradeListQueryResult [" + "hasMoreFlag=" + hasMoreFlag + ", lastSeenUpgradeId="
                + lastSeenUpgradeId + ", reportList=" + reportList + ", additionalProperties="
                + additionalProperties + "]";
    }

    /**
     * Builds a new {@link UpgradeListQueryResult.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link UpgradeListQueryResult.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .hasMoreFlag(getHasMoreFlag())
                .lastSeenUpgradeId(getLastSeenUpgradeId());
        builder.reportList = internalGetReportList();
        builder.additionalProperties = additionalProperties;
        return builder;
    }

    /**
     * Class to build instances of {@link UpgradeListQueryResult}.
     */
    public static class Builder {
        private Boolean hasMoreFlag;
        private Integer lastSeenUpgradeId;
        private OptionalNullable<List<FirmwareUpgrade>> reportList;
        private AdditionalProperties<Object> additionalProperties =
                new AdditionalProperties<Object>();



        /**
         * Setter for hasMoreFlag.
         * @param  hasMoreFlag  Boolean value for hasMoreFlag.
         * @return Builder
         */
        public Builder hasMoreFlag(Boolean hasMoreFlag) {
            this.hasMoreFlag = hasMoreFlag;
            return this;
        }

        /**
         * Setter for lastSeenUpgradeId.
         * @param  lastSeenUpgradeId  Integer value for lastSeenUpgradeId.
         * @return Builder
         */
        public Builder lastSeenUpgradeId(Integer lastSeenUpgradeId) {
            this.lastSeenUpgradeId = lastSeenUpgradeId;
            return this;
        }

        /**
         * Setter for reportList.
         * @param  reportList  List of FirmwareUpgrade value for reportList.
         * @return Builder
         */
        public Builder reportList(List<FirmwareUpgrade> reportList) {
            this.reportList = OptionalNullable.of(reportList);
            return this;
        }

        /**
         * UnSetter for reportList.
         * @return Builder
         */
        public Builder unsetReportList() {
            reportList = null;
            return this;
        }

        /**
         * Setter for additional property that are not in model fields.
         * @param name The name of the additional property.
         * @param value The Object value of the additional property.
         * @return Builder.
         */
        public Builder additionalProperty(String name, Object value) {
            this.additionalProperties.setAdditionalProperty(name, value);
            return this;
        }

        /**
         * Builds a new {@link UpgradeListQueryResult} object using the set fields.
         * @return {@link UpgradeListQueryResult}
         */
        public UpgradeListQueryResult build() {
            UpgradeListQueryResult model =
                    new UpgradeListQueryResult(hasMoreFlag, lastSeenUpgradeId, reportList);
            model.additionalProperties = additionalProperties;
            return model;
        }
    }
}
