/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.AdditionalProperties;
import io.apimatic.core.utilities.ConversionHelper;
import java.util.List;
import java.util.Map;

/**
 * This is a model class for AccountDetails type.
 */
public class AccountDetails {
    private String accountName;
    private String accountNumber;
    private String organizationName;
    private Boolean isProvisioningAllowed;
    private List<Carrier> carriers;
    private List<Feature> features;
    private List<CarrierServicePlan> servicePlans;
    private AdditionalProperties<Object> additionalProperties = 
            new AdditionalProperties<Object>(this.getClass());

    /**
     * Default constructor.
     */
    public AccountDetails() {
    }

    /**
     * Initialization constructor.
     * @param  accountName  String value for accountName.
     * @param  accountNumber  String value for accountNumber.
     * @param  organizationName  String value for organizationName.
     * @param  isProvisioningAllowed  Boolean value for isProvisioningAllowed.
     * @param  carriers  List of Carrier value for carriers.
     * @param  features  List of Feature value for features.
     * @param  servicePlans  List of CarrierServicePlan value for servicePlans.
     */
    public AccountDetails(
            String accountName,
            String accountNumber,
            String organizationName,
            Boolean isProvisioningAllowed,
            List<Carrier> carriers,
            List<Feature> features,
            List<CarrierServicePlan> servicePlans) {
        this.accountName = accountName;
        this.accountNumber = accountNumber;
        this.organizationName = organizationName;
        this.isProvisioningAllowed = isProvisioningAllowed;
        this.carriers = carriers;
        this.features = features;
        this.servicePlans = servicePlans;
    }

    /**
     * Getter for AccountName.
     * The numeric name of the account, in the format "0000123456-00001". Leading zeros must be
     * included.
     * @return Returns the String
     */
    @JsonGetter("accountName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAccountName() {
        return accountName;
    }

    /**
     * Setter for AccountName.
     * The numeric name of the account, in the format "0000123456-00001". Leading zeros must be
     * included.
     * @param accountName Value for String
     */
    @JsonSetter("accountName")
    public void setAccountName(String accountName) {
        this.accountName = accountName;
    }

    /**
     * Getter for AccountNumber.
     * The numeric name of the account, in the format "0000123456-00001". Leading zeros must be
     * included.
     * @return Returns the String
     */
    @JsonGetter("accountNumber")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAccountNumber() {
        return accountNumber;
    }

    /**
     * Setter for AccountNumber.
     * The numeric name of the account, in the format "0000123456-00001". Leading zeros must be
     * included.
     * @param accountNumber Value for String
     */
    @JsonSetter("accountNumber")
    public void setAccountNumber(String accountNumber) {
        this.accountNumber = accountNumber;
    }

    /**
     * Getter for OrganizationName.
     * user defined name of organization
     * @return Returns the String
     */
    @JsonGetter("organizationName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getOrganizationName() {
        return organizationName;
    }

    /**
     * Setter for OrganizationName.
     * user defined name of organization
     * @param organizationName Value for String
     */
    @JsonSetter("organizationName")
    public void setOrganizationName(String organizationName) {
        this.organizationName = organizationName;
    }

    /**
     * Getter for IsProvisioningAllowed.
     * Flag set to indicate if account details can be edited or not. Default is "true".
     * @return Returns the Boolean
     */
    @JsonGetter("isProvisioningAllowed")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getIsProvisioningAllowed() {
        return isProvisioningAllowed;
    }

    /**
     * Setter for IsProvisioningAllowed.
     * Flag set to indicate if account details can be edited or not. Default is "true".
     * @param isProvisioningAllowed Value for Boolean
     */
    @JsonSetter("isProvisioningAllowed")
    public void setIsProvisioningAllowed(Boolean isProvisioningAllowed) {
        this.isProvisioningAllowed = isProvisioningAllowed;
    }

    /**
     * Getter for Carriers.
     * @return Returns the List of Carrier
     */
    @JsonGetter("carriers")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<Carrier> getCarriers() {
        return carriers;
    }

    /**
     * Setter for Carriers.
     * @param carriers Value for List of Carrier
     */
    @JsonSetter("carriers")
    public void setCarriers(List<Carrier> carriers) {
        this.carriers = carriers;
    }

    /**
     * Getter for Features.
     * @return Returns the List of Feature
     */
    @JsonGetter("features")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<Feature> getFeatures() {
        return features;
    }

    /**
     * Setter for Features.
     * @param features Value for List of Feature
     */
    @JsonSetter("features")
    public void setFeatures(List<Feature> features) {
        this.features = features;
    }

    /**
     * Getter for ServicePlans.
     * @return Returns the List of CarrierServicePlan
     */
    @JsonGetter("servicePlans")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<CarrierServicePlan> getServicePlans() {
        return servicePlans;
    }

    /**
     * Setter for ServicePlans.
     * @param servicePlans Value for List of CarrierServicePlan
     */
    @JsonSetter("servicePlans")
    public void setServicePlans(List<CarrierServicePlan> servicePlans) {
        this.servicePlans = servicePlans;
    }

    /**
     * Hidden method for the serialization of additional properties.
     * @return The map of additionally set properties.
     */
    @JsonAnyGetter
    private Map<String, Object> getAdditionalProperties() {
        return additionalProperties.getAdditionalProperties();
    }

    /**
     * Hidden method for the de-serialization of additional properties.
     * @param name The name of the additional property.
     * @param value The Object value of the additional property.
     */
    @JsonAnySetter
    private void setAdditionalProperties(String name, Object value) {
        additionalProperties.setAdditionalProperty(name,
                ConversionHelper.convertToSimpleType(value,
                        x -> x),
                true);
    }

    /**
     * Getter for the value of additional properties based on provided property name.
     * @param name The name of the additional property.
     * @return Either the Object property value or null if not exist.
     */
    
    public Object getAdditionalProperty(String name) {
        return additionalProperties.getAdditionalProperty(name);
    }

    /**
     * Converts this AccountDetails into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "AccountDetails [" + "accountName=" + accountName + ", accountNumber="
                + accountNumber + ", organizationName=" + organizationName
                + ", isProvisioningAllowed=" + isProvisioningAllowed + ", carriers=" + carriers
                + ", features=" + features + ", servicePlans=" + servicePlans
                + ", additionalProperties=" + additionalProperties + "]";
    }

    /**
     * Builds a new {@link AccountDetails.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link AccountDetails.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .accountName(getAccountName())
                .accountNumber(getAccountNumber())
                .organizationName(getOrganizationName())
                .isProvisioningAllowed(getIsProvisioningAllowed())
                .carriers(getCarriers())
                .features(getFeatures())
                .servicePlans(getServicePlans());
        builder.additionalProperties = additionalProperties;
        return builder;
    }

    /**
     * Class to build instances of {@link AccountDetails}.
     */
    public static class Builder {
        private String accountName;
        private String accountNumber;
        private String organizationName;
        private Boolean isProvisioningAllowed;
        private List<Carrier> carriers;
        private List<Feature> features;
        private List<CarrierServicePlan> servicePlans;
        private AdditionalProperties<Object> additionalProperties =
                new AdditionalProperties<Object>();



        /**
         * Setter for accountName.
         * @param  accountName  String value for accountName.
         * @return Builder
         */
        public Builder accountName(String accountName) {
            this.accountName = accountName;
            return this;
        }

        /**
         * Setter for accountNumber.
         * @param  accountNumber  String value for accountNumber.
         * @return Builder
         */
        public Builder accountNumber(String accountNumber) {
            this.accountNumber = accountNumber;
            return this;
        }

        /**
         * Setter for organizationName.
         * @param  organizationName  String value for organizationName.
         * @return Builder
         */
        public Builder organizationName(String organizationName) {
            this.organizationName = organizationName;
            return this;
        }

        /**
         * Setter for isProvisioningAllowed.
         * @param  isProvisioningAllowed  Boolean value for isProvisioningAllowed.
         * @return Builder
         */
        public Builder isProvisioningAllowed(Boolean isProvisioningAllowed) {
            this.isProvisioningAllowed = isProvisioningAllowed;
            return this;
        }

        /**
         * Setter for carriers.
         * @param  carriers  List of Carrier value for carriers.
         * @return Builder
         */
        public Builder carriers(List<Carrier> carriers) {
            this.carriers = carriers;
            return this;
        }

        /**
         * Setter for features.
         * @param  features  List of Feature value for features.
         * @return Builder
         */
        public Builder features(List<Feature> features) {
            this.features = features;
            return this;
        }

        /**
         * Setter for servicePlans.
         * @param  servicePlans  List of CarrierServicePlan value for servicePlans.
         * @return Builder
         */
        public Builder servicePlans(List<CarrierServicePlan> servicePlans) {
            this.servicePlans = servicePlans;
            return this;
        }

        /**
         * Setter for additional property that are not in model fields.
         * @param name The name of the additional property.
         * @param value The Object value of the additional property.
         * @return Builder.
         */
        public Builder additionalProperty(String name, Object value) {
            this.additionalProperties.setAdditionalProperty(name, value);
            return this;
        }

        /**
         * Builds a new {@link AccountDetails} object using the set fields.
         * @return {@link AccountDetails}
         */
        public AccountDetails build() {
            AccountDetails model =
                    new AccountDetails(accountName, accountNumber, organizationName,
                            isProvisioningAllowed, carriers, features, servicePlans);
            model.additionalProperties = additionalProperties;
            return model;
        }
    }
}
