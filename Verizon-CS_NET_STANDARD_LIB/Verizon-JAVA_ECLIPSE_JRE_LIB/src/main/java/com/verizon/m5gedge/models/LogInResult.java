/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.AdditionalProperties;
import io.apimatic.core.utilities.ConversionHelper;
import java.util.Map;

/**
 * This is a model class for LogInResult type.
 */
public class LogInResult {
    private String sessionToken;
    private AdditionalProperties<Object> additionalProperties = 
            new AdditionalProperties<Object>(this.getClass());

    /**
     * Default constructor.
     */
    public LogInResult() {
    }

    /**
     * Initialization constructor.
     * @param  sessionToken  String value for sessionToken.
     */
    public LogInResult(
            String sessionToken) {
        this.sessionToken = sessionToken;
    }

    /**
     * Getter for SessionToken.
     * The identifier for the session that was created by the request. Store the sessionToken for
     * use in the header of all other API requests.
     * @return Returns the String
     */
    @JsonGetter("sessionToken")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getSessionToken() {
        return sessionToken;
    }

    /**
     * Setter for SessionToken.
     * The identifier for the session that was created by the request. Store the sessionToken for
     * use in the header of all other API requests.
     * @param sessionToken Value for String
     */
    @JsonSetter("sessionToken")
    public void setSessionToken(String sessionToken) {
        this.sessionToken = sessionToken;
    }

    /**
     * Hidden method for the serialization of additional properties.
     * @return The map of additionally set properties.
     */
    @JsonAnyGetter
    private Map<String, Object> getAdditionalProperties() {
        return additionalProperties.getAdditionalProperties();
    }

    /**
     * Hidden method for the de-serialization of additional properties.
     * @param name The name of the additional property.
     * @param value The Object value of the additional property.
     */
    @JsonAnySetter
    private void setAdditionalProperties(String name, Object value) {
        additionalProperties.setAdditionalProperty(name,
                ConversionHelper.convertToSimpleType(value,
                        x -> x),
                true);
    }

    /**
     * Getter for the value of additional properties based on provided property name.
     * @param name The name of the additional property.
     * @return Either the Object property value or null if not exist.
     */
    
    public Object getAdditionalProperty(String name) {
        return additionalProperties.getAdditionalProperty(name);
    }

    /**
     * Converts this LogInResult into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "LogInResult [" + "sessionToken=" + sessionToken + ", additionalProperties="
                + additionalProperties + "]";
    }

    /**
     * Builds a new {@link LogInResult.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link LogInResult.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .sessionToken(getSessionToken());
        builder.additionalProperties = additionalProperties;
        return builder;
    }

    /**
     * Class to build instances of {@link LogInResult}.
     */
    public static class Builder {
        private String sessionToken;
        private AdditionalProperties<Object> additionalProperties =
                new AdditionalProperties<Object>();



        /**
         * Setter for sessionToken.
         * @param  sessionToken  String value for sessionToken.
         * @return Builder
         */
        public Builder sessionToken(String sessionToken) {
            this.sessionToken = sessionToken;
            return this;
        }

        /**
         * Setter for additional property that are not in model fields.
         * @param name The name of the additional property.
         * @param value The Object value of the additional property.
         * @return Builder.
         */
        public Builder additionalProperty(String name, Object value) {
            this.additionalProperties.setAdditionalProperty(name, value);
            return this;
        }

        /**
         * Builds a new {@link LogInResult} object using the set fields.
         * @return {@link LogInResult}
         */
        public LogInResult build() {
            LogInResult model =
                    new LogInResult(sessionToken);
            model.additionalProperties = additionalProperties;
            return model;
        }
    }
}
