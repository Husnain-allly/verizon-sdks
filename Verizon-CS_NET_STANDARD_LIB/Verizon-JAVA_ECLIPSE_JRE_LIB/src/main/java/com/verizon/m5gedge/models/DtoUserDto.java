/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.Map;

/**
 * This is a model class for DtoUserDto type.
 */
public class DtoUserDto {
    private String email;
    private String firstname;
    private String lastname;
    private String mdn;
    private Map<String, Object> customdata;

    /**
     * Default constructor.
     */
    public DtoUserDto() {
    }

    /**
     * Initialization constructor.
     * @param  email  String value for email.
     * @param  firstname  String value for firstname.
     * @param  lastname  String value for lastname.
     * @param  mdn  String value for mdn.
     * @param  customdata  Map of String, value for customdata.
     */
    public DtoUserDto(
            String email,
            String firstname,
            String lastname,
            String mdn,
            Map<String, Object> customdata) {
        this.email = email;
        this.firstname = firstname;
        this.lastname = lastname;
        this.mdn = mdn;
        this.customdata = customdata;
    }

    /**
     * Getter for Email.
     * Contact email for the group
     * @return Returns the String
     */
    @JsonGetter("email")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getEmail() {
        return email;
    }

    /**
     * Setter for Email.
     * Contact email for the group
     * @param email Value for String
     */
    @JsonSetter("email")
    public void setEmail(String email) {
        this.email = email;
    }

    /**
     * Getter for Firstname.
     * The first name in the user record
     * @return Returns the String
     */
    @JsonGetter("firstname")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getFirstname() {
        return firstname;
    }

    /**
     * Setter for Firstname.
     * The first name in the user record
     * @param firstname Value for String
     */
    @JsonSetter("firstname")
    public void setFirstname(String firstname) {
        this.firstname = firstname;
    }

    /**
     * Getter for Lastname.
     * The last name in the user record
     * @return Returns the String
     */
    @JsonGetter("lastname")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getLastname() {
        return lastname;
    }

    /**
     * Setter for Lastname.
     * The last name in the user record
     * @param lastname Value for String
     */
    @JsonSetter("lastname")
    public void setLastname(String lastname) {
        this.lastname = lastname;
    }

    /**
     * Getter for Mdn.
     * The Mobile Directory Number
     * @return Returns the String
     */
    @JsonGetter("mdn")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getMdn() {
        return mdn;
    }

    /**
     * Setter for Mdn.
     * The Mobile Directory Number
     * @param mdn Value for String
     */
    @JsonSetter("mdn")
    public void setMdn(String mdn) {
        this.mdn = mdn;
    }

    /**
     * Getter for Customdata.
     * Name/value pair, where the value is client defined. The purpose is to keep track of current
     * state per device action.
     * @return Returns the Map of String, Object
     */
    @JsonGetter("customdata")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Map<String, Object> getCustomdata() {
        return customdata;
    }

    /**
     * Setter for Customdata.
     * Name/value pair, where the value is client defined. The purpose is to keep track of current
     * state per device action.
     * @param customdata Value for Map of String, Object
     */
    @JsonSetter("customdata")
    public void setCustomdata(Map<String, Object> customdata) {
        this.customdata = customdata;
    }

    /**
     * Converts this DtoUserDto into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "DtoUserDto [" + "email=" + email + ", firstname=" + firstname + ", lastname="
                + lastname + ", mdn=" + mdn + ", customdata=" + customdata + "]";
    }

    /**
     * Builds a new {@link DtoUserDto.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link DtoUserDto.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .email(getEmail())
                .firstname(getFirstname())
                .lastname(getLastname())
                .mdn(getMdn())
                .customdata(getCustomdata());
        return builder;
    }

    /**
     * Class to build instances of {@link DtoUserDto}.
     */
    public static class Builder {
        private String email;
        private String firstname;
        private String lastname;
        private String mdn;
        private Map<String, Object> customdata;



        /**
         * Setter for email.
         * @param  email  String value for email.
         * @return Builder
         */
        public Builder email(String email) {
            this.email = email;
            return this;
        }

        /**
         * Setter for firstname.
         * @param  firstname  String value for firstname.
         * @return Builder
         */
        public Builder firstname(String firstname) {
            this.firstname = firstname;
            return this;
        }

        /**
         * Setter for lastname.
         * @param  lastname  String value for lastname.
         * @return Builder
         */
        public Builder lastname(String lastname) {
            this.lastname = lastname;
            return this;
        }

        /**
         * Setter for mdn.
         * @param  mdn  String value for mdn.
         * @return Builder
         */
        public Builder mdn(String mdn) {
            this.mdn = mdn;
            return this;
        }

        /**
         * Setter for customdata.
         * @param  customdata  Map of String, value for customdata.
         * @return Builder
         */
        public Builder customdata(Map<String, Object> customdata) {
            this.customdata = customdata;
            return this;
        }

        /**
         * Builds a new {@link DtoUserDto} object using the set fields.
         * @return {@link DtoUserDto}
         */
        public DtoUserDto build() {
            return new DtoUserDto(email, firstname, lastname, mdn, customdata);
        }
    }
}
