# -*- coding: utf-8 -*-

"""
verizon

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from verizon.api_helper import APIHelper


class QueryMecPerformanceMetricsRequest(object):

    """Implementation of the 'QueryMECPerformanceMetricsRequest' model.

    MEC performance metrics request.

    Attributes:
        imei (str): The 15-digit International Mobile Equipment Identifier.
        msisdn (str): The 12-digit Mobile Station International Subscriber
            Directory Number.
        additional_properties (Dict[str, Any]): The additional properties for
            the model.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "imei": 'IMEI',
        "msisdn": 'MSISDN'
    }

    def __init__(self,
                 imei=None,
                 msisdn=None,
                 additional_properties=None):
        """Constructor for the QueryMecPerformanceMetricsRequest class"""

        # Initialize members of the class
        self.imei = imei 
        self.msisdn = msisdn 

        # Add additional model properties to the instance
        if additional_properties is None:
            additional_properties = {}
        self.additional_properties = additional_properties

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        imei = dictionary.get("IMEI") if dictionary.get("IMEI") else None
        msisdn = dictionary.get("MSISDN") if dictionary.get("MSISDN") else None
        additional_properties = APIHelper.get_additional_properties(
            dictionary={k: v for k, v in dictionary.items() if k not in cls._names.values()},
            unboxing_function=lambda value: value)
        # Return an object of this model
        return cls(imei,
                   msisdn,
                   additional_properties)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'imei={self.imei!r}, '
                f'msisdn={self.msisdn!r}, '
                f'additional_properties={self.additional_properties!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'imei={self.imei!s}, '
                f'msisdn={self.msisdn!s}, '
                f'additional_properties={self.additional_properties!s})')
