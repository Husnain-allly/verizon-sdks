# -*- coding: utf-8 -*-

"""
verizon

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from verizon.api_helper import APIHelper


class DeviceInfo(object):

    """Implementation of the 'DeviceInfo' model.

    The devices that you want to locate. The array cannot contain more than 20
    devices.

    Attributes:
        id (str): Device identifier.
        kind (str): Device identifier kind.
        mdn (str): Device MDN.
        additional_properties (Dict[str, Any]): The additional properties for
            the model.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "id": 'id',
        "kind": 'kind',
        "mdn": 'mdn'
    }

    def __init__(self,
                 id=None,
                 kind=None,
                 mdn=None,
                 additional_properties=None):
        """Constructor for the DeviceInfo class"""

        # Initialize members of the class
        self.id = id 
        self.kind = kind 
        self.mdn = mdn 

        # Add additional model properties to the instance
        if additional_properties is None:
            additional_properties = {}
        self.additional_properties = additional_properties

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        id = dictionary.get("id") if dictionary.get("id") else None
        kind = dictionary.get("kind") if dictionary.get("kind") else None
        mdn = dictionary.get("mdn") if dictionary.get("mdn") else None
        additional_properties = APIHelper.get_additional_properties(
            dictionary={k: v for k, v in dictionary.items() if k not in cls._names.values()},
            unboxing_function=lambda value: value)
        # Return an object of this model
        return cls(id,
                   kind,
                   mdn,
                   additional_properties)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'id={self.id!r}, '
                f'kind={self.kind!r}, '
                f'mdn={self.mdn!r}, '
                f'additional_properties={self.additional_properties!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'id={self.id!s}, '
                f'kind={self.kind!s}, '
                f'mdn={self.mdn!s}, '
                f'additional_properties={self.additional_properties!s})')
