# -*- coding: utf-8 -*-

"""
verizon

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from apimatic_core.configurations.global_configuration import GlobalConfiguration
from apimatic_core.decorators.lazy_property import LazyProperty
from verizon.configuration import Configuration
from verizon.apis.base_api import BaseApi
from verizon.configuration import Environment
from verizon.http.auth.thingspace_oauth import ThingspaceOauth
from verizon.http.auth.vz_m2m_token import VzM2MToken
from verizon.http.auth.thingspace_oauth_1 import ThingspaceOauth1
from verizon.http.auth.session_token import SessionToken
from verizon.apis.m_5g_edge_platforms_api import M5GEdgePlatformsApi
from verizon.apis.service_endpoints_api import ServiceEndpointsApi
from verizon.apis.service_profiles_api import ServiceProfilesApi
from verizon.apis.device_management_api import DeviceManagementApi
from verizon.apis.accounts_api import AccountsApi
from verizon.apis.device_groups_api import DeviceGroupsApi
from verizon.apis.sms_api import SmsApi
from verizon.apis.session_management_api import SessionManagementApi
from verizon.apis.connectivity_callbacks_api import ConnectivityCallbacksApi
from verizon.apis.account_requests_api import AccountRequestsApi
from verizon.apis.service_plans_api import ServicePlansApi
from verizon.apis.device_diagnostics_api import DeviceDiagnosticsApi
from verizon.apis.device_monitoring_api import DeviceMonitoringApi
from verizon.apis.device_profile_management_api\
    import DeviceProfileManagementApi
from verizon.apis.euicc_device_profile_management_api\
    import EuiccDeviceProfileManagementApi
from verizon.apis.devices_locations_api import DevicesLocationsApi
from verizon.apis.exclusions_api import ExclusionsApi
from verizon.apis.devices_location_subscriptions_api\
    import DevicesLocationSubscriptionsApi
from verizon.apis.device_location_callbacks_api\
    import DeviceLocationCallbacksApi
from verizon.apis.usage_trigger_management_api import UsageTriggerManagementApi
from verizon.apis.billing_api import BillingApi
from verizon.apis.software_management_subscriptions_v1_api\
    import SoftwareManagementSubscriptionsV1Api
from verizon.apis.software_management_licenses_v1_api\
    import SoftwareManagementLicensesV1Api
from verizon.apis.firmware_v1_api import FirmwareV1Api
from verizon.apis.software_management_callbacks_v1_api\
    import SoftwareManagementCallbacksV1Api
from verizon.apis.software_management_reports_v1_api\
    import SoftwareManagementReportsV1Api
from verizon.apis.software_management_subscriptions_v2_api\
    import SoftwareManagementSubscriptionsV2Api
from verizon.apis.software_management_licenses_v2_api\
    import SoftwareManagementLicensesV2Api
from verizon.apis.campaigns_v2_api import CampaignsV2Api
from verizon.apis.software_management_callbacks_v2_api\
    import SoftwareManagementCallbacksV2Api
from verizon.apis.software_management_reports_v2_api\
    import SoftwareManagementReportsV2Api
from verizon.apis.client_logging_api import ClientLoggingApi
from verizon.apis.server_logging_api import ServerLoggingApi
from verizon.apis.configuration_files_api import ConfigurationFilesApi
from verizon.apis.software_management_subscriptions_v3_api\
    import SoftwareManagementSubscriptionsV3Api
from verizon.apis.software_management_licenses_v3_api\
    import SoftwareManagementLicensesV3Api
from verizon.apis.campaigns_v3_api import CampaignsV3Api
from verizon.apis.software_management_reports_v3_api\
    import SoftwareManagementReportsV3Api
from verizon.apis.firmware_v3_api import FirmwareV3Api
from verizon.apis.account_devices_api import AccountDevicesApi
from verizon.apis.software_management_callbacks_v3_api\
    import SoftwareManagementCallbacksV3Api
from verizon.apis.sim_secure_for_io_t_licenses_api\
    import SimSecureForIoTLicensesApi
from verizon.apis.account_subscriptions_api import AccountSubscriptionsApi
from verizon.apis.performance_metrics_api import PerformanceMetricsApi
from verizon.apis.diagnostics_subscriptions_api\
    import DiagnosticsSubscriptionsApi
from verizon.apis.diagnostics_observations_api\
    import DiagnosticsObservationsApi
from verizon.apis.diagnostics_history_api import DiagnosticsHistoryApi
from verizon.apis.diagnostics_settings_api import DiagnosticsSettingsApi
from verizon.apis.diagnostics_callbacks_api import DiagnosticsCallbacksApi
from verizon.apis.diagnostics_factory_reset_api\
    import DiagnosticsFactoryResetApi
from verizon.apis.targets_api import TargetsApi
from verizon.apis.cloud_connector_subscriptions_api\
    import CloudConnectorSubscriptionsApi
from verizon.apis.cloud_connector_devices_api import CloudConnectorDevicesApi
from verizon.apis.device_service_management_api\
    import DeviceServiceManagementApi
from verizon.apis.device_reports_api import DeviceReportsApi
from verizon.apis.hyper_precise_location_callbacks_api\
    import HyperPreciseLocationCallbacksApi
from verizon.apis.anomaly_settings_api import AnomalySettingsApi
from verizon.apis.anomaly_triggers_api import AnomalyTriggersApi
from verizon.apis.anomaly_triggers_v2_api import AnomalyTriggersV2Api
from verizon.apis.wireless_network_performance_api\
    import WirelessNetworkPerformanceApi
from verizon.apis.managing_esim_profiles_api import ManagingEsimProfilesApi
from verizon.apis.device_sms_messaging_api import DeviceSmsMessagingApi
from verizon.apis.device_actions_api import DeviceActionsApi
from verizon.apis.thing_space_quality_of_service_api_actions_api\
    import ThingSpaceQualityOfServiceApiActionsApi
from verizon.apis.pwn_api import PwnApi
from verizon.apis.promotion_period_information_api\
    import PromotionPeriodInformationApi
from verizon.apis.retrieve_the_triggers_api import RetrieveTheTriggersApi
from verizon.apis.update_triggers_api import UpdateTriggersApi
from verizon.apis.sim_actions_api import SimActionsApi
from verizon.apis.global_reporting_api import GlobalReportingApi
from verizon.apis.retrieve_rate_plan_list_api import RetrieveRatePlanListApi
from verizon.apis.create_price_plan_triggers_api\
    import CreatePricePlanTriggersApi
from verizon.apis.update_price_plan_triggers_api\
    import UpdatePricePlanTriggersApi
from verizon.apis.m_5g_bi_device_actions_api import M5GBiDeviceActionsApi
from verizon.apis.sensor_insights_sensors_api import SensorInsightsSensorsApi
from verizon.apis.sensor_insights_devices_api import SensorInsightsDevicesApi
from verizon.apis.sensor_insights_gateways_api import SensorInsightsGatewaysApi
from verizon.apis.sensor_insights_smart_alerts_api\
    import SensorInsightsSmartAlertsApi
from verizon.apis.sensor_insights_rules_api import SensorInsightsRulesApi
from verizon.apis.sensor_insights_health_score_api\
    import SensorInsightsHealthScoreApi
from verizon.apis.sensor_insights_notification_groups_api\
    import SensorInsightsNotificationGroupsApi
from verizon.apis.sensor_insights_users_api import SensorInsightsUsersApi
from verizon.apis.sensor_insights_device_profile_api\
    import SensorInsightsDeviceProfileApi
from verizon.apis.sensor_insights_smart_alert_metrics_api\
    import SensorInsightsSmartAlertMetricsApi
from verizon.apis.app_config_service_api import AppConfigServiceApi
from verizon.apis.registration_api import RegistrationApi
from verizon.apis.map_data_manager_api import MapDataManagerApi
from verizon.apis.oauth_authorization_api import OauthAuthorizationApi


class VerizonClient(object):
    @LazyProperty
    def m_5g_edge_platforms(self):
        return M5GEdgePlatformsApi(self.global_configuration)

    @LazyProperty
    def service_endpoints(self):
        return ServiceEndpointsApi(self.global_configuration)

    @LazyProperty
    def service_profiles(self):
        return ServiceProfilesApi(self.global_configuration)

    @LazyProperty
    def device_management(self):
        return DeviceManagementApi(self.global_configuration)

    @LazyProperty
    def accounts(self):
        return AccountsApi(self.global_configuration)

    @LazyProperty
    def device_groups(self):
        return DeviceGroupsApi(self.global_configuration)

    @LazyProperty
    def sms(self):
        return SmsApi(self.global_configuration)

    @LazyProperty
    def session_management(self):
        return SessionManagementApi(self.global_configuration)

    @LazyProperty
    def connectivity_callbacks(self):
        return ConnectivityCallbacksApi(self.global_configuration)

    @LazyProperty
    def account_requests(self):
        return AccountRequestsApi(self.global_configuration)

    @LazyProperty
    def service_plans(self):
        return ServicePlansApi(self.global_configuration)

    @LazyProperty
    def device_diagnostics(self):
        return DeviceDiagnosticsApi(self.global_configuration)

    @LazyProperty
    def device_monitoring(self):
        return DeviceMonitoringApi(self.global_configuration)

    @LazyProperty
    def device_profile_management(self):
        return DeviceProfileManagementApi(self.global_configuration)

    @LazyProperty
    def e_uicc_device_profile_management(self):
        return EuiccDeviceProfileManagementApi(self.global_configuration)

    @LazyProperty
    def devices_locations(self):
        return DevicesLocationsApi(self.global_configuration)

    @LazyProperty
    def exclusions(self):
        return ExclusionsApi(self.global_configuration)

    @LazyProperty
    def devices_location_subscriptions(self):
        return DevicesLocationSubscriptionsApi(self.global_configuration)

    @LazyProperty
    def device_location_callbacks(self):
        return DeviceLocationCallbacksApi(self.global_configuration)

    @LazyProperty
    def usage_trigger_management(self):
        return UsageTriggerManagementApi(self.global_configuration)

    @LazyProperty
    def billing(self):
        return BillingApi(self.global_configuration)

    @LazyProperty
    def software_management_subscriptions_v1(self):
        return SoftwareManagementSubscriptionsV1Api(self.global_configuration)

    @LazyProperty
    def software_management_licenses_v1(self):
        return SoftwareManagementLicensesV1Api(self.global_configuration)

    @LazyProperty
    def firmware_v1(self):
        return FirmwareV1Api(self.global_configuration)

    @LazyProperty
    def software_management_callbacks_v1(self):
        return SoftwareManagementCallbacksV1Api(self.global_configuration)

    @LazyProperty
    def software_management_reports_v1(self):
        return SoftwareManagementReportsV1Api(self.global_configuration)

    @LazyProperty
    def software_management_subscriptions_v2(self):
        return SoftwareManagementSubscriptionsV2Api(self.global_configuration)

    @LazyProperty
    def software_management_licenses_v2(self):
        return SoftwareManagementLicensesV2Api(self.global_configuration)

    @LazyProperty
    def campaigns_v2(self):
        return CampaignsV2Api(self.global_configuration)

    @LazyProperty
    def software_management_callbacks_v2(self):
        return SoftwareManagementCallbacksV2Api(self.global_configuration)

    @LazyProperty
    def software_management_reports_v2(self):
        return SoftwareManagementReportsV2Api(self.global_configuration)

    @LazyProperty
    def client_logging(self):
        return ClientLoggingApi(self.global_configuration)

    @LazyProperty
    def server_logging(self):
        return ServerLoggingApi(self.global_configuration)

    @LazyProperty
    def configuration_files(self):
        return ConfigurationFilesApi(self.global_configuration)

    @LazyProperty
    def software_management_subscriptions_v3(self):
        return SoftwareManagementSubscriptionsV3Api(self.global_configuration)

    @LazyProperty
    def software_management_licenses_v3(self):
        return SoftwareManagementLicensesV3Api(self.global_configuration)

    @LazyProperty
    def campaigns_v3(self):
        return CampaignsV3Api(self.global_configuration)

    @LazyProperty
    def software_management_reports_v3(self):
        return SoftwareManagementReportsV3Api(self.global_configuration)

    @LazyProperty
    def firmware_v3(self):
        return FirmwareV3Api(self.global_configuration)

    @LazyProperty
    def account_devices(self):
        return AccountDevicesApi(self.global_configuration)

    @LazyProperty
    def software_management_callbacks_v3(self):
        return SoftwareManagementCallbacksV3Api(self.global_configuration)

    @LazyProperty
    def sim_secure_for_io_t_licenses(self):
        return SimSecureForIoTLicensesApi(self.global_configuration)

    @LazyProperty
    def account_subscriptions(self):
        return AccountSubscriptionsApi(self.global_configuration)

    @LazyProperty
    def performance_metrics(self):
        return PerformanceMetricsApi(self.global_configuration)

    @LazyProperty
    def diagnostics_subscriptions(self):
        return DiagnosticsSubscriptionsApi(self.global_configuration)

    @LazyProperty
    def diagnostics_observations(self):
        return DiagnosticsObservationsApi(self.global_configuration)

    @LazyProperty
    def diagnostics_history(self):
        return DiagnosticsHistoryApi(self.global_configuration)

    @LazyProperty
    def diagnostics_settings(self):
        return DiagnosticsSettingsApi(self.global_configuration)

    @LazyProperty
    def diagnostics_callbacks(self):
        return DiagnosticsCallbacksApi(self.global_configuration)

    @LazyProperty
    def diagnostics_factory_reset(self):
        return DiagnosticsFactoryResetApi(self.global_configuration)

    @LazyProperty
    def targets(self):
        return TargetsApi(self.global_configuration)

    @LazyProperty
    def cloud_connector_subscriptions(self):
        return CloudConnectorSubscriptionsApi(self.global_configuration)

    @LazyProperty
    def cloud_connector_devices(self):
        return CloudConnectorDevicesApi(self.global_configuration)

    @LazyProperty
    def device_service_management(self):
        return DeviceServiceManagementApi(self.global_configuration)

    @LazyProperty
    def device_reports(self):
        return DeviceReportsApi(self.global_configuration)

    @LazyProperty
    def hyper_precise_location_callbacks(self):
        return HyperPreciseLocationCallbacksApi(self.global_configuration)

    @LazyProperty
    def anomaly_settings(self):
        return AnomalySettingsApi(self.global_configuration)

    @LazyProperty
    def anomaly_triggers(self):
        return AnomalyTriggersApi(self.global_configuration)

    @LazyProperty
    def anomaly_triggers_v2(self):
        return AnomalyTriggersV2Api(self.global_configuration)

    @LazyProperty
    def wireless_network_performance(self):
        return WirelessNetworkPerformanceApi(self.global_configuration)

    @LazyProperty
    def managing_e_sim_profiles(self):
        return ManagingEsimProfilesApi(self.global_configuration)

    @LazyProperty
    def device_sms_messaging(self):
        return DeviceSmsMessagingApi(self.global_configuration)

    @LazyProperty
    def device_actions(self):
        return DeviceActionsApi(self.global_configuration)

    @LazyProperty
    def thing_space_quality_of_service_api_actions(self):
        return ThingSpaceQualityOfServiceApiActionsApi(self.global_configuration)

    @LazyProperty
    def pwn(self):
        return PwnApi(self.global_configuration)

    @LazyProperty
    def promotion_period_information(self):
        return PromotionPeriodInformationApi(self.global_configuration)

    @LazyProperty
    def retrieve_the_triggers(self):
        return RetrieveTheTriggersApi(self.global_configuration)

    @LazyProperty
    def update_triggers(self):
        return UpdateTriggersApi(self.global_configuration)

    @LazyProperty
    def sim_actions(self):
        return SimActionsApi(self.global_configuration)

    @LazyProperty
    def global_reporting(self):
        return GlobalReportingApi(self.global_configuration)

    @LazyProperty
    def retrieve_rate_plan_list(self):
        return RetrieveRatePlanListApi(self.global_configuration)

    @LazyProperty
    def create_price_plan_triggers(self):
        return CreatePricePlanTriggersApi(self.global_configuration)

    @LazyProperty
    def update_price_plan_triggers(self):
        return UpdatePricePlanTriggersApi(self.global_configuration)

    @LazyProperty
    def m_5g_bi_device_actions(self):
        return M5GBiDeviceActionsApi(self.global_configuration)

    @LazyProperty
    def sensor_insights_sensors(self):
        return SensorInsightsSensorsApi(self.global_configuration)

    @LazyProperty
    def sensor_insights_devices(self):
        return SensorInsightsDevicesApi(self.global_configuration)

    @LazyProperty
    def sensor_insights_gateways(self):
        return SensorInsightsGatewaysApi(self.global_configuration)

    @LazyProperty
    def sensor_insights_smart_alerts(self):
        return SensorInsightsSmartAlertsApi(self.global_configuration)

    @LazyProperty
    def sensor_insights_rules(self):
        return SensorInsightsRulesApi(self.global_configuration)

    @LazyProperty
    def sensor_insights_health_score(self):
        return SensorInsightsHealthScoreApi(self.global_configuration)

    @LazyProperty
    def sensor_insights_notification_groups(self):
        return SensorInsightsNotificationGroupsApi(self.global_configuration)

    @LazyProperty
    def sensor_insights_users(self):
        return SensorInsightsUsersApi(self.global_configuration)

    @LazyProperty
    def sensor_insights_device_profile(self):
        return SensorInsightsDeviceProfileApi(self.global_configuration)

    @LazyProperty
    def sensor_insights_smart_alert_metrics(self):
        return SensorInsightsSmartAlertMetricsApi(self.global_configuration)

    @LazyProperty
    def app_config_service(self):
        return AppConfigServiceApi(self.global_configuration)

    @LazyProperty
    def registration(self):
        return RegistrationApi(self.global_configuration)

    @LazyProperty
    def map_data_manager(self):
        return MapDataManagerApi(self.global_configuration)

    @LazyProperty
    def oauth_authorization(self):
        return OauthAuthorizationApi(self.global_configuration)

    @property
    def thingspace_oauth(self):
        return self.auth_managers['thingspace_oauth']

    @property
    def thingspace_oauth_1(self):
        return self.auth_managers['thingspace_oauth1']

    def __init__(self, http_client_instance=None,
                 override_http_client_configuration=False, http_call_back=None,
                 timeout=30, max_retries=0, backoff_factor=2,
                 retry_statuses=None, retry_methods=None,
                 logging_configuration=None, environment=Environment.PRODUCTION,
                 thingspace_oauth_credentials=None,
                 vz_m2m_token_credentials=None,
                 thingspace_oauth_1_credentials=None,
                 session_token_credentials=None, config=None):
        self.config = config or Configuration(
            http_client_instance=http_client_instance,
            override_http_client_configuration=override_http_client_configuration,
            http_call_back=http_call_back, timeout=timeout,
            max_retries=max_retries, backoff_factor=backoff_factor,
            retry_statuses=retry_statuses, retry_methods=retry_methods,
            logging_configuration=logging_configuration,
            environment=environment,
            thingspace_oauth_credentials=thingspace_oauth_credentials,
            vz_m2m_token_credentials=vz_m2m_token_credentials,
            thingspace_oauth_1_credentials=thingspace_oauth_1_credentials,
            session_token_credentials=session_token_credentials)

        self.global_configuration = GlobalConfiguration(self.config)\
            .global_errors(BaseApi.global_errors())\
            .base_uri_executor(self.config.get_base_uri)\
            .user_agent(BaseApi.user_agent(), BaseApi.user_agent_parameters())

        self.auth_managers = {key: None for key in ['thingspace_oauth',
                                                    'VZ-M2M-Token',
                                                    'thingspace_oauth1',
                                                    'SessionToken']}
        self.auth_managers['thingspace_oauth'] = ThingspaceOauth(
            self.config.thingspace_oauth_credentials, self.global_configuration)
        self.auth_managers['VZ-M2M-Token'] = VzM2MToken(
            self.config.vz_m2m_token_credentials)
        self.auth_managers['thingspace_oauth1'] = ThingspaceOauth1(
            self.config.thingspace_oauth_1_credentials,
            self.global_configuration)
        self.auth_managers['SessionToken'] = SessionToken(
            self.config.session_token_credentials)
        self.global_configuration = self.global_configuration.auth_managers(self.auth_managers)

