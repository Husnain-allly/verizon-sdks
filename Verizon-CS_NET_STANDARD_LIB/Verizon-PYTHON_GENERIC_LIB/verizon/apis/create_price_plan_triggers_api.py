# -*- coding: utf-8 -*-

"""
verizon

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from verizon.api_helper import APIHelper
from verizon.configuration import Server
from verizon.http.api_response import ApiResponse
from verizon.apis.base_api import BaseApi
from verizon.utilities.union_type_lookup import UnionTypeLookUp
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from verizon.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from apimatic_core.authentication.multiple.or_auth_group import Or
from verizon.models.trigger_response import TriggerResponse
from verizon.exceptions.rule_rest_error_response_exception import RuleRestErrorResponseException


class CreatePricePlanTriggersApi(BaseApi):

    """A Controller to access Endpoints in the verizon API."""
    def __init__(self, config):
        super(CreatePricePlanTriggersApi, self).__init__(config)

    def create_trigger_rules(self,
                             body):
        """Does a POST request to /v2/triggers.

        Create a usage trigger at the account level, device level or a price
        plan trigger for all devices on the account

        Args:
            body (AccountLevelCreateTriggerRequest | AccountLevelObject |
                DeviceLevelCreateTriggerRequest |
                AccountGroupShareCreateTriggerRequest |
                AccountShareCreateTriggerRequest |
                PayAsYouGoCreateTriggerRequest | Createtriggerchunk): Create a
                trigger

        Returns:
            ApiResponse: An object with the response value as well as other
                useful information such as status codes and headers.
                Successful request

        Raises:
            ApiException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.THINGSPACE)
            .path('/v2/triggers')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body)
                        .is_required(True)
                        .validator(lambda value: UnionTypeLookUp.get('CreateTriggerRulesBody').validate(value)))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(Or(Single('thingspace_oauth1'), Single('VZ-M2M-Token')))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(TriggerResponse.from_dictionary)
            .is_api_response(True)
            .local_error('default', 'Error response', RuleRestErrorResponseException)
        ).execute()
