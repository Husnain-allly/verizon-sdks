/**
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  dict,
  lazy,
  number,
  object,
  optional,
  Schema,
  string,
  unknown,
} from '../schema';
import { DtoFields, dtoFieldsSchema } from './dtoFields';

export interface ResourceDevice {
  /** Not used in this release, future functionality */
  accountclientid?: string;
  /** The billing account ID. This is the same value as the Account ID */
  billingaccountid?: string;
  /** The Identifier of chipset used by the device */
  chipset?: string;
  /** Timestamp of the record */
  createdon: string;
  /** Name/value pair, where the value is client defined.  The purpose is to keep track of current state per device action. */
  customdata?: Record<string, unknown>;
  /** a short description */
  description?: string;
  /** The Electronic Serial Number (ESN) of the device */
  esn?: number;
  /** Fields to return needed by search */
  fields?: DtoFields;
  /** UUID of the ECPD account the user belongs to */
  foreignid: string;
  /** The manufacturer's hardware version of the device */
  hardwareversion?: string;
  /** The 20-digit Integrated Circuit Card ID (SIM card ID) */
  iccid?: string;
  /** UUID of the user record, assigned at creation */
  id?: string;
  /** The 15-digit International Mobile Equipment ID */
  imei?: number;
  /** The 64-bit International Mobile Subscriber Identity */
  imsi?: number;
  /** Timestamp of the record */
  lastupdated: string;
  /** licenses assigned to the device */
  licenses?: string[];
  /** The Media Access Control address of the device, listed on the device in the format XX-XX-XX-XX-XX-XX or XX:XX:XX:XX:XX:XX */
  mac?: string;
  /** The manufacturer of the device */
  manufacturer?: string;
  /** The 56-bit Mobile Equipment ID */
  meid?: string;
  /** The Mobile Station International Subscriber Directory Number. In the USA, this is 1+ a 10-digit phone number */
  msisdn?: string;
  /** User defined name of the record */
  name?: string;
  /** this field is applicable for BLE sensors. This represents the value of parent gateway device */
  parentdeviceid?: string;
  /** The device model name */
  productmodel?: string;
  /** The id of the provider who is responible for talking to the device */
  providerid?: string;
  /** The numeric value of the Quick Response (QR) code */
  qrcode?: string;
  /** The device reference ID */
  refid?: string;
  /** The type of value represented by `refid` */
  refidtype?: string;
  /** The device's serial number */
  serial?: string;
  services?: string[];
  /** The Stock Keeping Unit (SKU) number of the device */
  sku?: string;
  /** the current device software version */
  softwareversion?: string;
  /** The current status of the device or transaction and will be `success` or `failed` */
  state: string;
  /** The resource version */
  version?: string;
  /** The UUID of the resource version */
  versionid: string;
  /** Data retention period */
  eventretention?: number;
}

export const resourceDeviceSchema: Schema<ResourceDevice> = object({
  accountclientid: ['accountclientid', optional(string())],
  billingaccountid: ['billingaccountid', optional(string())],
  chipset: ['chipset', optional(string())],
  createdon: ['createdon', string()],
  customdata: ['customdata', optional(dict(unknown()))],
  description: ['description', optional(string())],
  esn: ['esn', optional(number())],
  fields: ['fields', optional(lazy(() => dtoFieldsSchema))],
  foreignid: ['foreignid', string()],
  hardwareversion: ['hardwareversion', optional(string())],
  iccid: ['iccid', optional(string())],
  id: ['id', optional(string())],
  imei: ['imei', optional(number())],
  imsi: ['imsi', optional(number())],
  lastupdated: ['lastupdated', string()],
  licenses: ['licenses', optional(array(string()))],
  mac: ['mac', optional(string())],
  manufacturer: ['manufacturer', optional(string())],
  meid: ['meid', optional(string())],
  msisdn: ['msisdn', optional(string())],
  name: ['name', optional(string())],
  parentdeviceid: ['parentdeviceid', optional(string())],
  productmodel: ['productmodel', optional(string())],
  providerid: ['providerid', optional(string())],
  qrcode: ['qrcode', optional(string())],
  refid: ['refid', optional(string())],
  refidtype: ['refidtype', optional(string())],
  serial: ['serial', optional(string())],
  services: ['services', optional(array(string()))],
  sku: ['sku', optional(string())],
  softwareversion: ['softwareversion', optional(string())],
  state: ['state', string()],
  version: ['version', optional(string())],
  versionid: ['versionid', string()],
  eventretention: ['eventretention', optional(number())],
});
