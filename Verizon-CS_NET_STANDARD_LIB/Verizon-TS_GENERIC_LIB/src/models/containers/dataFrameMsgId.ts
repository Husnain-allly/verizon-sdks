/**
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { oneOf, Schema, validateAndMap } from '../../schema';
import { MsgId, msgIdSchema } from '../msgId';
import { MsgId1, msgId1Schema } from '../msgId1';

/** This is a container type for one-of types. */
export type DataFrameMsgId = MsgId | MsgId1;

export const dataFrameMsgIdSchema: Schema<DataFrameMsgId> = oneOf([
  msgIdSchema,
  msgId1Schema,
]);

export namespace DataFrameMsgId {
  /**
   * Validation method to narrow down union type to MsgId type case.
   *
   * This is MsgId case.
   */
  export function isMsgId(value: unknown): value is MsgId {
    const validationResult = validateAndMap(value, msgIdSchema);
    return validationResult.errors === false;
  }

  /**
   * Validation method to narrow down union type to MsgId1 type case.
   *
   * This is MsgId1 case.
   */
  export function isMsgId1(value: unknown): value is MsgId1 {
    const validationResult = validateAndMap(value, msgId1Schema);
    return validationResult.errors === false;
  }
}
