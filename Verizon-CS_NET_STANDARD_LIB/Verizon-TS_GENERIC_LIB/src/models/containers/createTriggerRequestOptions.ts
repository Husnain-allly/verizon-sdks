/**
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { anyOf, Schema, validateAndMap } from '../../schema';
import {
  ActiveAnomalyIndicator,
  activeAnomalyIndicatorSchema,
} from '../activeAnomalyIndicator';
import {
  ActiveTriggerIndicator,
  activeTriggerIndicatorSchema,
} from '../activeTriggerIndicator';
import { TriggerType1, triggerType1Schema } from '../triggerType1';

/** This is a container type for any-of types. */
export type CreateTriggerRequestOptions =
  | TriggerType1
  | ActiveAnomalyIndicator
  | ActiveTriggerIndicator;

export const createTriggerRequestOptionsSchema: Schema<CreateTriggerRequestOptions> = anyOf(
  [
    triggerType1Schema,
    activeAnomalyIndicatorSchema,
    activeTriggerIndicatorSchema,
  ]
);

export namespace CreateTriggerRequestOptions {
  /**
   * Validation method to narrow down union type to TriggerType1 type case.
   *
   * This is TriggerType1 case.
   */
  export function isTriggerType1(value: unknown): value is TriggerType1 {
    const validationResult = validateAndMap(value, triggerType1Schema);
    return validationResult.errors === false;
  }

  /**
   * Validation method to narrow down union type to ActiveAnomalyIndicator type case.
   *
   * This is ActiveAnomalyIndicator case.
   */
  export function isActiveAnomalyIndicator(
    value: unknown
  ): value is ActiveAnomalyIndicator {
    const validationResult = validateAndMap(
      value,
      activeAnomalyIndicatorSchema
    );
    return validationResult.errors === false;
  }

  /**
   * Validation method to narrow down union type to ActiveTriggerIndicator type case.
   *
   * This is ActiveTriggerIndicator case.
   */
  export function isActiveTriggerIndicator(
    value: unknown
  ): value is ActiveTriggerIndicator {
    const validationResult = validateAndMap(
      value,
      activeTriggerIndicatorSchema
    );
    return validationResult.errors === false;
  }
}
