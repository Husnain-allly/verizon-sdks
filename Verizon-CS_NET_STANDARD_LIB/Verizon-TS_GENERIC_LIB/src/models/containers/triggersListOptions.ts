/**
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { anyOf, Schema, validateAndMap } from '../../schema';
import {
  AnomalyTriggerValue,
  anomalyTriggerValueSchema,
} from '../anomalyTriggerValue';
import { TriggerType2, triggerType2Schema } from '../triggerType2';

/** This is a container type for any-of types. */
export type TriggersListOptions = AnomalyTriggerValue | TriggerType2;

export const triggersListOptionsSchema: Schema<TriggersListOptions> = anyOf([
  anomalyTriggerValueSchema,
  triggerType2Schema,
]);

export namespace TriggersListOptions {
  /**
   * Validation method to narrow down union type to AnomalyTriggerValue type case.
   *
   * This is AnomalyTriggerValue case.
   */
  export function isAnomalyTriggerValue(
    value: unknown
  ): value is AnomalyTriggerValue {
    const validationResult = validateAndMap(value, anomalyTriggerValueSchema);
    return validationResult.errors === false;
  }

  /**
   * Validation method to narrow down union type to TriggerType2 type case.
   *
   * This is TriggerType2 case.
   */
  export function isTriggerType2(value: unknown): value is TriggerType2 {
    const validationResult = validateAndMap(value, triggerType2Schema);
    return validationResult.errors === false;
  }
}
