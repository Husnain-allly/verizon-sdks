/**
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { oneOf, Schema, validateAndMap } from '../../schema';
import { AdvisoryItem, advisoryItemSchema } from '../advisoryItem';
import { AdvisoryItem1, advisoryItem1Schema } from '../advisoryItem1';

/** This is a container type for one-of types. */
export type AdvisoryItem2 = AdvisoryItem | AdvisoryItem1;

export const advisoryItem2Schema: Schema<AdvisoryItem2> = oneOf([
  advisoryItemSchema,
  advisoryItem1Schema,
]);

export namespace AdvisoryItem2 {
  /**
   * Validation method to narrow down union type to AdvisoryItem type case.
   *
   * This is AdvisoryItem case.
   */
  export function isAdvisoryItem(value: unknown): value is AdvisoryItem {
    const validationResult = validateAndMap(value, advisoryItemSchema);
    return validationResult.errors === false;
  }

  /**
   * Validation method to narrow down union type to AdvisoryItem1 type case.
   *
   * This is AdvisoryItem1 case.
   */
  export function isAdvisoryItem1(value: unknown): value is AdvisoryItem1 {
    const validationResult = validateAndMap(value, advisoryItem1Schema);
    return validationResult.errors === false;
  }
}
