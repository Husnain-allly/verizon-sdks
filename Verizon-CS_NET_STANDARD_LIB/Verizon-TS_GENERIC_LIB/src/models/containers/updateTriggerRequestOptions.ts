/**
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { anyOf, Schema, validateAndMap } from '../../schema';
import {
  ActiveAnomalyIndicator,
  activeAnomalyIndicatorSchema,
} from '../activeAnomalyIndicator';
import { TriggerType3, triggerType3Schema } from '../triggerType3';

/** This is a container type for any-of types. */
export type UpdateTriggerRequestOptions = TriggerType3 | ActiveAnomalyIndicator;

export const updateTriggerRequestOptionsSchema: Schema<UpdateTriggerRequestOptions> = anyOf(
  [triggerType3Schema, activeAnomalyIndicatorSchema]
);

export namespace UpdateTriggerRequestOptions {
  /**
   * Validation method to narrow down union type to TriggerType3 type case.
   *
   * This is TriggerType3 case.
   */
  export function isTriggerType3(value: unknown): value is TriggerType3 {
    const validationResult = validateAndMap(value, triggerType3Schema);
    return validationResult.errors === false;
  }

  /**
   * Validation method to narrow down union type to ActiveAnomalyIndicator type case.
   *
   * This is ActiveAnomalyIndicator case.
   */
  export function isActiveAnomalyIndicator(
    value: unknown
  ): value is ActiveAnomalyIndicator {
    const validationResult = validateAndMap(
      value,
      activeAnomalyIndicatorSchema
    );
    return validationResult.errors === false;
  }
}
