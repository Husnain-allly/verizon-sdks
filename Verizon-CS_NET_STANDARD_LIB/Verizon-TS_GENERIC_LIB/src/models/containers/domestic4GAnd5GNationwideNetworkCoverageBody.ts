/**
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { anyOf, Schema, validateAndMap } from '../../schema';
import {
  GetWirelessCoverageRequest,
  getWirelessCoverageRequestSchema,
} from '../getWirelessCoverageRequest';
import {
  GetWirelessCoverageRequestFwa,
  getWirelessCoverageRequestFwaSchema,
} from '../getWirelessCoverageRequestFwa';

/** This is a container type for any-of types. */
export type Domestic4GAnd5GNationwideNetworkCoverageBody =
  | GetWirelessCoverageRequest
  | GetWirelessCoverageRequestFwa;

export const domestic4GAnd5GNationwideNetworkCoverageBodySchema: Schema<Domestic4GAnd5GNationwideNetworkCoverageBody> = anyOf(
  [getWirelessCoverageRequestSchema, getWirelessCoverageRequestFwaSchema]
);

export namespace Domestic4GAnd5GNationwideNetworkCoverageBody {
  /**
   * Validation method to narrow down union type to GetWirelessCoverageRequest type case.
   *
   * This is GetWirelessCoverageRequest case.
   */
  export function isGetWirelessCoverageRequest(
    value: unknown
  ): value is GetWirelessCoverageRequest {
    const validationResult = validateAndMap(
      value,
      getWirelessCoverageRequestSchema
    );
    return validationResult.errors === false;
  }

  /**
   * Validation method to narrow down union type to GetWirelessCoverageRequestFwa type case.
   *
   * This is GetWirelessCoverageRequestFWA case.
   */
  export function isGetWirelessCoverageRequestFwa(
    value: unknown
  ): value is GetWirelessCoverageRequestFwa {
    const validationResult = validateAndMap(
      value,
      getWirelessCoverageRequestFwaSchema
    );
    return validationResult.errors === false;
  }
}
