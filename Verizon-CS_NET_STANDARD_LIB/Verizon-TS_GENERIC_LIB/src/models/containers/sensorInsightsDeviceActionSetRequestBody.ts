/**
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { anyOf, Schema, validateAndMap } from '../../schema';
import {
  DtoDeviceActionSetRequest,
  dtoDeviceActionSetRequestSchema,
} from '../dtoDeviceActionSetRequest';
import { DtoDeviceCommand, dtoDeviceCommandSchema } from '../dtoDeviceCommand';

/** This is a container type for any-of types. */
export type SensorInsightsDeviceActionSetRequestBody =
  | DtoDeviceActionSetRequest
  | DtoDeviceCommand;

export const sensorInsightsDeviceActionSetRequestBodySchema: Schema<SensorInsightsDeviceActionSetRequestBody> = anyOf(
  [dtoDeviceActionSetRequestSchema, dtoDeviceCommandSchema]
);

export namespace SensorInsightsDeviceActionSetRequestBody {
  /**
   * Validation method to narrow down union type to DtoDeviceActionSetRequest type case.
   *
   * This is dto.DeviceActionSetRequest case.
   */
  export function isDtoDeviceActionSetRequest(
    value: unknown
  ): value is DtoDeviceActionSetRequest {
    const validationResult = validateAndMap(
      value,
      dtoDeviceActionSetRequestSchema
    );
    return validationResult.errors === false;
  }

  /**
   * Validation method to narrow down union type to DtoDeviceCommand type case.
   *
   * This is dto.deviceCommand case.
   */
  export function isDtoDeviceCommand(
    value: unknown
  ): value is DtoDeviceCommand {
    const validationResult = validateAndMap(value, dtoDeviceCommandSchema);
    return validationResult.errors === false;
  }
}
