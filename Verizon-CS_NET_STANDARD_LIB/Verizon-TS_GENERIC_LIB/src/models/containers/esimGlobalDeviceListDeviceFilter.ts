/**
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { anyOf, Schema, validateAndMap } from '../../schema';
import { DeviceId2, deviceId2Schema } from '../deviceId2';
import { EsimDeviceId, esimDeviceIdSchema } from '../esimDeviceId';

/** This is a container type for any-of types. */
export type EsimGlobalDeviceListDeviceFilter = EsimDeviceId | DeviceId2;

export const esimGlobalDeviceListDeviceFilterSchema: Schema<EsimGlobalDeviceListDeviceFilter> = anyOf(
  [esimDeviceIdSchema, deviceId2Schema]
);

export namespace EsimGlobalDeviceListDeviceFilter {
  /**
   * Validation method to narrow down union type to EsimDeviceId type case.
   *
   * This is eSIMDeviceId case.
   */
  export function isEsimDeviceId(value: unknown): value is EsimDeviceId {
    const validationResult = validateAndMap(value, esimDeviceIdSchema);
    return validationResult.errors === false;
  }

  /**
   * Validation method to narrow down union type to DeviceId2 type case.
   *
   * This is DeviceId2 case.
   */
  export function isDeviceId2(value: unknown): value is DeviceId2 {
    const validationResult = validateAndMap(value, deviceId2Schema);
    return validationResult.errors === false;
  }
}
