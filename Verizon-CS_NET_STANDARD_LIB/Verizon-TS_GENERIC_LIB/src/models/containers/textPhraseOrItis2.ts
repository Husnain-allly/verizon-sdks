/**
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { oneOf, Schema, validateAndMap } from '../../schema';
import { TextPhraseOrItis, textPhraseOrItisSchema } from '../textPhraseOrItis';
import {
  TextPhraseOrItis1,
  textPhraseOrItis1Schema,
} from '../textPhraseOrItis1';

/** This is a container type for one-of types. */
export type TextPhraseOrItis2 = TextPhraseOrItis | TextPhraseOrItis1;

export const textPhraseOrItis2Schema: Schema<TextPhraseOrItis2> = oneOf([
  textPhraseOrItisSchema,
  textPhraseOrItis1Schema,
]);

export namespace TextPhraseOrItis2 {
  /**
   * Validation method to narrow down union type to TextPhraseOrItis type case.
   *
   * This is TextPhraseOrITIS case.
   */
  export function isTextPhraseOrItis(
    value: unknown
  ): value is TextPhraseOrItis {
    const validationResult = validateAndMap(value, textPhraseOrItisSchema);
    return validationResult.errors === false;
  }

  /**
   * Validation method to narrow down union type to TextPhraseOrItis1 type case.
   *
   * This is TextPhraseOrITIS1 case.
   */
  export function isTextPhraseOrItis1(
    value: unknown
  ): value is TextPhraseOrItis1 {
    const validationResult = validateAndMap(value, textPhraseOrItis1Schema);
    return validationResult.errors === false;
  }
}
