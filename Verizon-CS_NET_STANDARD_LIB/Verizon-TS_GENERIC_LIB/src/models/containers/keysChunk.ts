/**
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { anyOf, Schema, validateAndMap } from '../../schema';
import { EnablePromoExp, enablePromoExpSchema } from '../enablePromoExp';
import {
  KeyDataPercentage50,
  keyDataPercentage50Schema,
} from '../keyDataPercentage50';
import { KeyServicePlan, keyServicePlanSchema } from '../keyServicePlan';
import {
  KeysmsPercentage50,
  keysmsPercentage50Schema,
} from '../keysmsPercentage50';
import {
  NoOfDaysB4PromoExp,
  noOfDaysB4PromoExpSchema,
} from '../noOfDaysB4PromoExp';

/** This is a container type for any-of types. */
export type KeysChunk =
  | KeyServicePlan
  | KeyDataPercentage50
  | KeysmsPercentage50
  | NoOfDaysB4PromoExp
  | EnablePromoExp;

export const keysChunkSchema: Schema<KeysChunk> = anyOf([
  keyServicePlanSchema,
  keyDataPercentage50Schema,
  keysmsPercentage50Schema,
  noOfDaysB4PromoExpSchema,
  enablePromoExpSchema,
]);

export namespace KeysChunk {
  /**
   * Validation method to narrow down union type to KeyServicePlan type case.
   *
   * This is keyServicePlan case.
   */
  export function isKeyServicePlan(value: unknown): value is KeyServicePlan {
    const validationResult = validateAndMap(value, keyServicePlanSchema);
    return validationResult.errors === false;
  }

  /**
   * Validation method to narrow down union type to KeyDataPercentage50 type case.
   *
   * This is keyDataPercentage50 case.
   */
  export function isKeyDataPercentage50(
    value: unknown
  ): value is KeyDataPercentage50 {
    const validationResult = validateAndMap(value, keyDataPercentage50Schema);
    return validationResult.errors === false;
  }

  /**
   * Validation method to narrow down union type to KeysmsPercentage50 type case.
   *
   * This is keysmsPercentage50 case.
   */
  export function isKeysmsPercentage50(
    value: unknown
  ): value is KeysmsPercentage50 {
    const validationResult = validateAndMap(value, keysmsPercentage50Schema);
    return validationResult.errors === false;
  }

  /**
   * Validation method to narrow down union type to NoOfDaysB4PromoExp type case.
   *
   * This is NoOfDaysB4PromoExp case.
   */
  export function isNoOfDaysB4PromoExp(
    value: unknown
  ): value is NoOfDaysB4PromoExp {
    const validationResult = validateAndMap(value, noOfDaysB4PromoExpSchema);
    return validationResult.errors === false;
  }

  /**
   * Validation method to narrow down union type to EnablePromoExp type case.
   *
   * This is EnablePromoExp case.
   */
  export function isEnablePromoExp(value: unknown): value is EnablePromoExp {
    const validationResult = validateAndMap(value, enablePromoExpSchema);
    return validationResult.errors === false;
  }
}
