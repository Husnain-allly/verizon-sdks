/**
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { oneOf, Schema, validateAndMap } from '../../schema';
import { Content, contentSchema } from '../content';
import { Content1, content1Schema } from '../content1';
import { Content2, content2Schema } from '../content2';
import { Content3, content3Schema } from '../content3';
import { Content4, content4Schema } from '../content4';

/** This is a container type for one-of types. */
export type DataFrameContent =
  | Content
  | Content1
  | Content2
  | Content3
  | Content4;

export const dataFrameContentSchema: Schema<DataFrameContent> = oneOf([
  contentSchema,
  content1Schema,
  content2Schema,
  content3Schema,
  content4Schema,
]);

export namespace DataFrameContent {
  /**
   * Validation method to narrow down union type to Content type case.
   *
   * This is Content case.
   */
  export function isContent(value: unknown): value is Content {
    const validationResult = validateAndMap(value, contentSchema);
    return validationResult.errors === false;
  }

  /**
   * Validation method to narrow down union type to Content1 type case.
   *
   * This is Content1 case.
   */
  export function isContent1(value: unknown): value is Content1 {
    const validationResult = validateAndMap(value, content1Schema);
    return validationResult.errors === false;
  }

  /**
   * Validation method to narrow down union type to Content2 type case.
   *
   * This is Content2 case.
   */
  export function isContent2(value: unknown): value is Content2 {
    const validationResult = validateAndMap(value, content2Schema);
    return validationResult.errors === false;
  }

  /**
   * Validation method to narrow down union type to Content3 type case.
   *
   * This is Content3 case.
   */
  export function isContent3(value: unknown): value is Content3 {
    const validationResult = validateAndMap(value, content3Schema);
    return validationResult.errors === false;
  }

  /**
   * Validation method to narrow down union type to Content4 type case.
   *
   * This is Content4 case.
   */
  export function isContent4(value: unknown): value is Content4 {
    const validationResult = validateAndMap(value, content4Schema);
    return validationResult.errors === false;
  }
}
