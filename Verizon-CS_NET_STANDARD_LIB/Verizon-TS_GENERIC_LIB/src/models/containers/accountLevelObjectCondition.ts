/**
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { anyOf, Schema, validateAndMap } from '../../schema';
import {
  ConditionObjectCall,
  conditionObjectCallSchema,
} from '../conditionObjectCall';
import { ConditionType, conditionTypeSchema } from '../conditionType';

/** This is a container type for any-of types. */
export type AccountLevelObjectCondition = ConditionType | ConditionObjectCall;

export const accountLevelObjectConditionSchema: Schema<AccountLevelObjectCondition> = anyOf(
  [conditionTypeSchema, conditionObjectCallSchema]
);

export namespace AccountLevelObjectCondition {
  /**
   * Validation method to narrow down union type to ConditionType type case.
   *
   * This is conditionType case.
   */
  export function isConditionType(value: unknown): value is ConditionType {
    const validationResult = validateAndMap(value, conditionTypeSchema);
    return validationResult.errors === false;
  }

  /**
   * Validation method to narrow down union type to ConditionObjectCall type case.
   *
   * This is conditionObjectCall case.
   */
  export function isConditionObjectCall(
    value: unknown
  ): value is ConditionObjectCall {
    const validationResult = validateAndMap(value, conditionObjectCallSchema);
    return validationResult.errors === false;
  }
}
