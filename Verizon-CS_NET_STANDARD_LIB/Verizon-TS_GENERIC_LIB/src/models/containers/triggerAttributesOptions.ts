/**
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { anyOf, Schema, validateAndMap } from '../../schema';
import {
  DataPercentage100TriggerAttribute,
  dataPercentage100TriggerAttributeSchema,
} from '../dataPercentage100TriggerAttribute';
import {
  DataPercentage50TriggerAttribute,
  dataPercentage50TriggerAttributeSchema,
} from '../dataPercentage50TriggerAttribute';
import {
  DataPercentage75TriggerAttribute,
  dataPercentage75TriggerAttributeSchema,
} from '../dataPercentage75TriggerAttribute';
import {
  DataPercentage90TriggerAttribute,
  dataPercentage90TriggerAttributeSchema,
} from '../dataPercentage90TriggerAttribute';
import {
  NotificationGroupNameTriggerAttribute,
  notificationGroupNameTriggerAttributeSchema,
} from '../notificationGroupNameTriggerAttribute';
import {
  ServicePlanTriggerAttribute,
  servicePlanTriggerAttributeSchema,
} from '../servicePlanTriggerAttribute';

/** This is a container type for any-of types. */
export type TriggerAttributesOptions =
  | NotificationGroupNameTriggerAttribute
  | ServicePlanTriggerAttribute
  | DataPercentage50TriggerAttribute
  | DataPercentage75TriggerAttribute
  | DataPercentage90TriggerAttribute
  | DataPercentage100TriggerAttribute;

export const triggerAttributesOptionsSchema: Schema<TriggerAttributesOptions> = anyOf(
  [
    notificationGroupNameTriggerAttributeSchema,
    servicePlanTriggerAttributeSchema,
    dataPercentage50TriggerAttributeSchema,
    dataPercentage75TriggerAttributeSchema,
    dataPercentage90TriggerAttributeSchema,
    dataPercentage100TriggerAttributeSchema,
  ]
);

export namespace TriggerAttributesOptions {
  /**
   * Validation method to narrow down union type to NotificationGroupNameTriggerAttribute type case.
   *
   * This is NotificationGroupNameTriggerAttribute case.
   */
  export function isNotificationGroupNameTriggerAttribute(
    value: unknown
  ): value is NotificationGroupNameTriggerAttribute {
    const validationResult = validateAndMap(
      value,
      notificationGroupNameTriggerAttributeSchema
    );
    return validationResult.errors === false;
  }

  /**
   * Validation method to narrow down union type to ServicePlanTriggerAttribute type case.
   *
   * This is ServicePlanTriggerAttribute case.
   */
  export function isServicePlanTriggerAttribute(
    value: unknown
  ): value is ServicePlanTriggerAttribute {
    const validationResult = validateAndMap(
      value,
      servicePlanTriggerAttributeSchema
    );
    return validationResult.errors === false;
  }

  /**
   * Validation method to narrow down union type to DataPercentage50TriggerAttribute type case.
   *
   * This is DataPercentage50TriggerAttribute case.
   */
  export function isDataPercentage50TriggerAttribute(
    value: unknown
  ): value is DataPercentage50TriggerAttribute {
    const validationResult = validateAndMap(
      value,
      dataPercentage50TriggerAttributeSchema
    );
    return validationResult.errors === false;
  }

  /**
   * Validation method to narrow down union type to DataPercentage75TriggerAttribute type case.
   *
   * This is DataPercentage75TriggerAttribute case.
   */
  export function isDataPercentage75TriggerAttribute(
    value: unknown
  ): value is DataPercentage75TriggerAttribute {
    const validationResult = validateAndMap(
      value,
      dataPercentage75TriggerAttributeSchema
    );
    return validationResult.errors === false;
  }

  /**
   * Validation method to narrow down union type to DataPercentage90TriggerAttribute type case.
   *
   * This is DataPercentage90TriggerAttribute case.
   */
  export function isDataPercentage90TriggerAttribute(
    value: unknown
  ): value is DataPercentage90TriggerAttribute {
    const validationResult = validateAndMap(
      value,
      dataPercentage90TriggerAttributeSchema
    );
    return validationResult.errors === false;
  }

  /**
   * Validation method to narrow down union type to DataPercentage100TriggerAttribute type case.
   *
   * This is DataPercentage100TriggerAttribute case.
   */
  export function isDataPercentage100TriggerAttribute(
    value: unknown
  ): value is DataPercentage100TriggerAttribute {
    const validationResult = validateAndMap(
      value,
      dataPercentage100TriggerAttributeSchema
    );
    return validationResult.errors === false;
  }
}
