/**
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  lazy,
  optional,
  Schema,
  string,
  typedExpandoObject,
  unknown,
} from '../schema';
import {
  TargetAuthenticationBodyHeaders,
  targetAuthenticationBodyHeadersSchema,
} from './targetAuthenticationBodyHeaders';
import {
  TargetAuthenticationBodyHost,
  targetAuthenticationBodyHostSchema,
} from './targetAuthenticationBodyHost';

export interface TargetAuthenticationBody {
  /** Authentication grant type. */
  grantType?: string;
  /** Refresh token. */
  refreshToken?: string;
  /** Authentication scopes. */
  scope?: string;
  /** Authentication headers. */
  headers?: TargetAuthenticationBodyHeaders;
  /** Host information. */
  host?: TargetAuthenticationBodyHost;
  additionalProperties?: Record<string, unknown>;
}

export const targetAuthenticationBodySchema: Schema<TargetAuthenticationBody> = typedExpandoObject(
  {
    grantType: ['grant_type', optional(string())],
    refreshToken: ['refresh_token', optional(string())],
    scope: ['scope', optional(string())],
    headers: [
      'headers',
      optional(lazy(() => targetAuthenticationBodyHeadersSchema)),
    ],
    host: ['host', optional(lazy(() => targetAuthenticationBodyHostSchema))],
  },
  'additionalProperties',
  optional(unknown())
);
