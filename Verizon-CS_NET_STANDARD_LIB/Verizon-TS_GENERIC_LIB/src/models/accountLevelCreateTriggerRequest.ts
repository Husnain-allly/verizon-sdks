/**
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import {
  array,
  boolean,
  lazy,
  number,
  object,
  optional,
  Schema,
  string,
} from '../schema';
import { Active, activeSchema } from './active';
import {
  AccountLevelCreateTriggerRequestSmsNumbers,
  accountLevelCreateTriggerRequestSmsNumbersSchema,
} from './containers/accountLevelCreateTriggerRequestSmsNumbers';
import { DataTrigger, dataTriggerSchema } from './dataTrigger';
import {
  Notificationarray,
  notificationarraySchema,
} from './notificationarray';
import { TriggerCategory, triggerCategorySchema } from './triggerCategory';

export interface AccountLevelCreateTriggerRequest {
  /** The user defined name of the trigger */
  triggerName?: string;
  /** The Enterprise Customer Profile Database ID */
  ecpdId?: string;
  /** The type of trigger being created or modified */
  triggerCategory?: TriggerCategory;
  dataTrigger?: DataTrigger;
  notification?: Notificationarray;
  notificationType?: string;
  callback?: boolean;
  emailNotification?: boolean;
  notificationGroupName?: string;
  notificationFrequencyFactor?: number;
  notificationFrequencyInterval?: string;
  externalEmailRecipients?: string;
  smsNotification?: boolean;
  smsNumbers?: AccountLevelCreateTriggerRequestSmsNumbers[];
  reminder?: boolean;
  severity?: string;
  /** A flag to indicate of the trigger is active, true, or not, false */
  active?: Active;
}

export const accountLevelCreateTriggerRequestSchema: Schema<AccountLevelCreateTriggerRequest> = object(
  {
    triggerName: ['triggerName', optional(string())],
    ecpdId: ['ecpdId', optional(string())],
    triggerCategory: ['triggerCategory', optional(triggerCategorySchema)],
    dataTrigger: ['dataTrigger', optional(lazy(() => dataTriggerSchema))],
    notification: [
      'notification',
      optional(lazy(() => notificationarraySchema)),
    ],
    notificationType: ['notificationType', optional(string())],
    callback: ['callback', optional(boolean())],
    emailNotification: ['emailNotification', optional(boolean())],
    notificationGroupName: ['notificationGroupName', optional(string())],
    notificationFrequencyFactor: [
      'notificationFrequencyFactor',
      optional(number()),
    ],
    notificationFrequencyInterval: [
      'notificationFrequencyInterval',
      optional(string()),
    ],
    externalEmailRecipients: ['externalEmailRecipients', optional(string())],
    smsNotification: ['smsNotification', optional(boolean())],
    smsNumbers: [
      'smsNumbers',
      optional(array(accountLevelCreateTriggerRequestSmsNumbersSchema)),
    ],
    reminder: ['reminder', optional(boolean())],
    severity: ['severity', optional(string())],
    active: ['active', optional(activeSchema)],
  }
);
