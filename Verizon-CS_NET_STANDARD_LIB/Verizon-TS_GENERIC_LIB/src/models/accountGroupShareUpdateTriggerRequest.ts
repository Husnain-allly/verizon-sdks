/**
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

import { lazy, object, optional, Schema, string } from '../schema';
import {
  AccountGroupShareObject,
  accountGroupShareObjectSchema,
} from './accountGroupShareObject';
import { Active, activeSchema } from './active';
import {
  Notificationarray,
  notificationarraySchema,
} from './notificationarray';
import { TriggerCategory, triggerCategorySchema } from './triggerCategory';

export interface AccountGroupShareUpdateTriggerRequest {
  /** The system assigned UUID of the trigger */
  triggerId?: string;
  /** The user defined name of the trigger */
  triggerName?: string;
  /** The numeric name of the account and must include leading zeroes */
  accountName?: string;
  /** The type of trigger being created or modified */
  triggerCategory?: TriggerCategory;
  dataTrigger?: AccountGroupShareObject;
  notification?: Notificationarray;
  /** A flag to indicate of the trigger is active, true, or not, false */
  active?: Active;
}

export const accountGroupShareUpdateTriggerRequestSchema: Schema<AccountGroupShareUpdateTriggerRequest> = object(
  {
    triggerId: ['triggerId', optional(string())],
    triggerName: ['triggerName', optional(string())],
    accountName: ['accountName', optional(string())],
    triggerCategory: ['triggerCategory', optional(triggerCategorySchema)],
    dataTrigger: [
      'dataTrigger',
      optional(lazy(() => accountGroupShareObjectSchema)),
    ],
    notification: [
      'notification',
      optional(lazy(() => notificationarraySchema)),
    ],
    active: ['active', optional(activeSchema)],
  }
);
