# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # DtoLastReportedTimeRequest Model.
  class DtoLastReportedTimeRequest < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The numeric account name, which must include leading zeros
    # @return [String]
    attr_accessor :accountname

    # Device identifiers, one or more are required
    # @return [DtoDeviceResourceIdentifier]
    attr_accessor :resourceidentifier

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['accountname'] = 'accountname'
      @_hash['resourceidentifier'] = 'resourceidentifier'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        accountname
        resourceidentifier
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(accountname: SKIP, resourceidentifier: SKIP,
                   additional_properties: nil)
      # Add additional model properties to the instance
      additional_properties = {} if additional_properties.nil?

      @accountname = accountname unless accountname == SKIP
      @resourceidentifier = resourceidentifier unless resourceidentifier == SKIP
      @additional_properties = additional_properties
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      accountname = hash.key?('accountname') ? hash['accountname'] : SKIP
      resourceidentifier = DtoDeviceResourceIdentifier.from_hash(hash['resourceidentifier']) if
        hash['resourceidentifier']

      # Create a new hash for additional properties, removing known properties.
      new_hash = hash.reject { |k, _| names.value?(k) }

      additional_properties = APIHelper.get_additional_properties(
        new_hash, proc { |value| value }
      )

      # Create object from extracted values.
      DtoLastReportedTimeRequest.new(accountname: accountname,
                                     resourceidentifier: resourceidentifier,
                                     additional_properties: additional_properties)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} accountname: #{@accountname}, resourceidentifier: #{@resourceidentifier},"\
      " additional_properties: #{@additional_properties}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} accountname: #{@accountname.inspect}, resourceidentifier:"\
      " #{@resourceidentifier.inspect}, additional_properties: #{@additional_properties}>"
    end
  end
end
