# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # DtoUserDto Model.
  class DtoUserDto < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Contact email for the group
    # @return [String]
    attr_accessor :email

    # The first name in the user record
    # @return [String]
    attr_accessor :firstname

    # The last name in the user record
    # @return [String]
    attr_accessor :lastname

    # The Mobile Directory Number
    # @return [String]
    attr_accessor :mdn

    # Name/value pair, where the value is client defined.  The purpose is to
    # keep track of current state per device action.
    # @return [Hash[String, Object]]
    attr_accessor :customdata

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['email'] = 'email'
      @_hash['firstname'] = 'firstname'
      @_hash['lastname'] = 'lastname'
      @_hash['mdn'] = 'mdn'
      @_hash['customdata'] = 'customdata'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        email
        firstname
        lastname
        mdn
        customdata
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(email: SKIP, firstname: SKIP, lastname: SKIP, mdn: SKIP,
                   customdata: SKIP)
      @email = email unless email == SKIP
      @firstname = firstname unless firstname == SKIP
      @lastname = lastname unless lastname == SKIP
      @mdn = mdn unless mdn == SKIP
      @customdata = customdata unless customdata == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      email = hash.key?('email') ? hash['email'] : SKIP
      firstname = hash.key?('firstname') ? hash['firstname'] : SKIP
      lastname = hash.key?('lastname') ? hash['lastname'] : SKIP
      mdn = hash.key?('mdn') ? hash['mdn'] : SKIP
      customdata = hash.key?('customdata') ? hash['customdata'] : SKIP

      # Create object from extracted values.
      DtoUserDto.new(email: email,
                     firstname: firstname,
                     lastname: lastname,
                     mdn: mdn,
                     customdata: customdata)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} email: #{@email}, firstname: #{@firstname}, lastname: #{@lastname}, mdn:"\
      " #{@mdn}, customdata: #{@customdata}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} email: #{@email.inspect}, firstname: #{@firstname.inspect}, lastname:"\
      " #{@lastname.inspect}, mdn: #{@mdn.inspect}, customdata: #{@customdata.inspect}>"
    end
  end
end
