# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # M5GBiAddress Model.
  class M5GBiAddress < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :address_line1

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :city

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :state

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :zip

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :zip_4

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :phone

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :phone_type

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :email_address

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['address_line1'] = 'addressLine1'
      @_hash['city'] = 'city'
      @_hash['state'] = 'state'
      @_hash['zip'] = 'zip'
      @_hash['zip_4'] = 'zip+4'
      @_hash['phone'] = 'phone'
      @_hash['phone_type'] = 'phoneType'
      @_hash['email_address'] = 'emailAddress'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        address_line1
        city
        state
        zip
        zip_4
        phone
        phone_type
        email_address
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(address_line1: SKIP, city: SKIP, state: SKIP, zip: SKIP,
                   zip_4: SKIP, phone: SKIP, phone_type: SKIP,
                   email_address: SKIP, additional_properties: nil)
      # Add additional model properties to the instance
      additional_properties = {} if additional_properties.nil?

      @address_line1 = address_line1 unless address_line1 == SKIP
      @city = city unless city == SKIP
      @state = state unless state == SKIP
      @zip = zip unless zip == SKIP
      @zip_4 = zip_4 unless zip_4 == SKIP
      @phone = phone unless phone == SKIP
      @phone_type = phone_type unless phone_type == SKIP
      @email_address = email_address unless email_address == SKIP
      @additional_properties = additional_properties
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      address_line1 = hash.key?('addressLine1') ? hash['addressLine1'] : SKIP
      city = hash.key?('city') ? hash['city'] : SKIP
      state = hash.key?('state') ? hash['state'] : SKIP
      zip = hash.key?('zip') ? hash['zip'] : SKIP
      zip_4 = hash.key?('zip+4') ? hash['zip+4'] : SKIP
      phone = hash.key?('phone') ? hash['phone'] : SKIP
      phone_type = hash.key?('phoneType') ? hash['phoneType'] : SKIP
      email_address = hash.key?('emailAddress') ? hash['emailAddress'] : SKIP

      # Create a new hash for additional properties, removing known properties.
      new_hash = hash.reject { |k, _| names.value?(k) }

      additional_properties = APIHelper.get_additional_properties(
        new_hash, proc { |value| value }
      )

      # Create object from extracted values.
      M5GBiAddress.new(address_line1: address_line1,
                       city: city,
                       state: state,
                       zip: zip,
                       zip_4: zip_4,
                       phone: phone,
                       phone_type: phone_type,
                       email_address: email_address,
                       additional_properties: additional_properties)
    end

    # Validates an instance of the object from a given value.
    # @param [M5GBiAddress | Hash] The value against the validation is performed.
    def self.validate(value)
      return true if value.instance_of? self

      return false unless value.instance_of? Hash

      true
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} address_line1: #{@address_line1}, city: #{@city}, state: #{@state}, zip:"\
      " #{@zip}, zip_4: #{@zip_4}, phone: #{@phone}, phone_type: #{@phone_type}, email_address:"\
      " #{@email_address}, additional_properties: #{@additional_properties}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} address_line1: #{@address_line1.inspect}, city: #{@city.inspect}, state:"\
      " #{@state.inspect}, zip: #{@zip.inspect}, zip_4: #{@zip_4.inspect}, phone:"\
      " #{@phone.inspect}, phone_type: #{@phone_type.inspect}, email_address:"\
      " #{@email_address.inspect}, additional_properties: #{@additional_properties}>"
    end
  end
end
