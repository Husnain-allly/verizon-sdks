# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # SmsOptionsSendRequest Model.
  class SmsOptionsSendRequest < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :service_plan

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :sms_message

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['service_plan'] = 'servicePlan'
      @_hash['sms_message'] = 'smsMessage'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        service_plan
        sms_message
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(service_plan: SKIP, sms_message: SKIP)
      @service_plan = service_plan unless service_plan == SKIP
      @sms_message = sms_message unless sms_message == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      service_plan = hash.key?('servicePlan') ? hash['servicePlan'] : SKIP
      sms_message = hash.key?('smsMessage') ? hash['smsMessage'] : SKIP

      # Create object from extracted values.
      SmsOptionsSendRequest.new(service_plan: service_plan,
                                sms_message: sms_message)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} service_plan: #{@service_plan}, sms_message: #{@sms_message}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} service_plan: #{@service_plan.inspect}, sms_message:"\
      " #{@sms_message.inspect}>"
    end
  end
end
