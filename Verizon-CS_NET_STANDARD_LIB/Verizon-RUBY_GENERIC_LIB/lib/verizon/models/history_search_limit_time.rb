# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require 'date'
module Verizon
  # The time period for which a request should retrieve data, beginning with the
  # limitTime.startOn and proceeding with the limitTime.duration.
  class HistorySearchLimitTime < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The starting date-time for this request.
    # @return [DateTime]
    attr_accessor :start_on

    # Describes value and unit of time.
    # @return [NumericalData]
    attr_accessor :duration

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['start_on'] = 'startOn'
      @_hash['duration'] = 'duration'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        start_on
        duration
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(start_on: SKIP, duration: SKIP, additional_properties: nil)
      # Add additional model properties to the instance
      additional_properties = {} if additional_properties.nil?

      @start_on = start_on unless start_on == SKIP
      @duration = duration unless duration == SKIP
      @additional_properties = additional_properties
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      start_on = if hash.key?('startOn')
                   (DateTimeHelper.from_rfc3339(hash['startOn']) if hash['startOn'])
                 else
                   SKIP
                 end
      duration = NumericalData.from_hash(hash['duration']) if hash['duration']

      # Create a new hash for additional properties, removing known properties.
      new_hash = hash.reject { |k, _| names.value?(k) }

      additional_properties = APIHelper.get_additional_properties(
        new_hash, proc { |value| value }
      )

      # Create object from extracted values.
      HistorySearchLimitTime.new(start_on: start_on,
                                 duration: duration,
                                 additional_properties: additional_properties)
    end

    def to_custom_start_on
      DateTimeHelper.to_rfc3339(start_on)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} start_on: #{@start_on}, duration: #{@duration}, additional_properties:"\
      " #{@additional_properties}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} start_on: #{@start_on.inspect}, duration: #{@duration.inspect},"\
      " additional_properties: #{@additional_properties}>"
    end
  end
end
