# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # Notification SMS details.
  class SmsNumber < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :carrier

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :number

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['carrier'] = 'carrier'
      @_hash['number'] = 'number'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        carrier
        number
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(carrier: SKIP, number: SKIP, additional_properties: nil)
      # Add additional model properties to the instance
      additional_properties = {} if additional_properties.nil?

      @carrier = carrier unless carrier == SKIP
      @number = number unless number == SKIP
      @additional_properties = additional_properties
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      carrier = hash.key?('carrier') ? hash['carrier'] : SKIP
      number = hash.key?('number') ? hash['number'] : SKIP

      # Create a new hash for additional properties, removing known properties.
      new_hash = hash.reject { |k, _| names.value?(k) }

      additional_properties = APIHelper.get_additional_properties(
        new_hash, proc { |value| value }
      )

      # Create object from extracted values.
      SmsNumber.new(carrier: carrier,
                    number: number,
                    additional_properties: additional_properties)
    end

    # Validates an instance of the object from a given value.
    # @param [SmsNumber | Hash] The value against the validation is performed.
    def self.validate(value)
      return true if value.instance_of? self

      return false unless value.instance_of? Hash

      true
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} carrier: #{@carrier}, number: #{@number}, additional_properties:"\
      " #{@additional_properties}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} carrier: #{@carrier.inspect}, number: #{@number.inspect},"\
      " additional_properties: #{@additional_properties}>"
    end
  end
end
