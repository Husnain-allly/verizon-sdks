# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # Request to add the devices.
  class AddDevicesRequest < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The initial service state for the devices. The only valid state is
    # “Preactive.”
    # @return [String]
    attr_accessor :state

    # The devices that you want to add.
    # @return [Array[AccountDeviceList]]
    attr_accessor :devices_to_add

    # The billing account to which the devices are added.
    # @return [String]
    attr_accessor :account_name

    # The names and values for any custom fields that you want set for the
    # devices as they are added to the account.
    # @return [Array[CustomFields]]
    attr_accessor :custom_fields

    # The name of a device group to add the devices to. They are added to the
    # default device group if you don't include this parameter.
    # @return [String]
    attr_accessor :group_name

    # The Stock Keeping Unit (SKU) number of a 4G device type with an embedded
    # SIM.
    # @return [String]
    attr_accessor :sku_number

    # The Stock Keeping Unit (SKU) number of a 4G device type with an embedded
    # SIM.
    # @return [String]
    attr_accessor :smsr_oid

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['state'] = 'state'
      @_hash['devices_to_add'] = 'devicesToAdd'
      @_hash['account_name'] = 'accountName'
      @_hash['custom_fields'] = 'customFields'
      @_hash['group_name'] = 'groupName'
      @_hash['sku_number'] = 'skuNumber'
      @_hash['smsr_oid'] = 'smsrOid'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        account_name
        custom_fields
        group_name
        sku_number
        smsr_oid
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(state:, devices_to_add:, account_name: SKIP,
                   custom_fields: SKIP, group_name: SKIP, sku_number: SKIP,
                   smsr_oid: SKIP, additional_properties: nil)
      # Add additional model properties to the instance
      additional_properties = {} if additional_properties.nil?

      @state = state
      @devices_to_add = devices_to_add
      @account_name = account_name unless account_name == SKIP
      @custom_fields = custom_fields unless custom_fields == SKIP
      @group_name = group_name unless group_name == SKIP
      @sku_number = sku_number unless sku_number == SKIP
      @smsr_oid = smsr_oid unless smsr_oid == SKIP
      @additional_properties = additional_properties
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      state = hash.key?('state') ? hash['state'] : nil
      # Parameter is an array, so we need to iterate through it
      devices_to_add = nil
      unless hash['devicesToAdd'].nil?
        devices_to_add = []
        hash['devicesToAdd'].each do |structure|
          devices_to_add << (AccountDeviceList.from_hash(structure) if structure)
        end
      end

      devices_to_add = nil unless hash.key?('devicesToAdd')
      account_name = hash.key?('accountName') ? hash['accountName'] : SKIP
      # Parameter is an array, so we need to iterate through it
      custom_fields = nil
      unless hash['customFields'].nil?
        custom_fields = []
        hash['customFields'].each do |structure|
          custom_fields << (CustomFields.from_hash(structure) if structure)
        end
      end

      custom_fields = SKIP unless hash.key?('customFields')
      group_name = hash.key?('groupName') ? hash['groupName'] : SKIP
      sku_number = hash.key?('skuNumber') ? hash['skuNumber'] : SKIP
      smsr_oid = hash.key?('smsrOid') ? hash['smsrOid'] : SKIP

      # Create a new hash for additional properties, removing known properties.
      new_hash = hash.reject { |k, _| names.value?(k) }

      additional_properties = APIHelper.get_additional_properties(
        new_hash, proc { |value| value }
      )

      # Create object from extracted values.
      AddDevicesRequest.new(state: state,
                            devices_to_add: devices_to_add,
                            account_name: account_name,
                            custom_fields: custom_fields,
                            group_name: group_name,
                            sku_number: sku_number,
                            smsr_oid: smsr_oid,
                            additional_properties: additional_properties)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} state: #{@state}, devices_to_add: #{@devices_to_add}, account_name:"\
      " #{@account_name}, custom_fields: #{@custom_fields}, group_name: #{@group_name},"\
      " sku_number: #{@sku_number}, smsr_oid: #{@smsr_oid}, additional_properties:"\
      " #{@additional_properties}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} state: #{@state.inspect}, devices_to_add: #{@devices_to_add.inspect},"\
      " account_name: #{@account_name.inspect}, custom_fields: #{@custom_fields.inspect},"\
      " group_name: #{@group_name.inspect}, sku_number: #{@sku_number.inspect}, smsr_oid:"\
      " #{@smsr_oid.inspect}, additional_properties: #{@additional_properties}>"
    end
  end
end
