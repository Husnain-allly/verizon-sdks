# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # ResourceOnBoardSensor Model.
  class ResourceOnBoardSensor < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # the IEEE EUI64 address space used to identify a device. It is supplied by
    # the device manufacturer
    # @return [String]
    attr_accessor :deveui

    # global application ID in IEEE EUI64 address space that uniquely identifies
    # the entity able to process the JoinReq frame
    # @return [String]
    attr_accessor :appeui

    # an encryption key used for messages during every over the air activation
    # @return [String]
    attr_accessor :appkey

    # Class of the sensor device. Valid values are Class A (A), Class B (B), and
    # Class C (C). All LoRaWAN devices must implement Class A
    # @return [String]
    attr_accessor :mclass

    # The kind of sensor device
    # @return [String]
    attr_accessor :kind

    # The kind of sensor device
    # @return [String]
    attr_accessor :description

    # The kind of sensor device
    # @return [String]
    attr_accessor :name

    # Name/value pair, where the value is client defined.  The purpose is to
    # keep track of current state per device action.
    # @return [Hash[String, Object]]
    attr_accessor :customdata

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['deveui'] = 'deveui'
      @_hash['appeui'] = 'appeui'
      @_hash['appkey'] = 'appkey'
      @_hash['mclass'] = 'class'
      @_hash['kind'] = 'kind'
      @_hash['description'] = 'description'
      @_hash['name'] = 'name'
      @_hash['customdata'] = 'customdata'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        customdata
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(deveui:, appeui:, appkey:, mclass:, kind:, description:,
                   name:, customdata: SKIP)
      @deveui = deveui
      @appeui = appeui
      @appkey = appkey
      @mclass = mclass
      @kind = kind
      @description = description
      @name = name
      @customdata = customdata unless customdata == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      deveui = hash.key?('deveui') ? hash['deveui'] : nil
      appeui = hash.key?('appeui') ? hash['appeui'] : nil
      appkey = hash.key?('appkey') ? hash['appkey'] : nil
      mclass = hash.key?('class') ? hash['class'] : nil
      kind = hash.key?('kind') ? hash['kind'] : nil
      description = hash.key?('description') ? hash['description'] : nil
      name = hash.key?('name') ? hash['name'] : nil
      customdata = hash.key?('customdata') ? hash['customdata'] : SKIP

      # Create object from extracted values.
      ResourceOnBoardSensor.new(deveui: deveui,
                                appeui: appeui,
                                appkey: appkey,
                                mclass: mclass,
                                kind: kind,
                                description: description,
                                name: name,
                                customdata: customdata)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} deveui: #{@deveui}, appeui: #{@appeui}, appkey: #{@appkey}, mclass:"\
      " #{@mclass}, kind: #{@kind}, description: #{@description}, name: #{@name}, customdata:"\
      " #{@customdata}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} deveui: #{@deveui.inspect}, appeui: #{@appeui.inspect}, appkey:"\
      " #{@appkey.inspect}, mclass: #{@mclass.inspect}, kind: #{@kind.inspect}, description:"\
      " #{@description.inspect}, name: #{@name.inspect}, customdata: #{@customdata.inspect}>"
    end
  end
end
