# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # DtoUpdateUserRequest Model.
  class DtoUpdateUserRequest < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The numeric account name, which must include leading zeros
    # @return [String]
    attr_accessor :accountname

    # UUID of the user record, assigned at creation
    # @return [String]
    attr_accessor :id

    # UUID of the user record, assigned at creation
    # @return [DtoUserDto]
    attr_accessor :user

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['accountname'] = 'accountname'
      @_hash['id'] = 'id'
      @_hash['user'] = 'user'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        accountname
        id
        user
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(accountname: SKIP, id: SKIP, user: SKIP)
      @accountname = accountname unless accountname == SKIP
      @id = id unless id == SKIP
      @user = user unless user == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      accountname = hash.key?('accountname') ? hash['accountname'] : SKIP
      id = hash.key?('id') ? hash['id'] : SKIP
      user = DtoUserDto.from_hash(hash['user']) if hash['user']

      # Create object from extracted values.
      DtoUpdateUserRequest.new(accountname: accountname,
                               id: id,
                               user: user)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} accountname: #{@accountname}, id: #{@id}, user: #{@user}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} accountname: #{@accountname.inspect}, id: #{@id.inspect}, user:"\
      " #{@user.inspect}>"
    end
  end
end
