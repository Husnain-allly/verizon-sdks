# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # Trigger details.
  class AnomalyTriggerValue < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The system assigned name of the trigger being updated.
    # @return [String]
    attr_accessor :trigger_id

    # The user defined name of the trigger.
    # @return [String]
    attr_accessor :trigger_name

    # The user assigned name of the organization associated with the trigger.
    # @return [String]
    attr_accessor :organization_name

    # This is the value to use in the request body to detect anomalous
    # behaivior. The values in this table will only be relevant when this
    # parameter is set to this value.
    # @return [String]
    attr_accessor :trigger_category

    # Additional details and keys for the trigger.
    # @return [Array[Object]]
    attr_accessor :trigger_attributes

    # Timestamp for whe the trigger was created.
    # @return [String]
    attr_accessor :created_at

    # Timestamp for the most recent time the trigger was modified.
    # @return [String]
    attr_accessor :modified_at

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['trigger_id'] = 'triggerId'
      @_hash['trigger_name'] = 'triggerName'
      @_hash['organization_name'] = 'organizationName'
      @_hash['trigger_category'] = 'triggerCategory'
      @_hash['trigger_attributes'] = 'triggerAttributes'
      @_hash['created_at'] = 'createdAt'
      @_hash['modified_at'] = 'modifiedAt'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        trigger_id
        trigger_name
        organization_name
        trigger_category
        trigger_attributes
        created_at
        modified_at
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(trigger_id: SKIP, trigger_name: SKIP,
                   organization_name: SKIP, trigger_category: SKIP,
                   trigger_attributes: SKIP, created_at: SKIP,
                   modified_at: SKIP, additional_properties: nil)
      # Add additional model properties to the instance
      additional_properties = {} if additional_properties.nil?

      @trigger_id = trigger_id unless trigger_id == SKIP
      @trigger_name = trigger_name unless trigger_name == SKIP
      @organization_name = organization_name unless organization_name == SKIP
      @trigger_category = trigger_category unless trigger_category == SKIP
      @trigger_attributes = trigger_attributes unless trigger_attributes == SKIP
      @created_at = created_at unless created_at == SKIP
      @modified_at = modified_at unless modified_at == SKIP
      @additional_properties = additional_properties
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      trigger_id = hash.key?('triggerId') ? hash['triggerId'] : SKIP
      trigger_name = hash.key?('triggerName') ? hash['triggerName'] : SKIP
      organization_name =
        hash.key?('organizationName') ? hash['organizationName'] : SKIP
      trigger_category =
        hash.key?('triggerCategory') ? hash['triggerCategory'] : SKIP
      trigger_attributes = hash.key?('triggerAttributes') ? APIHelper.deserialize_union_type(
        UnionTypeLookUp.get(:TriggerAttributesOptions), hash['triggerAttributes']
      ) : SKIP
      created_at = hash.key?('createdAt') ? hash['createdAt'] : SKIP
      modified_at = hash.key?('modifiedAt') ? hash['modifiedAt'] : SKIP

      # Create a new hash for additional properties, removing known properties.
      new_hash = hash.reject { |k, _| names.value?(k) }

      additional_properties = APIHelper.get_additional_properties(
        new_hash, proc { |value| value }
      )

      # Create object from extracted values.
      AnomalyTriggerValue.new(trigger_id: trigger_id,
                              trigger_name: trigger_name,
                              organization_name: organization_name,
                              trigger_category: trigger_category,
                              trigger_attributes: trigger_attributes,
                              created_at: created_at,
                              modified_at: modified_at,
                              additional_properties: additional_properties)
    end

    # Validates an instance of the object from a given value.
    # @param [AnomalyTriggerValue | Hash] The value against the validation is performed.
    def self.validate(value)
      return true if value.instance_of? self

      return false unless value.instance_of? Hash

      true
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} trigger_id: #{@trigger_id}, trigger_name: #{@trigger_name},"\
      " organization_name: #{@organization_name}, trigger_category: #{@trigger_category},"\
      " trigger_attributes: #{@trigger_attributes}, created_at: #{@created_at}, modified_at:"\
      " #{@modified_at}, additional_properties: #{@additional_properties}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} trigger_id: #{@trigger_id.inspect}, trigger_name: #{@trigger_name.inspect},"\
      " organization_name: #{@organization_name.inspect}, trigger_category:"\
      " #{@trigger_category.inspect}, trigger_attributes: #{@trigger_attributes.inspect},"\
      " created_at: #{@created_at.inspect}, modified_at: #{@modified_at.inspect},"\
      " additional_properties: #{@additional_properties}>"
    end
  end
end
