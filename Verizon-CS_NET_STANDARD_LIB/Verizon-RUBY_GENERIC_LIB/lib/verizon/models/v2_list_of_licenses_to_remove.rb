# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # A list of license cancellation candidate devices.
  class V2ListOfLicensesToRemove < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Cancellation candidate devices count.
    # @return [Integer]
    attr_accessor :count

    # Flag to indicat more devices.
    # @return [TrueClass | FalseClass]
    attr_accessor :has_more_data

    # Last update time.
    # @return [String]
    attr_accessor :update_time

    # Device IMEI list.
    # @return [Array[String]]
    attr_accessor :device_list

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['count'] = 'count'
      @_hash['has_more_data'] = 'hasMoreData'
      @_hash['update_time'] = 'updateTime'
      @_hash['device_list'] = 'deviceList'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      []
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(count:, has_more_data:, update_time:, device_list:,
                   additional_properties: nil)
      # Add additional model properties to the instance
      additional_properties = {} if additional_properties.nil?

      @count = count
      @has_more_data = has_more_data
      @update_time = update_time
      @device_list = device_list
      @additional_properties = additional_properties
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      count = hash.key?('count') ? hash['count'] : nil
      has_more_data = hash.key?('hasMoreData') ? hash['hasMoreData'] : nil
      update_time = hash.key?('updateTime') ? hash['updateTime'] : nil
      device_list = hash.key?('deviceList') ? hash['deviceList'] : nil

      # Create a new hash for additional properties, removing known properties.
      new_hash = hash.reject { |k, _| names.value?(k) }

      additional_properties = APIHelper.get_additional_properties(
        new_hash, proc { |value| value }
      )

      # Create object from extracted values.
      V2ListOfLicensesToRemove.new(count: count,
                                   has_more_data: has_more_data,
                                   update_time: update_time,
                                   device_list: device_list,
                                   additional_properties: additional_properties)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} count: #{@count}, has_more_data: #{@has_more_data}, update_time:"\
      " #{@update_time}, device_list: #{@device_list}, additional_properties:"\
      " #{@additional_properties}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} count: #{@count.inspect}, has_more_data: #{@has_more_data.inspect},"\
      " update_time: #{@update_time.inspect}, device_list: #{@device_list.inspect},"\
      " additional_properties: #{@additional_properties}>"
    end
  end
end
