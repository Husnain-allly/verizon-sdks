# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # Tscore Model.
  class Tscore < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # the UUID of the profile
    # @return [String]
    attr_accessor :profileid

    # the UUID of the profile version
    # @return [String]
    attr_accessor :profileversionid

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['profileid'] = 'profileid'
      @_hash['profileversionid'] = 'profileversionid'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        profileid
        profileversionid
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(profileid: SKIP, profileversionid: SKIP,
                   additional_properties: nil)
      # Add additional model properties to the instance
      additional_properties = {} if additional_properties.nil?

      @profileid = profileid unless profileid == SKIP
      @profileversionid = profileversionid unless profileversionid == SKIP
      @additional_properties = additional_properties
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      profileid = hash.key?('profileid') ? hash['profileid'] : SKIP
      profileversionid =
        hash.key?('profileversionid') ? hash['profileversionid'] : SKIP

      # Create a new hash for additional properties, removing known properties.
      new_hash = hash.reject { |k, _| names.value?(k) }

      additional_properties = APIHelper.get_additional_properties(
        new_hash, proc { |value| value }
      )

      # Create object from extracted values.
      Tscore.new(profileid: profileid,
                 profileversionid: profileversionid,
                 additional_properties: additional_properties)
    end

    # Validates an instance of the object from a given value.
    # @param [Tscore | Hash] The value against the validation is performed.
    def self.validate(value)
      return true if value.instance_of? self

      return false unless value.instance_of? Hash

      true
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} profileid: #{@profileid}, profileversionid: #{@profileversionid},"\
      " additional_properties: #{@additional_properties}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} profileid: #{@profileid.inspect}, profileversionid:"\
      " #{@profileversionid.inspect}, additional_properties: #{@additional_properties}>"
    end
  end
end
