# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # M5GBichangeRequest Model.
  class M5GBichangeRequest < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :account_name

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :service_plan

    # TODO: Write general description for this method
    # @return [Array[Object]]
    attr_accessor :device_list_with_service_address

    # TODO: Write general description for this method
    # @return [String]
    attr_accessor :current_service_plan

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['account_name'] = 'accountName'
      @_hash['service_plan'] = 'servicePlan'
      @_hash['device_list_with_service_address'] =
        'deviceListWithServiceAddress'
      @_hash['current_service_plan'] = 'currentServicePlan'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        account_name
        service_plan
        device_list_with_service_address
        current_service_plan
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(account_name: SKIP, service_plan: SKIP,
                   device_list_with_service_address: SKIP,
                   current_service_plan: SKIP, additional_properties: nil)
      # Add additional model properties to the instance
      additional_properties = {} if additional_properties.nil?

      @account_name = account_name unless account_name == SKIP
      @service_plan = service_plan unless service_plan == SKIP
      unless device_list_with_service_address == SKIP
        @device_list_with_service_address =
          device_list_with_service_address
      end
      @current_service_plan = current_service_plan unless current_service_plan == SKIP
      @additional_properties = additional_properties
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      account_name = hash.key?('accountName') ? hash['accountName'] : SKIP
      service_plan = hash.key?('servicePlan') ? hash['servicePlan'] : SKIP
      device_list_with_service_address = hash.key?('deviceListWithServiceAddress') ? APIHelper.deserialize_union_type(
        UnionTypeLookUp.get(:M5GBichangeRequestDeviceListWithServiceAddress), hash['deviceListWithServiceAddress']
      ) : SKIP
      current_service_plan =
        hash.key?('currentServicePlan') ? hash['currentServicePlan'] : SKIP

      # Create a new hash for additional properties, removing known properties.
      new_hash = hash.reject { |k, _| names.value?(k) }

      additional_properties = APIHelper.get_additional_properties(
        new_hash, proc { |value| value }
      )

      # Create object from extracted values.
      M5GBichangeRequest.new(account_name: account_name,
                             service_plan: service_plan,
                             device_list_with_service_address: device_list_with_service_address,
                             current_service_plan: current_service_plan,
                             additional_properties: additional_properties)
    end

    # Validates an instance of the object from a given value.
    # @param [M5GBichangeRequest | Hash] The value against the validation is performed.
    def self.validate(value)
      return true if value.instance_of? self

      return false unless value.instance_of? Hash

      true
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} account_name: #{@account_name}, service_plan: #{@service_plan},"\
      " device_list_with_service_address: #{@device_list_with_service_address},"\
      " current_service_plan: #{@current_service_plan}, additional_properties:"\
      " #{@additional_properties}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} account_name: #{@account_name.inspect}, service_plan:"\
      " #{@service_plan.inspect}, device_list_with_service_address:"\
      " #{@device_list_with_service_address.inspect}, current_service_plan:"\
      " #{@current_service_plan.inspect}, additional_properties: #{@additional_properties}>"
    end
  end
end
