# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # New dates and time windows.
  class V2ChangeCampaignDatesRequest < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Campaign start date.
    # @return [Date]
    attr_accessor :start_date

    # Campaign end date.
    # @return [Date]
    attr_accessor :end_date

    # Specifies starting date client should download package. If null, client
    # will download as soon as possible.
    # @return [Date]
    attr_accessor :download_after_date

    # List of allowed download time windows. Removing of existing windows is not
    # allowed.
    # @return [Array[V2TimeWindow]]
    attr_accessor :download_time_window_list

    # Client will install package after date. If null, client will install as
    # soon as possible.
    # @return [Date]
    attr_accessor :install_after_date

    # List of allowed install time windows. Removing of existing windows is not
    # allowed.
    # @return [Array[V2TimeWindow]]
    attr_accessor :install_time_window_list

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['start_date'] = 'startDate'
      @_hash['end_date'] = 'endDate'
      @_hash['download_after_date'] = 'downloadAfterDate'
      @_hash['download_time_window_list'] = 'downloadTimeWindowList'
      @_hash['install_after_date'] = 'installAfterDate'
      @_hash['install_time_window_list'] = 'installTimeWindowList'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        download_after_date
        download_time_window_list
        install_after_date
        install_time_window_list
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(start_date:, end_date:, download_after_date: SKIP,
                   download_time_window_list: SKIP, install_after_date: SKIP,
                   install_time_window_list: SKIP, additional_properties: nil)
      # Add additional model properties to the instance
      additional_properties = {} if additional_properties.nil?

      @start_date = start_date
      @end_date = end_date
      @download_after_date = download_after_date unless download_after_date == SKIP
      unless download_time_window_list == SKIP
        @download_time_window_list =
          download_time_window_list
      end
      @install_after_date = install_after_date unless install_after_date == SKIP
      @install_time_window_list = install_time_window_list unless install_time_window_list == SKIP
      @additional_properties = additional_properties
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      start_date = hash.key?('startDate') ? hash['startDate'] : nil
      end_date = hash.key?('endDate') ? hash['endDate'] : nil
      download_after_date =
        hash.key?('downloadAfterDate') ? hash['downloadAfterDate'] : SKIP
      # Parameter is an array, so we need to iterate through it
      download_time_window_list = nil
      unless hash['downloadTimeWindowList'].nil?
        download_time_window_list = []
        hash['downloadTimeWindowList'].each do |structure|
          download_time_window_list << (V2TimeWindow.from_hash(structure) if structure)
        end
      end

      download_time_window_list = SKIP unless hash.key?('downloadTimeWindowList')
      install_after_date =
        hash.key?('installAfterDate') ? hash['installAfterDate'] : SKIP
      # Parameter is an array, so we need to iterate through it
      install_time_window_list = nil
      unless hash['installTimeWindowList'].nil?
        install_time_window_list = []
        hash['installTimeWindowList'].each do |structure|
          install_time_window_list << (V2TimeWindow.from_hash(structure) if structure)
        end
      end

      install_time_window_list = SKIP unless hash.key?('installTimeWindowList')

      # Create a new hash for additional properties, removing known properties.
      new_hash = hash.reject { |k, _| names.value?(k) }

      additional_properties = APIHelper.get_additional_properties(
        new_hash, proc { |value| value }
      )

      # Create object from extracted values.
      V2ChangeCampaignDatesRequest.new(start_date: start_date,
                                       end_date: end_date,
                                       download_after_date: download_after_date,
                                       download_time_window_list: download_time_window_list,
                                       install_after_date: install_after_date,
                                       install_time_window_list: install_time_window_list,
                                       additional_properties: additional_properties)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} start_date: #{@start_date}, end_date: #{@end_date}, download_after_date:"\
      " #{@download_after_date}, download_time_window_list: #{@download_time_window_list},"\
      " install_after_date: #{@install_after_date}, install_time_window_list:"\
      " #{@install_time_window_list}, additional_properties: #{@additional_properties}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} start_date: #{@start_date.inspect}, end_date: #{@end_date.inspect},"\
      " download_after_date: #{@download_after_date.inspect}, download_time_window_list:"\
      " #{@download_time_window_list.inspect}, install_after_date: #{@install_after_date.inspect},"\
      " install_time_window_list: #{@install_time_window_list.inspect}, additional_properties:"\
      " #{@additional_properties}>"
    end
  end
end
