# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require 'date'
module Verizon
  # ResourceRule Model.
  class ResourceRule < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Not used in this release, future functionality
    # @return [String]
    attr_accessor :accountclientid

    # The billing account ID. This is the same value as the Account ID
    # @return [String]
    attr_accessor :billingaccountid

    # Timestamp of the record
    # @return [DateTime]
    attr_accessor :createdon

    # a short description
    # @return [String]
    attr_accessor :description

    # This is a UUID value of the device created when the device is onboarded
    # @return [String]
    attr_accessor :deviceid

    # This is a UUID value of the device created when the device is onboarded
    # @return [TrueClass | FalseClass]
    attr_accessor :disabled

    # UUID of the ECPD account the user belongs to
    # @return [String]
    attr_accessor :foreignid

    # UUID of the user record, assigned at creation
    # @return [String]
    attr_accessor :id

    # Timestamp of the record
    # @return [DateTime]
    attr_accessor :lastupdated

    # User defined name of the record
    # @return [String]
    attr_accessor :name

    # User defined name of the record
    # @return [Object]
    attr_accessor :rulechain

    # The syntax of the rule and supports camel and json style syntaxes
    # @return [String]
    attr_accessor :rulesyntax

    # The resource version
    # @return [String]
    attr_accessor :version

    # The UUID of the resource version
    # @return [String]
    attr_accessor :versionid

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['accountclientid'] = 'accountclientid'
      @_hash['billingaccountid'] = 'billingaccountid'
      @_hash['createdon'] = 'createdon'
      @_hash['description'] = 'description'
      @_hash['deviceid'] = 'deviceid'
      @_hash['disabled'] = 'disabled'
      @_hash['foreignid'] = 'foreignid'
      @_hash['id'] = 'id'
      @_hash['lastupdated'] = 'lastupdated'
      @_hash['name'] = 'name'
      @_hash['rulechain'] = 'rulechain'
      @_hash['rulesyntax'] = 'rulesyntax'
      @_hash['version'] = 'version'
      @_hash['versionid'] = 'versionid'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        accountclientid
        billingaccountid
        description
        deviceid
        disabled
        id
        name
        rulesyntax
        version
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(createdon:, foreignid:, lastupdated:, rulechain:, versionid:,
                   accountclientid: SKIP, billingaccountid: SKIP,
                   description: SKIP, deviceid: SKIP, disabled: SKIP, id: SKIP,
                   name: SKIP, rulesyntax: SKIP, version: SKIP)
      @accountclientid = accountclientid unless accountclientid == SKIP
      @billingaccountid = billingaccountid unless billingaccountid == SKIP
      @createdon = createdon
      @description = description unless description == SKIP
      @deviceid = deviceid unless deviceid == SKIP
      @disabled = disabled unless disabled == SKIP
      @foreignid = foreignid
      @id = id unless id == SKIP
      @lastupdated = lastupdated
      @name = name unless name == SKIP
      @rulechain = rulechain
      @rulesyntax = rulesyntax unless rulesyntax == SKIP
      @version = version unless version == SKIP
      @versionid = versionid
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      createdon = if hash.key?('createdon')
                    (DateTimeHelper.from_rfc3339(hash['createdon']) if hash['createdon'])
                  end
      foreignid = hash.key?('foreignid') ? hash['foreignid'] : nil
      lastupdated = if hash.key?('lastupdated')
                      (DateTimeHelper.from_rfc3339(hash['lastupdated']) if hash['lastupdated'])
                    end
      rulechain = hash.key?('rulechain') ? hash['rulechain'] : nil
      versionid = hash.key?('versionid') ? hash['versionid'] : nil
      accountclientid =
        hash.key?('accountclientid') ? hash['accountclientid'] : SKIP
      billingaccountid =
        hash.key?('billingaccountid') ? hash['billingaccountid'] : SKIP
      description = hash.key?('description') ? hash['description'] : SKIP
      deviceid = hash.key?('deviceid') ? hash['deviceid'] : SKIP
      disabled = hash.key?('disabled') ? hash['disabled'] : SKIP
      id = hash.key?('id') ? hash['id'] : SKIP
      name = hash.key?('name') ? hash['name'] : SKIP
      rulesyntax = hash.key?('rulesyntax') ? hash['rulesyntax'] : SKIP
      version = hash.key?('version') ? hash['version'] : SKIP

      # Create object from extracted values.
      ResourceRule.new(createdon: createdon,
                       foreignid: foreignid,
                       lastupdated: lastupdated,
                       rulechain: rulechain,
                       versionid: versionid,
                       accountclientid: accountclientid,
                       billingaccountid: billingaccountid,
                       description: description,
                       deviceid: deviceid,
                       disabled: disabled,
                       id: id,
                       name: name,
                       rulesyntax: rulesyntax,
                       version: version)
    end

    def to_custom_createdon
      DateTimeHelper.to_rfc3339(createdon)
    end

    def to_custom_lastupdated
      DateTimeHelper.to_rfc3339(lastupdated)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} accountclientid: #{@accountclientid}, billingaccountid:"\
      " #{@billingaccountid}, createdon: #{@createdon}, description: #{@description}, deviceid:"\
      " #{@deviceid}, disabled: #{@disabled}, foreignid: #{@foreignid}, id: #{@id}, lastupdated:"\
      " #{@lastupdated}, name: #{@name}, rulechain: #{@rulechain}, rulesyntax: #{@rulesyntax},"\
      " version: #{@version}, versionid: #{@versionid}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} accountclientid: #{@accountclientid.inspect}, billingaccountid:"\
      " #{@billingaccountid.inspect}, createdon: #{@createdon.inspect}, description:"\
      " #{@description.inspect}, deviceid: #{@deviceid.inspect}, disabled: #{@disabled.inspect},"\
      " foreignid: #{@foreignid.inspect}, id: #{@id.inspect}, lastupdated:"\
      " #{@lastupdated.inspect}, name: #{@name.inspect}, rulechain: #{@rulechain.inspect},"\
      " rulesyntax: #{@rulesyntax.inspect}, version: #{@version.inspect}, versionid:"\
      " #{@versionid.inspect}>"
    end
  end
end
