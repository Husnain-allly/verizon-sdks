# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # Requests the current PRL (Preferred Roaming List) version for 2G or 3G
  # devices, which can help determine which devices need a PRL update. (4G and
  # GSM devices do not have a PRL.).
  class DevicePrlListRequest < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The devices for which you want the PRL version, specified by device
    # identifier. You only need to provide one identifier per device. Do not use
    # any of the other parameters if you specify device IDs.
    # @return [Array[DeviceId]]
    attr_accessor :device_ids

    # The name of a billing account. This parameter is only required if you are
    # passing groupName and the UWS account used for the current API session has
    # access to multiple billing accounts, because the same device group name
    # can exist in multiple accounts.An account name is usually numeric, and
    # must include any leading zeros.
    # @return [String]
    attr_accessor :account_name

    # The names and values of custom fields, if you want to only include devices
    # that have matching custom fields.
    # @return [Array[CustomFields]]
    attr_accessor :custom_fields

    # The name of a device group, if you want to only include devices in that
    # group.
    # @return [String]
    attr_accessor :group_name

    # The name of a service plan, if you want to only include devices that have
    # that service plan.
    # @return [String]
    attr_accessor :service_plan

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['device_ids'] = 'deviceIds'
      @_hash['account_name'] = 'accountName'
      @_hash['custom_fields'] = 'customFields'
      @_hash['group_name'] = 'groupName'
      @_hash['service_plan'] = 'servicePlan'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        device_ids
        account_name
        custom_fields
        group_name
        service_plan
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(device_ids: SKIP, account_name: SKIP, custom_fields: SKIP,
                   group_name: SKIP, service_plan: SKIP,
                   additional_properties: nil)
      # Add additional model properties to the instance
      additional_properties = {} if additional_properties.nil?

      @device_ids = device_ids unless device_ids == SKIP
      @account_name = account_name unless account_name == SKIP
      @custom_fields = custom_fields unless custom_fields == SKIP
      @group_name = group_name unless group_name == SKIP
      @service_plan = service_plan unless service_plan == SKIP
      @additional_properties = additional_properties
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      # Parameter is an array, so we need to iterate through it
      device_ids = nil
      unless hash['deviceIds'].nil?
        device_ids = []
        hash['deviceIds'].each do |structure|
          device_ids << (DeviceId.from_hash(structure) if structure)
        end
      end

      device_ids = SKIP unless hash.key?('deviceIds')
      account_name = hash.key?('accountName') ? hash['accountName'] : SKIP
      # Parameter is an array, so we need to iterate through it
      custom_fields = nil
      unless hash['customFields'].nil?
        custom_fields = []
        hash['customFields'].each do |structure|
          custom_fields << (CustomFields.from_hash(structure) if structure)
        end
      end

      custom_fields = SKIP unless hash.key?('customFields')
      group_name = hash.key?('groupName') ? hash['groupName'] : SKIP
      service_plan = hash.key?('servicePlan') ? hash['servicePlan'] : SKIP

      # Create a new hash for additional properties, removing known properties.
      new_hash = hash.reject { |k, _| names.value?(k) }

      additional_properties = APIHelper.get_additional_properties(
        new_hash, proc { |value| value }
      )

      # Create object from extracted values.
      DevicePrlListRequest.new(device_ids: device_ids,
                               account_name: account_name,
                               custom_fields: custom_fields,
                               group_name: group_name,
                               service_plan: service_plan,
                               additional_properties: additional_properties)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} device_ids: #{@device_ids}, account_name: #{@account_name}, custom_fields:"\
      " #{@custom_fields}, group_name: #{@group_name}, service_plan: #{@service_plan},"\
      " additional_properties: #{@additional_properties}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} device_ids: #{@device_ids.inspect}, account_name: #{@account_name.inspect},"\
      " custom_fields: #{@custom_fields.inspect}, group_name: #{@group_name.inspect},"\
      " service_plan: #{@service_plan.inspect}, additional_properties: #{@additional_properties}>"
    end
  end
end
