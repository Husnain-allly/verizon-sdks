# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # The EUI64 address of the device being removed
  class DtoOffBoardSensor < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # the IEEE EUI64 address space used to identify a device. It is supplied by
    # the device manufacturer
    # @return [String]
    attr_accessor :deveui

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['deveui'] = 'deveui'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        deveui
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(deveui: SKIP)
      @deveui = deveui unless deveui == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      deveui = hash.key?('deveui') ? hash['deveui'] : SKIP

      # Create object from extracted values.
      DtoOffBoardSensor.new(deveui: deveui)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} deveui: #{@deveui}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} deveui: #{@deveui.inspect}>"
    end
  end
end
