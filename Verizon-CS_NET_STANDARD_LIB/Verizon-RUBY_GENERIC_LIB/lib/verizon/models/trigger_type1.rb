# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # Trigger details.
  class TriggerType1 < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Trigger name.
    # @return [String]
    attr_accessor :name

    # This is the value to use in the request body to detect anomalous
    # behaivior. The values in this table will only be relevant when this
    # parameter is set to this value.
    # @return [String]
    attr_accessor :trigger_category

    # Account name.
    # @return [String]
    attr_accessor :account_name

    # The details of the UsageAnomaly trigger.
    # @return [AnomalyTriggerRequest]
    attr_accessor :anomaly_trigger_request

    # The notification details of the trigger.
    # @return [TriggerNotification]
    attr_accessor :notification

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['name'] = 'name'
      @_hash['trigger_category'] = 'triggerCategory'
      @_hash['account_name'] = 'accountName'
      @_hash['anomaly_trigger_request'] = 'anomalyTriggerRequest'
      @_hash['notification'] = 'notification'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        name
        trigger_category
        account_name
        anomaly_trigger_request
        notification
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(name: SKIP, trigger_category: SKIP, account_name: SKIP,
                   anomaly_trigger_request: SKIP, notification: SKIP)
      @name = name unless name == SKIP
      @trigger_category = trigger_category unless trigger_category == SKIP
      @account_name = account_name unless account_name == SKIP
      @anomaly_trigger_request = anomaly_trigger_request unless anomaly_trigger_request == SKIP
      @notification = notification unless notification == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      name = hash.key?('name') ? hash['name'] : SKIP
      trigger_category =
        hash.key?('triggerCategory') ? hash['triggerCategory'] : SKIP
      account_name = hash.key?('accountName') ? hash['accountName'] : SKIP
      anomaly_trigger_request = AnomalyTriggerRequest.from_hash(hash['anomalyTriggerRequest']) if
        hash['anomalyTriggerRequest']
      notification = TriggerNotification.from_hash(hash['notification']) if hash['notification']

      # Create object from extracted values.
      TriggerType1.new(name: name,
                       trigger_category: trigger_category,
                       account_name: account_name,
                       anomaly_trigger_request: anomaly_trigger_request,
                       notification: notification)
    end

    # Validates an instance of the object from a given value.
    # @param [TriggerType1 | Hash] The value against the validation is performed.
    def self.validate(value)
      return true if value.instance_of? self

      return false unless value.instance_of? Hash

      true
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} name: #{@name}, trigger_category: #{@trigger_category}, account_name:"\
      " #{@account_name}, anomaly_trigger_request: #{@anomaly_trigger_request}, notification:"\
      " #{@notification}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} name: #{@name.inspect}, trigger_category: #{@trigger_category.inspect},"\
      " account_name: #{@account_name.inspect}, anomaly_trigger_request:"\
      " #{@anomaly_trigger_request.inspect}, notification: #{@notification.inspect}>"
    end
  end
end
