# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # AccountSharePricePlanTrigger Model.
  class AccountSharePricePlanTrigger < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # TODO: Write general description for this method
    # @return [AccountShareFilterCriteria]
    attr_accessor :account_share

    # TODO: Write general description for this method
    # @return [Object]
    attr_accessor :condition

    # a flag to set if the trigger changes service plans, true, or not, false
    # @return [TrueClass | FalseClass]
    attr_accessor :change_plan

    # The service plan code to switch to
    # @return [ChangePlanDetails]
    attr_accessor :change_plan_details

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['account_share'] = 'accountShare'
      @_hash['condition'] = 'condition'
      @_hash['change_plan'] = 'changePlan'
      @_hash['change_plan_details'] = 'changePlanDetails'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        account_share
        condition
        change_plan
        change_plan_details
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(account_share: SKIP, condition: SKIP, change_plan: SKIP,
                   change_plan_details: SKIP, additional_properties: nil)
      # Add additional model properties to the instance
      additional_properties = {} if additional_properties.nil?

      @account_share = account_share unless account_share == SKIP
      @condition = condition unless condition == SKIP
      @change_plan = change_plan unless change_plan == SKIP
      @change_plan_details = change_plan_details unless change_plan_details == SKIP
      @additional_properties = additional_properties
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      account_share = AccountShareFilterCriteria.from_hash(hash['accountShare']) if
        hash['accountShare']
      condition = hash.key?('condition') ? APIHelper.deserialize_union_type(
        UnionTypeLookUp.get(:AccountSharePricePlanTriggerCondition), hash['condition']
      ) : SKIP
      change_plan = hash.key?('changePlan') ? hash['changePlan'] : SKIP
      change_plan_details = ChangePlanDetails.from_hash(hash['changePlanDetails']) if
        hash['changePlanDetails']

      # Create a new hash for additional properties, removing known properties.
      new_hash = hash.reject { |k, _| names.value?(k) }

      additional_properties = APIHelper.get_additional_properties(
        new_hash, proc { |value| value }
      )

      # Create object from extracted values.
      AccountSharePricePlanTrigger.new(account_share: account_share,
                                       condition: condition,
                                       change_plan: change_plan,
                                       change_plan_details: change_plan_details,
                                       additional_properties: additional_properties)
    end

    # Validates an instance of the object from a given value.
    # @param [AccountSharePricePlanTrigger | Hash] The value against the validation is performed.
    def self.validate(value)
      return true if value.instance_of? self

      return false unless value.instance_of? Hash

      true
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} account_share: #{@account_share}, condition: #{@condition}, change_plan:"\
      " #{@change_plan}, change_plan_details: #{@change_plan_details}, additional_properties:"\
      " #{@additional_properties}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} account_share: #{@account_share.inspect}, condition: #{@condition.inspect},"\
      " change_plan: #{@change_plan.inspect}, change_plan_details:"\
      " #{@change_plan_details.inspect}, additional_properties: #{@additional_properties}>"
    end
  end
end
