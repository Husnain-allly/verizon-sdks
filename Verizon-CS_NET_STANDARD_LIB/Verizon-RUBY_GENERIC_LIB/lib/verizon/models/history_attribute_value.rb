# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require 'date'
module Verizon
  # Streaming RF parameter for which you want to retrieve history data.
  class HistoryAttributeValue < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Attribute identifier.
    # @return [AttributeIdentifier]
    attr_accessor :name

    # Attribute value.
    # @return [String]
    attr_accessor :value

    # Date and time the request was created.
    # @return [DateTime]
    attr_accessor :created_on

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['name'] = 'name'
      @_hash['value'] = 'value'
      @_hash['created_on'] = 'createdOn'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        name
        value
        created_on
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(name: SKIP, value: SKIP, created_on: SKIP,
                   additional_properties: nil)
      # Add additional model properties to the instance
      additional_properties = {} if additional_properties.nil?

      @name = name unless name == SKIP
      @value = value unless value == SKIP
      @created_on = created_on unless created_on == SKIP
      @additional_properties = additional_properties
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      name = hash.key?('name') ? hash['name'] : SKIP
      value = hash.key?('value') ? hash['value'] : SKIP
      created_on = if hash.key?('createdOn')
                     (DateTimeHelper.from_rfc3339(hash['createdOn']) if hash['createdOn'])
                   else
                     SKIP
                   end

      # Create a new hash for additional properties, removing known properties.
      new_hash = hash.reject { |k, _| names.value?(k) }

      additional_properties = APIHelper.get_additional_properties(
        new_hash, proc { |value| value }
      )

      # Create object from extracted values.
      HistoryAttributeValue.new(name: name,
                                value: value,
                                created_on: created_on,
                                additional_properties: additional_properties)
    end

    def to_custom_created_on
      DateTimeHelper.to_rfc3339(created_on)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} name: #{@name}, value: #{@value}, created_on: #{@created_on},"\
      " additional_properties: #{@additional_properties}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} name: #{@name.inspect}, value: #{@value.inspect}, created_on:"\
      " #{@created_on.inspect}, additional_properties: #{@additional_properties}>"
    end
  end
end
