# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # Campaign history.
  class V3CampaignHistory < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Has more report flag?
    # @return [TrueClass | FalseClass]
    attr_accessor :has_more_data

    # Campaign identifier.
    # @return [String]
    attr_accessor :last_seen_campaign_id

    # Firmware upgrade list.
    # @return [Array[V3CampaignMetaInfo]]
    attr_accessor :campaign_list

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['has_more_data'] = 'hasMoreData'
      @_hash['last_seen_campaign_id'] = 'lastSeenCampaignId'
      @_hash['campaign_list'] = 'campaignList'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        last_seen_campaign_id
      ]
    end

    # An array for nullable fields
    def self.nullables
      %w[
        campaign_list
      ]
    end

    def initialize(has_more_data:, campaign_list:, last_seen_campaign_id: SKIP,
                   additional_properties: nil)
      # Add additional model properties to the instance
      additional_properties = {} if additional_properties.nil?

      @has_more_data = has_more_data
      @last_seen_campaign_id = last_seen_campaign_id unless last_seen_campaign_id == SKIP
      @campaign_list = campaign_list
      @additional_properties = additional_properties
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      has_more_data = hash.key?('hasMoreData') ? hash['hasMoreData'] : nil
      # Parameter is an array, so we need to iterate through it
      campaign_list = nil
      unless hash['campaignList'].nil?
        campaign_list = []
        hash['campaignList'].each do |structure|
          campaign_list << (V3CampaignMetaInfo.from_hash(structure) if structure)
        end
      end

      campaign_list = nil unless hash.key?('campaignList')
      last_seen_campaign_id =
        hash.key?('lastSeenCampaignId') ? hash['lastSeenCampaignId'] : SKIP

      # Create a new hash for additional properties, removing known properties.
      new_hash = hash.reject { |k, _| names.value?(k) }

      additional_properties = APIHelper.get_additional_properties(
        new_hash, proc { |value| value }
      )

      # Create object from extracted values.
      V3CampaignHistory.new(has_more_data: has_more_data,
                            campaign_list: campaign_list,
                            last_seen_campaign_id: last_seen_campaign_id,
                            additional_properties: additional_properties)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} has_more_data: #{@has_more_data}, last_seen_campaign_id:"\
      " #{@last_seen_campaign_id}, campaign_list: #{@campaign_list}, additional_properties:"\
      " #{@additional_properties}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} has_more_data: #{@has_more_data.inspect}, last_seen_campaign_id:"\
      " #{@last_seen_campaign_id.inspect}, campaign_list: #{@campaign_list.inspect},"\
      " additional_properties: #{@additional_properties}>"
    end
  end
end
