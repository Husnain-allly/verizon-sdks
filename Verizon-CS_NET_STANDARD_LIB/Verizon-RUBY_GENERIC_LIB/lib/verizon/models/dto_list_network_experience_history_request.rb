# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # DtoListNetworkExperienceHistoryRequest Model.
  class DtoListNetworkExperienceHistoryRequest < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The numeric account name, which must include leading zeros
    # @return [String]
    attr_accessor :accountname

    # The numeric account name, which must include leading zeros
    # @return [DtoFilter]
    attr_accessor :filter

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['accountname'] = 'accountname'
      @_hash['filter'] = 'filter'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        accountname
        filter
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(accountname: SKIP, filter: SKIP)
      @accountname = accountname unless accountname == SKIP
      @filter = filter unless filter == SKIP
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      accountname = hash.key?('accountname') ? hash['accountname'] : SKIP
      filter = DtoFilter.from_hash(hash['filter']) if hash['filter']

      # Create object from extracted values.
      DtoListNetworkExperienceHistoryRequest.new(accountname: accountname,
                                                 filter: filter)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} accountname: #{@accountname}, filter: #{@filter}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} accountname: #{@accountname.inspect}, filter: #{@filter.inspect}>"
    end
  end
end
