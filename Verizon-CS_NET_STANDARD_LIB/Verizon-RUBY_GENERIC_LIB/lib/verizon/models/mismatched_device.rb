# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

module Verizon
  # 4G devices with an ICCID (SIM) that was not activated with the expected IMEI
  # (hardware) during a specified time frame.
  class MismatchedDevice < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # The account that the device is associated with.
    # @return [String]
    attr_accessor :account_name

    # The assigned phone number of the device.
    # @return [String]
    attr_accessor :mdn

    # The date and time when the SIM was last activated.
    # @return [String]
    attr_accessor :activation_date

    # The ID of the SIM.
    # @return [String]
    attr_accessor :iccid

    # The IMEI of the device prior to the SIM OTA activation on simOtaDate.
    # @return [String]
    attr_accessor :pre_imei

    # The IMEI of the device after the SIM OTA activation on simOtaDate.
    # @return [String]
    attr_accessor :post_imei

    # The date and time of the SIM OTA activation.
    # @return [String]
    attr_accessor :sim_ota_date

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['account_name'] = 'accountName'
      @_hash['mdn'] = 'mdn'
      @_hash['activation_date'] = 'activationDate'
      @_hash['iccid'] = 'iccid'
      @_hash['pre_imei'] = 'preImei'
      @_hash['post_imei'] = 'postImei'
      @_hash['sim_ota_date'] = 'simOtaDate'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      %w[
        account_name
        mdn
        activation_date
        iccid
        pre_imei
        post_imei
        sim_ota_date
      ]
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(account_name: SKIP, mdn: SKIP, activation_date: SKIP,
                   iccid: SKIP, pre_imei: SKIP, post_imei: SKIP,
                   sim_ota_date: SKIP, additional_properties: nil)
      # Add additional model properties to the instance
      additional_properties = {} if additional_properties.nil?

      @account_name = account_name unless account_name == SKIP
      @mdn = mdn unless mdn == SKIP
      @activation_date = activation_date unless activation_date == SKIP
      @iccid = iccid unless iccid == SKIP
      @pre_imei = pre_imei unless pre_imei == SKIP
      @post_imei = post_imei unless post_imei == SKIP
      @sim_ota_date = sim_ota_date unless sim_ota_date == SKIP
      @additional_properties = additional_properties
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      account_name = hash.key?('accountName') ? hash['accountName'] : SKIP
      mdn = hash.key?('mdn') ? hash['mdn'] : SKIP
      activation_date =
        hash.key?('activationDate') ? hash['activationDate'] : SKIP
      iccid = hash.key?('iccid') ? hash['iccid'] : SKIP
      pre_imei = hash.key?('preImei') ? hash['preImei'] : SKIP
      post_imei = hash.key?('postImei') ? hash['postImei'] : SKIP
      sim_ota_date = hash.key?('simOtaDate') ? hash['simOtaDate'] : SKIP

      # Create a new hash for additional properties, removing known properties.
      new_hash = hash.reject { |k, _| names.value?(k) }

      additional_properties = APIHelper.get_additional_properties(
        new_hash, proc { |value| value }
      )

      # Create object from extracted values.
      MismatchedDevice.new(account_name: account_name,
                           mdn: mdn,
                           activation_date: activation_date,
                           iccid: iccid,
                           pre_imei: pre_imei,
                           post_imei: post_imei,
                           sim_ota_date: sim_ota_date,
                           additional_properties: additional_properties)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} account_name: #{@account_name}, mdn: #{@mdn}, activation_date:"\
      " #{@activation_date}, iccid: #{@iccid}, pre_imei: #{@pre_imei}, post_imei: #{@post_imei},"\
      " sim_ota_date: #{@sim_ota_date}, additional_properties: #{@additional_properties}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} account_name: #{@account_name.inspect}, mdn: #{@mdn.inspect},"\
      " activation_date: #{@activation_date.inspect}, iccid: #{@iccid.inspect}, pre_imei:"\
      " #{@pre_imei.inspect}, post_imei: #{@post_imei.inspect}, sim_ota_date:"\
      " #{@sim_ota_date.inspect}, additional_properties: #{@additional_properties}>"
    end
  end
end
