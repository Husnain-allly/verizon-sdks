# verizon
#
# This file was automatically generated by APIMATIC v2.0
# ( https://apimatic.io ).

require 'date'
module Verizon
  # A success response containing the current status of the request.
  class DiagnosticsObservationResult < BaseModel
    SKIP = Object.new
    private_constant :SKIP

    # Transaction identifier.
    # @return [String]
    attr_accessor :transaction_id

    # Status of the request.
    # @return [String]
    attr_accessor :status

    # The date and time of when this request was created.
    # @return [DateTime]
    attr_accessor :created_on

    # A mapping from model property names to API property names.
    def self.names
      @_hash = {} if @_hash.nil?
      @_hash['transaction_id'] = 'transactionID'
      @_hash['status'] = 'status'
      @_hash['created_on'] = 'createdOn'
      @_hash
    end

    # An array for optional fields
    def self.optionals
      []
    end

    # An array for nullable fields
    def self.nullables
      []
    end

    def initialize(transaction_id:, status:, created_on:,
                   additional_properties: nil)
      # Add additional model properties to the instance
      additional_properties = {} if additional_properties.nil?

      @transaction_id = transaction_id
      @status = status
      @created_on = created_on
      @additional_properties = additional_properties
    end

    # Creates an instance of the object from a hash.
    def self.from_hash(hash)
      return nil unless hash

      # Extract variables from the hash.
      transaction_id = hash.key?('transactionID') ? hash['transactionID'] : nil
      status = hash.key?('status') ? hash['status'] : nil
      created_on = if hash.key?('createdOn')
                     (DateTimeHelper.from_rfc3339(hash['createdOn']) if hash['createdOn'])
                   end

      # Create a new hash for additional properties, removing known properties.
      new_hash = hash.reject { |k, _| names.value?(k) }

      additional_properties = APIHelper.get_additional_properties(
        new_hash, proc { |value| value }
      )

      # Create object from extracted values.
      DiagnosticsObservationResult.new(transaction_id: transaction_id,
                                       status: status,
                                       created_on: created_on,
                                       additional_properties: additional_properties)
    end

    def to_custom_created_on
      DateTimeHelper.to_rfc3339(created_on)
    end

    # Provides a human-readable string representation of the object.
    def to_s
      class_name = self.class.name.split('::').last
      "<#{class_name} transaction_id: #{@transaction_id}, status: #{@status}, created_on:"\
      " #{@created_on}, additional_properties: #{@additional_properties}>"
    end

    # Provides a debugging-friendly string with detailed object information.
    def inspect
      class_name = self.class.name.split('::').last
      "<#{class_name} transaction_id: #{@transaction_id.inspect}, status: #{@status.inspect},"\
      " created_on: #{@created_on.inspect}, additional_properties: #{@additional_properties}>"
    end
  end
end
