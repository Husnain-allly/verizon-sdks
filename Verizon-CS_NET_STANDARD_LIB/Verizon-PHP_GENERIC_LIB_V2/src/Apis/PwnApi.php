<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Apis;

use Core\Authentication\Auth;
use Core\Request\Parameters\BodyParam;
use Core\Request\Parameters\HeaderParam;
use Core\Request\Parameters\TemplateParam;
use CoreInterfaces\Core\Request\RequestMethod;
use VerizonLib\Http\ApiResponse;
use VerizonLib\Models\ChangePwnDeviceIpaddressRequest;
use VerizonLib\Models\ChangePwnDeviceIpaddressResponse;
use VerizonLib\Models\ChangePwnDeviceProfileRequest;
use VerizonLib\Models\ChangePwnDeviceProfileResponse;
use VerizonLib\Models\ChangePwnDeviceStateActivateRequest;
use VerizonLib\Models\ChangePwnDeviceStateDeactivateRequest;
use VerizonLib\Models\ChangePwnDeviceStateResponse;
use VerizonLib\Models\GetPwnPerformanceConsentResponse;
use VerizonLib\Models\KpiInfoList;
use VerizonLib\Models\PwnProfileList;
use VerizonLib\Server;

class PwnApi extends BaseApi
{
    /**
     * @param string $aname Account name.
     *
     * @return ApiResponse Response from the API call
     */
    public function kpiList(string $aname): ApiResponse
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::GET, '/m2m/v1/devices/pwn/kpi/list/{aname}')
            ->server(Server::THINGSPACE)
            ->auth(Auth::and('thingspace_oauth', 'VZ-M2M-Token'))
            ->parameters(TemplateParam::init('aname', $aname)->required());

        $_resHandler = $this->responseHandler()->type(KpiInfoList::class)->returnApiResponse();

        return $this->execute($_reqBuilder, $_resHandler);
    }

    /**
     * @param string $aname Account name.
     *
     * @return ApiResponse Response from the API call
     */
    public function getProfileList(string $aname): ApiResponse
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::GET, '/m2m/v1/devices/pwn/profiles/list/{aname}')
            ->server(Server::THINGSPACE)
            ->auth(Auth::and('thingspace_oauth', 'VZ-M2M-Token'))
            ->parameters(TemplateParam::init('aname', $aname)->required());

        $_resHandler = $this->responseHandler()->type(PwnProfileList::class)->returnApiResponse();

        return $this->execute($_reqBuilder, $_resHandler);
    }

    /**
     * @param ChangePwnDeviceStateActivateRequest $body
     *
     * @return ApiResponse Response from the API call
     */
    public function changePwnDeviceStateActivate(ChangePwnDeviceStateActivateRequest $body): ApiResponse
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::POST, '/m2m/v1/devices/pwn/actions/state/activate')
            ->server(Server::THINGSPACE)
            ->auth(Auth::and('thingspace_oauth', 'VZ-M2M-Token'))
            ->parameters(HeaderParam::init('Content-Type', 'application/json'), BodyParam::init($body)->required());

        $_resHandler = $this->responseHandler()->type(ChangePwnDeviceStateResponse::class)->returnApiResponse();

        return $this->execute($_reqBuilder, $_resHandler);
    }

    /**
     * @param ChangePwnDeviceStateDeactivateRequest $body
     *
     * @return ApiResponse Response from the API call
     */
    public function changePwnDeviceStateDeactivate(ChangePwnDeviceStateDeactivateRequest $body): ApiResponse
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::POST, '/m2m/v1/devices/pwn/actions/state/deactivate')
            ->server(Server::THINGSPACE)
            ->auth(Auth::and('thingspace_oauth', 'VZ-M2M-Token'))
            ->parameters(HeaderParam::init('Content-Type', 'application/json'), BodyParam::init($body)->required());

        $_resHandler = $this->responseHandler()->type(ChangePwnDeviceStateResponse::class)->returnApiResponse();

        return $this->execute($_reqBuilder, $_resHandler);
    }

    /**
     * @param ChangePwnDeviceProfileRequest $body
     *
     * @return ApiResponse Response from the API call
     */
    public function changePwnDeviceProfile(ChangePwnDeviceProfileRequest $body): ApiResponse
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::POST, '/m2m/v1/devices/pwn/actions/profile')
            ->server(Server::THINGSPACE)
            ->auth(Auth::and('thingspace_oauth', 'VZ-M2M-Token'))
            ->parameters(HeaderParam::init('Content-Type', 'application/json'), BodyParam::init($body)->required());

        $_resHandler = $this->responseHandler()->type(ChangePwnDeviceProfileResponse::class)->returnApiResponse();

        return $this->execute($_reqBuilder, $_resHandler);
    }

    /**
     * @param ChangePwnDeviceIpaddressRequest $body
     *
     * @return ApiResponse Response from the API call
     */
    public function changePwnDeviceIpaddress(ChangePwnDeviceIpaddressRequest $body): ApiResponse
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::PUT, '/m2m/v1/devices/pwn/actions/ipaddress')
            ->server(Server::THINGSPACE)
            ->auth(Auth::and('thingspace_oauth', 'VZ-M2M-Token'))
            ->parameters(HeaderParam::init('Content-Type', 'application/json'), BodyParam::init($body)->required());

        $_resHandler = $this->responseHandler()->type(ChangePwnDeviceIpaddressResponse::class)->returnApiResponse();

        return $this->execute($_reqBuilder, $_resHandler);
    }

    /**
     * @param string $aname Account name.
     *
     * @return ApiResponse Response from the API call
     */
    public function getPwnPerformanceConsent(string $aname): ApiResponse
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::GET, '/m2m/v1/devices/pwn/performance/consent/{aname}')
            ->server(Server::THINGSPACE)
            ->auth(Auth::and('thingspace_oauth', 'VZ-M2M-Token'))
            ->parameters(TemplateParam::init('aname', $aname)->required());

        $_resHandler = $this->responseHandler()->type(GetPwnPerformanceConsentResponse::class)->returnApiResponse();

        return $this->execute($_reqBuilder, $_resHandler);
    }
}
