<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Apis;

use Core\Authentication\Auth;
use Core\Request\Parameters\BodyParam;
use Core\Request\Parameters\HeaderParam;
use Core\Request\Parameters\QueryParam;
use Core\Response\Types\ErrorType;
use CoreInterfaces\Core\Request\RequestMethod;
use VerizonLib\Exceptions\DefaultResponseException;
use VerizonLib\Http\ApiResponse;
use VerizonLib\Models\M201Success;
use VerizonLib\Models\SubscribeRequest;
use VerizonLib\Server;

class ThingSpaceQualityOfServiceApiActionsApi extends BaseApi
{
    /**
     * Creates a QoS elevation subscription ID and activates the subscription.
     *
     * @param SubscribeRequest $body The request details to create a ThingSpace Quality of Service
     *        API subscription.
     *
     * @return ApiResponse Response from the API call
     */
    public function createAThingSpaceQualityOfServiceApiSubscription(SubscribeRequest $body): ApiResponse
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::POST, '/m2m/v1/devices/actions/enhanceQoS')
            ->server(Server::THINGSPACE)
            ->auth(Auth::and('thingspace_oauth', 'VZ-M2M-Token'))
            ->parameters(HeaderParam::init('Content-Type', 'application/json'), BodyParam::init($body)->required());

        $_resHandler = $this->responseHandler()
            ->throwErrorOn('0', ErrorType::init('Error Response', DefaultResponseException::class))
            ->type(M201Success::class)
            ->returnApiResponse();

        return $this->execute($_reqBuilder, $_resHandler);
    }

    /**
     * Stops an active ThingSpace Quality of Service API subscription using the account name and the
     * subscription ID.
     *
     * @param string $accountName
     * @param string $qosSubscriptionId
     *
     * @return ApiResponse Response from the API call
     */
    public function stopAThingSpaceQualityOfServiceApiSubscription(
        string $accountName,
        string $qosSubscriptionId
    ): ApiResponse {
        $_reqBuilder = $this->requestBuilder(RequestMethod::DELETE, '/m2m/v1/devices/actions/enhanceQoS')
            ->server(Server::THINGSPACE)
            ->auth(Auth::and('thingspace_oauth', 'VZ-M2M-Token'))
            ->parameters(
                QueryParam::init('accountName', $accountName)->required(),
                QueryParam::init('qosSubscriptionId', $qosSubscriptionId)->required()
            );

        $_resHandler = $this->responseHandler()
            ->throwErrorOn('0', ErrorType::init('Error Response', DefaultResponseException::class))
            ->type(M201Success::class)
            ->returnApiResponse();

        return $this->execute($_reqBuilder, $_resHandler);
    }
}
