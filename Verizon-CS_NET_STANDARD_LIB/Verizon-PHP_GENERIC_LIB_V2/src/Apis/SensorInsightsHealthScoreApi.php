<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Apis;

use Core\Authentication\Auth;
use Core\Response\Types\ErrorType;
use CoreInterfaces\Core\Request\RequestMethod;
use VerizonLib\Exceptions\M400ManagementErrorException;
use VerizonLib\Exceptions\M403ManagementErrorException;
use VerizonLib\Exceptions\M500ManagementErrorException;
use VerizonLib\Exceptions\ManagementErrorException;
use VerizonLib\Http\ApiResponse;
use VerizonLib\Models\DtoGetNetworkHealthScoreResponse;
use VerizonLib\Models\DtoHealthScoreSummary;
use VerizonLib\Server;

class SensorInsightsHealthScoreApi extends BaseApi
{
    /**
     * @return ApiResponse Response from the API call
     */
    public function sensorInsightsHealthScoreSummary(): ApiResponse
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::POST, '/dm/v1/healthscore/summary')
            ->server(Server::THINGSPACE)
            ->auth(Auth::and('thingspace_oauth', 'VZ-M2M-Token'));

        $_resHandler = $this->responseHandler()
            ->throwErrorOn('400', ErrorType::init('Bad Request', M400ManagementErrorException::class))
            ->throwErrorOn('401', ErrorType::init('UnAuthorized', ManagementErrorException::class))
            ->throwErrorOn('403', ErrorType::init('Forbidden', M403ManagementErrorException::class))
            ->throwErrorOn('406', ErrorType::init('Not Acceptable', ManagementErrorException::class))
            ->throwErrorOn('415', ErrorType::init('Unsupported media type', ManagementErrorException::class))
            ->throwErrorOn('429', ErrorType::init('Too many requests', ManagementErrorException::class))
            ->throwErrorOn('500', ErrorType::init('Internal server error.', M500ManagementErrorException::class))
            ->throwErrorOn('0', ErrorType::init('Unexpected error', ManagementErrorException::class))
            ->type(DtoHealthScoreSummary::class)
            ->returnApiResponse();

        return $this->execute($_reqBuilder, $_resHandler);
    }

    /**
     * @return ApiResponse Response from the API call
     */
    public function sensorInsightsGetNetworkHealthScoreResponse(): ApiResponse
    {
        $_reqBuilder = $this->requestBuilder(RequestMethod::POST, '/dm/v1/healthscore/network')
            ->server(Server::THINGSPACE)
            ->auth(Auth::and('thingspace_oauth', 'VZ-M2M-Token'));

        $_resHandler = $this->responseHandler()
            ->throwErrorOn('400', ErrorType::init('Bad Request', M400ManagementErrorException::class))
            ->throwErrorOn('401', ErrorType::init('UnAuthorized', ManagementErrorException::class))
            ->throwErrorOn('403', ErrorType::init('Forbidden', M403ManagementErrorException::class))
            ->throwErrorOn('406', ErrorType::init('Not Acceptable', ManagementErrorException::class))
            ->throwErrorOn('415', ErrorType::init('Unsupported media type', ManagementErrorException::class))
            ->throwErrorOn('429', ErrorType::init('Too many requests', ManagementErrorException::class))
            ->throwErrorOn('500', ErrorType::init('Internal server error.', M500ManagementErrorException::class))
            ->throwErrorOn('0', ErrorType::init('Unexpected error', ManagementErrorException::class))
            ->type(DtoGetNetworkHealthScoreResponse::class)
            ->returnApiResponse();

        return $this->execute($_reqBuilder, $_resHandler);
    }
}
