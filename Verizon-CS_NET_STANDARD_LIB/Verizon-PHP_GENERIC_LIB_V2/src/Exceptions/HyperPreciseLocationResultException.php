<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Exceptions;

use VerizonLib\ApiHelper;

/**
 * Error response.
 */
class HyperPreciseLocationResultException extends ApiException
{
    /**
     * @var string|null
     */
    private $responseCode;

    /**
     * @var string|null
     */
    private $messageProperty;

    /**
     * @var \VerizonLib\Models\HyperPreciseLocationFault|null
     */
    private $fault;

    /**
     * Returns Response Code.
     * Error Code.
     */
    public function getResponseCode(): ?string
    {
        return $this->responseCode;
    }

    /**
     * Sets Response Code.
     * Error Code.
     *
     * @maps responseCode
     * @factory \VerizonLib\Models\ErrorResponseCode::checkValue
     */
    public function setResponseCode(?string $responseCode): void
    {
        $this->responseCode = $responseCode;
    }

    /**
     * Returns Message Property.
     * Error message.
     */
    public function getMessageProperty(): ?string
    {
        return $this->messageProperty;
    }

    /**
     * Sets Message Property.
     * Error message.
     *
     * @maps message
     */
    public function setMessageProperty(?string $messageProperty): void
    {
        $this->messageProperty = $messageProperty;
    }

    /**
     * Returns Fault.
     * Fault occurred while responding.
     */
    public function getFault(): ?\VerizonLib\Models\HyperPreciseLocationFault
    {
        return $this->fault;
    }

    /**
     * Sets Fault.
     * Fault occurred while responding.
     *
     * @maps fault
     */
    public function setFault(?\VerizonLib\Models\HyperPreciseLocationFault $fault): void
    {
        $this->fault = $fault;
    }

    /**
     * Converts the HyperPreciseLocationResultException object to a human-readable string representation.
     *
     * @return string The string representation of the HyperPreciseLocationResultException object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'HyperPreciseLocationResultException',
            [
                'responseCode' => $this->responseCode,
                'messageProperty' => $this->messageProperty,
                'fault' => $this->fault,
                'additionalProperties' => $this->additionalProperties
            ],
            parent::__toString()
        );
    }

    protected $propertyNames = ['responseCode', 'message', 'fault'];

    private $additionalProperties = [];

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property.
     * @param mixed $value Value of property.
     */
    public function addAdditionalProperty(string $name, $value)
    {
        if (in_array($name, $this->propertyNames, true)) {
            throw new \InvalidArgumentException(
                "The additional property key, '$name' conflicts with one of the model's properties"
            );
        }

        $this->additionalProperties[$name] = $value;
    }

    /**
     * Find an additional property by name in this model or false if property does not exist.
     *
     * @param string $name Name of property.
     *
     * @return mixed|false Value of the property.
     */
    public function findAdditionalProperty(string $name)
    {
        if (isset($this->additionalProperties[$name])) {
            return $this->additionalProperties[$name];
        }
        return false;
    }
}
