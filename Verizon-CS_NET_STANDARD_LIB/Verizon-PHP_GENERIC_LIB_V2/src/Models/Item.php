<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;
use VerizonLib\ApiHelper;

class Item implements \JsonSerializable
{
    /**
     * @var int
     */
    private $itis;

    /**
     * @param int $itis
     */
    public function __construct(int $itis)
    {
        $this->itis = $itis;
    }

    /**
     * Returns Itis.
     * The ITIS Code that describes the alert/danger/hazard. All ITS standards use the same types here to
     * explain the type of the alert/danger/hazard involved.
     *
     * The complete set of ITIS codes can be found in Volume Two of the SAE J2540 standard. This is a set
     * of over 1000 items which are used to encode common events and list items in ITS.
     */
    public function getItis(): int
    {
        return $this->itis;
    }

    /**
     * Sets Itis.
     * The ITIS Code that describes the alert/danger/hazard. All ITS standards use the same types here to
     * explain the type of the alert/danger/hazard involved.
     *
     * The complete set of ITIS codes can be found in Volume Two of the SAE J2540 standard. This is a set
     * of over 1000 items which are used to encode common events and list items in ITS.
     *
     * @required
     * @maps itis
     */
    public function setItis(int $itis): void
    {
        $this->itis = $itis;
    }

    /**
     * Converts the Item object to a human-readable string representation.
     *
     * @return string The string representation of the Item object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify('Item', ['itis' => $this->itis]);
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['itis'] = $this->itis;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
