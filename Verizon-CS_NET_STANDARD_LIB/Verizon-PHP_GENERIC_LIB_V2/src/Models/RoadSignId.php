<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;
use VerizonLib\ApiHelper;

/**
 * It provide a precise location of one or more roadside signs.
 */
class RoadSignId implements \JsonSerializable
{
    /**
     * @var Position
     */
    private $position;

    /**
     * @var string
     */
    private $viewAngle;

    /**
     * @param Position $position
     * @param string $viewAngle
     */
    public function __construct(Position $position, string $viewAngle)
    {
        $this->position = $position;
        $this->viewAngle = $viewAngle;
    }

    /**
     * Returns Position.
     * It provides a precise location in the WGS-84 coordinate system, from which short offsets may be used
     * to create additional data using a flat earth projection centered on this location.
     */
    public function getPosition(): Position
    {
        return $this->position;
    }

    /**
     * Sets Position.
     * It provides a precise location in the WGS-84 coordinate system, from which short offsets may be used
     * to create additional data using a flat earth projection centered on this location.
     *
     * @required
     * @maps position
     */
    public function setPosition(Position $position): void
    {
        $this->position = $position;
    }

    /**
     * Returns View Angle.
     */
    public function getViewAngle(): string
    {
        return $this->viewAngle;
    }

    /**
     * Sets View Angle.
     *
     * @required
     * @maps viewAngle
     */
    public function setViewAngle(string $viewAngle): void
    {
        $this->viewAngle = $viewAngle;
    }

    /**
     * Converts the RoadSignId object to a human-readable string representation.
     *
     * @return string The string representation of the RoadSignId object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify('RoadSignId', ['position' => $this->position, 'viewAngle' => $this->viewAngle]);
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['position']  = $this->position;
        $json['viewAngle'] = $this->viewAngle;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
