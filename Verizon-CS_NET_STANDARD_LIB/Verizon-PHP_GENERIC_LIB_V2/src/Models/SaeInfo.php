<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;
use VerizonLib\ApiHelper;

class SaeInfo implements \JsonSerializable
{
    /**
     * @var DataFrame[]
     */
    private $dataFrames;

    /**
     * @param DataFrame[] $dataFrames
     */
    public function __construct(array $dataFrames)
    {
        $this->dataFrames = $dataFrames;
    }

    /**
     * Returns Data Frames.
     * List of data frames.
     *
     * @return DataFrame[]
     */
    public function getDataFrames(): array
    {
        return $this->dataFrames;
    }

    /**
     * Sets Data Frames.
     * List of data frames.
     *
     * @required
     * @maps dataFrames
     *
     * @param DataFrame[] $dataFrames
     */
    public function setDataFrames(array $dataFrames): void
    {
        $this->dataFrames = $dataFrames;
    }

    /**
     * Converts the SaeInfo object to a human-readable string representation.
     *
     * @return string The string representation of the SaeInfo object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify('SaeInfo', ['dataFrames' => $this->dataFrames]);
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['dataFrames'] = $this->dataFrames;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
