<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;
use VerizonLib\ApiHelper;

class DtoHealthScoreMetric implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $metrictype;

    /**
     * @var string|null
     */
    private $metricvalue;

    /**
     * Returns Metrictype.
     * The type of measurement and can be overallscore, networkscore, gatewayscore, sensorscore,
     * networkstatus, averagesignalstrength or networkavailabilitylast30
     */
    public function getMetrictype(): ?string
    {
        return $this->metrictype;
    }

    /**
     * Sets Metrictype.
     * The type of measurement and can be overallscore, networkscore, gatewayscore, sensorscore,
     * networkstatus, averagesignalstrength or networkavailabilitylast30
     *
     * @maps metrictype
     */
    public function setMetrictype(?string $metrictype): void
    {
        $this->metrictype = $metrictype;
    }

    /**
     * Returns Metricvalue.
     * the value of the `metrictype` as a percentage
     */
    public function getMetricvalue(): ?string
    {
        return $this->metricvalue;
    }

    /**
     * Sets Metricvalue.
     * the value of the `metrictype` as a percentage
     *
     * @maps metricvalue
     */
    public function setMetricvalue(?string $metricvalue): void
    {
        $this->metricvalue = $metricvalue;
    }

    /**
     * Converts the DtoHealthScoreMetric object to a human-readable string representation.
     *
     * @return string The string representation of the DtoHealthScoreMetric object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'DtoHealthScoreMetric',
            ['metrictype' => $this->metrictype, 'metricvalue' => $this->metricvalue]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->metrictype)) {
            $json['metrictype']  = $this->metrictype;
        }
        if (isset($this->metricvalue)) {
            $json['metricvalue'] = $this->metricvalue;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
