<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;
use VerizonLib\ApiHelper;

class EsimDeviceList implements \JsonSerializable
{
    /**
     * @var array<EsimDeviceId|DeviceId2>|null
     */
    private $deviceIds;

    /**
     * Returns Device Ids.
     *
     * @return array<EsimDeviceId|DeviceId2>|null
     */
    public function getDeviceIds(): ?array
    {
        return $this->deviceIds;
    }

    /**
     * Sets Device Ids.
     *
     * @maps deviceIds
     * @mapsBy anyOf(anyOf(EsimDeviceId,DeviceId2)[],null)
     *
     * @param array<EsimDeviceId|DeviceId2>|null $deviceIds
     */
    public function setDeviceIds(?array $deviceIds): void
    {
        $this->deviceIds = $deviceIds;
    }

    /**
     * Converts the EsimDeviceList object to a human-readable string representation.
     *
     * @return string The string representation of the EsimDeviceList object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify('EsimDeviceList', ['deviceIds' => $this->deviceIds]);
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->deviceIds)) {
            $json['deviceIds'] =
                ApiHelper::getJsonHelper()->verifyTypes(
                    $this->deviceIds,
                    'anyOf(anyOf(EsimDeviceId,DeviceId2)[],null)'
                );
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
