<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;
use VerizonLib\ApiHelper;

class AllowanceThreshold implements \JsonSerializable
{
    /**
     * @var bool|null
     */
    private $percentage50;

    /**
     * @var bool|null
     */
    private $percentage75;

    /**
     * @var bool|null
     */
    private $percentage90;

    /**
     * @var bool|null
     */
    private $percentage100;

    /**
     * Returns Percentage 50.
     */
    public function getPercentage50(): ?bool
    {
        return $this->percentage50;
    }

    /**
     * Sets Percentage 50.
     *
     * @maps percentage50
     */
    public function setPercentage50(?bool $percentage50): void
    {
        $this->percentage50 = $percentage50;
    }

    /**
     * Returns Percentage 75.
     */
    public function getPercentage75(): ?bool
    {
        return $this->percentage75;
    }

    /**
     * Sets Percentage 75.
     *
     * @maps percentage75
     */
    public function setPercentage75(?bool $percentage75): void
    {
        $this->percentage75 = $percentage75;
    }

    /**
     * Returns Percentage 90.
     */
    public function getPercentage90(): ?bool
    {
        return $this->percentage90;
    }

    /**
     * Sets Percentage 90.
     *
     * @maps percentage90
     */
    public function setPercentage90(?bool $percentage90): void
    {
        $this->percentage90 = $percentage90;
    }

    /**
     * Returns Percentage 100.
     */
    public function getPercentage100(): ?bool
    {
        return $this->percentage100;
    }

    /**
     * Sets Percentage 100.
     *
     * @maps percentage100
     */
    public function setPercentage100(?bool $percentage100): void
    {
        $this->percentage100 = $percentage100;
    }

    /**
     * Converts the AllowanceThreshold object to a human-readable string representation.
     *
     * @return string The string representation of the AllowanceThreshold object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'AllowanceThreshold',
            [
                'percentage50' => $this->percentage50,
                'percentage75' => $this->percentage75,
                'percentage90' => $this->percentage90,
                'percentage100' => $this->percentage100,
                'additionalProperties' => $this->additionalProperties
            ]
        );
    }

    protected $propertyNames = ['percentage50', 'percentage75', 'percentage90', 'percentage100'];

    private $additionalProperties = [];

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property.
     * @param mixed $value Value of property.
     */
    public function addAdditionalProperty(string $name, $value)
    {
        if (in_array($name, $this->propertyNames, true)) {
            throw new \InvalidArgumentException(
                "The additional property key, '$name' conflicts with one of the model's properties"
            );
        }

        $this->additionalProperties[$name] = $value;
    }

    /**
     * Find an additional property by name in this model or false if property does not exist.
     *
     * @param string $name Name of property.
     *
     * @return mixed|false Value of the property.
     */
    public function findAdditionalProperty(string $name)
    {
        if (isset($this->additionalProperties[$name])) {
            return $this->additionalProperties[$name];
        }
        return false;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->percentage50)) {
            $json['percentage50']  = $this->percentage50;
        }
        if (isset($this->percentage75)) {
            $json['percentage75']  = $this->percentage75;
        }
        if (isset($this->percentage90)) {
            $json['percentage90']  = $this->percentage90;
        }
        if (isset($this->percentage100)) {
            $json['percentage100'] = $this->percentage100;
        }
        $json = array_merge($json, $this->additionalProperties);

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
