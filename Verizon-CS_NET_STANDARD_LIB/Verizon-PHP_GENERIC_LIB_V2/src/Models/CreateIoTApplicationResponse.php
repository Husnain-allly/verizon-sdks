<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;
use VerizonLib\ApiHelper;

/**
 * A success response includes an array of all matching events. Each event includes the full event
 * resource definition.
 */
class CreateIoTApplicationResponse implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $appName;

    /**
     * @var string|null
     */
    private $sharedSecret;

    /**
     * @var string|null
     */
    private $url;

    /**
     * Returns App Name.
     * An application will be created under the user's Azure subscription with this name and of type IOT
     * central.
     */
    public function getAppName(): ?string
    {
        return $this->appName;
    }

    /**
     * Sets App Name.
     * An application will be created under the user's Azure subscription with this name and of type IOT
     * central.
     *
     * @maps appName
     */
    public function setAppName(?string $appName): void
    {
        $this->appName = $appName;
    }

    /**
     * Returns Shared Secret.
     * Part of the user credentials (from Azure) the user needs to use for calling further TS Core APIs for
     * setting up Azure cloud connector.
     */
    public function getSharedSecret(): ?string
    {
        return $this->sharedSecret;
    }

    /**
     * Sets Shared Secret.
     * Part of the user credentials (from Azure) the user needs to use for calling further TS Core APIs for
     * setting up Azure cloud connector.
     *
     * @maps sharedSecret
     */
    public function setSharedSecret(?string $sharedSecret): void
    {
        $this->sharedSecret = $sharedSecret;
    }

    /**
     * Returns Url.
     * An IOT central endpoint the user can use to see the data that is being streamed.
     */
    public function getUrl(): ?string
    {
        return $this->url;
    }

    /**
     * Sets Url.
     * An IOT central endpoint the user can use to see the data that is being streamed.
     *
     * @maps url
     */
    public function setUrl(?string $url): void
    {
        $this->url = $url;
    }

    /**
     * Converts the CreateIoTApplicationResponse object to a human-readable string representation.
     *
     * @return string The string representation of the CreateIoTApplicationResponse object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'CreateIoTApplicationResponse',
            [
                'appName' => $this->appName,
                'sharedSecret' => $this->sharedSecret,
                'url' => $this->url,
                'additionalProperties' => $this->additionalProperties
            ]
        );
    }

    protected $propertyNames = ['appName', 'sharedSecret', 'url'];

    private $additionalProperties = [];

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property.
     * @param mixed $value Value of property.
     */
    public function addAdditionalProperty(string $name, $value)
    {
        if (in_array($name, $this->propertyNames, true)) {
            throw new \InvalidArgumentException(
                "The additional property key, '$name' conflicts with one of the model's properties"
            );
        }

        $this->additionalProperties[$name] = $value;
    }

    /**
     * Find an additional property by name in this model or false if property does not exist.
     *
     * @param string $name Name of property.
     *
     * @return mixed|false Value of the property.
     */
    public function findAdditionalProperty(string $name)
    {
        if (isset($this->additionalProperties[$name])) {
            return $this->additionalProperties[$name];
        }
        return false;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->appName)) {
            $json['appName']      = $this->appName;
        }
        if (isset($this->sharedSecret)) {
            $json['sharedSecret'] = $this->sharedSecret;
        }
        if (isset($this->url)) {
            $json['url']          = $this->url;
        }
        $json = array_merge($json, $this->additionalProperties);

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
