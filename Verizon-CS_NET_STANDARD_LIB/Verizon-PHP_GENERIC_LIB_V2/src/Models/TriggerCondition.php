<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use Core\Utils\CoreHelper;
use Exception;
use stdClass;

/**
 * The following options are supported as Trigger TriggerConditions:
 * - enter: The message is triggered when the road user enters the geofence. For polygons and multi-
 * polygons only. In case of multi-polygons the message is triggered when the road user enters any of
 * the polygons.
 * - leave: The message is triggered when the road user leaves the geofence. For polygons and multi-
 * polygons only. In case of multi-polygons the message is triggered when the road user leaves any of
 * the polygons.
 * - inside: The message is triggered when the road user is inside the geofence. For polygons and
 * multi-polygons only. In case of multi-polygons the message is triggered when the road user is inside
 * any of the polygons.
 * - crossing: The message is triggered when the road user crosses the geofence. For lines and multi-
 * lines only. In case of multi-lines the message is triggered when the road user crosses any of the
 * lines.
 */
class TriggerCondition
{
    public const ENTER = 'enter';

    public const LEAVE = 'leave';

    public const INSIDE = 'inside';

    public const CROSSING = 'crossing';

    private const _ALL_VALUES = [self::ENTER, self::LEAVE, self::INSIDE, self::CROSSING];

    /**
     * Ensures that all the given values are present in this Enum.
     *
     * @param array|stdClass|null|string $value Value or a list/map of values to be checked
     *
     * @return array|null|string Input value(s), if all are a part of this Enum
     *
     * @throws Exception Throws exception if any given value is not in this Enum
     */
    public static function checkValue($value)
    {
        $value = json_decode(json_encode($value), true); // converts stdClass into array
        if (CoreHelper::checkValueOrValuesInList($value, self::_ALL_VALUES)) {
            return $value;
        }
        throw new Exception("$value is invalid for TriggerCondition.");
    }
}
