<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;
use VerizonLib\ApiHelper;
use VerizonLib\Utils\DateTimeHelper;

class ProvhistoryRequest implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $accountName;

    /**
     * @var GioDeviceId[]|null
     */
    private $deviceFilter;

    /**
     * @var \DateTime|null
     */
    private $earliest;

    /**
     * @var \DateTime|null
     */
    private $latest;

    /**
     * Returns Account Name.
     */
    public function getAccountName(): ?string
    {
        return $this->accountName;
    }

    /**
     * Sets Account Name.
     *
     * @maps accountName
     */
    public function setAccountName(?string $accountName): void
    {
        $this->accountName = $accountName;
    }

    /**
     * Returns Device Filter.
     *
     * @return GioDeviceId[]|null
     */
    public function getDeviceFilter(): ?array
    {
        return $this->deviceFilter;
    }

    /**
     * Sets Device Filter.
     *
     * @maps deviceFilter
     *
     * @param GioDeviceId[]|null $deviceFilter
     */
    public function setDeviceFilter(?array $deviceFilter): void
    {
        $this->deviceFilter = $deviceFilter;
    }

    /**
     * Returns Earliest.
     */
    public function getEarliest(): ?\DateTime
    {
        return $this->earliest;
    }

    /**
     * Sets Earliest.
     *
     * @maps earliest
     * @factory \VerizonLib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setEarliest(?\DateTime $earliest): void
    {
        $this->earliest = $earliest;
    }

    /**
     * Returns Latest.
     */
    public function getLatest(): ?\DateTime
    {
        return $this->latest;
    }

    /**
     * Sets Latest.
     *
     * @maps latest
     * @factory \VerizonLib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setLatest(?\DateTime $latest): void
    {
        $this->latest = $latest;
    }

    /**
     * Converts the ProvhistoryRequest object to a human-readable string representation.
     *
     * @return string The string representation of the ProvhistoryRequest object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'ProvhistoryRequest',
            [
                'accountName' => $this->accountName,
                'deviceFilter' => $this->deviceFilter,
                'earliest' => $this->earliest,
                'latest' => $this->latest
            ]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->accountName)) {
            $json['accountName']  = $this->accountName;
        }
        if (isset($this->deviceFilter)) {
            $json['deviceFilter'] = $this->deviceFilter;
        }
        if (isset($this->earliest)) {
            $json['earliest']     = DateTimeHelper::toRfc3339DateTime($this->earliest);
        }
        if (isset($this->latest)) {
            $json['latest']       = DateTimeHelper::toRfc3339DateTime($this->latest);
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
