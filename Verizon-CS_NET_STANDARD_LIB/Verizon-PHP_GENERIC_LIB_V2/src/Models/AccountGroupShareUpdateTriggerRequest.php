<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;
use VerizonLib\ApiHelper;

class AccountGroupShareUpdateTriggerRequest implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $triggerId;

    /**
     * @var string|null
     */
    private $triggerName;

    /**
     * @var string|null
     */
    private $accountName;

    /**
     * @var string|null
     */
    private $triggerCategory;

    /**
     * @var AccountGroupShareObject|null
     */
    private $dataTrigger;

    /**
     * @var Notificationarray|null
     */
    private $notification;

    /**
     * @var string|null
     */
    private $active;

    /**
     * Returns Trigger Id.
     * The system assigned UUID of the trigger
     */
    public function getTriggerId(): ?string
    {
        return $this->triggerId;
    }

    /**
     * Sets Trigger Id.
     * The system assigned UUID of the trigger
     *
     * @maps triggerId
     */
    public function setTriggerId(?string $triggerId): void
    {
        $this->triggerId = $triggerId;
    }

    /**
     * Returns Trigger Name.
     * The user defined name of the trigger
     */
    public function getTriggerName(): ?string
    {
        return $this->triggerName;
    }

    /**
     * Sets Trigger Name.
     * The user defined name of the trigger
     *
     * @maps triggerName
     */
    public function setTriggerName(?string $triggerName): void
    {
        $this->triggerName = $triggerName;
    }

    /**
     * Returns Account Name.
     * The numeric name of the account and must include leading zeroes
     */
    public function getAccountName(): ?string
    {
        return $this->accountName;
    }

    /**
     * Sets Account Name.
     * The numeric name of the account and must include leading zeroes
     *
     * @maps accountName
     */
    public function setAccountName(?string $accountName): void
    {
        $this->accountName = $accountName;
    }

    /**
     * Returns Trigger Category.
     * The type of trigger being created or modified
     */
    public function getTriggerCategory(): ?string
    {
        return $this->triggerCategory;
    }

    /**
     * Sets Trigger Category.
     * The type of trigger being created or modified
     *
     * @maps triggerCategory
     * @factory \VerizonLib\Models\TriggerCategory::checkValue
     */
    public function setTriggerCategory(?string $triggerCategory): void
    {
        $this->triggerCategory = $triggerCategory;
    }

    /**
     * Returns Data Trigger.
     */
    public function getDataTrigger(): ?AccountGroupShareObject
    {
        return $this->dataTrigger;
    }

    /**
     * Sets Data Trigger.
     *
     * @maps dataTrigger
     */
    public function setDataTrigger(?AccountGroupShareObject $dataTrigger): void
    {
        $this->dataTrigger = $dataTrigger;
    }

    /**
     * Returns Notification.
     */
    public function getNotification(): ?Notificationarray
    {
        return $this->notification;
    }

    /**
     * Sets Notification.
     *
     * @maps notification
     */
    public function setNotification(?Notificationarray $notification): void
    {
        $this->notification = $notification;
    }

    /**
     * Returns Active.
     * A flag to indicate of the trigger is active, true, or not, false
     */
    public function getActive(): ?string
    {
        return $this->active;
    }

    /**
     * Sets Active.
     * A flag to indicate of the trigger is active, true, or not, false
     *
     * @maps active
     * @factory \VerizonLib\Models\Active::checkValue
     */
    public function setActive(?string $active): void
    {
        $this->active = $active;
    }

    /**
     * Converts the AccountGroupShareUpdateTriggerRequest object to a human-readable string representation.
     *
     * @return string The string representation of the AccountGroupShareUpdateTriggerRequest object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'AccountGroupShareUpdateTriggerRequest',
            [
                'triggerId' => $this->triggerId,
                'triggerName' => $this->triggerName,
                'accountName' => $this->accountName,
                'triggerCategory' => $this->triggerCategory,
                'dataTrigger' => $this->dataTrigger,
                'notification' => $this->notification,
                'active' => $this->active
            ]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->triggerId)) {
            $json['triggerId']       = $this->triggerId;
        }
        if (isset($this->triggerName)) {
            $json['triggerName']     = $this->triggerName;
        }
        if (isset($this->accountName)) {
            $json['accountName']     = $this->accountName;
        }
        if (isset($this->triggerCategory)) {
            $json['triggerCategory'] = TriggerCategory::checkValue($this->triggerCategory);
        }
        if (isset($this->dataTrigger)) {
            $json['dataTrigger']     = $this->dataTrigger;
        }
        if (isset($this->notification)) {
            $json['notification']    = $this->notification;
        }
        if (isset($this->active)) {
            $json['active']          = Active::checkValue($this->active);
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
