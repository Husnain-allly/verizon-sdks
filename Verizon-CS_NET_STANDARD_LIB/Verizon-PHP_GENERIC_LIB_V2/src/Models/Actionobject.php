<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;
use VerizonLib\ApiHelper;

class Actionobject implements \JsonSerializable
{
    /**
     * @var bool|null
     */
    private $suspend;

    /**
     * @var Suspenddetailsobject|null
     */
    private $suspendDetails;

    /**
     * @var bool|null
     */
    private $changePlan;

    /**
     * @var ChangePlanDetails|null
     */
    private $changePlanDetails;

    /**
     * Returns Suspend.
     */
    public function getSuspend(): ?bool
    {
        return $this->suspend;
    }

    /**
     * Sets Suspend.
     *
     * @maps suspend
     */
    public function setSuspend(?bool $suspend): void
    {
        $this->suspend = $suspend;
    }

    /**
     * Returns Suspend Details.
     */
    public function getSuspendDetails(): ?Suspenddetailsobject
    {
        return $this->suspendDetails;
    }

    /**
     * Sets Suspend Details.
     *
     * @maps suspendDetails
     */
    public function setSuspendDetails(?Suspenddetailsobject $suspendDetails): void
    {
        $this->suspendDetails = $suspendDetails;
    }

    /**
     * Returns Change Plan.
     * a flag to set if the trigger changes service plans, true, or not, false
     */
    public function getChangePlan(): ?bool
    {
        return $this->changePlan;
    }

    /**
     * Sets Change Plan.
     * a flag to set if the trigger changes service plans, true, or not, false
     *
     * @maps changePlan
     */
    public function setChangePlan(?bool $changePlan): void
    {
        $this->changePlan = $changePlan;
    }

    /**
     * Returns Change Plan Details.
     * The service plan code to switch to
     */
    public function getChangePlanDetails(): ?ChangePlanDetails
    {
        return $this->changePlanDetails;
    }

    /**
     * Sets Change Plan Details.
     * The service plan code to switch to
     *
     * @maps changePlanDetails
     */
    public function setChangePlanDetails(?ChangePlanDetails $changePlanDetails): void
    {
        $this->changePlanDetails = $changePlanDetails;
    }

    /**
     * Converts the Actionobject object to a human-readable string representation.
     *
     * @return string The string representation of the Actionobject object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'Actionobject',
            [
                'suspend' => $this->suspend,
                'suspendDetails' => $this->suspendDetails,
                'changePlan' => $this->changePlan,
                'changePlanDetails' => $this->changePlanDetails,
                'additionalProperties' => $this->additionalProperties
            ]
        );
    }

    protected $propertyNames = ['suspend', 'suspendDetails', 'changePlan', 'changePlanDetails'];

    private $additionalProperties = [];

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property.
     * @param mixed $value Value of property.
     */
    public function addAdditionalProperty(string $name, $value)
    {
        if (in_array($name, $this->propertyNames, true)) {
            throw new \InvalidArgumentException(
                "The additional property key, '$name' conflicts with one of the model's properties"
            );
        }

        $this->additionalProperties[$name] = $value;
    }

    /**
     * Find an additional property by name in this model or false if property does not exist.
     *
     * @param string $name Name of property.
     *
     * @return mixed|false Value of the property.
     */
    public function findAdditionalProperty(string $name)
    {
        if (isset($this->additionalProperties[$name])) {
            return $this->additionalProperties[$name];
        }
        return false;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->suspend)) {
            $json['suspend']           = $this->suspend;
        }
        if (isset($this->suspendDetails)) {
            $json['suspendDetails']    = $this->suspendDetails;
        }
        if (isset($this->changePlan)) {
            $json['changePlan']        = $this->changePlan;
        }
        if (isset($this->changePlanDetails)) {
            $json['changePlanDetails'] = $this->changePlanDetails;
        }
        $json = array_merge($json, $this->additionalProperties);

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
