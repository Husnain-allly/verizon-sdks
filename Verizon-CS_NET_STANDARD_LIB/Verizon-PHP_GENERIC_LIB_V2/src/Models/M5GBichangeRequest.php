<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;
use VerizonLib\ApiHelper;

class M5GBichangeRequest implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $accountName;

    /**
     * @var string|null
     */
    private $servicePlan;

    /**
     * @var array<M5GBideviceIdarray2|M5GBiaddressAndcustomerinfo2>|null
     */
    private $deviceListWithServiceAddress;

    /**
     * @var string|null
     */
    private $currentServicePlan;

    /**
     * Returns Account Name.
     */
    public function getAccountName(): ?string
    {
        return $this->accountName;
    }

    /**
     * Sets Account Name.
     *
     * @maps accountName
     */
    public function setAccountName(?string $accountName): void
    {
        $this->accountName = $accountName;
    }

    /**
     * Returns Service Plan.
     */
    public function getServicePlan(): ?string
    {
        return $this->servicePlan;
    }

    /**
     * Sets Service Plan.
     *
     * @maps servicePlan
     */
    public function setServicePlan(?string $servicePlan): void
    {
        $this->servicePlan = $servicePlan;
    }

    /**
     * Returns Device List With Service Address.
     *
     * @return array<M5GBideviceIdarray2|M5GBiaddressAndcustomerinfo2>|null
     */
    public function getDeviceListWithServiceAddress(): ?array
    {
        return $this->deviceListWithServiceAddress;
    }

    /**
     * Sets Device List With Service Address.
     *
     * @maps deviceListWithServiceAddress
     * @mapsBy anyOf(anyOf(M5GBideviceIdarray2,M5GBiaddressAndcustomerinfo2)[],null)
     *
     * @param array<M5GBideviceIdarray2|M5GBiaddressAndcustomerinfo2>|null $deviceListWithServiceAddress
     */
    public function setDeviceListWithServiceAddress(?array $deviceListWithServiceAddress): void
    {
        $this->deviceListWithServiceAddress = $deviceListWithServiceAddress;
    }

    /**
     * Returns Current Service Plan.
     */
    public function getCurrentServicePlan(): ?string
    {
        return $this->currentServicePlan;
    }

    /**
     * Sets Current Service Plan.
     *
     * @maps currentServicePlan
     */
    public function setCurrentServicePlan(?string $currentServicePlan): void
    {
        $this->currentServicePlan = $currentServicePlan;
    }

    /**
     * Converts the M5GBichangeRequest object to a human-readable string representation.
     *
     * @return string The string representation of the M5GBichangeRequest object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'M5GBichangeRequest',
            [
                'accountName' => $this->accountName,
                'servicePlan' => $this->servicePlan,
                'deviceListWithServiceAddress' => $this->deviceListWithServiceAddress,
                'currentServicePlan' => $this->currentServicePlan,
                'additionalProperties' => $this->additionalProperties
            ]
        );
    }

    protected $propertyNames = ['accountName', 'servicePlan', 'deviceListWithServiceAddress', 'currentServicePlan'];

    private $additionalProperties = [];

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property.
     * @param mixed $value Value of property.
     */
    public function addAdditionalProperty(string $name, $value)
    {
        if (in_array($name, $this->propertyNames, true)) {
            throw new \InvalidArgumentException(
                "The additional property key, '$name' conflicts with one of the model's properties"
            );
        }

        $this->additionalProperties[$name] = $value;
    }

    /**
     * Find an additional property by name in this model or false if property does not exist.
     *
     * @param string $name Name of property.
     *
     * @return mixed|false Value of the property.
     */
    public function findAdditionalProperty(string $name)
    {
        if (isset($this->additionalProperties[$name])) {
            return $this->additionalProperties[$name];
        }
        return false;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->accountName)) {
            $json['accountName']                  = $this->accountName;
        }
        if (isset($this->servicePlan)) {
            $json['servicePlan']                  = $this->servicePlan;
        }
        if (isset($this->deviceListWithServiceAddress)) {
            $json['deviceListWithServiceAddress'] =
                ApiHelper::getJsonHelper()->verifyTypes(
                    $this->deviceListWithServiceAddress,
                    'anyOf(anyOf(M5GBideviceIdarray2,M5GBiaddressAndcustomerinfo2)[],null)'
                );
        }
        if (isset($this->currentServicePlan)) {
            $json['currentServicePlan']           = $this->currentServicePlan;
        }
        $json = array_merge($json, $this->additionalProperties);

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
