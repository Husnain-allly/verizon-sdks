<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models\Builders;

use Core\Utils\CoreHelper;
use VerizonLib\Models\ReadySimDeviceId;
use VerizonLib\Models\RequestBodyForUsage;

/**
 * Builder for model RequestBodyForUsage
 *
 * @see RequestBodyForUsage
 */
class RequestBodyForUsageBuilder
{
    /**
     * @var RequestBodyForUsage
     */
    private $instance;

    private function __construct(RequestBodyForUsage $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new Request Body For Usage Builder object.
     */
    public static function init(): self
    {
        return new self(new RequestBodyForUsage());
    }

    /**
     * Sets account Id field.
     *
     * @param string|null $value
     */
    public function accountId(?string $value): self
    {
        $this->instance->setAccountId($value);
        return $this;
    }

    /**
     * Sets device Id field.
     *
     * @param ReadySimDeviceId[]|null $value
     */
    public function deviceId(?array $value): self
    {
        $this->instance->setDeviceId($value);
        return $this;
    }

    /**
     * Sets start Time field.
     *
     * @param \DateTime|null $value
     */
    public function startTime(?\DateTime $value): self
    {
        $this->instance->setStartTime($value);
        return $this;
    }

    /**
     * Sets end Time field.
     *
     * @param \DateTime|null $value
     */
    public function endTime(?\DateTime $value): self
    {
        $this->instance->setEndTime($value);
        return $this;
    }

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property.
     * @param mixed $value Value of property.
     */
    public function additionalProperty(string $name, $value): self
    {
        $this->instance->addAdditionalProperty($name, $value);
        return $this;
    }

    /**
     * Initializes a new Request Body For Usage object.
     */
    public function build(): RequestBodyForUsage
    {
        return CoreHelper::clone($this->instance);
    }
}
