<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models\Builders;

use Core\Utils\CoreHelper;
use VerizonLib\Models\UserSmartAlert;

/**
 * Builder for model UserSmartAlert
 *
 * @see UserSmartAlert
 */
class UserSmartAlertBuilder
{
    /**
     * @var UserSmartAlert
     */
    private $instance;

    private function __construct(UserSmartAlert $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new User Smart Alert Builder object.
     *
     * @param \DateTime $createdon
     * @param \DateTime $lastupdated
     * @param string $versionid
     */
    public static function init(\DateTime $createdon, \DateTime $lastupdated, string $versionid): self
    {
        return new self(new UserSmartAlert($createdon, $lastupdated, $versionid));
    }

    /**
     * Sets accountclientid field.
     *
     * @param string|null $value
     */
    public function accountclientid(?string $value): self
    {
        $this->instance->setAccountclientid($value);
        return $this;
    }

    /**
     * Sets billingaccountid field.
     *
     * @param string|null $value
     */
    public function billingaccountid(?string $value): self
    {
        $this->instance->setBillingaccountid($value);
        return $this;
    }

    /**
     * Sets category field.
     *
     * @param string|null $value
     */
    public function category(?string $value): self
    {
        $this->instance->setCategory($value);
        return $this;
    }

    /**
     * Sets condition field.
     *
     * @param int|null $value
     */
    public function condition(?int $value): self
    {
        $this->instance->setCondition($value);
        return $this;
    }

    /**
     * Sets description field.
     *
     * @param string|null $value
     */
    public function description(?string $value): self
    {
        $this->instance->setDescription($value);
        return $this;
    }

    /**
     * Sets deviceid field.
     *
     * @param string|null $value
     */
    public function deviceid(?string $value): self
    {
        $this->instance->setDeviceid($value);
        return $this;
    }

    /**
     * Sets foreignid field.
     *
     * @param string|null $value
     */
    public function foreignid(?string $value): self
    {
        $this->instance->setForeignid($value);
        return $this;
    }

    /**
     * Sets id field.
     *
     * @param string|null $value
     */
    public function id(?string $value): self
    {
        $this->instance->setId($value);
        return $this;
    }

    /**
     * Sets isacknowledged field.
     *
     * @param bool|null $value
     */
    public function isacknowledged(?bool $value): self
    {
        $this->instance->setIsacknowledged($value);
        return $this;
    }

    /**
     * Sets iscleared field.
     *
     * @param bool|null $value
     */
    public function iscleared(?bool $value): self
    {
        $this->instance->setIscleared($value);
        return $this;
    }

    /**
     * Sets isdisabled field.
     *
     * @param bool|null $value
     */
    public function isdisabled(?bool $value): self
    {
        $this->instance->setIsdisabled($value);
        return $this;
    }

    /**
     * Sets name field.
     *
     * @param string|null $value
     */
    public function name(?string $value): self
    {
        $this->instance->setName($value);
        return $this;
    }

    /**
     * Sets ruleid field.
     *
     * @param string|null $value
     */
    public function ruleid(?string $value): self
    {
        $this->instance->setRuleid($value);
        return $this;
    }

    /**
     * Sets severity field.
     *
     * @param string|null $value
     */
    public function severity(?string $value): self
    {
        $this->instance->setSeverity($value);
        return $this;
    }

    /**
     * Sets state field.
     *
     * @param string|null $value
     */
    public function state(?string $value): self
    {
        $this->instance->setState($value);
        return $this;
    }

    /**
     * Sets template field.
     *
     * @param string|null $value
     */
    public function template(?string $value): self
    {
        $this->instance->setTemplate($value);
        return $this;
    }

    /**
     * Sets version field.
     *
     * @param string|null $value
     */
    public function version(?string $value): self
    {
        $this->instance->setVersion($value);
        return $this;
    }

    /**
     * Initializes a new User Smart Alert object.
     */
    public function build(): UserSmartAlert
    {
        return CoreHelper::clone($this->instance);
    }
}
