<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models\Builders;

use Core\Utils\CoreHelper;
use VerizonLib\Models\DistributionSchedule;
use VerizonLib\Models\HeadingItem;
use VerizonLib\Models\Message1;
use VerizonLib\Models\SaeAlert;
use VerizonLib\Models\SpeedItem;

/**
 * Builder for model Message1
 *
 * @see Message1
 */
class Message1Builder
{
    /**
     * @var Message1
     */
    private $instance;

    private function __construct(Message1 $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new Message 1 Builder object.
     *
     * @param bool $isPrivate
     * @param string[] $roadUserType
     * @param string[] $triggerConditions
     * @param SaeAlert $saeAlert
     */
    public static function init(
        bool $isPrivate,
        array $roadUserType,
        array $triggerConditions,
        SaeAlert $saeAlert
    ): self {
        return new self(new Message1($isPrivate, $roadUserType, $triggerConditions, $saeAlert));
    }

    /**
     * Sets limits field.
     *
     * @param array<SpeedItem|HeadingItem>|null $value
     */
    public function limits(?array $value): self
    {
        $this->instance->setLimits($value);
        return $this;
    }

    /**
     * Sets distribution Type field.
     *
     * @param string[]|null $value
     */
    public function distributionType(?array $value): self
    {
        $this->instance->setDistributionType($value);
        return $this;
    }

    /**
     * Sets distribution Schedule field.
     *
     * @param DistributionSchedule|null $value
     */
    public function distributionSchedule(?DistributionSchedule $value): self
    {
        $this->instance->setDistributionSchedule($value);
        return $this;
    }

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property.
     * @param mixed $value Value of property.
     */
    public function additionalProperty(string $name, $value): self
    {
        $this->instance->addAdditionalProperty($name, $value);
        return $this;
    }

    /**
     * Initializes a new Message 1 object.
     */
    public function build(): Message1
    {
        return CoreHelper::clone($this->instance);
    }
}
