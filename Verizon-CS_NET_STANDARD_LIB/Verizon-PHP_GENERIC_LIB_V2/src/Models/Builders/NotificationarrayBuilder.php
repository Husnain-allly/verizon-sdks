<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models\Builders;

use Core\Utils\CoreHelper;
use VerizonLib\Models\Cellphonenumber;
use VerizonLib\Models\Notificationarray;

/**
 * Builder for model Notificationarray
 *
 * @see Notificationarray
 */
class NotificationarrayBuilder
{
    /**
     * @var Notificationarray
     */
    private $instance;

    private function __construct(Notificationarray $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new Notificationarray Builder object.
     */
    public static function init(): self
    {
        return new self(new Notificationarray());
    }

    /**
     * Sets notification Type field.
     *
     * @param string|null $value
     */
    public function notificationType(?string $value): self
    {
        $this->instance->setNotificationType($value);
        return $this;
    }

    /**
     * Sets callback field.
     *
     * @param bool|null $value
     */
    public function callback(?bool $value): self
    {
        $this->instance->setCallback($value);
        return $this;
    }

    /**
     * Sets email Notification field.
     *
     * @param bool|null $value
     */
    public function emailNotification(?bool $value): self
    {
        $this->instance->setEmailNotification($value);
        return $this;
    }

    /**
     * Sets notification Group Name field.
     *
     * @param string|null $value
     */
    public function notificationGroupName(?string $value): self
    {
        $this->instance->setNotificationGroupName($value);
        return $this;
    }

    /**
     * Sets notification Frequency Factor field.
     *
     * @param int|null $value
     */
    public function notificationFrequencyFactor(?int $value): self
    {
        $this->instance->setNotificationFrequencyFactor($value);
        return $this;
    }

    /**
     * Sets notification Frequency Interval field.
     *
     * @param string|null $value
     */
    public function notificationFrequencyInterval(?string $value): self
    {
        $this->instance->setNotificationFrequencyInterval($value);
        return $this;
    }

    /**
     * Sets external Email Recipients field.
     *
     * @param string|null $value
     */
    public function externalEmailRecipients(?string $value): self
    {
        $this->instance->setExternalEmailRecipients($value);
        return $this;
    }

    /**
     * Sets sms Notification field.
     *
     * @param bool|null $value
     */
    public function smsNotification(?bool $value): self
    {
        $this->instance->setSmsNotification($value);
        return $this;
    }

    /**
     * Sets sms Numbers field.
     *
     * @param Cellphonenumber[]|null $value
     */
    public function smsNumbers(?array $value): self
    {
        $this->instance->setSmsNumbers($value);
        return $this;
    }

    /**
     * Sets reminder field.
     *
     * @param bool|null $value
     */
    public function reminder(?bool $value): self
    {
        $this->instance->setReminder($value);
        return $this;
    }

    /**
     * Sets severity field.
     *
     * @param string|null $value
     */
    public function severity(?string $value): self
    {
        $this->instance->setSeverity($value);
        return $this;
    }

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property.
     * @param mixed $value Value of property.
     */
    public function additionalProperty(string $name, $value): self
    {
        $this->instance->addAdditionalProperty($name, $value);
        return $this;
    }

    /**
     * Initializes a new Notificationarray object.
     */
    public function build(): Notificationarray
    {
        return CoreHelper::clone($this->instance);
    }
}
