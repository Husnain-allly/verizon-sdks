<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models\Builders;

use Core\Utils\CoreHelper;
use VerizonLib\Models\PositionData;

/**
 * Builder for model PositionData
 *
 * @see PositionData
 */
class PositionDataBuilder
{
    /**
     * @var PositionData
     */
    private $instance;

    private function __construct(PositionData $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new Position Data Builder object.
     */
    public static function init(): self
    {
        return new self(new PositionData());
    }

    /**
     * Sets time field.
     *
     * @param string|null $value
     */
    public function time(?string $value): self
    {
        $this->instance->setTime($value);
        return $this;
    }

    /**
     * Sets utcoffset field.
     *
     * @param string|null $value
     */
    public function utcoffset(?string $value): self
    {
        $this->instance->setUtcoffset($value);
        return $this;
    }

    /**
     * Sets x field.
     *
     * @param string|null $value
     */
    public function x(?string $value): self
    {
        $this->instance->setX($value);
        return $this;
    }

    /**
     * Sets y field.
     *
     * @param string|null $value
     */
    public function y(?string $value): self
    {
        $this->instance->setY($value);
        return $this;
    }

    /**
     * Sets radius field.
     *
     * @param string|null $value
     */
    public function radius(?string $value): self
    {
        $this->instance->setRadius($value);
        return $this;
    }

    /**
     * Sets qos field.
     *
     * @param bool|null $value
     */
    public function qos(?bool $value): self
    {
        $this->instance->setQos($value);
        return $this;
    }

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property.
     * @param mixed $value Value of property.
     */
    public function additionalProperty(string $name, $value): self
    {
        $this->instance->addAdditionalProperty($name, $value);
        return $this;
    }

    /**
     * Initializes a new Position Data object.
     */
    public function build(): PositionData
    {
        return CoreHelper::clone($this->instance);
    }
}
