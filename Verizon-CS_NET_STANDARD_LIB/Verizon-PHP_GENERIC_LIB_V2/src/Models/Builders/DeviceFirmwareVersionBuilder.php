<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models\Builders;

use Core\Utils\CoreHelper;
use VerizonLib\Models\DeviceFirmwareVersion;

/**
 * Builder for model DeviceFirmwareVersion
 *
 * @see DeviceFirmwareVersion
 */
class DeviceFirmwareVersionBuilder
{
    /**
     * @var DeviceFirmwareVersion
     */
    private $instance;

    private function __construct(DeviceFirmwareVersion $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new Device Firmware Version Builder object.
     *
     * @param string $deviceId
     * @param string $firmwareVersion
     */
    public static function init(string $deviceId, string $firmwareVersion): self
    {
        return new self(new DeviceFirmwareVersion($deviceId, $firmwareVersion));
    }

    /**
     * Sets status field.
     *
     * @param string|null $value
     */
    public function status(?string $value): self
    {
        $this->instance->setStatus($value);
        return $this;
    }

    /**
     * Sets reason field.
     *
     * @param string|null $value
     */
    public function reason(?string $value): self
    {
        $this->instance->setReason($value);
        return $this;
    }

    /**
     * Sets firmware Version Update Time field.
     *
     * @param \DateTime|null $value
     */
    public function firmwareVersionUpdateTime(?\DateTime $value): self
    {
        $this->instance->setFirmwareVersionUpdateTime($value);
        return $this;
    }

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property.
     * @param mixed $value Value of property.
     */
    public function additionalProperty(string $name, $value): self
    {
        $this->instance->addAdditionalProperty($name, $value);
        return $this;
    }

    /**
     * Initializes a new Device Firmware Version object.
     */
    public function build(): DeviceFirmwareVersion
    {
        return CoreHelper::clone($this->instance);
    }
}
