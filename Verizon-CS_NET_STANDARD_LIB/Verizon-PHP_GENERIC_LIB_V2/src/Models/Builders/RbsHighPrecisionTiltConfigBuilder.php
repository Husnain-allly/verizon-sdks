<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models\Builders;

use Core\Utils\CoreHelper;
use VerizonLib\Models\PeriodicReporting;
use VerizonLib\Models\RbsHighPrecisionTiltConfig;
use VerizonLib\Models\Tscore;

/**
 * Builder for model RbsHighPrecisionTiltConfig
 *
 * @see RbsHighPrecisionTiltConfig
 */
class RbsHighPrecisionTiltConfigBuilder
{
    /**
     * @var RbsHighPrecisionTiltConfig
     */
    private $instance;

    private function __construct(RbsHighPrecisionTiltConfig $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new Rbs High Precision Tilt Config Builder object.
     */
    public static function init(): self
    {
        return new self(new RbsHighPrecisionTiltConfig());
    }

    /**
     * Sets mode field.
     *
     * @param string|null $value
     */
    public function mode(?string $value): self
    {
        $this->instance->setMode($value);
        return $this;
    }

    /**
     * Sets periodic-reporting field.
     *
     * @param PeriodicReporting|null $value
     */
    public function periodicReporting(?PeriodicReporting $value): self
    {
        $this->instance->setPeriodicReporting($value);
        return $this;
    }

    /**
     * Sets hold-time field.
     *
     * @param int|null $value
     */
    public function holdTime(?int $value): self
    {
        $this->instance->setHoldTime($value);
        return $this;
    }

    /**
     * Sets angle-away field.
     *
     * @param int|null $value
     */
    public function angleAway(?int $value): self
    {
        $this->instance->setAngleAway($value);
        return $this;
    }

    /**
     * Sets angle-toward field.
     *
     * @param int|null $value
     */
    public function angleToward(?int $value): self
    {
        $this->instance->setAngleToward($value);
        return $this;
    }

    /**
     * Sets tscore field.
     *
     * @param Tscore|null $value
     */
    public function tscore(?Tscore $value): self
    {
        $this->instance->setTscore($value);
        return $this;
    }

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property.
     * @param mixed $value Value of property.
     */
    public function additionalProperty(string $name, $value): self
    {
        $this->instance->addAdditionalProperty($name, $value);
        return $this;
    }

    /**
     * Initializes a new Rbs High Precision Tilt Config object.
     */
    public function build(): RbsHighPrecisionTiltConfig
    {
        return CoreHelper::clone($this->instance);
    }
}
