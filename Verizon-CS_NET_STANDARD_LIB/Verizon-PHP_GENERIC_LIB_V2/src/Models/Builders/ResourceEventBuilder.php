<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models\Builders;

use Core\Utils\CoreHelper;
use VerizonLib\Models\DtoFields;
use VerizonLib\Models\ResourceEvent;

/**
 * Builder for model ResourceEvent
 *
 * @see ResourceEvent
 */
class ResourceEventBuilder
{
    /**
     * @var ResourceEvent
     */
    private $instance;

    private function __construct(ResourceEvent $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new Resource Event Builder object.
     *
     * @param \DateTime $createdon
     * @param string $fieldid
     * @param string $foreignid
     * @param \DateTime $lastupdated
     * @param string $state
     * @param string $versionid
     */
    public static function init(
        \DateTime $createdon,
        string $fieldid,
        string $foreignid,
        \DateTime $lastupdated,
        string $state,
        string $versionid
    ): self {
        return new self(new ResourceEvent($createdon, $fieldid, $foreignid, $lastupdated, $state, $versionid));
    }

    /**
     * Sets accountclientid field.
     *
     * @param string|null $value
     */
    public function accountclientid(?string $value): self
    {
        $this->instance->setAccountclientid($value);
        return $this;
    }

    /**
     * Sets callbackurl field.
     *
     * @param string|null $value
     */
    public function callbackurl(?string $value): self
    {
        $this->instance->setCallbackurl($value);
        return $this;
    }

    /**
     * Sets description field.
     *
     * @param string|null $value
     */
    public function description(?string $value): self
    {
        $this->instance->setDescription($value);
        return $this;
    }

    /**
     * Sets deviceid field.
     *
     * @param string|null $value
     */
    public function deviceid(?string $value): self
    {
        $this->instance->setDeviceid($value);
        return $this;
    }

    /**
     * Sets errmsg field.
     *
     * @param string|null $value
     */
    public function errmsg(?string $value): self
    {
        $this->instance->setErrmsg($value);
        return $this;
    }

    /**
     * Sets fields field.
     *
     * @param DtoFields|null $value
     */
    public function fields(?DtoFields $value): self
    {
        $this->instance->setFields($value);
        return $this;
    }

    /**
     * Sets fieldvalue field.
     *
     * @param int[]|null $value
     */
    public function fieldvalue(?array $value): self
    {
        $this->instance->setFieldvalue($value);
        return $this;
    }

    /**
     * Sets id field.
     *
     * @param string|null $value
     */
    public function id(?string $value): self
    {
        $this->instance->setId($value);
        return $this;
    }

    /**
     * Sets modelid field.
     *
     * @param string|null $value
     */
    public function modelid(?string $value): self
    {
        $this->instance->setModelid($value);
        return $this;
    }

    /**
     * Sets name field.
     *
     * @param string|null $value
     */
    public function name(?string $value): self
    {
        $this->instance->setName($value);
        return $this;
    }

    /**
     * Sets sensordataaggregation field.
     *
     * @param bool|null $value
     */
    public function sensordataaggregation(?bool $value): self
    {
        $this->instance->setSensordataaggregation($value);
        return $this;
    }

    /**
     * Sets transactionid field.
     *
     * @param string|null $value
     */
    public function transactionid(?string $value): self
    {
        $this->instance->setTransactionid($value);
        return $this;
    }

    /**
     * Sets version field.
     *
     * @param string|null $value
     */
    public function version(?string $value): self
    {
        $this->instance->setVersion($value);
        return $this;
    }

    /**
     * Initializes a new Resource Event object.
     */
    public function build(): ResourceEvent
    {
        return CoreHelper::clone($this->instance);
    }
}
