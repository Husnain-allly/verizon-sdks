<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;
use VerizonLib\ApiHelper;

/**
 * This data frame can describe a complex path of arbitrary size using node offset method (LL offsets).
 */
class GeographicalPathDescription implements \JsonSerializable
{
    /**
     * @var OffsetSystem
     */
    private $path;

    /**
     * @param OffsetSystem $path
     */
    public function __construct(OffsetSystem $path)
    {
        $this->path = $path;
    }

    /**
     * Returns Path.
     * The OffsetSystem data frame selects a sequence of node offsets described in the Lat-Long offset
     * method.
     */
    public function getPath(): OffsetSystem
    {
        return $this->path;
    }

    /**
     * Sets Path.
     * The OffsetSystem data frame selects a sequence of node offsets described in the Lat-Long offset
     * method.
     *
     * @required
     * @maps path
     */
    public function setPath(OffsetSystem $path): void
    {
        $this->path = $path;
    }

    /**
     * Converts the GeographicalPathDescription object to a human-readable string representation.
     *
     * @return string The string representation of the GeographicalPathDescription object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify('GeographicalPathDescription', ['path' => $this->path]);
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['path'] = $this->path;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
