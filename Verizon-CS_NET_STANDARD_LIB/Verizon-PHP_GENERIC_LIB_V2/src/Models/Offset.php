<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;
use VerizonLib\ApiHelper;

/**
 * The sequence of node offsets then describes a path or polygon in the Lat-Long system.
 */
class Offset implements \JsonSerializable
{
    /**
     * @var NodeListLl
     */
    private $ll;

    /**
     * @param NodeListLl $ll
     */
    public function __construct(NodeListLl $ll)
    {
        $this->ll = $ll;
    }

    /**
     * Returns Ll.
     * The NodeListLL data structure provides the sequence of signed offset node point values for
     * determining the latitude and longitude. Each LL point is referred to as a node point.
     */
    public function getLl(): NodeListLl
    {
        return $this->ll;
    }

    /**
     * Sets Ll.
     * The NodeListLL data structure provides the sequence of signed offset node point values for
     * determining the latitude and longitude. Each LL point is referred to as a node point.
     *
     * @required
     * @maps ll
     */
    public function setLl(NodeListLl $ll): void
    {
        $this->ll = $ll;
    }

    /**
     * Converts the Offset object to a human-readable string representation.
     *
     * @return string The string representation of the Offset object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify('Offset', ['ll' => $this->ll]);
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['ll'] = $this->ll;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
