<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;
use VerizonLib\ApiHelper;

class M5GBiaccountNameobject implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $accountName;

    /**
     * @var string|null
     */
    private $billingCycleEndDate;

    /**
     * @var M5GBiCarrierInformation[]|null
     */
    private $carrierInformation;

    /**
     * @var bool|null
     */
    private $connected;

    /**
     * @var string|null
     */
    private $createdAt;

    /**
     * @var M5GBikeyValue1[]|null
     */
    private $customFields;

    /**
     * @var M5GBideviceId1[]|null
     */
    private $deviceIds;

    /**
     * @var array<M5GBiattribute1|M5GBiattribute2>|null
     */
    private $extendedAttributes;

    /**
     * @var GroupName[]|null
     */
    private $groupNames;

    /**
     * @var string|null
     */
    private $ipaddress;

    /**
     * @var string|null
     */
    private $lastActivationBy;

    /**
     * @var string|null
     */
    private $lastActivationDate;

    /**
     * Returns Account Name.
     */
    public function getAccountName(): ?string
    {
        return $this->accountName;
    }

    /**
     * Sets Account Name.
     *
     * @maps accountName
     */
    public function setAccountName(?string $accountName): void
    {
        $this->accountName = $accountName;
    }

    /**
     * Returns Billing Cycle End Date.
     */
    public function getBillingCycleEndDate(): ?string
    {
        return $this->billingCycleEndDate;
    }

    /**
     * Sets Billing Cycle End Date.
     *
     * @maps billingCycleEndDate
     */
    public function setBillingCycleEndDate(?string $billingCycleEndDate): void
    {
        $this->billingCycleEndDate = $billingCycleEndDate;
    }

    /**
     * Returns Carrier Information.
     *
     * @return M5GBiCarrierInformation[]|null
     */
    public function getCarrierInformation(): ?array
    {
        return $this->carrierInformation;
    }

    /**
     * Sets Carrier Information.
     *
     * @maps carrierInformation
     *
     * @param M5GBiCarrierInformation[]|null $carrierInformation
     */
    public function setCarrierInformation(?array $carrierInformation): void
    {
        $this->carrierInformation = $carrierInformation;
    }

    /**
     * Returns Connected.
     */
    public function getConnected(): ?bool
    {
        return $this->connected;
    }

    /**
     * Sets Connected.
     *
     * @maps connected
     */
    public function setConnected(?bool $connected): void
    {
        $this->connected = $connected;
    }

    /**
     * Returns Created At.
     */
    public function getCreatedAt(): ?string
    {
        return $this->createdAt;
    }

    /**
     * Sets Created At.
     *
     * @maps createdAt
     */
    public function setCreatedAt(?string $createdAt): void
    {
        $this->createdAt = $createdAt;
    }

    /**
     * Returns Custom Fields.
     *
     * @return M5GBikeyValue1[]|null
     */
    public function getCustomFields(): ?array
    {
        return $this->customFields;
    }

    /**
     * Sets Custom Fields.
     *
     * @maps customFields
     * @mapsBy anyOf(anyOf(M5GBikeyValue1)[],null)
     *
     * @param M5GBikeyValue1[]|null $customFields
     */
    public function setCustomFields(?array $customFields): void
    {
        $this->customFields = $customFields;
    }

    /**
     * Returns Device Ids.
     *
     * @return M5GBideviceId1[]|null
     */
    public function getDeviceIds(): ?array
    {
        return $this->deviceIds;
    }

    /**
     * Sets Device Ids.
     *
     * @maps deviceIds
     * @mapsBy anyOf(anyOf(M5GBideviceId1)[],null)
     *
     * @param M5GBideviceId1[]|null $deviceIds
     */
    public function setDeviceIds(?array $deviceIds): void
    {
        $this->deviceIds = $deviceIds;
    }

    /**
     * Returns Extended Attributes.
     *
     * @return array<M5GBiattribute1|M5GBiattribute2>|null
     */
    public function getExtendedAttributes(): ?array
    {
        return $this->extendedAttributes;
    }

    /**
     * Sets Extended Attributes.
     *
     * @maps extendedAttributes
     * @mapsBy anyOf(anyOf(M5GBiattribute1,M5GBiattribute2)[],null)
     *
     * @param array<M5GBiattribute1|M5GBiattribute2>|null $extendedAttributes
     */
    public function setExtendedAttributes(?array $extendedAttributes): void
    {
        $this->extendedAttributes = $extendedAttributes;
    }

    /**
     * Returns Group Names.
     *
     * @return GroupName[]|null
     */
    public function getGroupNames(): ?array
    {
        return $this->groupNames;
    }

    /**
     * Sets Group Names.
     *
     * @maps groupNames
     *
     * @param GroupName[]|null $groupNames
     */
    public function setGroupNames(?array $groupNames): void
    {
        $this->groupNames = $groupNames;
    }

    /**
     * Returns Ipaddress.
     */
    public function getIpaddress(): ?string
    {
        return $this->ipaddress;
    }

    /**
     * Sets Ipaddress.
     *
     * @maps ipAddress
     */
    public function setIpaddress(?string $ipaddress): void
    {
        $this->ipaddress = $ipaddress;
    }

    /**
     * Returns Last Activation By.
     */
    public function getLastActivationBy(): ?string
    {
        return $this->lastActivationBy;
    }

    /**
     * Sets Last Activation By.
     *
     * @maps lastActivationBy
     */
    public function setLastActivationBy(?string $lastActivationBy): void
    {
        $this->lastActivationBy = $lastActivationBy;
    }

    /**
     * Returns Last Activation Date.
     */
    public function getLastActivationDate(): ?string
    {
        return $this->lastActivationDate;
    }

    /**
     * Sets Last Activation Date.
     *
     * @maps lastActivationDate
     */
    public function setLastActivationDate(?string $lastActivationDate): void
    {
        $this->lastActivationDate = $lastActivationDate;
    }

    /**
     * Converts the M5GBiaccountNameobject object to a human-readable string representation.
     *
     * @return string The string representation of the M5GBiaccountNameobject object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'M5GBiaccountNameobject',
            [
                'accountName' => $this->accountName,
                'billingCycleEndDate' => $this->billingCycleEndDate,
                'carrierInformation' => $this->carrierInformation,
                'connected' => $this->connected,
                'createdAt' => $this->createdAt,
                'customFields' => $this->customFields,
                'deviceIds' => $this->deviceIds,
                'extendedAttributes' => $this->extendedAttributes,
                'groupNames' => $this->groupNames,
                'ipaddress' => $this->ipaddress,
                'lastActivationBy' => $this->lastActivationBy,
                'lastActivationDate' => $this->lastActivationDate,
                'additionalProperties' => $this->additionalProperties
            ]
        );
    }

    protected $propertyNames = [
        'accountName',
        'billingCycleEndDate',
        'carrierInformation',
        'connected',
        'createdAt',
        'customFields',
        'deviceIds',
        'extendedAttributes',
        'groupNames',
        'ipAddress',
        'lastActivationBy',
        'lastActivationDate'
    ];

    private $additionalProperties = [];

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property.
     * @param mixed $value Value of property.
     */
    public function addAdditionalProperty(string $name, $value)
    {
        if (in_array($name, $this->propertyNames, true)) {
            throw new \InvalidArgumentException(
                "The additional property key, '$name' conflicts with one of the model's properties"
            );
        }

        $this->additionalProperties[$name] = $value;
    }

    /**
     * Find an additional property by name in this model or false if property does not exist.
     *
     * @param string $name Name of property.
     *
     * @return mixed|false Value of the property.
     */
    public function findAdditionalProperty(string $name)
    {
        if (isset($this->additionalProperties[$name])) {
            return $this->additionalProperties[$name];
        }
        return false;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->accountName)) {
            $json['accountName']         = $this->accountName;
        }
        if (isset($this->billingCycleEndDate)) {
            $json['billingCycleEndDate'] = $this->billingCycleEndDate;
        }
        if (isset($this->carrierInformation)) {
            $json['carrierInformation']  = $this->carrierInformation;
        }
        if (isset($this->connected)) {
            $json['connected']           = $this->connected;
        }
        if (isset($this->createdAt)) {
            $json['createdAt']           = $this->createdAt;
        }
        if (isset($this->customFields)) {
            $json['customFields']        =
                ApiHelper::getJsonHelper()->verifyTypes(
                    $this->customFields,
                    'anyOf(anyOf(M5GBikeyValue1)[],null)'
                );
        }
        if (isset($this->deviceIds)) {
            $json['deviceIds']           =
                ApiHelper::getJsonHelper()->verifyTypes(
                    $this->deviceIds,
                    'anyOf(anyOf(M5GBideviceId1)[],null)'
                );
        }
        if (isset($this->extendedAttributes)) {
            $json['extendedAttributes']  =
                ApiHelper::getJsonHelper()->verifyTypes(
                    $this->extendedAttributes,
                    'anyOf(anyOf(M5GBiattribute1,M5GBiattribute2)[],null)'
                );
        }
        if (isset($this->groupNames)) {
            $json['groupNames']          = $this->groupNames;
        }
        if (isset($this->ipaddress)) {
            $json['ipAddress']           = $this->ipaddress;
        }
        if (isset($this->lastActivationBy)) {
            $json['lastActivationBy']    = $this->lastActivationBy;
        }
        if (isset($this->lastActivationDate)) {
            $json['lastActivationDate']  = $this->lastActivationDate;
        }
        $json = array_merge($json, $this->additionalProperties);

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
