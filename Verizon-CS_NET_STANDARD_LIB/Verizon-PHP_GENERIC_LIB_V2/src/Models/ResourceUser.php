<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;
use VerizonLib\ApiHelper;
use VerizonLib\Utils\DateTimeHelper;

class ResourceUser implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $accountclientid;

    /**
     * @var bool|null
     */
    private $ackterms;

    /**
     * @var \DateTime|null
     */
    private $acktermson;

    /**
     * @var string|null
     */
    private $billingaccountid;

    /**
     * @var \DateTime
     */
    private $createdon;

    /**
     * @var string|null
     */
    private $credentialsid;

    /**
     * @var string
     */
    private $credentialstype;

    /**
     * @var array|null
     */
    private $customdata;

    /**
     * @var string|null
     */
    private $description;

    /**
     * @var string|null
     */
    private $displayname;

    /**
     * @var string|null
     */
    private $email;

    /**
     * @var string|null
     */
    private $firstname;

    /**
     * @var string
     */
    private $foreignid;

    /**
     * @var string|null
     */
    private $id;

    /**
     * @var string|null
     */
    private $lastname;

    /**
     * @var \DateTime
     */
    private $lastupdated;

    /**
     * @var string|null
     */
    private $mdn;

    /**
     * @var string|null
     */
    private $middlename;

    /**
     * @var string|null
     */
    private $name;

    /**
     * @var string[]|null
     */
    private $secondarybillingaccountids;

    /**
     * @var string|null
     */
    private $state;

    /**
     * @var string|null
     */
    private $version;

    /**
     * @var string
     */
    private $versionid;

    /**
     * @param \DateTime $createdon
     * @param string $credentialstype
     * @param string $foreignid
     * @param \DateTime $lastupdated
     * @param string $versionid
     */
    public function __construct(
        \DateTime $createdon,
        string $credentialstype,
        string $foreignid,
        \DateTime $lastupdated,
        string $versionid
    ) {
        $this->createdon = $createdon;
        $this->credentialstype = $credentialstype;
        $this->foreignid = $foreignid;
        $this->lastupdated = $lastupdated;
        $this->versionid = $versionid;
    }

    /**
     * Returns Accountclientid.
     * Not used in this release, future functionality
     */
    public function getAccountclientid(): ?string
    {
        return $this->accountclientid;
    }

    /**
     * Sets Accountclientid.
     * Not used in this release, future functionality
     *
     * @maps accountclientid
     */
    public function setAccountclientid(?string $accountclientid): void
    {
        $this->accountclientid = $accountclientid;
    }

    /**
     * Returns Ackterms.
     * Indicates if terms are agreed to (true) or not
     */
    public function getAckterms(): ?bool
    {
        return $this->ackterms;
    }

    /**
     * Sets Ackterms.
     * Indicates if terms are agreed to (true) or not
     *
     * @maps ackterms
     */
    public function setAckterms(?bool $ackterms): void
    {
        $this->ackterms = $ackterms;
    }

    /**
     * Returns Acktermson.
     */
    public function getAcktermson(): ?\DateTime
    {
        return $this->acktermson;
    }

    /**
     * Sets Acktermson.
     *
     * @maps acktermson
     * @factory \VerizonLib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setAcktermson(?\DateTime $acktermson): void
    {
        $this->acktermson = $acktermson;
    }

    /**
     * Returns Billingaccountid.
     * The billing account ID. This is the same value as the Account ID
     */
    public function getBillingaccountid(): ?string
    {
        return $this->billingaccountid;
    }

    /**
     * Sets Billingaccountid.
     * The billing account ID. This is the same value as the Account ID
     *
     * @maps billingaccountid
     */
    public function setBillingaccountid(?string $billingaccountid): void
    {
        $this->billingaccountid = $billingaccountid;
    }

    /**
     * Returns Createdon.
     * Timestamp of the record
     */
    public function getCreatedon(): \DateTime
    {
        return $this->createdon;
    }

    /**
     * Sets Createdon.
     * Timestamp of the record
     *
     * @required
     * @maps createdon
     * @factory \VerizonLib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setCreatedon(\DateTime $createdon): void
    {
        $this->createdon = $createdon;
    }

    /**
     * Returns Credentialsid.
     * User credentials. The only valid value is an email address
     */
    public function getCredentialsid(): ?string
    {
        return $this->credentialsid;
    }

    /**
     * Sets Credentialsid.
     * User credentials. The only valid value is an email address
     *
     * @maps credentialsid
     */
    public function setCredentialsid(?string $credentialsid): void
    {
        $this->credentialsid = $credentialsid;
    }

    /**
     * Returns Credentialstype.
     * The type of credential represented by the ID. The only valid value is `email`
     */
    public function getCredentialstype(): string
    {
        return $this->credentialstype;
    }

    /**
     * Sets Credentialstype.
     * The type of credential represented by the ID. The only valid value is `email`
     *
     * @required
     * @maps credentialstype
     */
    public function setCredentialstype(string $credentialstype): void
    {
        $this->credentialstype = $credentialstype;
    }

    /**
     * Returns Customdata.
     * Name/value pair, where the value is client defined.  The purpose is to keep track of current state
     * per device action.
     */
    public function getCustomdata(): ?array
    {
        return $this->customdata;
    }

    /**
     * Sets Customdata.
     * Name/value pair, where the value is client defined.  The purpose is to keep track of current state
     * per device action.
     *
     * @maps customdata
     */
    public function setCustomdata(?array $customdata): void
    {
        $this->customdata = $customdata;
    }

    /**
     * Returns Description.
     * a short description
     */
    public function getDescription(): ?string
    {
        return $this->description;
    }

    /**
     * Sets Description.
     * a short description
     *
     * @maps description
     */
    public function setDescription(?string $description): void
    {
        $this->description = $description;
    }

    /**
     * Returns Displayname.
     * the user name value to display
     */
    public function getDisplayname(): ?string
    {
        return $this->displayname;
    }

    /**
     * Sets Displayname.
     * the user name value to display
     *
     * @maps displayname
     */
    public function setDisplayname(?string $displayname): void
    {
        $this->displayname = $displayname;
    }

    /**
     * Returns Email.
     * Contact email for the group
     */
    public function getEmail(): ?string
    {
        return $this->email;
    }

    /**
     * Sets Email.
     * Contact email for the group
     *
     * @maps email
     */
    public function setEmail(?string $email): void
    {
        $this->email = $email;
    }

    /**
     * Returns Firstname.
     * The first name in the user record
     */
    public function getFirstname(): ?string
    {
        return $this->firstname;
    }

    /**
     * Sets Firstname.
     * The first name in the user record
     *
     * @maps firstname
     */
    public function setFirstname(?string $firstname): void
    {
        $this->firstname = $firstname;
    }

    /**
     * Returns Foreignid.
     * UUID of the ECPD account the user belongs to
     */
    public function getForeignid(): string
    {
        return $this->foreignid;
    }

    /**
     * Sets Foreignid.
     * UUID of the ECPD account the user belongs to
     *
     * @required
     * @maps foreignid
     */
    public function setForeignid(string $foreignid): void
    {
        $this->foreignid = $foreignid;
    }

    /**
     * Returns Id.
     * UUID of the user record, assigned at creation
     */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
     * Sets Id.
     * UUID of the user record, assigned at creation
     *
     * @maps id
     */
    public function setId(?string $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns Lastname.
     * The last name in the user record
     */
    public function getLastname(): ?string
    {
        return $this->lastname;
    }

    /**
     * Sets Lastname.
     * The last name in the user record
     *
     * @maps lastname
     */
    public function setLastname(?string $lastname): void
    {
        $this->lastname = $lastname;
    }

    /**
     * Returns Lastupdated.
     * Timestamp of the record
     */
    public function getLastupdated(): \DateTime
    {
        return $this->lastupdated;
    }

    /**
     * Sets Lastupdated.
     * Timestamp of the record
     *
     * @required
     * @maps lastupdated
     * @factory \VerizonLib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setLastupdated(\DateTime $lastupdated): void
    {
        $this->lastupdated = $lastupdated;
    }

    /**
     * Returns Mdn.
     * The Mobile Directory Number
     */
    public function getMdn(): ?string
    {
        return $this->mdn;
    }

    /**
     * Sets Mdn.
     * The Mobile Directory Number
     *
     * @maps mdn
     */
    public function setMdn(?string $mdn): void
    {
        $this->mdn = $mdn;
    }

    /**
     * Returns Middlename.
     * optional field for middle name or initial
     */
    public function getMiddlename(): ?string
    {
        return $this->middlename;
    }

    /**
     * Sets Middlename.
     * optional field for middle name or initial
     *
     * @maps middlename
     */
    public function setMiddlename(?string $middlename): void
    {
        $this->middlename = $middlename;
    }

    /**
     * Returns Name.
     * User defined name of the record
     */
    public function getName(): ?string
    {
        return $this->name;
    }

    /**
     * Sets Name.
     * User defined name of the record
     *
     * @maps name
     */
    public function setName(?string $name): void
    {
        $this->name = $name;
    }

    /**
     * Returns Secondarybillingaccountids.
     * Virtual field; will not be used in this implementation
     *
     * @return string[]|null
     */
    public function getSecondarybillingaccountids(): ?array
    {
        return $this->secondarybillingaccountids;
    }

    /**
     * Sets Secondarybillingaccountids.
     * Virtual field; will not be used in this implementation
     *
     * @maps secondarybillingaccountids
     *
     * @param string[]|null $secondarybillingaccountids
     */
    public function setSecondarybillingaccountids(?array $secondarybillingaccountids): void
    {
        $this->secondarybillingaccountids = $secondarybillingaccountids;
    }

    /**
     * Returns State.
     * The current status of the device or transaction and will be `success` or `failed`
     */
    public function getState(): ?string
    {
        return $this->state;
    }

    /**
     * Sets State.
     * The current status of the device or transaction and will be `success` or `failed`
     *
     * @maps state
     */
    public function setState(?string $state): void
    {
        $this->state = $state;
    }

    /**
     * Returns Version.
     * The resource version
     */
    public function getVersion(): ?string
    {
        return $this->version;
    }

    /**
     * Sets Version.
     * The resource version
     *
     * @maps version
     */
    public function setVersion(?string $version): void
    {
        $this->version = $version;
    }

    /**
     * Returns Versionid.
     * The UUID of the resource version
     */
    public function getVersionid(): string
    {
        return $this->versionid;
    }

    /**
     * Sets Versionid.
     * The UUID of the resource version
     *
     * @required
     * @maps versionid
     */
    public function setVersionid(string $versionid): void
    {
        $this->versionid = $versionid;
    }

    /**
     * Converts the ResourceUser object to a human-readable string representation.
     *
     * @return string The string representation of the ResourceUser object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'ResourceUser',
            [
                'accountclientid' => $this->accountclientid,
                'ackterms' => $this->ackterms,
                'acktermson' => $this->acktermson,
                'billingaccountid' => $this->billingaccountid,
                'createdon' => $this->createdon,
                'credentialsid' => $this->credentialsid,
                'credentialstype' => $this->credentialstype,
                'customdata' => $this->customdata,
                'description' => $this->description,
                'displayname' => $this->displayname,
                'email' => $this->email,
                'firstname' => $this->firstname,
                'foreignid' => $this->foreignid,
                'id' => $this->id,
                'lastname' => $this->lastname,
                'lastupdated' => $this->lastupdated,
                'mdn' => $this->mdn,
                'middlename' => $this->middlename,
                'name' => $this->name,
                'secondarybillingaccountids' => $this->secondarybillingaccountids,
                'state' => $this->state,
                'version' => $this->version,
                'versionid' => $this->versionid
            ]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->accountclientid)) {
            $json['accountclientid']            = $this->accountclientid;
        }
        if (isset($this->ackterms)) {
            $json['ackterms']                   = $this->ackterms;
        }
        if (isset($this->acktermson)) {
            $json['acktermson']                 = DateTimeHelper::toRfc3339DateTime($this->acktermson);
        }
        if (isset($this->billingaccountid)) {
            $json['billingaccountid']           = $this->billingaccountid;
        }
        $json['createdon']                      = DateTimeHelper::toRfc3339DateTime($this->createdon);
        if (isset($this->credentialsid)) {
            $json['credentialsid']              = $this->credentialsid;
        }
        $json['credentialstype']                = $this->credentialstype;
        if (isset($this->customdata)) {
            $json['customdata']                 = $this->customdata;
        }
        if (isset($this->description)) {
            $json['description']                = $this->description;
        }
        if (isset($this->displayname)) {
            $json['displayname']                = $this->displayname;
        }
        if (isset($this->email)) {
            $json['email']                      = $this->email;
        }
        if (isset($this->firstname)) {
            $json['firstname']                  = $this->firstname;
        }
        $json['foreignid']                      = $this->foreignid;
        if (isset($this->id)) {
            $json['id']                         = $this->id;
        }
        if (isset($this->lastname)) {
            $json['lastname']                   = $this->lastname;
        }
        $json['lastupdated']                    = DateTimeHelper::toRfc3339DateTime($this->lastupdated);
        if (isset($this->mdn)) {
            $json['mdn']                        = $this->mdn;
        }
        if (isset($this->middlename)) {
            $json['middlename']                 = $this->middlename;
        }
        if (isset($this->name)) {
            $json['name']                       = $this->name;
        }
        if (isset($this->secondarybillingaccountids)) {
            $json['secondarybillingaccountids'] = $this->secondarybillingaccountids;
        }
        if (isset($this->state)) {
            $json['state']                      = $this->state;
        }
        if (isset($this->version)) {
            $json['version']                    = $this->version;
        }
        $json['versionid']                      = $this->versionid;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
