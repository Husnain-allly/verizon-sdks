<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;
use VerizonLib\ApiHelper;

class DtoUpdateUserRequest implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $accountname;

    /**
     * @var string|null
     */
    private $id;

    /**
     * @var DtoUserDto|null
     */
    private $user;

    /**
     * Returns Accountname.
     * The numeric account name, which must include leading zeros
     */
    public function getAccountname(): ?string
    {
        return $this->accountname;
    }

    /**
     * Sets Accountname.
     * The numeric account name, which must include leading zeros
     *
     * @maps accountname
     */
    public function setAccountname(?string $accountname): void
    {
        $this->accountname = $accountname;
    }

    /**
     * Returns Id.
     * UUID of the user record, assigned at creation
     */
    public function getId(): ?string
    {
        return $this->id;
    }

    /**
     * Sets Id.
     * UUID of the user record, assigned at creation
     *
     * @maps id
     */
    public function setId(?string $id): void
    {
        $this->id = $id;
    }

    /**
     * Returns User.
     */
    public function getUser(): ?DtoUserDto
    {
        return $this->user;
    }

    /**
     * Sets User.
     *
     * @maps user
     */
    public function setUser(?DtoUserDto $user): void
    {
        $this->user = $user;
    }

    /**
     * Converts the DtoUpdateUserRequest object to a human-readable string representation.
     *
     * @return string The string representation of the DtoUpdateUserRequest object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'DtoUpdateUserRequest',
            ['accountname' => $this->accountname, 'id' => $this->id, 'user' => $this->user]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->accountname)) {
            $json['accountname'] = $this->accountname;
        }
        if (isset($this->id)) {
            $json['id']          = $this->id;
        }
        if (isset($this->user)) {
            $json['user']        = $this->user;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
