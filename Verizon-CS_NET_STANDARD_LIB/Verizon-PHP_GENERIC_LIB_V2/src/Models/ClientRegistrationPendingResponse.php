<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;
use VerizonLib\ApiHelper;

/**
 * Response for /clients/registration for pending state. It provides a device_id for user to finish
 * registration with PUT API call
 */
class ClientRegistrationPendingResponse implements \JsonSerializable
{
    /**
     * @var string
     */
    private $deviceId;

    /**
     * @var string
     */
    private $message;

    /**
     * @param string $deviceId
     * @param string $message
     */
    public function __construct(string $deviceId, string $message)
    {
        $this->deviceId = $deviceId;
        $this->message = $message;
    }

    /**
     * Returns Device Id.
     * The generated ID (UUID v4) for the device. It can be used as:
     * - the MQTT Client ID when connecting to the Message Exchange system
     * - a parameter when asking for the connection endpoint
     * - a parameter when finishing the device registration
     * - a parameter when unregistering the device
     */
    public function getDeviceId(): string
    {
        return $this->deviceId;
    }

    /**
     * Sets Device Id.
     * The generated ID (UUID v4) for the device. It can be used as:
     * - the MQTT Client ID when connecting to the Message Exchange system
     * - a parameter when asking for the connection endpoint
     * - a parameter when finishing the device registration
     * - a parameter when unregistering the device
     *
     * @required
     * @maps DeviceID
     */
    public function setDeviceId(string $deviceId): void
    {
        $this->deviceId = $deviceId;
    }

    /**
     * Returns Message.
     * The reason why the registration is in pending state
     */
    public function getMessage(): string
    {
        return $this->message;
    }

    /**
     * Sets Message.
     * The reason why the registration is in pending state
     *
     * @required
     * @maps Message
     */
    public function setMessage(string $message): void
    {
        $this->message = $message;
    }

    /**
     * Converts the ClientRegistrationPendingResponse object to a human-readable string representation.
     *
     * @return string The string representation of the ClientRegistrationPendingResponse object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'ClientRegistrationPendingResponse',
            ['deviceId' => $this->deviceId, 'message' => $this->message]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['DeviceID'] = $this->deviceId;
        $json['Message']  = $this->message;

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
