<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;
use VerizonLib\ApiHelper;

class PayAsYouGoPricePlanTrigger implements \JsonSerializable
{
    /**
     * @var PayAsYouGoFilterCriteria|null
     */
    private $payAsYouGo;

    /**
     * @var string|ConditionObjectCall|null
     */
    private $condition;

    /**
     * @var Actionobject|null
     */
    private $action;

    /**
     * Returns Pay as You Go.
     */
    public function getPayAsYouGo(): ?PayAsYouGoFilterCriteria
    {
        return $this->payAsYouGo;
    }

    /**
     * Sets Pay as You Go.
     *
     * @maps payAsYouGo
     */
    public function setPayAsYouGo(?PayAsYouGoFilterCriteria $payAsYouGo): void
    {
        $this->payAsYouGo = $payAsYouGo;
    }

    /**
     * Returns Condition.
     *
     * @return string|ConditionObjectCall|null
     */
    public function getCondition()
    {
        return $this->condition;
    }

    /**
     * Sets Condition.
     *
     * @maps condition
     * @mapsBy anyOf(anyOf(ConditionType,ConditionObjectCall),null)
     * @factory \VerizonLib\Models\ConditionType::checkValue ConditionType
     *
     * @param string|ConditionObjectCall|null $condition
     */
    public function setCondition($condition): void
    {
        $this->condition = $condition;
    }

    /**
     * Returns Action.
     */
    public function getAction(): ?Actionobject
    {
        return $this->action;
    }

    /**
     * Sets Action.
     *
     * @maps action
     */
    public function setAction(?Actionobject $action): void
    {
        $this->action = $action;
    }

    /**
     * Converts the PayAsYouGoPricePlanTrigger object to a human-readable string representation.
     *
     * @return string The string representation of the PayAsYouGoPricePlanTrigger object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'PayAsYouGoPricePlanTrigger',
            [
                'payAsYouGo' => $this->payAsYouGo,
                'condition' => $this->condition,
                'action' => $this->action,
                'additionalProperties' => $this->additionalProperties
            ]
        );
    }

    protected $propertyNames = ['payAsYouGo', 'condition', 'action'];

    private $additionalProperties = [];

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property.
     * @param mixed $value Value of property.
     */
    public function addAdditionalProperty(string $name, $value)
    {
        if (in_array($name, $this->propertyNames, true)) {
            throw new \InvalidArgumentException(
                "The additional property key, '$name' conflicts with one of the model's properties"
            );
        }

        $this->additionalProperties[$name] = $value;
    }

    /**
     * Find an additional property by name in this model or false if property does not exist.
     *
     * @param string $name Name of property.
     *
     * @return mixed|false Value of the property.
     */
    public function findAdditionalProperty(string $name)
    {
        if (isset($this->additionalProperties[$name])) {
            return $this->additionalProperties[$name];
        }
        return false;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->payAsYouGo)) {
            $json['payAsYouGo'] = $this->payAsYouGo;
        }
        if (isset($this->condition)) {
            $json['condition']  =
                ApiHelper::getJsonHelper()->verifyTypes(
                    $this->condition,
                    'anyOf(anyOf(ConditionType,ConditionObjectCall),null)',
                    [
                        '\VerizonLib\Models\ConditionType::checkValue ConditionType'
                    ]
                );
        }
        if (isset($this->action)) {
            $json['action']     = $this->action;
        }
        $json = array_merge($json, $this->additionalProperties);

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
