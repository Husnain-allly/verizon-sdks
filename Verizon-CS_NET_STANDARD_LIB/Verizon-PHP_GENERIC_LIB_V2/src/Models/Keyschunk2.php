<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;
use VerizonLib\ApiHelper;

class Keyschunk2 implements \JsonSerializable
{
    /**
     * @var bool|null
     */
    private $dataPercentage50;

    /**
     * @var bool|null
     */
    private $dataPercentage75;

    /**
     * @var bool|null
     */
    private $dataPercentage90;

    /**
     * @var bool|null
     */
    private $dataPercentage100;

    /**
     * @var bool|null
     */
    private $smsPercentage50;

    /**
     * @var bool|null
     */
    private $smsPercentage75;

    /**
     * @var bool|null
     */
    private $smsPercentage90;

    /**
     * @var bool|null
     */
    private $smsPercentage100;

    /**
     * @var int|null
     */
    private $noOfDaysB4PromoExp;

    /**
     * Returns Data Percentage 50.
     */
    public function getDataPercentage50(): ?bool
    {
        return $this->dataPercentage50;
    }

    /**
     * Sets Data Percentage 50.
     *
     * @maps dataPercentage50
     */
    public function setDataPercentage50(?bool $dataPercentage50): void
    {
        $this->dataPercentage50 = $dataPercentage50;
    }

    /**
     * Returns Data Percentage 75.
     */
    public function getDataPercentage75(): ?bool
    {
        return $this->dataPercentage75;
    }

    /**
     * Sets Data Percentage 75.
     *
     * @maps dataPercentage75
     */
    public function setDataPercentage75(?bool $dataPercentage75): void
    {
        $this->dataPercentage75 = $dataPercentage75;
    }

    /**
     * Returns Data Percentage 90.
     */
    public function getDataPercentage90(): ?bool
    {
        return $this->dataPercentage90;
    }

    /**
     * Sets Data Percentage 90.
     *
     * @maps dataPercentage90
     */
    public function setDataPercentage90(?bool $dataPercentage90): void
    {
        $this->dataPercentage90 = $dataPercentage90;
    }

    /**
     * Returns Data Percentage 100.
     */
    public function getDataPercentage100(): ?bool
    {
        return $this->dataPercentage100;
    }

    /**
     * Sets Data Percentage 100.
     *
     * @maps dataPercentage100
     */
    public function setDataPercentage100(?bool $dataPercentage100): void
    {
        $this->dataPercentage100 = $dataPercentage100;
    }

    /**
     * Returns Sms Percentage 50.
     */
    public function getSmsPercentage50(): ?bool
    {
        return $this->smsPercentage50;
    }

    /**
     * Sets Sms Percentage 50.
     *
     * @maps smsPercentage50
     */
    public function setSmsPercentage50(?bool $smsPercentage50): void
    {
        $this->smsPercentage50 = $smsPercentage50;
    }

    /**
     * Returns Sms Percentage 75.
     */
    public function getSmsPercentage75(): ?bool
    {
        return $this->smsPercentage75;
    }

    /**
     * Sets Sms Percentage 75.
     *
     * @maps smsPercentage75
     */
    public function setSmsPercentage75(?bool $smsPercentage75): void
    {
        $this->smsPercentage75 = $smsPercentage75;
    }

    /**
     * Returns Sms Percentage 90.
     */
    public function getSmsPercentage90(): ?bool
    {
        return $this->smsPercentage90;
    }

    /**
     * Sets Sms Percentage 90.
     *
     * @maps smsPercentage90
     */
    public function setSmsPercentage90(?bool $smsPercentage90): void
    {
        $this->smsPercentage90 = $smsPercentage90;
    }

    /**
     * Returns Sms Percentage 100.
     */
    public function getSmsPercentage100(): ?bool
    {
        return $this->smsPercentage100;
    }

    /**
     * Sets Sms Percentage 100.
     *
     * @maps smsPercentage100
     */
    public function setSmsPercentage100(?bool $smsPercentage100): void
    {
        $this->smsPercentage100 = $smsPercentage100;
    }

    /**
     * Returns No of Days B4 Promo Exp.
     */
    public function getNoOfDaysB4PromoExp(): ?int
    {
        return $this->noOfDaysB4PromoExp;
    }

    /**
     * Sets No of Days B4 Promo Exp.
     *
     * @maps NoOfDaysB4PromoExp
     */
    public function setNoOfDaysB4PromoExp(?int $noOfDaysB4PromoExp): void
    {
        $this->noOfDaysB4PromoExp = $noOfDaysB4PromoExp;
    }

    /**
     * Converts the Keyschunk2 object to a human-readable string representation.
     *
     * @return string The string representation of the Keyschunk2 object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'Keyschunk2',
            [
                'dataPercentage50' => $this->dataPercentage50,
                'dataPercentage75' => $this->dataPercentage75,
                'dataPercentage90' => $this->dataPercentage90,
                'dataPercentage100' => $this->dataPercentage100,
                'smsPercentage50' => $this->smsPercentage50,
                'smsPercentage75' => $this->smsPercentage75,
                'smsPercentage90' => $this->smsPercentage90,
                'smsPercentage100' => $this->smsPercentage100,
                'noOfDaysB4PromoExp' => $this->noOfDaysB4PromoExp,
                'additionalProperties' => $this->additionalProperties
            ]
        );
    }

    protected $propertyNames = [
        'dataPercentage50',
        'dataPercentage75',
        'dataPercentage90',
        'dataPercentage100',
        'smsPercentage50',
        'smsPercentage75',
        'smsPercentage90',
        'smsPercentage100',
        'NoOfDaysB4PromoExp'
    ];

    private $additionalProperties = [];

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property.
     * @param mixed $value Value of property.
     */
    public function addAdditionalProperty(string $name, $value)
    {
        if (in_array($name, $this->propertyNames, true)) {
            throw new \InvalidArgumentException(
                "The additional property key, '$name' conflicts with one of the model's properties"
            );
        }

        $this->additionalProperties[$name] = $value;
    }

    /**
     * Find an additional property by name in this model or false if property does not exist.
     *
     * @param string $name Name of property.
     *
     * @return mixed|false Value of the property.
     */
    public function findAdditionalProperty(string $name)
    {
        if (isset($this->additionalProperties[$name])) {
            return $this->additionalProperties[$name];
        }
        return false;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->dataPercentage50)) {
            $json['dataPercentage50']   = $this->dataPercentage50;
        }
        if (isset($this->dataPercentage75)) {
            $json['dataPercentage75']   = $this->dataPercentage75;
        }
        if (isset($this->dataPercentage90)) {
            $json['dataPercentage90']   = $this->dataPercentage90;
        }
        if (isset($this->dataPercentage100)) {
            $json['dataPercentage100']  = $this->dataPercentage100;
        }
        if (isset($this->smsPercentage50)) {
            $json['smsPercentage50']    = $this->smsPercentage50;
        }
        if (isset($this->smsPercentage75)) {
            $json['smsPercentage75']    = $this->smsPercentage75;
        }
        if (isset($this->smsPercentage90)) {
            $json['smsPercentage90']    = $this->smsPercentage90;
        }
        if (isset($this->smsPercentage100)) {
            $json['smsPercentage100']   = $this->smsPercentage100;
        }
        if (isset($this->noOfDaysB4PromoExp)) {
            $json['NoOfDaysB4PromoExp'] = $this->noOfDaysB4PromoExp;
        }
        $json = array_merge($json, $this->additionalProperties);

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
