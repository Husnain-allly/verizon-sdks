/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package verizon

import (
    "context"
    "github.com/apimatic/go-core-runtime/https"
    "github.com/apimatic/go-core-runtime/utilities"
    "verizon/errors"
    "verizon/models"
)

// RetrieveRatePlanListApi represents a controller struct.
type RetrieveRatePlanListApi struct {
    baseApi
}

// NewRetrieveRatePlanListApi creates a new instance of RetrieveRatePlanListApi.
// It takes a baseController as a parameter and returns a pointer to the RetrieveRatePlanListApi.
func NewRetrieveRatePlanListApi(baseApi baseApi) *RetrieveRatePlanListApi {
    retrieveRatePlanListApi := RetrieveRatePlanListApi{baseApi: baseApi}
    return &retrieveRatePlanListApi
}

// GetRatePlanList takes context, ecpdId as parameters and
// returns an models.ApiResponse with models.Rateplan data and
// an error if there was an issue with the request or response.
// Retrieves the rate plans and rate plan details for a profile ID.
func (r *RetrieveRatePlanListApi) GetRatePlanList(
    ctx context.Context,
    ecpdId string) (
    models.ApiResponse[models.Rateplan],
    error) {
    req := r.prepareRequest(ctx, "GET", "/v2/triggers/rateplanlist/%v")
    req.AppendTemplateParams(ecpdId)
    req.BaseUrl("Thingspace")
    req.Authenticate(
        NewOrAuth(
            NewAuth("thingspace_oauth1"),
            NewAuth("VZ-M2M-Token"),
        ),
    )
    req.AppendErrors(map[string]https.ErrorBuilder[error]{
        "0": {Message: "Error response", Unmarshaller: errors.NewRuleRestErrorResponse},
    })
    
    var result models.Rateplan
    decoder, resp, err := req.CallAsJson()
    if err != nil {
        return models.NewApiResponse(result, resp), err
    }
    
    result, err = utilities.DecodeResults[models.Rateplan](decoder)
    return models.NewApiResponse(result, resp), err
}
