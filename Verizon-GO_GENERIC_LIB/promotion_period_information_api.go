/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package verizon

import (
    "context"
    "github.com/apimatic/go-core-runtime/https"
    "github.com/apimatic/go-core-runtime/utilities"
    "verizon/errors"
    "verizon/models"
)

// PromotionPeriodInformationApi represents a controller struct.
type PromotionPeriodInformationApi struct {
    baseApi
}

// NewPromotionPeriodInformationApi creates a new instance of PromotionPeriodInformationApi.
// It takes a baseController as a parameter and returns a pointer to the PromotionPeriodInformationApi.
func NewPromotionPeriodInformationApi(baseApi baseApi) *PromotionPeriodInformationApi {
    promotionPeriodInformationApi := PromotionPeriodInformationApi{baseApi: baseApi}
    return &promotionPeriodInformationApi
}

// GetPromoDeviceUsageHistory takes context, body as parameters and
// returns an models.ApiResponse with models.ResponseToUsageQuery data and
// an error if there was an issue with the request or response.
// Retrieves the usage history of a device during the promotion period.
func (p *PromotionPeriodInformationApi) GetPromoDeviceUsageHistory(
    ctx context.Context,
    body models.ARequestBodyForUsage) (
    models.ApiResponse[models.ResponseToUsageQuery],
    error) {
    req := p.prepareRequest(
      ctx,
      "POST",
      "/m2m/v1/devices/usage/actions/promodeviceusage",
    )
    
    req.BaseUrl("Thingspace")
    req.Authenticate(
        NewAndAuth(
            NewAuth("thingspace_oauth"),
            NewAuth("VZ-M2M-Token"),
        ),
    )
    req.AppendErrors(map[string]https.ErrorBuilder[error]{
        "0": {Message: "All error responses will be in this format", Unmarshaller: errors.NewReadySimRestErrorResponse},
    })
    req.Header("Content-Type", "application/json")
    req.Json(&body)
    var result models.ResponseToUsageQuery
    decoder, resp, err := req.CallAsJson()
    if err != nil {
        return models.NewApiResponse(result, resp), err
    }
    
    result, err = utilities.DecodeResults[models.ResponseToUsageQuery](decoder)
    return models.NewApiResponse(result, resp), err
}

// GetPromoDeviceAggregateUsageHistory takes context, body as parameters and
// returns an models.ApiResponse with models.UsageRequestResponse data and
// an error if there was an issue with the request or response.
// Retrieves the aggregate usage for an account using pseudo-MDN during the promotional period using a callback.
func (p *PromotionPeriodInformationApi) GetPromoDeviceAggregateUsageHistory(
    ctx context.Context,
    body models.RequestBodyForUsage) (
    models.ApiResponse[models.UsageRequestResponse],
    error) {
    req := p.prepareRequest(
      ctx,
      "POST",
      "/m2m/v1/devices/usage/actions/promoaggregateusage",
    )
    
    req.BaseUrl("Thingspace")
    req.Authenticate(
        NewAndAuth(
            NewAuth("thingspace_oauth"),
            NewAuth("VZ-M2M-Token"),
        ),
    )
    req.AppendErrors(map[string]https.ErrorBuilder[error]{
        "0": {Message: "Error response", Unmarshaller: errors.NewReadySimRestErrorResponse},
    })
    req.Header("Content-Type", "application/json")
    req.Json(&body)
    var result models.UsageRequestResponse
    decoder, resp, err := req.CallAsJson()
    if err != nil {
        return models.NewApiResponse(result, resp), err
    }
    
    result, err = utilities.DecodeResults[models.UsageRequestResponse](decoder)
    return models.NewApiResponse(result, resp), err
}
