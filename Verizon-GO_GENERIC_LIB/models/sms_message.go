/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// SmsMessage represents a SmsMessage struct.
// SMS messages sent by all M2M devices associated with a billing account.
type SmsMessage struct {
    // One or more IDs of the device that sent the message.
    DeviceIds            []DeviceId             `json:"deviceIds,omitempty"`
    // The contents of the SMS message.
    Message              *string                `json:"message,omitempty"`
    // The date and time that the message was received by the Verizon ThingSpace Platform.
    Timestamp            *string                `json:"timestamp,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for SmsMessage,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (s SmsMessage) String() string {
    return fmt.Sprintf(
    	"SmsMessage[DeviceIds=%v, Message=%v, Timestamp=%v, AdditionalProperties=%v]",
    	s.DeviceIds, s.Message, s.Timestamp, s.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for SmsMessage.
// It customizes the JSON marshaling process for SmsMessage objects.
func (s SmsMessage) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(s.AdditionalProperties,
        "deviceIds", "message", "timestamp"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(s.toMap())
}

// toMap converts the SmsMessage object to a map representation for JSON marshaling.
func (s SmsMessage) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, s.AdditionalProperties)
    if s.DeviceIds != nil {
        structMap["deviceIds"] = s.DeviceIds
    }
    if s.Message != nil {
        structMap["message"] = s.Message
    }
    if s.Timestamp != nil {
        structMap["timestamp"] = s.Timestamp
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for SmsMessage.
// It customizes the JSON unmarshaling process for SmsMessage objects.
func (s *SmsMessage) UnmarshalJSON(input []byte) error {
    var temp tempSmsMessage
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "deviceIds", "message", "timestamp")
    if err != nil {
    	return err
    }
    s.AdditionalProperties = additionalProperties
    
    s.DeviceIds = temp.DeviceIds
    s.Message = temp.Message
    s.Timestamp = temp.Timestamp
    return nil
}

// tempSmsMessage is a temporary struct used for validating the fields of SmsMessage.
type tempSmsMessage  struct {
    DeviceIds []DeviceId `json:"deviceIds,omitempty"`
    Message   *string    `json:"message,omitempty"`
    Timestamp *string    `json:"timestamp,omitempty"`
}
