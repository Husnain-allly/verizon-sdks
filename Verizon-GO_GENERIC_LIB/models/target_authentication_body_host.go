/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// TargetAuthenticationBodyHost represents a TargetAuthenticationBodyHost struct.
// Host information.
type TargetAuthenticationBodyHost struct {
    Hostandpath          *string                `json:"hostandpath,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for TargetAuthenticationBodyHost,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (t TargetAuthenticationBodyHost) String() string {
    return fmt.Sprintf(
    	"TargetAuthenticationBodyHost[Hostandpath=%v, AdditionalProperties=%v]",
    	t.Hostandpath, t.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for TargetAuthenticationBodyHost.
// It customizes the JSON marshaling process for TargetAuthenticationBodyHost objects.
func (t TargetAuthenticationBodyHost) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(t.AdditionalProperties,
        "hostandpath"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(t.toMap())
}

// toMap converts the TargetAuthenticationBodyHost object to a map representation for JSON marshaling.
func (t TargetAuthenticationBodyHost) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, t.AdditionalProperties)
    if t.Hostandpath != nil {
        structMap["hostandpath"] = t.Hostandpath
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for TargetAuthenticationBodyHost.
// It customizes the JSON unmarshaling process for TargetAuthenticationBodyHost objects.
func (t *TargetAuthenticationBodyHost) UnmarshalJSON(input []byte) error {
    var temp tempTargetAuthenticationBodyHost
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "hostandpath")
    if err != nil {
    	return err
    }
    t.AdditionalProperties = additionalProperties
    
    t.Hostandpath = temp.Hostandpath
    return nil
}

// tempTargetAuthenticationBodyHost is a temporary struct used for validating the fields of TargetAuthenticationBodyHost.
type tempTargetAuthenticationBodyHost  struct {
    Hostandpath *string `json:"hostandpath,omitempty"`
}
