/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// AccountDetails represents a AccountDetails struct.
type AccountDetails struct {
    // The numeric name of the account, in the format "0000123456-00001". Leading zeros must be included.
    AccountName           *string                `json:"accountName,omitempty"`
    // The numeric name of the account, in the format "0000123456-00001". Leading zeros must be included.
    AccountNumber         *string                `json:"accountNumber,omitempty"`
    // user defined name of organization
    OrganizationName      *string                `json:"organizationName,omitempty"`
    // Flag set to indicate if account details can be edited or not. Default is "true".
    IsProvisioningAllowed *bool                  `json:"isProvisioningAllowed,omitempty"`
    Carriers              []Carrier              `json:"carriers,omitempty"`
    Features              []Feature              `json:"features,omitempty"`
    ServicePlans          []CarrierServicePlan   `json:"servicePlans,omitempty"`
    AdditionalProperties  map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for AccountDetails,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (a AccountDetails) String() string {
    return fmt.Sprintf(
    	"AccountDetails[AccountName=%v, AccountNumber=%v, OrganizationName=%v, IsProvisioningAllowed=%v, Carriers=%v, Features=%v, ServicePlans=%v, AdditionalProperties=%v]",
    	a.AccountName, a.AccountNumber, a.OrganizationName, a.IsProvisioningAllowed, a.Carriers, a.Features, a.ServicePlans, a.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for AccountDetails.
// It customizes the JSON marshaling process for AccountDetails objects.
func (a AccountDetails) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(a.AdditionalProperties,
        "accountName", "accountNumber", "organizationName", "isProvisioningAllowed", "carriers", "features", "servicePlans"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(a.toMap())
}

// toMap converts the AccountDetails object to a map representation for JSON marshaling.
func (a AccountDetails) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, a.AdditionalProperties)
    if a.AccountName != nil {
        structMap["accountName"] = a.AccountName
    }
    if a.AccountNumber != nil {
        structMap["accountNumber"] = a.AccountNumber
    }
    if a.OrganizationName != nil {
        structMap["organizationName"] = a.OrganizationName
    }
    if a.IsProvisioningAllowed != nil {
        structMap["isProvisioningAllowed"] = a.IsProvisioningAllowed
    }
    if a.Carriers != nil {
        structMap["carriers"] = a.Carriers
    }
    if a.Features != nil {
        structMap["features"] = a.Features
    }
    if a.ServicePlans != nil {
        structMap["servicePlans"] = a.ServicePlans
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for AccountDetails.
// It customizes the JSON unmarshaling process for AccountDetails objects.
func (a *AccountDetails) UnmarshalJSON(input []byte) error {
    var temp tempAccountDetails
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "accountName", "accountNumber", "organizationName", "isProvisioningAllowed", "carriers", "features", "servicePlans")
    if err != nil {
    	return err
    }
    a.AdditionalProperties = additionalProperties
    
    a.AccountName = temp.AccountName
    a.AccountNumber = temp.AccountNumber
    a.OrganizationName = temp.OrganizationName
    a.IsProvisioningAllowed = temp.IsProvisioningAllowed
    a.Carriers = temp.Carriers
    a.Features = temp.Features
    a.ServicePlans = temp.ServicePlans
    return nil
}

// tempAccountDetails is a temporary struct used for validating the fields of AccountDetails.
type tempAccountDetails  struct {
    AccountName           *string              `json:"accountName,omitempty"`
    AccountNumber         *string              `json:"accountNumber,omitempty"`
    OrganizationName      *string              `json:"organizationName,omitempty"`
    IsProvisioningAllowed *bool                `json:"isProvisioningAllowed,omitempty"`
    Carriers              []Carrier            `json:"carriers,omitempty"`
    Features              []Feature            `json:"features,omitempty"`
    ServicePlans          []CarrierServicePlan `json:"servicePlans,omitempty"`
}
