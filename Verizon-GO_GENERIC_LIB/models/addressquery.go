/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// Addressquery represents a Addressquery struct.
type Addressquery struct {
    Address []Address `json:"address,omitempty"`
}

// String implements the fmt.Stringer interface for Addressquery,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (a Addressquery) String() string {
    return fmt.Sprintf(
    	"Addressquery[Address=%v]",
    	a.Address)
}

// MarshalJSON implements the json.Marshaler interface for Addressquery.
// It customizes the JSON marshaling process for Addressquery objects.
func (a Addressquery) MarshalJSON() (
    []byte,
    error) {
    return json.Marshal(a.toMap())
}

// toMap converts the Addressquery object to a map representation for JSON marshaling.
func (a Addressquery) toMap() map[string]any {
    structMap := make(map[string]any)
    if a.Address != nil {
        structMap["address"] = a.Address
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for Addressquery.
// It customizes the JSON unmarshaling process for Addressquery objects.
func (a *Addressquery) UnmarshalJSON(input []byte) error {
    var temp tempAddressquery
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    
    a.Address = temp.Address
    return nil
}

// tempAddressquery is a temporary struct used for validating the fields of Addressquery.
type tempAddressquery  struct {
    Address []Address `json:"address,omitempty"`
}
