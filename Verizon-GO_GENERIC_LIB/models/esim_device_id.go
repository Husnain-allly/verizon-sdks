/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// EsimDeviceId represents a EsimDeviceId struct.
type EsimDeviceId struct {
    Id                   *string                `json:"id,omitempty"`
    Kind                 *string                `json:"kind,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for EsimDeviceId,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (e EsimDeviceId) String() string {
    return fmt.Sprintf(
    	"EsimDeviceId[Id=%v, Kind=%v, AdditionalProperties=%v]",
    	e.Id, e.Kind, e.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for EsimDeviceId.
// It customizes the JSON marshaling process for EsimDeviceId objects.
func (e EsimDeviceId) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(e.AdditionalProperties,
        "id", "kind"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(e.toMap())
}

// toMap converts the EsimDeviceId object to a map representation for JSON marshaling.
func (e EsimDeviceId) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, e.AdditionalProperties)
    if e.Id != nil {
        structMap["id"] = e.Id
    }
    if e.Kind != nil {
        structMap["kind"] = e.Kind
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for EsimDeviceId.
// It customizes the JSON unmarshaling process for EsimDeviceId objects.
func (e *EsimDeviceId) UnmarshalJSON(input []byte) error {
    var temp tempEsimDeviceId
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "id", "kind")
    if err != nil {
    	return err
    }
    e.AdditionalProperties = additionalProperties
    
    e.Id = temp.Id
    e.Kind = temp.Kind
    return nil
}

// tempEsimDeviceId is a temporary struct used for validating the fields of EsimDeviceId.
type tempEsimDeviceId  struct {
    Id   *string `json:"id,omitempty"`
    Kind *string `json:"kind,omitempty"`
}
