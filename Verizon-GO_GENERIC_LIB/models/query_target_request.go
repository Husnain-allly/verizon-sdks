/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// QueryTargetRequest represents a QueryTargetRequest struct.
// Search for targets by property values.
type QueryTargetRequest struct {
    // The ID of the authenticating billing account, in the format `{"billingaccountid":"1234567890-12345"}`.
    Accountidentifier    *AccountIdentifier     `json:"accountidentifier,omitempty"`
    // A comma-separated list of properties and comparator values to match against subscriptions in the ThingSpace account. See Working with Query Filters for more information. If the request does not include `$selection`, the response will include all subscriptions to which the requesting user has access.
    MSelection           map[string]string      `json:"$selection,omitempty"`
    // The ID of the target to delete, in the format {"id": "dd1682d3-2d80-cefc-f3ee-25154800beff"}.
    Resourceidentifier   *ResourceIdentifier    `json:"resourceidentifier,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for QueryTargetRequest,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (q QueryTargetRequest) String() string {
    return fmt.Sprintf(
    	"QueryTargetRequest[Accountidentifier=%v, MSelection=%v, Resourceidentifier=%v, AdditionalProperties=%v]",
    	q.Accountidentifier, q.MSelection, q.Resourceidentifier, q.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for QueryTargetRequest.
// It customizes the JSON marshaling process for QueryTargetRequest objects.
func (q QueryTargetRequest) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(q.AdditionalProperties,
        "accountidentifier", "$selection", "resourceidentifier"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(q.toMap())
}

// toMap converts the QueryTargetRequest object to a map representation for JSON marshaling.
func (q QueryTargetRequest) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, q.AdditionalProperties)
    if q.Accountidentifier != nil {
        structMap["accountidentifier"] = q.Accountidentifier.toMap()
    }
    if q.MSelection != nil {
        structMap["$selection"] = q.MSelection
    }
    if q.Resourceidentifier != nil {
        structMap["resourceidentifier"] = q.Resourceidentifier.toMap()
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for QueryTargetRequest.
// It customizes the JSON unmarshaling process for QueryTargetRequest objects.
func (q *QueryTargetRequest) UnmarshalJSON(input []byte) error {
    var temp tempQueryTargetRequest
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "accountidentifier", "$selection", "resourceidentifier")
    if err != nil {
    	return err
    }
    q.AdditionalProperties = additionalProperties
    
    q.Accountidentifier = temp.Accountidentifier
    q.MSelection = temp.MSelection
    q.Resourceidentifier = temp.Resourceidentifier
    return nil
}

// tempQueryTargetRequest is a temporary struct used for validating the fields of QueryTargetRequest.
type tempQueryTargetRequest  struct {
    Accountidentifier  *AccountIdentifier  `json:"accountidentifier,omitempty"`
    MSelection         map[string]string   `json:"$selection,omitempty"`
    Resourceidentifier *ResourceIdentifier `json:"resourceidentifier,omitempty"`
}
