/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// AccountDeviceListRequest represents a AccountDeviceListRequest struct.
// Request for listing account devices.
type AccountDeviceListRequest struct {
    // The billing account for which a list of devices is returned. If you don't specify an accountName, the list includes all devices to which you have access.
    AccountName          *string                  `json:"accountName,omitempty"`
    // An identifier for a single device.
    DeviceId             *DeviceId                `json:"deviceId,omitempty"`
    // Filter for a list of devices.
    Filter               *AccountDeviceListFilter `json:"filter,omitempty"`
    // The name of a device state, to only include devices in that state.
    CurrentState         *string                  `json:"currentState,omitempty"`
    // Custom field names and values, if you want to only include devices that have matching values.
    CustomFields         []CustomFields           `json:"customFields,omitempty"`
    // Only include devices that were added after this date and time.
    Earliest             *string                  `json:"earliest,omitempty"`
    // Only include devices that are in this device group.
    GroupName            *string                  `json:"groupName,omitempty"`
    // Only include devices that were added before this date and time.
    Latest               *string                  `json:"latest,omitempty"`
    // Only include devices that have this service plan.
    ServicePlan          *string                  `json:"servicePlan,omitempty"`
    MaxNumberOfDevices   *int                     `json:"maxNumberOfDevices,omitempty"`
    LargestDeviceIdSeen  *int64                   `json:"largestDeviceIdSeen,omitempty"`
    AdditionalProperties map[string]interface{}   `json:"_"`
}

// String implements the fmt.Stringer interface for AccountDeviceListRequest,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (a AccountDeviceListRequest) String() string {
    return fmt.Sprintf(
    	"AccountDeviceListRequest[AccountName=%v, DeviceId=%v, Filter=%v, CurrentState=%v, CustomFields=%v, Earliest=%v, GroupName=%v, Latest=%v, ServicePlan=%v, MaxNumberOfDevices=%v, LargestDeviceIdSeen=%v, AdditionalProperties=%v]",
    	a.AccountName, a.DeviceId, a.Filter, a.CurrentState, a.CustomFields, a.Earliest, a.GroupName, a.Latest, a.ServicePlan, a.MaxNumberOfDevices, a.LargestDeviceIdSeen, a.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for AccountDeviceListRequest.
// It customizes the JSON marshaling process for AccountDeviceListRequest objects.
func (a AccountDeviceListRequest) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(a.AdditionalProperties,
        "accountName", "deviceId", "filter", "currentState", "customFields", "earliest", "groupName", "latest", "servicePlan", "maxNumberOfDevices", "largestDeviceIdSeen"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(a.toMap())
}

// toMap converts the AccountDeviceListRequest object to a map representation for JSON marshaling.
func (a AccountDeviceListRequest) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, a.AdditionalProperties)
    if a.AccountName != nil {
        structMap["accountName"] = a.AccountName
    }
    if a.DeviceId != nil {
        structMap["deviceId"] = a.DeviceId.toMap()
    }
    if a.Filter != nil {
        structMap["filter"] = a.Filter.toMap()
    }
    if a.CurrentState != nil {
        structMap["currentState"] = a.CurrentState
    }
    if a.CustomFields != nil {
        structMap["customFields"] = a.CustomFields
    }
    if a.Earliest != nil {
        structMap["earliest"] = a.Earliest
    }
    if a.GroupName != nil {
        structMap["groupName"] = a.GroupName
    }
    if a.Latest != nil {
        structMap["latest"] = a.Latest
    }
    if a.ServicePlan != nil {
        structMap["servicePlan"] = a.ServicePlan
    }
    if a.MaxNumberOfDevices != nil {
        structMap["maxNumberOfDevices"] = a.MaxNumberOfDevices
    }
    if a.LargestDeviceIdSeen != nil {
        structMap["largestDeviceIdSeen"] = a.LargestDeviceIdSeen
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for AccountDeviceListRequest.
// It customizes the JSON unmarshaling process for AccountDeviceListRequest objects.
func (a *AccountDeviceListRequest) UnmarshalJSON(input []byte) error {
    var temp tempAccountDeviceListRequest
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "accountName", "deviceId", "filter", "currentState", "customFields", "earliest", "groupName", "latest", "servicePlan", "maxNumberOfDevices", "largestDeviceIdSeen")
    if err != nil {
    	return err
    }
    a.AdditionalProperties = additionalProperties
    
    a.AccountName = temp.AccountName
    a.DeviceId = temp.DeviceId
    a.Filter = temp.Filter
    a.CurrentState = temp.CurrentState
    a.CustomFields = temp.CustomFields
    a.Earliest = temp.Earliest
    a.GroupName = temp.GroupName
    a.Latest = temp.Latest
    a.ServicePlan = temp.ServicePlan
    a.MaxNumberOfDevices = temp.MaxNumberOfDevices
    a.LargestDeviceIdSeen = temp.LargestDeviceIdSeen
    return nil
}

// tempAccountDeviceListRequest is a temporary struct used for validating the fields of AccountDeviceListRequest.
type tempAccountDeviceListRequest  struct {
    AccountName         *string                  `json:"accountName,omitempty"`
    DeviceId            *DeviceId                `json:"deviceId,omitempty"`
    Filter              *AccountDeviceListFilter `json:"filter,omitempty"`
    CurrentState        *string                  `json:"currentState,omitempty"`
    CustomFields        []CustomFields           `json:"customFields,omitempty"`
    Earliest            *string                  `json:"earliest,omitempty"`
    GroupName           *string                  `json:"groupName,omitempty"`
    Latest              *string                  `json:"latest,omitempty"`
    ServicePlan         *string                  `json:"servicePlan,omitempty"`
    MaxNumberOfDevices  *int                     `json:"maxNumberOfDevices,omitempty"`
    LargestDeviceIdSeen *int64                   `json:"largestDeviceIdSeen,omitempty"`
}
