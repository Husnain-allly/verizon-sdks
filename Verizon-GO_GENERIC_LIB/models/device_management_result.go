/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// DeviceManagementResult represents a DeviceManagementResult struct.
// Response to activate service for one or more devices so that they can send and receive data.
type DeviceManagementResult struct {
    // A unique string that associates the request with the results that are sent via a callback service.
    RequestId            *string                `json:"requestId,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for DeviceManagementResult,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (d DeviceManagementResult) String() string {
    return fmt.Sprintf(
    	"DeviceManagementResult[RequestId=%v, AdditionalProperties=%v]",
    	d.RequestId, d.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for DeviceManagementResult.
// It customizes the JSON marshaling process for DeviceManagementResult objects.
func (d DeviceManagementResult) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(d.AdditionalProperties,
        "requestId"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(d.toMap())
}

// toMap converts the DeviceManagementResult object to a map representation for JSON marshaling.
func (d DeviceManagementResult) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, d.AdditionalProperties)
    if d.RequestId != nil {
        structMap["requestId"] = d.RequestId
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for DeviceManagementResult.
// It customizes the JSON unmarshaling process for DeviceManagementResult objects.
func (d *DeviceManagementResult) UnmarshalJSON(input []byte) error {
    var temp tempDeviceManagementResult
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "requestId")
    if err != nil {
    	return err
    }
    d.AdditionalProperties = additionalProperties
    
    d.RequestId = temp.RequestId
    return nil
}

// tempDeviceManagementResult is a temporary struct used for validating the fields of DeviceManagementResult.
type tempDeviceManagementResult  struct {
    RequestId *string `json:"requestId,omitempty"`
}
