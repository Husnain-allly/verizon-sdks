/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// KvPair represents a KvPair struct.
type KvPair struct {
    Key   *string `json:"key,omitempty"`
    Value *string `json:"value,omitempty"`
}

// String implements the fmt.Stringer interface for KvPair,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (k KvPair) String() string {
    return fmt.Sprintf(
    	"KvPair[Key=%v, Value=%v]",
    	k.Key, k.Value)
}

// MarshalJSON implements the json.Marshaler interface for KvPair.
// It customizes the JSON marshaling process for KvPair objects.
func (k KvPair) MarshalJSON() (
    []byte,
    error) {
    return json.Marshal(k.toMap())
}

// toMap converts the KvPair object to a map representation for JSON marshaling.
func (k KvPair) toMap() map[string]any {
    structMap := make(map[string]any)
    if k.Key != nil {
        structMap["key"] = k.Key
    }
    if k.Value != nil {
        structMap["value"] = k.Value
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for KvPair.
// It customizes the JSON unmarshaling process for KvPair objects.
func (k *KvPair) UnmarshalJSON(input []byte) error {
    var temp tempKvPair
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    
    k.Key = temp.Key
    k.Value = temp.Value
    return nil
}

// tempKvPair is a temporary struct used for validating the fields of KvPair.
type tempKvPair  struct {
    Key   *string `json:"key,omitempty"`
    Value *string `json:"value,omitempty"`
}
