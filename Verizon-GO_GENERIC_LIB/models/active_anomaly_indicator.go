/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// ActiveAnomalyIndicator represents a ActiveAnomalyIndicator struct.
// Whether the anomaly detection is active or not.
type ActiveAnomalyIndicator struct {
    // Indicates anomaly detection is active<br />True - Anomaly detection is active.<br />False - Anomaly detection is not active.
    Active *bool `json:"active,omitempty"`
}

// String implements the fmt.Stringer interface for ActiveAnomalyIndicator,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (a ActiveAnomalyIndicator) String() string {
    return fmt.Sprintf(
    	"ActiveAnomalyIndicator[Active=%v]",
    	a.Active)
}

// MarshalJSON implements the json.Marshaler interface for ActiveAnomalyIndicator.
// It customizes the JSON marshaling process for ActiveAnomalyIndicator objects.
func (a ActiveAnomalyIndicator) MarshalJSON() (
    []byte,
    error) {
    return json.Marshal(a.toMap())
}

// toMap converts the ActiveAnomalyIndicator object to a map representation for JSON marshaling.
func (a ActiveAnomalyIndicator) toMap() map[string]any {
    structMap := make(map[string]any)
    if a.Active != nil {
        structMap["active"] = a.Active
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for ActiveAnomalyIndicator.
// It customizes the JSON unmarshaling process for ActiveAnomalyIndicator objects.
func (a *ActiveAnomalyIndicator) UnmarshalJSON(input []byte) error {
    var temp tempActiveAnomalyIndicator
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    
    a.Active = temp.Active
    return nil
}

// tempActiveAnomalyIndicator is a temporary struct used for validating the fields of ActiveAnomalyIndicator.
type tempActiveAnomalyIndicator  struct {
    Active *bool `json:"active,omitempty"`
}
