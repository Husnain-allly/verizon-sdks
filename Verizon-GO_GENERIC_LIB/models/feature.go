/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// Feature represents a Feature struct.
type Feature struct {
    // The calling and data features available for the account. **Note:** for Global IoT Orchestrator, the features `eUICC Verizon as Lead` and `Global eSim Billing` will always be present.
    Features             *string                `json:"features,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for Feature,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (f Feature) String() string {
    return fmt.Sprintf(
    	"Feature[Features=%v, AdditionalProperties=%v]",
    	f.Features, f.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for Feature.
// It customizes the JSON marshaling process for Feature objects.
func (f Feature) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(f.AdditionalProperties,
        "features"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(f.toMap())
}

// toMap converts the Feature object to a map representation for JSON marshaling.
func (f Feature) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, f.AdditionalProperties)
    if f.Features != nil {
        structMap["features"] = f.Features
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for Feature.
// It customizes the JSON unmarshaling process for Feature objects.
func (f *Feature) UnmarshalJSON(input []byte) error {
    var temp tempFeature
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "features")
    if err != nil {
    	return err
    }
    f.AdditionalProperties = additionalProperties
    
    f.Features = temp.Features
    return nil
}

// tempFeature is a temporary struct used for validating the fields of Feature.
type tempFeature  struct {
    Features *string `json:"features,omitempty"`
}
