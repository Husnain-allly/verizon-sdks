/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "errors"
    "fmt"
    "strings"
)

// AddDevicesRequest represents a AddDevicesRequest struct.
// Request to add the devices.
type AddDevicesRequest struct {
    // The initial service state for the devices. The only valid state is “Preactive.”
    State                string                 `json:"state"`
    // The devices that you want to add.
    DevicesToAdd         []AccountDeviceList    `json:"devicesToAdd"`
    // The billing account to which the devices are added.
    AccountName          *string                `json:"accountName,omitempty"`
    // The names and values for any custom fields that you want set for the devices as they are added to the account.
    CustomFields         []CustomFields         `json:"customFields,omitempty"`
    // The name of a device group to add the devices to. They are added to the default device group if you don't include this parameter.
    GroupName            *string                `json:"groupName,omitempty"`
    // The Stock Keeping Unit (SKU) number of a 4G device type with an embedded SIM.
    SkuNumber            *string                `json:"skuNumber,omitempty"`
    SmsrOid              *string                `json:"smsrOid,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for AddDevicesRequest,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (a AddDevicesRequest) String() string {
    return fmt.Sprintf(
    	"AddDevicesRequest[State=%v, DevicesToAdd=%v, AccountName=%v, CustomFields=%v, GroupName=%v, SkuNumber=%v, SmsrOid=%v, AdditionalProperties=%v]",
    	a.State, a.DevicesToAdd, a.AccountName, a.CustomFields, a.GroupName, a.SkuNumber, a.SmsrOid, a.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for AddDevicesRequest.
// It customizes the JSON marshaling process for AddDevicesRequest objects.
func (a AddDevicesRequest) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(a.AdditionalProperties,
        "state", "devicesToAdd", "accountName", "customFields", "groupName", "skuNumber", "smsrOid"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(a.toMap())
}

// toMap converts the AddDevicesRequest object to a map representation for JSON marshaling.
func (a AddDevicesRequest) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, a.AdditionalProperties)
    structMap["state"] = a.State
    structMap["devicesToAdd"] = a.DevicesToAdd
    if a.AccountName != nil {
        structMap["accountName"] = a.AccountName
    }
    if a.CustomFields != nil {
        structMap["customFields"] = a.CustomFields
    }
    if a.GroupName != nil {
        structMap["groupName"] = a.GroupName
    }
    if a.SkuNumber != nil {
        structMap["skuNumber"] = a.SkuNumber
    }
    if a.SmsrOid != nil {
        structMap["smsrOid"] = a.SmsrOid
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for AddDevicesRequest.
// It customizes the JSON unmarshaling process for AddDevicesRequest objects.
func (a *AddDevicesRequest) UnmarshalJSON(input []byte) error {
    var temp tempAddDevicesRequest
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    err = temp.validate()
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "state", "devicesToAdd", "accountName", "customFields", "groupName", "skuNumber", "smsrOid")
    if err != nil {
    	return err
    }
    a.AdditionalProperties = additionalProperties
    
    a.State = *temp.State
    a.DevicesToAdd = *temp.DevicesToAdd
    a.AccountName = temp.AccountName
    a.CustomFields = temp.CustomFields
    a.GroupName = temp.GroupName
    a.SkuNumber = temp.SkuNumber
    a.SmsrOid = temp.SmsrOid
    return nil
}

// tempAddDevicesRequest is a temporary struct used for validating the fields of AddDevicesRequest.
type tempAddDevicesRequest  struct {
    State        *string              `json:"state"`
    DevicesToAdd *[]AccountDeviceList `json:"devicesToAdd"`
    AccountName  *string              `json:"accountName,omitempty"`
    CustomFields []CustomFields       `json:"customFields,omitempty"`
    GroupName    *string              `json:"groupName,omitempty"`
    SkuNumber    *string              `json:"skuNumber,omitempty"`
    SmsrOid      *string              `json:"smsrOid,omitempty"`
}

func (a *tempAddDevicesRequest) validate() error {
    var errs []string
    if a.State == nil {
        errs = append(errs, "required field `state` is missing for type `AddDevicesRequest`")
    }
    if a.DevicesToAdd == nil {
        errs = append(errs, "required field `devicesToAdd` is missing for type `AddDevicesRequest`")
    }
    if len(errs) == 0 {
        return nil
    }
    return errors.New(strings.Join (errs, "\n"))
}
