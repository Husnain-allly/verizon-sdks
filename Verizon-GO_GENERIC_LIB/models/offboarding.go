/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// Offboarding represents a Offboarding struct.
type Offboarding struct {
    // the IEEE EUI64 address space used to identify a device. It is supplied by the device manufacturer
    Sensoridentifier     *string                `json:"sensoridentifier,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for Offboarding,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (o Offboarding) String() string {
    return fmt.Sprintf(
    	"Offboarding[Sensoridentifier=%v, AdditionalProperties=%v]",
    	o.Sensoridentifier, o.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for Offboarding.
// It customizes the JSON marshaling process for Offboarding objects.
func (o Offboarding) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(o.AdditionalProperties,
        "sensoridentifier"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(o.toMap())
}

// toMap converts the Offboarding object to a map representation for JSON marshaling.
func (o Offboarding) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, o.AdditionalProperties)
    if o.Sensoridentifier != nil {
        structMap["sensoridentifier"] = o.Sensoridentifier
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for Offboarding.
// It customizes the JSON unmarshaling process for Offboarding objects.
func (o *Offboarding) UnmarshalJSON(input []byte) error {
    var temp tempOffboarding
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "sensoridentifier")
    if err != nil {
    	return err
    }
    o.AdditionalProperties = additionalProperties
    
    o.Sensoridentifier = temp.Sensoridentifier
    return nil
}

// tempOffboarding is a temporary struct used for validating the fields of Offboarding.
type tempOffboarding  struct {
    Sensoridentifier *string `json:"sensoridentifier,omitempty"`
}
