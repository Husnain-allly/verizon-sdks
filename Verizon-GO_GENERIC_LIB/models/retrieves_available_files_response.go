/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// RetrievesAvailableFilesResponse represents a RetrievesAvailableFilesResponse struct.
type RetrievesAvailableFilesResponse struct {
    // ThingSpace-generated name of the file. You will use this name when listing or scheduling campaigns for the file.
    FileName             *string                `json:"fileName,omitempty"`
    // Version of the file.
    FileVersion          *string                `json:"fileVersion,omitempty"`
    // Software release note.
    ReleaseNote          *string                `json:"releaseNote,omitempty"`
    // The software-applicable device make.
    Make                 *string                `json:"make,omitempty"`
    // The software-applicable device model.
    Model                *string                `json:"model,omitempty"`
    // Local target path on the device.
    LocalTargetPath      *string                `json:"localTargetPath,omitempty"`
    // Valid values
    DistributionType     *string                `json:"distributionType,omitempty"`
    // The platform (Android, iOS, etc.,) that the software can be applied to.
    DevicePlatformId     *string                `json:"devicePlatformId,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for RetrievesAvailableFilesResponse,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (r RetrievesAvailableFilesResponse) String() string {
    return fmt.Sprintf(
    	"RetrievesAvailableFilesResponse[FileName=%v, FileVersion=%v, ReleaseNote=%v, Make=%v, Model=%v, LocalTargetPath=%v, DistributionType=%v, DevicePlatformId=%v, AdditionalProperties=%v]",
    	r.FileName, r.FileVersion, r.ReleaseNote, r.Make, r.Model, r.LocalTargetPath, r.DistributionType, r.DevicePlatformId, r.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for RetrievesAvailableFilesResponse.
// It customizes the JSON marshaling process for RetrievesAvailableFilesResponse objects.
func (r RetrievesAvailableFilesResponse) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(r.AdditionalProperties,
        "fileName", "fileVersion", "releaseNote", "make", "model", "localTargetPath", "distributionType", "devicePlatformId"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(r.toMap())
}

// toMap converts the RetrievesAvailableFilesResponse object to a map representation for JSON marshaling.
func (r RetrievesAvailableFilesResponse) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, r.AdditionalProperties)
    if r.FileName != nil {
        structMap["fileName"] = r.FileName
    }
    if r.FileVersion != nil {
        structMap["fileVersion"] = r.FileVersion
    }
    if r.ReleaseNote != nil {
        structMap["releaseNote"] = r.ReleaseNote
    }
    if r.Make != nil {
        structMap["make"] = r.Make
    }
    if r.Model != nil {
        structMap["model"] = r.Model
    }
    if r.LocalTargetPath != nil {
        structMap["localTargetPath"] = r.LocalTargetPath
    }
    if r.DistributionType != nil {
        structMap["distributionType"] = r.DistributionType
    }
    if r.DevicePlatformId != nil {
        structMap["devicePlatformId"] = r.DevicePlatformId
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for RetrievesAvailableFilesResponse.
// It customizes the JSON unmarshaling process for RetrievesAvailableFilesResponse objects.
func (r *RetrievesAvailableFilesResponse) UnmarshalJSON(input []byte) error {
    var temp tempRetrievesAvailableFilesResponse
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "fileName", "fileVersion", "releaseNote", "make", "model", "localTargetPath", "distributionType", "devicePlatformId")
    if err != nil {
    	return err
    }
    r.AdditionalProperties = additionalProperties
    
    r.FileName = temp.FileName
    r.FileVersion = temp.FileVersion
    r.ReleaseNote = temp.ReleaseNote
    r.Make = temp.Make
    r.Model = temp.Model
    r.LocalTargetPath = temp.LocalTargetPath
    r.DistributionType = temp.DistributionType
    r.DevicePlatformId = temp.DevicePlatformId
    return nil
}

// tempRetrievesAvailableFilesResponse is a temporary struct used for validating the fields of RetrievesAvailableFilesResponse.
type tempRetrievesAvailableFilesResponse  struct {
    FileName         *string `json:"fileName,omitempty"`
    FileVersion      *string `json:"fileVersion,omitempty"`
    ReleaseNote      *string `json:"releaseNote,omitempty"`
    Make             *string `json:"make,omitempty"`
    Model            *string `json:"model,omitempty"`
    LocalTargetPath  *string `json:"localTargetPath,omitempty"`
    DistributionType *string `json:"distributionType,omitempty"`
    DevicePlatformId *string `json:"devicePlatformId,omitempty"`
}
