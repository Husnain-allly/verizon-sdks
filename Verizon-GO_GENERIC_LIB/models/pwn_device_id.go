/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "errors"
    "fmt"
    "strings"
)

// PwnDeviceId represents a PwnDeviceId struct.
type PwnDeviceId struct {
    Id                   string                 `json:"id"`
    Kind                 string                 `json:"kind"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for PwnDeviceId,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (p PwnDeviceId) String() string {
    return fmt.Sprintf(
    	"PwnDeviceId[Id=%v, Kind=%v, AdditionalProperties=%v]",
    	p.Id, p.Kind, p.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for PwnDeviceId.
// It customizes the JSON marshaling process for PwnDeviceId objects.
func (p PwnDeviceId) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(p.AdditionalProperties,
        "id", "kind"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(p.toMap())
}

// toMap converts the PwnDeviceId object to a map representation for JSON marshaling.
func (p PwnDeviceId) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, p.AdditionalProperties)
    structMap["id"] = p.Id
    structMap["kind"] = p.Kind
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for PwnDeviceId.
// It customizes the JSON unmarshaling process for PwnDeviceId objects.
func (p *PwnDeviceId) UnmarshalJSON(input []byte) error {
    var temp tempPwnDeviceId
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    err = temp.validate()
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "id", "kind")
    if err != nil {
    	return err
    }
    p.AdditionalProperties = additionalProperties
    
    p.Id = *temp.Id
    p.Kind = *temp.Kind
    return nil
}

// tempPwnDeviceId is a temporary struct used for validating the fields of PwnDeviceId.
type tempPwnDeviceId  struct {
    Id   *string `json:"id"`
    Kind *string `json:"kind"`
}

func (p *tempPwnDeviceId) validate() error {
    var errs []string
    if p.Id == nil {
        errs = append(errs, "required field `id` is missing for type `PWNDeviceId`")
    }
    if p.Kind == nil {
        errs = append(errs, "required field `kind` is missing for type `PWNDeviceId`")
    }
    if len(errs) == 0 {
        return nil
    }
    return errors.New(strings.Join (errs, "\n"))
}
