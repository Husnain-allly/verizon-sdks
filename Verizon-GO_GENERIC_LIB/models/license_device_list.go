/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// LicenseDeviceList represents a LicenseDeviceList struct.
// List of all devices.
type LicenseDeviceList struct {
    // For 4G devices, IMEI (decimal, up to 15 digits).
    DeviceIds []LicenseDeviceId `json:"deviceIds,omitempty"`
    Ipaddress *string           `json:"ipAddress,omitempty"`
}

// String implements the fmt.Stringer interface for LicenseDeviceList,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (l LicenseDeviceList) String() string {
    return fmt.Sprintf(
    	"LicenseDeviceList[DeviceIds=%v, Ipaddress=%v]",
    	l.DeviceIds, l.Ipaddress)
}

// MarshalJSON implements the json.Marshaler interface for LicenseDeviceList.
// It customizes the JSON marshaling process for LicenseDeviceList objects.
func (l LicenseDeviceList) MarshalJSON() (
    []byte,
    error) {
    return json.Marshal(l.toMap())
}

// toMap converts the LicenseDeviceList object to a map representation for JSON marshaling.
func (l LicenseDeviceList) toMap() map[string]any {
    structMap := make(map[string]any)
    if l.DeviceIds != nil {
        structMap["deviceIds"] = l.DeviceIds
    }
    if l.Ipaddress != nil {
        structMap["ipAddress"] = l.Ipaddress
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for LicenseDeviceList.
// It customizes the JSON unmarshaling process for LicenseDeviceList objects.
func (l *LicenseDeviceList) UnmarshalJSON(input []byte) error {
    var temp tempLicenseDeviceList
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    
    l.DeviceIds = temp.DeviceIds
    l.Ipaddress = temp.Ipaddress
    return nil
}

// tempLicenseDeviceList is a temporary struct used for validating the fields of LicenseDeviceList.
type tempLicenseDeviceList  struct {
    DeviceIds []LicenseDeviceId `json:"deviceIds,omitempty"`
    Ipaddress *string           `json:"ipAddress,omitempty"`
}
