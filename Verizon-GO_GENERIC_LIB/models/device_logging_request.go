/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "errors"
    "fmt"
    "strings"
)

// DeviceLoggingRequest represents a DeviceLoggingRequest struct.
// Device logging information.
type DeviceLoggingRequest struct {
    // List of device IMEI identifiers.
    DeviceIds            []string               `json:"deviceIds"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for DeviceLoggingRequest,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (d DeviceLoggingRequest) String() string {
    return fmt.Sprintf(
    	"DeviceLoggingRequest[DeviceIds=%v, AdditionalProperties=%v]",
    	d.DeviceIds, d.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for DeviceLoggingRequest.
// It customizes the JSON marshaling process for DeviceLoggingRequest objects.
func (d DeviceLoggingRequest) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(d.AdditionalProperties,
        "deviceIds"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(d.toMap())
}

// toMap converts the DeviceLoggingRequest object to a map representation for JSON marshaling.
func (d DeviceLoggingRequest) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, d.AdditionalProperties)
    structMap["deviceIds"] = d.DeviceIds
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for DeviceLoggingRequest.
// It customizes the JSON unmarshaling process for DeviceLoggingRequest objects.
func (d *DeviceLoggingRequest) UnmarshalJSON(input []byte) error {
    var temp tempDeviceLoggingRequest
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    err = temp.validate()
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "deviceIds")
    if err != nil {
    	return err
    }
    d.AdditionalProperties = additionalProperties
    
    d.DeviceIds = *temp.DeviceIds
    return nil
}

// tempDeviceLoggingRequest is a temporary struct used for validating the fields of DeviceLoggingRequest.
type tempDeviceLoggingRequest  struct {
    DeviceIds *[]string `json:"deviceIds"`
}

func (d *tempDeviceLoggingRequest) validate() error {
    var errs []string
    if d.DeviceIds == nil {
        errs = append(errs, "required field `deviceIds` is missing for type `DeviceLoggingRequest`")
    }
    if len(errs) == 0 {
        return nil
    }
    return errors.New(strings.Join (errs, "\n"))
}
