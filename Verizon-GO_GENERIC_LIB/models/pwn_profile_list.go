/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// PwnProfileList represents a PwnProfileList struct.
type PwnProfileList struct {
    Profiles             []PwnProfile           `json:"profiles,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for PwnProfileList,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (p PwnProfileList) String() string {
    return fmt.Sprintf(
    	"PwnProfileList[Profiles=%v, AdditionalProperties=%v]",
    	p.Profiles, p.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for PwnProfileList.
// It customizes the JSON marshaling process for PwnProfileList objects.
func (p PwnProfileList) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(p.AdditionalProperties,
        "profiles"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(p.toMap())
}

// toMap converts the PwnProfileList object to a map representation for JSON marshaling.
func (p PwnProfileList) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, p.AdditionalProperties)
    if p.Profiles != nil {
        structMap["profiles"] = p.Profiles
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for PwnProfileList.
// It customizes the JSON unmarshaling process for PwnProfileList objects.
func (p *PwnProfileList) UnmarshalJSON(input []byte) error {
    var temp tempPwnProfileList
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "profiles")
    if err != nil {
    	return err
    }
    p.AdditionalProperties = additionalProperties
    
    p.Profiles = temp.Profiles
    return nil
}

// tempPwnProfileList is a temporary struct used for validating the fields of PwnProfileList.
type tempPwnProfileList  struct {
    Profiles []PwnProfile `json:"profiles,omitempty"`
}
