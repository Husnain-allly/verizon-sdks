/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// DtoDeviceActionSetConfiguration represents a DtoDeviceActionSetConfiguration struct.
type DtoDeviceActionSetConfiguration struct {
    DeviceConfig         *DtoDeviceConfig       `json:"deviceConfig,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for DtoDeviceActionSetConfiguration,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (d DtoDeviceActionSetConfiguration) String() string {
    return fmt.Sprintf(
    	"DtoDeviceActionSetConfiguration[DeviceConfig=%v, AdditionalProperties=%v]",
    	d.DeviceConfig, d.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for DtoDeviceActionSetConfiguration.
// It customizes the JSON marshaling process for DtoDeviceActionSetConfiguration objects.
func (d DtoDeviceActionSetConfiguration) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(d.AdditionalProperties,
        "deviceConfig"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(d.toMap())
}

// toMap converts the DtoDeviceActionSetConfiguration object to a map representation for JSON marshaling.
func (d DtoDeviceActionSetConfiguration) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, d.AdditionalProperties)
    if d.DeviceConfig != nil {
        structMap["deviceConfig"] = d.DeviceConfig.toMap()
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for DtoDeviceActionSetConfiguration.
// It customizes the JSON unmarshaling process for DtoDeviceActionSetConfiguration objects.
func (d *DtoDeviceActionSetConfiguration) UnmarshalJSON(input []byte) error {
    var temp tempDtoDeviceActionSetConfiguration
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "deviceConfig")
    if err != nil {
    	return err
    }
    d.AdditionalProperties = additionalProperties
    
    d.DeviceConfig = temp.DeviceConfig
    return nil
}

// tempDtoDeviceActionSetConfiguration is a temporary struct used for validating the fields of DtoDeviceActionSetConfiguration.
type tempDtoDeviceActionSetConfiguration  struct {
    DeviceConfig *DtoDeviceConfig `json:"deviceConfig,omitempty"`
}
