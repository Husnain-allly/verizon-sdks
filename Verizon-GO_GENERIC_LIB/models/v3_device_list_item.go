/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// V3DeviceListItem represents a V3DeviceListItem struct.
// Device changed.
type V3DeviceListItem struct {
    // Device IMEI.
    DeviceId             *string                `json:"deviceId,omitempty"`
    // Success or failure.
    Status               *string                `json:"status,omitempty"`
    // Result reason.
    Reason               *string                `json:"Reason,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for V3DeviceListItem,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (v V3DeviceListItem) String() string {
    return fmt.Sprintf(
    	"V3DeviceListItem[DeviceId=%v, Status=%v, Reason=%v, AdditionalProperties=%v]",
    	v.DeviceId, v.Status, v.Reason, v.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for V3DeviceListItem.
// It customizes the JSON marshaling process for V3DeviceListItem objects.
func (v V3DeviceListItem) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(v.AdditionalProperties,
        "deviceId", "status", "Reason"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(v.toMap())
}

// toMap converts the V3DeviceListItem object to a map representation for JSON marshaling.
func (v V3DeviceListItem) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, v.AdditionalProperties)
    if v.DeviceId != nil {
        structMap["deviceId"] = v.DeviceId
    }
    if v.Status != nil {
        structMap["status"] = v.Status
    }
    if v.Reason != nil {
        structMap["Reason"] = v.Reason
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for V3DeviceListItem.
// It customizes the JSON unmarshaling process for V3DeviceListItem objects.
func (v *V3DeviceListItem) UnmarshalJSON(input []byte) error {
    var temp tempV3DeviceListItem
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "deviceId", "status", "Reason")
    if err != nil {
    	return err
    }
    v.AdditionalProperties = additionalProperties
    
    v.DeviceId = temp.DeviceId
    v.Status = temp.Status
    v.Reason = temp.Reason
    return nil
}

// tempV3DeviceListItem is a temporary struct used for validating the fields of V3DeviceListItem.
type tempV3DeviceListItem  struct {
    DeviceId *string `json:"deviceId,omitempty"`
    Status   *string `json:"status,omitempty"`
    Reason   *string `json:"Reason,omitempty"`
}
