/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// DeviceResetRequest represents a DeviceResetRequest struct.
// Request body to Performs a device reboot.
type DeviceResetRequest struct {
    // The name of the account. An account name is usually numeric, and must include any leading zeros.
    AccountName          *string                `json:"accountName,omitempty"`
    // The action you want to take on the device.
    Action               *string                `json:"action,omitempty"`
    // The devices for which you want to perform a factory reset or reboot.
    Devices              []Device               `json:"devices,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for DeviceResetRequest,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (d DeviceResetRequest) String() string {
    return fmt.Sprintf(
    	"DeviceResetRequest[AccountName=%v, Action=%v, Devices=%v, AdditionalProperties=%v]",
    	d.AccountName, d.Action, d.Devices, d.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for DeviceResetRequest.
// It customizes the JSON marshaling process for DeviceResetRequest objects.
func (d DeviceResetRequest) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(d.AdditionalProperties,
        "accountName", "action", "devices"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(d.toMap())
}

// toMap converts the DeviceResetRequest object to a map representation for JSON marshaling.
func (d DeviceResetRequest) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, d.AdditionalProperties)
    if d.AccountName != nil {
        structMap["accountName"] = d.AccountName
    }
    if d.Action != nil {
        structMap["action"] = d.Action
    }
    if d.Devices != nil {
        structMap["devices"] = d.Devices
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for DeviceResetRequest.
// It customizes the JSON unmarshaling process for DeviceResetRequest objects.
func (d *DeviceResetRequest) UnmarshalJSON(input []byte) error {
    var temp tempDeviceResetRequest
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "accountName", "action", "devices")
    if err != nil {
    	return err
    }
    d.AdditionalProperties = additionalProperties
    
    d.AccountName = temp.AccountName
    d.Action = temp.Action
    d.Devices = temp.Devices
    return nil
}

// tempDeviceResetRequest is a temporary struct used for validating the fields of DeviceResetRequest.
type tempDeviceResetRequest  struct {
    AccountName *string  `json:"accountName,omitempty"`
    Action      *string  `json:"action,omitempty"`
    Devices     []Device `json:"devices,omitempty"`
}
