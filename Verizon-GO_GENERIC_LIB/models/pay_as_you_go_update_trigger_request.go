/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// PayAsYouGoUpdateTriggerRequest represents a PayAsYouGoUpdateTriggerRequest struct.
type PayAsYouGoUpdateTriggerRequest struct {
    // The system assigned UUID of the trigger
    TriggerId            *string                     `json:"triggerId,omitempty"`
    // The user defined name of the trigger
    TriggerName          *string                     `json:"triggerName,omitempty"`
    // The Enterprise Customer Profile Database ID
    EcpdId               *string                     `json:"ecpdId,omitempty"`
    // The type of trigger being created or modified
    TriggerCategory      *TriggerCategory            `json:"triggerCategory,omitempty"`
    PricePlanTrigger     *PayAsYouGoPricePlanTrigger `json:"pricePlanTrigger,omitempty"`
    Notification         *Notificationarray          `json:"notification,omitempty"`
    // A flag to indicate of the trigger is active, true, or not, false
    Active               *Active                     `json:"active,omitempty"`
    AdditionalProperties map[string]interface{}      `json:"_"`
}

// String implements the fmt.Stringer interface for PayAsYouGoUpdateTriggerRequest,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (p PayAsYouGoUpdateTriggerRequest) String() string {
    return fmt.Sprintf(
    	"PayAsYouGoUpdateTriggerRequest[TriggerId=%v, TriggerName=%v, EcpdId=%v, TriggerCategory=%v, PricePlanTrigger=%v, Notification=%v, Active=%v, AdditionalProperties=%v]",
    	p.TriggerId, p.TriggerName, p.EcpdId, p.TriggerCategory, p.PricePlanTrigger, p.Notification, p.Active, p.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for PayAsYouGoUpdateTriggerRequest.
// It customizes the JSON marshaling process for PayAsYouGoUpdateTriggerRequest objects.
func (p PayAsYouGoUpdateTriggerRequest) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(p.AdditionalProperties,
        "triggerId", "triggerName", "ecpdId", "triggerCategory", "pricePlanTrigger", "notification", "active"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(p.toMap())
}

// toMap converts the PayAsYouGoUpdateTriggerRequest object to a map representation for JSON marshaling.
func (p PayAsYouGoUpdateTriggerRequest) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, p.AdditionalProperties)
    if p.TriggerId != nil {
        structMap["triggerId"] = p.TriggerId
    }
    if p.TriggerName != nil {
        structMap["triggerName"] = p.TriggerName
    }
    if p.EcpdId != nil {
        structMap["ecpdId"] = p.EcpdId
    }
    if p.TriggerCategory != nil {
        structMap["triggerCategory"] = p.TriggerCategory
    }
    if p.PricePlanTrigger != nil {
        structMap["pricePlanTrigger"] = p.PricePlanTrigger.toMap()
    }
    if p.Notification != nil {
        structMap["notification"] = p.Notification.toMap()
    }
    if p.Active != nil {
        structMap["active"] = p.Active
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for PayAsYouGoUpdateTriggerRequest.
// It customizes the JSON unmarshaling process for PayAsYouGoUpdateTriggerRequest objects.
func (p *PayAsYouGoUpdateTriggerRequest) UnmarshalJSON(input []byte) error {
    var temp tempPayAsYouGoUpdateTriggerRequest
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "triggerId", "triggerName", "ecpdId", "triggerCategory", "pricePlanTrigger", "notification", "active")
    if err != nil {
    	return err
    }
    p.AdditionalProperties = additionalProperties
    
    p.TriggerId = temp.TriggerId
    p.TriggerName = temp.TriggerName
    p.EcpdId = temp.EcpdId
    p.TriggerCategory = temp.TriggerCategory
    p.PricePlanTrigger = temp.PricePlanTrigger
    p.Notification = temp.Notification
    p.Active = temp.Active
    return nil
}

// tempPayAsYouGoUpdateTriggerRequest is a temporary struct used for validating the fields of PayAsYouGoUpdateTriggerRequest.
type tempPayAsYouGoUpdateTriggerRequest  struct {
    TriggerId        *string                     `json:"triggerId,omitempty"`
    TriggerName      *string                     `json:"triggerName,omitempty"`
    EcpdId           *string                     `json:"ecpdId,omitempty"`
    TriggerCategory  *TriggerCategory            `json:"triggerCategory,omitempty"`
    PricePlanTrigger *PayAsYouGoPricePlanTrigger `json:"pricePlanTrigger,omitempty"`
    Notification     *Notificationarray          `json:"notification,omitempty"`
    Active           *Active                     `json:"active,omitempty"`
}
