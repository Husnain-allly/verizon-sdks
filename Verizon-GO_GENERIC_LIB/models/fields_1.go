/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// Fields1 represents a Fields1 struct.
type Fields1 struct {
    // List of device sensors and their most recently reported values.
    Item                 *SearchDeviceByPropertyFields `json:"item,omitempty"`
    AdditionalProperties map[string]interface{}        `json:"_"`
}

// String implements the fmt.Stringer interface for Fields1,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (f Fields1) String() string {
    return fmt.Sprintf(
    	"Fields1[Item=%v, AdditionalProperties=%v]",
    	f.Item, f.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for Fields1.
// It customizes the JSON marshaling process for Fields1 objects.
func (f Fields1) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(f.AdditionalProperties,
        "item"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(f.toMap())
}

// toMap converts the Fields1 object to a map representation for JSON marshaling.
func (f Fields1) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, f.AdditionalProperties)
    if f.Item != nil {
        structMap["item"] = f.Item.toMap()
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for Fields1.
// It customizes the JSON unmarshaling process for Fields1 objects.
func (f *Fields1) UnmarshalJSON(input []byte) error {
    var temp tempFields1
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "item")
    if err != nil {
    	return err
    }
    f.AdditionalProperties = additionalProperties
    
    f.Item = temp.Item
    return nil
}

// tempFields1 is a temporary struct used for validating the fields of Fields1.
type tempFields1  struct {
    Item *SearchDeviceByPropertyFields `json:"item,omitempty"`
}
