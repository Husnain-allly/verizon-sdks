/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// DeviceIdarray represents a DeviceIdarray struct.
type DeviceIdarray struct {
    Kind                 *string                `json:"kind,omitempty"`
    Id                   *string                `json:"id,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for DeviceIdarray,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (d DeviceIdarray) String() string {
    return fmt.Sprintf(
    	"DeviceIdarray[Kind=%v, Id=%v, AdditionalProperties=%v]",
    	d.Kind, d.Id, d.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for DeviceIdarray.
// It customizes the JSON marshaling process for DeviceIdarray objects.
func (d DeviceIdarray) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(d.AdditionalProperties,
        "kind", "id"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(d.toMap())
}

// toMap converts the DeviceIdarray object to a map representation for JSON marshaling.
func (d DeviceIdarray) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, d.AdditionalProperties)
    if d.Kind != nil {
        structMap["kind"] = d.Kind
    }
    if d.Id != nil {
        structMap["id"] = d.Id
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for DeviceIdarray.
// It customizes the JSON unmarshaling process for DeviceIdarray objects.
func (d *DeviceIdarray) UnmarshalJSON(input []byte) error {
    var temp tempDeviceIdarray
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "kind", "id")
    if err != nil {
    	return err
    }
    d.AdditionalProperties = additionalProperties
    
    d.Kind = temp.Kind
    d.Id = temp.Id
    return nil
}

// tempDeviceIdarray is a temporary struct used for validating the fields of DeviceIdarray.
type tempDeviceIdarray  struct {
    Kind *string `json:"kind,omitempty"`
    Id   *string `json:"id,omitempty"`
}
