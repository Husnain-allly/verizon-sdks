/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// M2MV1IntelligenceWirelessCoverageRequest represents a M2MV1IntelligenceWirelessCoverageRequest struct.
type M2MV1IntelligenceWirelessCoverageRequest struct {
    // Account name.
    AccountName          *string                `json:"accountName,omitempty"`
    // Type of request made. FWA for address qualification and NW for Nationwide coverage.
    RequestType          *string                `json:"requestType,omitempty"`
    // Type of location detail.
    LocationType         *string                `json:"locationType,omitempty"`
    Locations            *Locations1            `json:"locations,omitempty"`
    NetworkTypesList     []NetworkTypeObject    `json:"networkTypesList,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for M2MV1IntelligenceWirelessCoverageRequest,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (m M2MV1IntelligenceWirelessCoverageRequest) String() string {
    return fmt.Sprintf(
    	"M2MV1IntelligenceWirelessCoverageRequest[AccountName=%v, RequestType=%v, LocationType=%v, Locations=%v, NetworkTypesList=%v, AdditionalProperties=%v]",
    	m.AccountName, m.RequestType, m.LocationType, m.Locations, m.NetworkTypesList, m.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for M2MV1IntelligenceWirelessCoverageRequest.
// It customizes the JSON marshaling process for M2MV1IntelligenceWirelessCoverageRequest objects.
func (m M2MV1IntelligenceWirelessCoverageRequest) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(m.AdditionalProperties,
        "accountName", "requestType", "locationType", "locations", "networkTypesList"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(m.toMap())
}

// toMap converts the M2MV1IntelligenceWirelessCoverageRequest object to a map representation for JSON marshaling.
func (m M2MV1IntelligenceWirelessCoverageRequest) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, m.AdditionalProperties)
    if m.AccountName != nil {
        structMap["accountName"] = m.AccountName
    }
    if m.RequestType != nil {
        structMap["requestType"] = m.RequestType
    }
    if m.LocationType != nil {
        structMap["locationType"] = m.LocationType
    }
    if m.Locations != nil {
        structMap["locations"] = m.Locations.toMap()
    }
    if m.NetworkTypesList != nil {
        structMap["networkTypesList"] = m.NetworkTypesList
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for M2MV1IntelligenceWirelessCoverageRequest.
// It customizes the JSON unmarshaling process for M2MV1IntelligenceWirelessCoverageRequest objects.
func (m *M2MV1IntelligenceWirelessCoverageRequest) UnmarshalJSON(input []byte) error {
    var temp tempM2MV1IntelligenceWirelessCoverageRequest
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "accountName", "requestType", "locationType", "locations", "networkTypesList")
    if err != nil {
    	return err
    }
    m.AdditionalProperties = additionalProperties
    
    m.AccountName = temp.AccountName
    m.RequestType = temp.RequestType
    m.LocationType = temp.LocationType
    m.Locations = temp.Locations
    m.NetworkTypesList = temp.NetworkTypesList
    return nil
}

// tempM2MV1IntelligenceWirelessCoverageRequest is a temporary struct used for validating the fields of M2MV1IntelligenceWirelessCoverageRequest.
type tempM2MV1IntelligenceWirelessCoverageRequest  struct {
    AccountName      *string             `json:"accountName,omitempty"`
    RequestType      *string             `json:"requestType,omitempty"`
    LocationType     *string             `json:"locationType,omitempty"`
    Locations        *Locations1         `json:"locations,omitempty"`
    NetworkTypesList []NetworkTypeObject `json:"networkTypesList,omitempty"`
}
