/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// TargetAuthenticationBodyHeaders represents a TargetAuthenticationBodyHeaders struct.
// Authentication headers.
type TargetAuthenticationBodyHeaders struct {
    // Authorization header.
    Authorization        *string                `json:"Authorization,omitempty"`
    // Content-Type header.
    ContentType          *string                `json:"Content-Type,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for TargetAuthenticationBodyHeaders,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (t TargetAuthenticationBodyHeaders) String() string {
    return fmt.Sprintf(
    	"TargetAuthenticationBodyHeaders[Authorization=%v, ContentType=%v, AdditionalProperties=%v]",
    	t.Authorization, t.ContentType, t.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for TargetAuthenticationBodyHeaders.
// It customizes the JSON marshaling process for TargetAuthenticationBodyHeaders objects.
func (t TargetAuthenticationBodyHeaders) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(t.AdditionalProperties,
        "Authorization", "Content-Type"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(t.toMap())
}

// toMap converts the TargetAuthenticationBodyHeaders object to a map representation for JSON marshaling.
func (t TargetAuthenticationBodyHeaders) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, t.AdditionalProperties)
    if t.Authorization != nil {
        structMap["Authorization"] = t.Authorization
    }
    if t.ContentType != nil {
        structMap["Content-Type"] = t.ContentType
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for TargetAuthenticationBodyHeaders.
// It customizes the JSON unmarshaling process for TargetAuthenticationBodyHeaders objects.
func (t *TargetAuthenticationBodyHeaders) UnmarshalJSON(input []byte) error {
    var temp tempTargetAuthenticationBodyHeaders
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "Authorization", "Content-Type")
    if err != nil {
    	return err
    }
    t.AdditionalProperties = additionalProperties
    
    t.Authorization = temp.Authorization
    t.ContentType = temp.ContentType
    return nil
}

// tempTargetAuthenticationBodyHeaders is a temporary struct used for validating the fields of TargetAuthenticationBodyHeaders.
type tempTargetAuthenticationBodyHeaders  struct {
    Authorization *string `json:"Authorization,omitempty"`
    ContentType   *string `json:"Content-Type,omitempty"`
}
