/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// SearchSensorHistoryResponseList represents a SearchSensorHistoryResponseList struct.
// A success response includes an array of all matching events.
type SearchSensorHistoryResponseList struct {
    SearchSensorHistory  []SearchDeviceResponse `json:"SearchSensorHistory,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for SearchSensorHistoryResponseList,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (s SearchSensorHistoryResponseList) String() string {
    return fmt.Sprintf(
    	"SearchSensorHistoryResponseList[SearchSensorHistory=%v, AdditionalProperties=%v]",
    	s.SearchSensorHistory, s.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for SearchSensorHistoryResponseList.
// It customizes the JSON marshaling process for SearchSensorHistoryResponseList objects.
func (s SearchSensorHistoryResponseList) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(s.AdditionalProperties,
        "SearchSensorHistory"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(s.toMap())
}

// toMap converts the SearchSensorHistoryResponseList object to a map representation for JSON marshaling.
func (s SearchSensorHistoryResponseList) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, s.AdditionalProperties)
    if s.SearchSensorHistory != nil {
        structMap["SearchSensorHistory"] = s.SearchSensorHistory
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for SearchSensorHistoryResponseList.
// It customizes the JSON unmarshaling process for SearchSensorHistoryResponseList objects.
func (s *SearchSensorHistoryResponseList) UnmarshalJSON(input []byte) error {
    var temp tempSearchSensorHistoryResponseList
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "SearchSensorHistory")
    if err != nil {
    	return err
    }
    s.AdditionalProperties = additionalProperties
    
    s.SearchSensorHistory = temp.SearchSensorHistory
    return nil
}

// tempSearchSensorHistoryResponseList is a temporary struct used for validating the fields of SearchSensorHistoryResponseList.
type tempSearchSensorHistoryResponseList  struct {
    SearchSensorHistory []SearchDeviceResponse `json:"SearchSensorHistory,omitempty"`
}
