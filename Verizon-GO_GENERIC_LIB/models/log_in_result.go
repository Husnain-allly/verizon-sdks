/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// LogInResult represents a LogInResult struct.
// Response to initiate a Connectivity Management session and returns a VZ-M2M session token that is required in subsequent API requests.
type LogInResult struct {
    // The identifier for the session that was created by the request. Store the sessionToken for use in the header of all other API requests.
    SessionToken         *string                `json:"sessionToken,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for LogInResult,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (l LogInResult) String() string {
    return fmt.Sprintf(
    	"LogInResult[SessionToken=%v, AdditionalProperties=%v]",
    	l.SessionToken, l.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for LogInResult.
// It customizes the JSON marshaling process for LogInResult objects.
func (l LogInResult) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(l.AdditionalProperties,
        "sessionToken"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(l.toMap())
}

// toMap converts the LogInResult object to a map representation for JSON marshaling.
func (l LogInResult) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, l.AdditionalProperties)
    if l.SessionToken != nil {
        structMap["sessionToken"] = l.SessionToken
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for LogInResult.
// It customizes the JSON unmarshaling process for LogInResult objects.
func (l *LogInResult) UnmarshalJSON(input []byte) error {
    var temp tempLogInResult
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "sessionToken")
    if err != nil {
    	return err
    }
    l.AdditionalProperties = additionalProperties
    
    l.SessionToken = temp.SessionToken
    return nil
}

// tempLogInResult is a temporary struct used for validating the fields of LogInResult.
type tempLogInResult  struct {
    SessionToken *string `json:"sessionToken,omitempty"`
}
