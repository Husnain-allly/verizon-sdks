/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// ConsentDeleteRequest represents a ConsentDeleteRequest struct.
type ConsentDeleteRequest struct {
    // Account identifier.
    AccountName          *string                `json:"accountName,omitempty"`
    // Device ID list.
    DeviceList           []string               `json:"deviceList,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for ConsentDeleteRequest,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (c ConsentDeleteRequest) String() string {
    return fmt.Sprintf(
    	"ConsentDeleteRequest[AccountName=%v, DeviceList=%v, AdditionalProperties=%v]",
    	c.AccountName, c.DeviceList, c.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for ConsentDeleteRequest.
// It customizes the JSON marshaling process for ConsentDeleteRequest objects.
func (c ConsentDeleteRequest) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(c.AdditionalProperties,
        "accountName", "deviceList"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(c.toMap())
}

// toMap converts the ConsentDeleteRequest object to a map representation for JSON marshaling.
func (c ConsentDeleteRequest) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, c.AdditionalProperties)
    if c.AccountName != nil {
        structMap["accountName"] = c.AccountName
    }
    if c.DeviceList != nil {
        structMap["deviceList"] = c.DeviceList
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for ConsentDeleteRequest.
// It customizes the JSON unmarshaling process for ConsentDeleteRequest objects.
func (c *ConsentDeleteRequest) UnmarshalJSON(input []byte) error {
    var temp tempConsentDeleteRequest
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "accountName", "deviceList")
    if err != nil {
    	return err
    }
    c.AdditionalProperties = additionalProperties
    
    c.AccountName = temp.AccountName
    c.DeviceList = temp.DeviceList
    return nil
}

// tempConsentDeleteRequest is a temporary struct used for validating the fields of ConsentDeleteRequest.
type tempConsentDeleteRequest  struct {
    AccountName *string  `json:"accountName,omitempty"`
    DeviceList  []string `json:"deviceList,omitempty"`
}
