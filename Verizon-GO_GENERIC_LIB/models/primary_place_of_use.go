/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// PrimaryPlaceOfUse represents a PrimaryPlaceOfUse struct.
type PrimaryPlaceOfUse struct {
    CustomerName []CustomerName `json:"customerName,omitempty"`
    Address      []Address      `json:"address,omitempty"`
}

// String implements the fmt.Stringer interface for PrimaryPlaceOfUse,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (p PrimaryPlaceOfUse) String() string {
    return fmt.Sprintf(
    	"PrimaryPlaceOfUse[CustomerName=%v, Address=%v]",
    	p.CustomerName, p.Address)
}

// MarshalJSON implements the json.Marshaler interface for PrimaryPlaceOfUse.
// It customizes the JSON marshaling process for PrimaryPlaceOfUse objects.
func (p PrimaryPlaceOfUse) MarshalJSON() (
    []byte,
    error) {
    return json.Marshal(p.toMap())
}

// toMap converts the PrimaryPlaceOfUse object to a map representation for JSON marshaling.
func (p PrimaryPlaceOfUse) toMap() map[string]any {
    structMap := make(map[string]any)
    if p.CustomerName != nil {
        structMap["customerName"] = p.CustomerName
    }
    if p.Address != nil {
        structMap["address"] = p.Address
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for PrimaryPlaceOfUse.
// It customizes the JSON unmarshaling process for PrimaryPlaceOfUse objects.
func (p *PrimaryPlaceOfUse) UnmarshalJSON(input []byte) error {
    var temp tempPrimaryPlaceOfUse
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    
    p.CustomerName = temp.CustomerName
    p.Address = temp.Address
    return nil
}

// tempPrimaryPlaceOfUse is a temporary struct used for validating the fields of PrimaryPlaceOfUse.
type tempPrimaryPlaceOfUse  struct {
    CustomerName []CustomerName `json:"customerName,omitempty"`
    Address      []Address      `json:"address,omitempty"`
}
