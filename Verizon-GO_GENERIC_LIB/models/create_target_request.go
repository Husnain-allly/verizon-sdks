/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// CreateTargetRequest represents a CreateTargetRequest struct.
// Details of the target that you want to create.
type CreateTargetRequest struct {
    // The ID of the authenticating billing account, in the format `{"billingaccountid":"1234567890-12345"}`.
    Accountidentifier    *AccountIdentifier         `json:"accountidentifier,omitempty"`
    // The ID of the authenticating billing account.
    Billingaccountid     *string                    `json:"billingaccountid,omitempty"`
    // Identifies the resource kind. Targets are ts.target.
    Kind                 *string                    `json:"kind,omitempty"`
    // The endpoint for notifications or data streams. The format depends on the selected `addressscheme`.<br />`streamrest` requires a `host:port` value <br />`streamawsiot` requres a valid ARN.
    Address              *string                    `json:"address,omitempty"`
    // The transport format. Valid values are: <br />streamawsiot - streamed data to an AWS account <br />streamrest - streamed REST data to a defined endpoint.
    Addressscheme        *string                    `json:"addressscheme,omitempty"`
    Fields               *CreateTargetRequestFields `json:"fields,omitempty"`
    // Descriptive information about the target.
    Description          *string                    `json:"description,omitempty"`
    // Security identification string created by a POST /targets/actions/newextid request.
    Externalid           *string                    `json:"externalid,omitempty"`
    // Name of the target.
    Name                 *string                    `json:"name,omitempty"`
    // AWS region value.
    Region               *string                    `json:"region,omitempty"`
    // OAuth 2.0 bearer token.
    Key1                 *string                    `json:"key1,omitempty"`
    // OAuth 2 token and refresh token for TS to stream events to Target.
    Oauth                *TargetAuthentication      `json:"oauth,omitempty"`
    AdditionalProperties map[string]interface{}     `json:"_"`
}

// String implements the fmt.Stringer interface for CreateTargetRequest,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (c CreateTargetRequest) String() string {
    return fmt.Sprintf(
    	"CreateTargetRequest[Accountidentifier=%v, Billingaccountid=%v, Kind=%v, Address=%v, Addressscheme=%v, Fields=%v, Description=%v, Externalid=%v, Name=%v, Region=%v, Key1=%v, Oauth=%v, AdditionalProperties=%v]",
    	c.Accountidentifier, c.Billingaccountid, c.Kind, c.Address, c.Addressscheme, c.Fields, c.Description, c.Externalid, c.Name, c.Region, c.Key1, c.Oauth, c.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for CreateTargetRequest.
// It customizes the JSON marshaling process for CreateTargetRequest objects.
func (c CreateTargetRequest) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(c.AdditionalProperties,
        "accountidentifier", "billingaccountid", "kind", "address", "addressscheme", "fields", "description", "externalid", "name", "region", "key1", "oauth"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(c.toMap())
}

// toMap converts the CreateTargetRequest object to a map representation for JSON marshaling.
func (c CreateTargetRequest) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, c.AdditionalProperties)
    if c.Accountidentifier != nil {
        structMap["accountidentifier"] = c.Accountidentifier.toMap()
    }
    if c.Billingaccountid != nil {
        structMap["billingaccountid"] = c.Billingaccountid
    }
    if c.Kind != nil {
        structMap["kind"] = c.Kind
    }
    if c.Address != nil {
        structMap["address"] = c.Address
    }
    if c.Addressscheme != nil {
        structMap["addressscheme"] = c.Addressscheme
    }
    if c.Fields != nil {
        structMap["fields"] = c.Fields.toMap()
    }
    if c.Description != nil {
        structMap["description"] = c.Description
    }
    if c.Externalid != nil {
        structMap["externalid"] = c.Externalid
    }
    if c.Name != nil {
        structMap["name"] = c.Name
    }
    if c.Region != nil {
        structMap["region"] = c.Region
    }
    if c.Key1 != nil {
        structMap["key1"] = c.Key1
    }
    if c.Oauth != nil {
        structMap["oauth"] = c.Oauth.toMap()
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for CreateTargetRequest.
// It customizes the JSON unmarshaling process for CreateTargetRequest objects.
func (c *CreateTargetRequest) UnmarshalJSON(input []byte) error {
    var temp tempCreateTargetRequest
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "accountidentifier", "billingaccountid", "kind", "address", "addressscheme", "fields", "description", "externalid", "name", "region", "key1", "oauth")
    if err != nil {
    	return err
    }
    c.AdditionalProperties = additionalProperties
    
    c.Accountidentifier = temp.Accountidentifier
    c.Billingaccountid = temp.Billingaccountid
    c.Kind = temp.Kind
    c.Address = temp.Address
    c.Addressscheme = temp.Addressscheme
    c.Fields = temp.Fields
    c.Description = temp.Description
    c.Externalid = temp.Externalid
    c.Name = temp.Name
    c.Region = temp.Region
    c.Key1 = temp.Key1
    c.Oauth = temp.Oauth
    return nil
}

// tempCreateTargetRequest is a temporary struct used for validating the fields of CreateTargetRequest.
type tempCreateTargetRequest  struct {
    Accountidentifier *AccountIdentifier         `json:"accountidentifier,omitempty"`
    Billingaccountid  *string                    `json:"billingaccountid,omitempty"`
    Kind              *string                    `json:"kind,omitempty"`
    Address           *string                    `json:"address,omitempty"`
    Addressscheme     *string                    `json:"addressscheme,omitempty"`
    Fields            *CreateTargetRequestFields `json:"fields,omitempty"`
    Description       *string                    `json:"description,omitempty"`
    Externalid        *string                    `json:"externalid,omitempty"`
    Name              *string                    `json:"name,omitempty"`
    Region            *string                    `json:"region,omitempty"`
    Key1              *string                    `json:"key1,omitempty"`
    Oauth             *TargetAuthentication      `json:"oauth,omitempty"`
}
