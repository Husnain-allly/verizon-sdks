/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// DeviceId2 represents a DeviceId2 struct.
type DeviceId2 struct {
    Id   *string `json:"id,omitempty"`
    Kind *string `json:"kind,omitempty"`
}

// String implements the fmt.Stringer interface for DeviceId2,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (d DeviceId2) String() string {
    return fmt.Sprintf(
    	"DeviceId2[Id=%v, Kind=%v]",
    	d.Id, d.Kind)
}

// MarshalJSON implements the json.Marshaler interface for DeviceId2.
// It customizes the JSON marshaling process for DeviceId2 objects.
func (d DeviceId2) MarshalJSON() (
    []byte,
    error) {
    return json.Marshal(d.toMap())
}

// toMap converts the DeviceId2 object to a map representation for JSON marshaling.
func (d DeviceId2) toMap() map[string]any {
    structMap := make(map[string]any)
    if d.Id != nil {
        structMap["id"] = d.Id
    }
    if d.Kind != nil {
        structMap["kind"] = d.Kind
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for DeviceId2.
// It customizes the JSON unmarshaling process for DeviceId2 objects.
func (d *DeviceId2) UnmarshalJSON(input []byte) error {
    var temp tempDeviceId2
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    
    d.Id = temp.Id
    d.Kind = temp.Kind
    return nil
}

// tempDeviceId2 is a temporary struct used for validating the fields of DeviceId2.
type tempDeviceId2  struct {
    Id   *string `json:"id,omitempty"`
    Kind *string `json:"kind,omitempty"`
}
