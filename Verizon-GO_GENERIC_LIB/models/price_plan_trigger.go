/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// PricePlanTrigger represents a PricePlanTrigger struct.
type PricePlanTrigger struct {
    StandAlone           *FiltercriteriaObjectCall `json:"standAlone,omitempty"`
    Condition            *Rateplantype2Condition   `json:"condition,omitempty"`
    Action               *Actionobject             `json:"action,omitempty"`
    AdditionalProperties map[string]interface{}    `json:"_"`
}

// String implements the fmt.Stringer interface for PricePlanTrigger,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (p PricePlanTrigger) String() string {
    return fmt.Sprintf(
    	"PricePlanTrigger[StandAlone=%v, Condition=%v, Action=%v, AdditionalProperties=%v]",
    	p.StandAlone, p.Condition, p.Action, p.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for PricePlanTrigger.
// It customizes the JSON marshaling process for PricePlanTrigger objects.
func (p PricePlanTrigger) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(p.AdditionalProperties,
        "standAlone", "condition", "action"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(p.toMap())
}

// toMap converts the PricePlanTrigger object to a map representation for JSON marshaling.
func (p PricePlanTrigger) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, p.AdditionalProperties)
    if p.StandAlone != nil {
        structMap["standAlone"] = p.StandAlone.toMap()
    }
    if p.Condition != nil {
        structMap["condition"] = p.Condition.toMap()
    }
    if p.Action != nil {
        structMap["action"] = p.Action.toMap()
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for PricePlanTrigger.
// It customizes the JSON unmarshaling process for PricePlanTrigger objects.
func (p *PricePlanTrigger) UnmarshalJSON(input []byte) error {
    var temp tempPricePlanTrigger
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "standAlone", "condition", "action")
    if err != nil {
    	return err
    }
    p.AdditionalProperties = additionalProperties
    
    p.StandAlone = temp.StandAlone
    p.Condition = temp.Condition
    p.Action = temp.Action
    return nil
}

// tempPricePlanTrigger is a temporary struct used for validating the fields of PricePlanTrigger.
type tempPricePlanTrigger  struct {
    StandAlone *FiltercriteriaObjectCall `json:"standAlone,omitempty"`
    Condition  *Rateplantype2Condition   `json:"condition,omitempty"`
    Action     *Actionobject             `json:"action,omitempty"`
}
