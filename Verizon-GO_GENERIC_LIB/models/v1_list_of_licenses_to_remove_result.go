/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// V1ListOfLicensesToRemoveResult represents a V1ListOfLicensesToRemoveResult struct.
// List of licenses assigned.
type V1ListOfLicensesToRemoveResult struct {
    // The total number of devices on the cancellation candidate list.
    Count                *int                   `json:"count,omitempty"`
    // The IMEIs of the devices.
    DeviceList           []string               `json:"deviceList,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for V1ListOfLicensesToRemoveResult,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (v V1ListOfLicensesToRemoveResult) String() string {
    return fmt.Sprintf(
    	"V1ListOfLicensesToRemoveResult[Count=%v, DeviceList=%v, AdditionalProperties=%v]",
    	v.Count, v.DeviceList, v.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for V1ListOfLicensesToRemoveResult.
// It customizes the JSON marshaling process for V1ListOfLicensesToRemoveResult objects.
func (v V1ListOfLicensesToRemoveResult) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(v.AdditionalProperties,
        "count", "deviceList"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(v.toMap())
}

// toMap converts the V1ListOfLicensesToRemoveResult object to a map representation for JSON marshaling.
func (v V1ListOfLicensesToRemoveResult) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, v.AdditionalProperties)
    if v.Count != nil {
        structMap["count"] = v.Count
    }
    if v.DeviceList != nil {
        structMap["deviceList"] = v.DeviceList
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for V1ListOfLicensesToRemoveResult.
// It customizes the JSON unmarshaling process for V1ListOfLicensesToRemoveResult objects.
func (v *V1ListOfLicensesToRemoveResult) UnmarshalJSON(input []byte) error {
    var temp tempV1ListOfLicensesToRemoveResult
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "count", "deviceList")
    if err != nil {
    	return err
    }
    v.AdditionalProperties = additionalProperties
    
    v.Count = temp.Count
    v.DeviceList = temp.DeviceList
    return nil
}

// tempV1ListOfLicensesToRemoveResult is a temporary struct used for validating the fields of V1ListOfLicensesToRemoveResult.
type tempV1ListOfLicensesToRemoveResult  struct {
    Count      *int     `json:"count,omitempty"`
    DeviceList []string `json:"deviceList,omitempty"`
}
