/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// Gatewayidentifier represents a Gatewayidentifier struct.
type Gatewayidentifier struct {
    // a unique parent deviceid used to group all Lora sensors. Sensors need parent gateway for connection
    Deviceid             *string                `json:"deviceid,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for Gatewayidentifier,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (g Gatewayidentifier) String() string {
    return fmt.Sprintf(
    	"Gatewayidentifier[Deviceid=%v, AdditionalProperties=%v]",
    	g.Deviceid, g.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for Gatewayidentifier.
// It customizes the JSON marshaling process for Gatewayidentifier objects.
func (g Gatewayidentifier) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(g.AdditionalProperties,
        "deviceid"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(g.toMap())
}

// toMap converts the Gatewayidentifier object to a map representation for JSON marshaling.
func (g Gatewayidentifier) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, g.AdditionalProperties)
    if g.Deviceid != nil {
        structMap["deviceid"] = g.Deviceid
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for Gatewayidentifier.
// It customizes the JSON unmarshaling process for Gatewayidentifier objects.
func (g *Gatewayidentifier) UnmarshalJSON(input []byte) error {
    var temp tempGatewayidentifier
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "deviceid")
    if err != nil {
    	return err
    }
    g.AdditionalProperties = additionalProperties
    
    g.Deviceid = temp.Deviceid
    return nil
}

// tempGatewayidentifier is a temporary struct used for validating the fields of Gatewayidentifier.
type tempGatewayidentifier  struct {
    Deviceid *string `json:"deviceid,omitempty"`
}
