/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "errors"
    "fmt"
    "strings"
)

// FotaV3SuccessResult represents a FotaV3SuccessResult struct.
// Cancelation status.
type FotaV3SuccessResult struct {
    // True or false.
    Success              bool                   `json:"success"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for FotaV3SuccessResult,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (f FotaV3SuccessResult) String() string {
    return fmt.Sprintf(
    	"FotaV3SuccessResult[Success=%v, AdditionalProperties=%v]",
    	f.Success, f.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for FotaV3SuccessResult.
// It customizes the JSON marshaling process for FotaV3SuccessResult objects.
func (f FotaV3SuccessResult) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(f.AdditionalProperties,
        "success"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(f.toMap())
}

// toMap converts the FotaV3SuccessResult object to a map representation for JSON marshaling.
func (f FotaV3SuccessResult) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, f.AdditionalProperties)
    structMap["success"] = f.Success
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for FotaV3SuccessResult.
// It customizes the JSON unmarshaling process for FotaV3SuccessResult objects.
func (f *FotaV3SuccessResult) UnmarshalJSON(input []byte) error {
    var temp tempFotaV3SuccessResult
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    err = temp.validate()
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "success")
    if err != nil {
    	return err
    }
    f.AdditionalProperties = additionalProperties
    
    f.Success = *temp.Success
    return nil
}

// tempFotaV3SuccessResult is a temporary struct used for validating the fields of FotaV3SuccessResult.
type tempFotaV3SuccessResult  struct {
    Success *bool `json:"success"`
}

func (f *tempFotaV3SuccessResult) validate() error {
    var errs []string
    if f.Success == nil {
        errs = append(errs, "required field `success` is missing for type `FotaV3SuccessResult`")
    }
    if len(errs) == 0 {
        return nil
    }
    return errors.New(strings.Join (errs, "\n"))
}
