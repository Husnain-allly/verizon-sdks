/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// AccountLevelObject represents a AccountLevelObject struct.
type AccountLevelObject struct {
    FilterCriteria       *AccountLevelFilter     `json:"filterCriteria,omitempty"`
    Condition            *Rateplantype2Condition `json:"condition,omitempty"`
    // The action taken when trigger conditions are met
    Action               *AccountLevelAction     `json:"action,omitempty"`
    AdditionalProperties map[string]interface{}  `json:"_"`
}

// String implements the fmt.Stringer interface for AccountLevelObject,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (a AccountLevelObject) String() string {
    return fmt.Sprintf(
    	"AccountLevelObject[FilterCriteria=%v, Condition=%v, Action=%v, AdditionalProperties=%v]",
    	a.FilterCriteria, a.Condition, a.Action, a.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for AccountLevelObject.
// It customizes the JSON marshaling process for AccountLevelObject objects.
func (a AccountLevelObject) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(a.AdditionalProperties,
        "filterCriteria", "condition", "action"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(a.toMap())
}

// toMap converts the AccountLevelObject object to a map representation for JSON marshaling.
func (a AccountLevelObject) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, a.AdditionalProperties)
    if a.FilterCriteria != nil {
        structMap["filterCriteria"] = a.FilterCriteria.toMap()
    }
    if a.Condition != nil {
        structMap["condition"] = a.Condition.toMap()
    }
    if a.Action != nil {
        structMap["action"] = a.Action
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for AccountLevelObject.
// It customizes the JSON unmarshaling process for AccountLevelObject objects.
func (a *AccountLevelObject) UnmarshalJSON(input []byte) error {
    var temp tempAccountLevelObject
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "filterCriteria", "condition", "action")
    if err != nil {
    	return err
    }
    a.AdditionalProperties = additionalProperties
    
    a.FilterCriteria = temp.FilterCriteria
    a.Condition = temp.Condition
    a.Action = temp.Action
    return nil
}

// tempAccountLevelObject is a temporary struct used for validating the fields of AccountLevelObject.
type tempAccountLevelObject  struct {
    FilterCriteria *AccountLevelFilter     `json:"filterCriteria,omitempty"`
    Condition      *Rateplantype2Condition `json:"condition,omitempty"`
    Action         *AccountLevelAction     `json:"action,omitempty"`
}
