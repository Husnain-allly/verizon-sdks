/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
    "log"
    "time"
)

// ActionResultwithDeviceConfig represents a ActionResultwithDeviceConfig struct.
type ActionResultwithDeviceConfig struct {
    // Timestamp of the record
    Createdon            *time.Time                       `json:"createdon,omitempty"`
    Description          *string                          `json:"description,omitempty"`
    // This is a UUID value of the device created when the device is onboarded
    Deviceid             *string                          `json:"deviceid,omitempty"`
    // Error message
    Errmsg               *string                          `json:"errmsg,omitempty"`
    Fields               *DtoDeviceActionSetConfiguration `json:"fields,omitempty"`
    // UUID of the ECPD account the user belongs to
    Foreignid            *string                          `json:"foreignid,omitempty"`
    // UUID of the user record, assigned at creation
    Id                   *string                          `json:"id,omitempty"`
    // Timestamp of the record
    Lastupdated          *time.Time                       `json:"lastupdated,omitempty"`
    // The current status of the device or transaction and will be `success` or `failed`
    State                *string                          `json:"state,omitempty"`
    // The system-generated UUID of the transaction
    Transactionid        *string                          `json:"transactionid,omitempty"`
    // The resource version
    Version              *string                          `json:"version,omitempty"`
    // The UUID of the resource version
    Versionid            *string                          `json:"versionid,omitempty"`
    AdditionalProperties map[string]interface{}           `json:"_"`
}

// String implements the fmt.Stringer interface for ActionResultwithDeviceConfig,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (a ActionResultwithDeviceConfig) String() string {
    return fmt.Sprintf(
    	"ActionResultwithDeviceConfig[Createdon=%v, Description=%v, Deviceid=%v, Errmsg=%v, Fields=%v, Foreignid=%v, Id=%v, Lastupdated=%v, State=%v, Transactionid=%v, Version=%v, Versionid=%v, AdditionalProperties=%v]",
    	a.Createdon, a.Description, a.Deviceid, a.Errmsg, a.Fields, a.Foreignid, a.Id, a.Lastupdated, a.State, a.Transactionid, a.Version, a.Versionid, a.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for ActionResultwithDeviceConfig.
// It customizes the JSON marshaling process for ActionResultwithDeviceConfig objects.
func (a ActionResultwithDeviceConfig) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(a.AdditionalProperties,
        "createdon", "description", "deviceid", "errmsg", "fields", "foreignid", "id", "lastupdated", "state", "transactionid", "version", "versionid"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(a.toMap())
}

// toMap converts the ActionResultwithDeviceConfig object to a map representation for JSON marshaling.
func (a ActionResultwithDeviceConfig) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, a.AdditionalProperties)
    if a.Createdon != nil {
        structMap["createdon"] = a.Createdon.Format(time.RFC3339)
    }
    if a.Description != nil {
        structMap["description"] = a.Description
    }
    if a.Deviceid != nil {
        structMap["deviceid"] = a.Deviceid
    }
    if a.Errmsg != nil {
        structMap["errmsg"] = a.Errmsg
    }
    if a.Fields != nil {
        structMap["fields"] = a.Fields.toMap()
    }
    if a.Foreignid != nil {
        structMap["foreignid"] = a.Foreignid
    }
    if a.Id != nil {
        structMap["id"] = a.Id
    }
    if a.Lastupdated != nil {
        structMap["lastupdated"] = a.Lastupdated.Format(time.RFC3339)
    }
    if a.State != nil {
        structMap["state"] = a.State
    }
    if a.Transactionid != nil {
        structMap["transactionid"] = a.Transactionid
    }
    if a.Version != nil {
        structMap["version"] = a.Version
    }
    if a.Versionid != nil {
        structMap["versionid"] = a.Versionid
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for ActionResultwithDeviceConfig.
// It customizes the JSON unmarshaling process for ActionResultwithDeviceConfig objects.
func (a *ActionResultwithDeviceConfig) UnmarshalJSON(input []byte) error {
    var temp tempActionResultwithDeviceConfig
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "createdon", "description", "deviceid", "errmsg", "fields", "foreignid", "id", "lastupdated", "state", "transactionid", "version", "versionid")
    if err != nil {
    	return err
    }
    a.AdditionalProperties = additionalProperties
    
    if temp.Createdon != nil {
        CreatedonVal, err := time.Parse(time.RFC3339, *temp.Createdon)
        if err != nil {
            log.Fatalf("Cannot Parse createdon as % s format.", time.RFC3339)
        }
        a.Createdon = &CreatedonVal
    }
    a.Description = temp.Description
    a.Deviceid = temp.Deviceid
    a.Errmsg = temp.Errmsg
    a.Fields = temp.Fields
    a.Foreignid = temp.Foreignid
    a.Id = temp.Id
    if temp.Lastupdated != nil {
        LastupdatedVal, err := time.Parse(time.RFC3339, *temp.Lastupdated)
        if err != nil {
            log.Fatalf("Cannot Parse lastupdated as % s format.", time.RFC3339)
        }
        a.Lastupdated = &LastupdatedVal
    }
    a.State = temp.State
    a.Transactionid = temp.Transactionid
    a.Version = temp.Version
    a.Versionid = temp.Versionid
    return nil
}

// tempActionResultwithDeviceConfig is a temporary struct used for validating the fields of ActionResultwithDeviceConfig.
type tempActionResultwithDeviceConfig  struct {
    Createdon     *string                          `json:"createdon,omitempty"`
    Description   *string                          `json:"description,omitempty"`
    Deviceid      *string                          `json:"deviceid,omitempty"`
    Errmsg        *string                          `json:"errmsg,omitempty"`
    Fields        *DtoDeviceActionSetConfiguration `json:"fields,omitempty"`
    Foreignid     *string                          `json:"foreignid,omitempty"`
    Id            *string                          `json:"id,omitempty"`
    Lastupdated   *string                          `json:"lastupdated,omitempty"`
    State         *string                          `json:"state,omitempty"`
    Transactionid *string                          `json:"transactionid,omitempty"`
    Version       *string                          `json:"version,omitempty"`
    Versionid     *string                          `json:"versionid,omitempty"`
}
