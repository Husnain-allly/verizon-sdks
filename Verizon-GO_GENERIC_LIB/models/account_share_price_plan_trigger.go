/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// AccountSharePricePlanTrigger represents a AccountSharePricePlanTrigger struct.
type AccountSharePricePlanTrigger struct {
    AccountShare         *AccountShareFilterCriteria `json:"accountShare,omitempty"`
    Condition            *Rateplantype2Condition     `json:"condition,omitempty"`
    // a flag to set if the trigger changes service plans, true, or not, false
    ChangePlan           *bool                       `json:"changePlan,omitempty"`
    // The service plan code to switch to
    ChangePlanDetails    *ChangePlanDetails          `json:"changePlanDetails,omitempty"`
    AdditionalProperties map[string]interface{}      `json:"_"`
}

// String implements the fmt.Stringer interface for AccountSharePricePlanTrigger,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (a AccountSharePricePlanTrigger) String() string {
    return fmt.Sprintf(
    	"AccountSharePricePlanTrigger[AccountShare=%v, Condition=%v, ChangePlan=%v, ChangePlanDetails=%v, AdditionalProperties=%v]",
    	a.AccountShare, a.Condition, a.ChangePlan, a.ChangePlanDetails, a.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for AccountSharePricePlanTrigger.
// It customizes the JSON marshaling process for AccountSharePricePlanTrigger objects.
func (a AccountSharePricePlanTrigger) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(a.AdditionalProperties,
        "accountShare", "condition", "changePlan", "changePlanDetails"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(a.toMap())
}

// toMap converts the AccountSharePricePlanTrigger object to a map representation for JSON marshaling.
func (a AccountSharePricePlanTrigger) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, a.AdditionalProperties)
    if a.AccountShare != nil {
        structMap["accountShare"] = a.AccountShare.toMap()
    }
    if a.Condition != nil {
        structMap["condition"] = a.Condition.toMap()
    }
    if a.ChangePlan != nil {
        structMap["changePlan"] = a.ChangePlan
    }
    if a.ChangePlanDetails != nil {
        structMap["changePlanDetails"] = a.ChangePlanDetails.toMap()
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for AccountSharePricePlanTrigger.
// It customizes the JSON unmarshaling process for AccountSharePricePlanTrigger objects.
func (a *AccountSharePricePlanTrigger) UnmarshalJSON(input []byte) error {
    var temp tempAccountSharePricePlanTrigger
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "accountShare", "condition", "changePlan", "changePlanDetails")
    if err != nil {
    	return err
    }
    a.AdditionalProperties = additionalProperties
    
    a.AccountShare = temp.AccountShare
    a.Condition = temp.Condition
    a.ChangePlan = temp.ChangePlan
    a.ChangePlanDetails = temp.ChangePlanDetails
    return nil
}

// tempAccountSharePricePlanTrigger is a temporary struct used for validating the fields of AccountSharePricePlanTrigger.
type tempAccountSharePricePlanTrigger  struct {
    AccountShare      *AccountShareFilterCriteria `json:"accountShare,omitempty"`
    Condition         *Rateplantype2Condition     `json:"condition,omitempty"`
    ChangePlan        *bool                       `json:"changePlan,omitempty"`
    ChangePlanDetails *ChangePlanDetails          `json:"changePlanDetails,omitempty"`
}
