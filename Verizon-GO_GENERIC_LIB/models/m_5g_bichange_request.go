/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// M5GBichangeRequest represents a M5GBichangeRequest struct.
type M5GBichangeRequest struct {
    AccountName                  *string                        `json:"accountName,omitempty"`
    ServicePlan                  *string                        `json:"servicePlan,omitempty"`
    DeviceListWithServiceAddress []DeviceListWithServiceAddress `json:"deviceListWithServiceAddress,omitempty"`
    CurrentServicePlan           *string                        `json:"currentServicePlan,omitempty"`
    AdditionalProperties         map[string]interface{}         `json:"_"`
}

// String implements the fmt.Stringer interface for M5GBichangeRequest,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (m M5GBichangeRequest) String() string {
    return fmt.Sprintf(
    	"M5GBichangeRequest[AccountName=%v, ServicePlan=%v, DeviceListWithServiceAddress=%v, CurrentServicePlan=%v, AdditionalProperties=%v]",
    	m.AccountName, m.ServicePlan, m.DeviceListWithServiceAddress, m.CurrentServicePlan, m.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for M5GBichangeRequest.
// It customizes the JSON marshaling process for M5GBichangeRequest objects.
func (m M5GBichangeRequest) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(m.AdditionalProperties,
        "accountName", "servicePlan", "deviceListWithServiceAddress", "currentServicePlan"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(m.toMap())
}

// toMap converts the M5GBichangeRequest object to a map representation for JSON marshaling.
func (m M5GBichangeRequest) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, m.AdditionalProperties)
    if m.AccountName != nil {
        structMap["accountName"] = m.AccountName
    }
    if m.ServicePlan != nil {
        structMap["servicePlan"] = m.ServicePlan
    }
    if m.DeviceListWithServiceAddress != nil {
        structMap["deviceListWithServiceAddress"] = m.DeviceListWithServiceAddress
    }
    if m.CurrentServicePlan != nil {
        structMap["currentServicePlan"] = m.CurrentServicePlan
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for M5GBichangeRequest.
// It customizes the JSON unmarshaling process for M5GBichangeRequest objects.
func (m *M5GBichangeRequest) UnmarshalJSON(input []byte) error {
    var temp tempM5GBichangeRequest
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "accountName", "servicePlan", "deviceListWithServiceAddress", "currentServicePlan")
    if err != nil {
    	return err
    }
    m.AdditionalProperties = additionalProperties
    
    m.AccountName = temp.AccountName
    m.ServicePlan = temp.ServicePlan
    m.DeviceListWithServiceAddress = temp.DeviceListWithServiceAddress
    m.CurrentServicePlan = temp.CurrentServicePlan
    return nil
}

// tempM5GBichangeRequest is a temporary struct used for validating the fields of M5GBichangeRequest.
type tempM5GBichangeRequest  struct {
    AccountName                  *string                        `json:"accountName,omitempty"`
    ServicePlan                  *string                        `json:"servicePlan,omitempty"`
    DeviceListWithServiceAddress []DeviceListWithServiceAddress `json:"deviceListWithServiceAddress,omitempty"`
    CurrentServicePlan           *string                        `json:"currentServicePlan,omitempty"`
}
