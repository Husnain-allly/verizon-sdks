/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// AccountLeadsResult represents a AccountLeadsResult struct.
// Returns information for all leads associated with an account.
type AccountLeadsResult struct {
    // False if no more leads.True if there is more data to be retrieved.
    HasMoreData          *bool                  `json:"hasMoreData,omitempty"`
    // The leads associated with an account.
    Leads                []AccountLead          `json:"leads,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for AccountLeadsResult,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (a AccountLeadsResult) String() string {
    return fmt.Sprintf(
    	"AccountLeadsResult[HasMoreData=%v, Leads=%v, AdditionalProperties=%v]",
    	a.HasMoreData, a.Leads, a.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for AccountLeadsResult.
// It customizes the JSON marshaling process for AccountLeadsResult objects.
func (a AccountLeadsResult) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(a.AdditionalProperties,
        "hasMoreData", "leads"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(a.toMap())
}

// toMap converts the AccountLeadsResult object to a map representation for JSON marshaling.
func (a AccountLeadsResult) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, a.AdditionalProperties)
    if a.HasMoreData != nil {
        structMap["hasMoreData"] = a.HasMoreData
    }
    if a.Leads != nil {
        structMap["leads"] = a.Leads
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for AccountLeadsResult.
// It customizes the JSON unmarshaling process for AccountLeadsResult objects.
func (a *AccountLeadsResult) UnmarshalJSON(input []byte) error {
    var temp tempAccountLeadsResult
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "hasMoreData", "leads")
    if err != nil {
    	return err
    }
    a.AdditionalProperties = additionalProperties
    
    a.HasMoreData = temp.HasMoreData
    a.Leads = temp.Leads
    return nil
}

// tempAccountLeadsResult is a temporary struct used for validating the fields of AccountLeadsResult.
type tempAccountLeadsResult  struct {
    HasMoreData *bool         `json:"hasMoreData,omitempty"`
    Leads       []AccountLead `json:"leads,omitempty"`
}
