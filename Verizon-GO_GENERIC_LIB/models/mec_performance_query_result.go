/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// MecPerformanceQueryResult represents a MecPerformanceQueryResult struct.
// Result of the query for obtaining MEC performance metrics.
type MecPerformanceQueryResult struct {
    // Name of the parameter.
    Name                 *string                `json:"name,omitempty"`
    // Parameter values.
    Data                 []string               `json:"data,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for MecPerformanceQueryResult,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (m MecPerformanceQueryResult) String() string {
    return fmt.Sprintf(
    	"MecPerformanceQueryResult[Name=%v, Data=%v, AdditionalProperties=%v]",
    	m.Name, m.Data, m.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for MecPerformanceQueryResult.
// It customizes the JSON marshaling process for MecPerformanceQueryResult objects.
func (m MecPerformanceQueryResult) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(m.AdditionalProperties,
        "name", "data"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(m.toMap())
}

// toMap converts the MecPerformanceQueryResult object to a map representation for JSON marshaling.
func (m MecPerformanceQueryResult) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, m.AdditionalProperties)
    if m.Name != nil {
        structMap["name"] = m.Name
    }
    if m.Data != nil {
        structMap["data"] = m.Data
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for MecPerformanceQueryResult.
// It customizes the JSON unmarshaling process for MecPerformanceQueryResult objects.
func (m *MecPerformanceQueryResult) UnmarshalJSON(input []byte) error {
    var temp tempMecPerformanceQueryResult
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "name", "data")
    if err != nil {
    	return err
    }
    m.AdditionalProperties = additionalProperties
    
    m.Name = temp.Name
    m.Data = temp.Data
    return nil
}

// tempMecPerformanceQueryResult is a temporary struct used for validating the fields of MecPerformanceQueryResult.
type tempMecPerformanceQueryResult  struct {
    Name *string  `json:"name,omitempty"`
    Data []string `json:"data,omitempty"`
}
