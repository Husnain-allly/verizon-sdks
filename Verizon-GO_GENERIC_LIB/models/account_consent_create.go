/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// AccountConsentCreate represents a AccountConsentCreate struct.
type AccountConsentCreate struct {
    // An array of device identifiers
    DeviceList           []interface{}          `json:"deviceList,omitempty"`
    // The numeric name of the account, including leading zeros.
    AccountName          *string                `json:"accountName,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for AccountConsentCreate,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (a AccountConsentCreate) String() string {
    return fmt.Sprintf(
    	"AccountConsentCreate[DeviceList=%v, AccountName=%v, AdditionalProperties=%v]",
    	a.DeviceList, a.AccountName, a.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for AccountConsentCreate.
// It customizes the JSON marshaling process for AccountConsentCreate objects.
func (a AccountConsentCreate) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(a.AdditionalProperties,
        "deviceList", "accountName"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(a.toMap())
}

// toMap converts the AccountConsentCreate object to a map representation for JSON marshaling.
func (a AccountConsentCreate) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, a.AdditionalProperties)
    if a.DeviceList != nil {
        structMap["deviceList"] = a.DeviceList
    }
    if a.AccountName != nil {
        structMap["accountName"] = a.AccountName
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for AccountConsentCreate.
// It customizes the JSON unmarshaling process for AccountConsentCreate objects.
func (a *AccountConsentCreate) UnmarshalJSON(input []byte) error {
    var temp tempAccountConsentCreate
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "deviceList", "accountName")
    if err != nil {
    	return err
    }
    a.AdditionalProperties = additionalProperties
    
    a.DeviceList = temp.DeviceList
    a.AccountName = temp.AccountName
    return nil
}

// tempAccountConsentCreate is a temporary struct used for validating the fields of AccountConsentCreate.
type tempAccountConsentCreate  struct {
    DeviceList  []interface{} `json:"deviceList,omitempty"`
    AccountName *string       `json:"accountName,omitempty"`
}
