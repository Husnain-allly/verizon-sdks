/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "errors"
    "fmt"
    "strings"
)

// CallbackCreated represents a CallbackCreated struct.
type CallbackCreated struct {
    // The billing account number for which callback messages will be sent.
    Aname                string                 `json:"aname"`
    // The name of the callback service, which identifies the type and format of messages that will be sent to the registered URL.
    Name                 string                 `json:"name"`
    // The address of the callback listening service where the ThingSpace Platform will send callback messages for the service type.
    Url                  *string                `json:"url,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for CallbackCreated,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (c CallbackCreated) String() string {
    return fmt.Sprintf(
    	"CallbackCreated[Aname=%v, Name=%v, Url=%v, AdditionalProperties=%v]",
    	c.Aname, c.Name, c.Url, c.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for CallbackCreated.
// It customizes the JSON marshaling process for CallbackCreated objects.
func (c CallbackCreated) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(c.AdditionalProperties,
        "aname", "name", "url"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(c.toMap())
}

// toMap converts the CallbackCreated object to a map representation for JSON marshaling.
func (c CallbackCreated) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, c.AdditionalProperties)
    structMap["aname"] = c.Aname
    structMap["name"] = c.Name
    if c.Url != nil {
        structMap["url"] = c.Url
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for CallbackCreated.
// It customizes the JSON unmarshaling process for CallbackCreated objects.
func (c *CallbackCreated) UnmarshalJSON(input []byte) error {
    var temp tempCallbackCreated
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    err = temp.validate()
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "aname", "name", "url")
    if err != nil {
    	return err
    }
    c.AdditionalProperties = additionalProperties
    
    c.Aname = *temp.Aname
    c.Name = *temp.Name
    c.Url = temp.Url
    return nil
}

// tempCallbackCreated is a temporary struct used for validating the fields of CallbackCreated.
type tempCallbackCreated  struct {
    Aname *string `json:"aname"`
    Name  *string `json:"name"`
    Url   *string `json:"url,omitempty"`
}

func (c *tempCallbackCreated) validate() error {
    var errs []string
    if c.Aname == nil {
        errs = append(errs, "required field `aname` is missing for type `CallbackCreated`")
    }
    if c.Name == nil {
        errs = append(errs, "required field `name` is missing for type `CallbackCreated`")
    }
    if len(errs) == 0 {
        return nil
    }
    return errors.New(strings.Join (errs, "\n"))
}
