/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// HistorySearchFilterAttributes represents a HistorySearchFilterAttributes struct.
// Streaming RF parameters for which you want to retrieve history data.
type HistorySearchFilterAttributes struct {
    // Attribute identifier.
    Name                 *AttributeIdentifier   `json:"name,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for HistorySearchFilterAttributes,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (h HistorySearchFilterAttributes) String() string {
    return fmt.Sprintf(
    	"HistorySearchFilterAttributes[Name=%v, AdditionalProperties=%v]",
    	h.Name, h.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for HistorySearchFilterAttributes.
// It customizes the JSON marshaling process for HistorySearchFilterAttributes objects.
func (h HistorySearchFilterAttributes) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(h.AdditionalProperties,
        "name"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(h.toMap())
}

// toMap converts the HistorySearchFilterAttributes object to a map representation for JSON marshaling.
func (h HistorySearchFilterAttributes) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, h.AdditionalProperties)
    if h.Name != nil {
        structMap["name"] = h.Name
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for HistorySearchFilterAttributes.
// It customizes the JSON unmarshaling process for HistorySearchFilterAttributes objects.
func (h *HistorySearchFilterAttributes) UnmarshalJSON(input []byte) error {
    var temp tempHistorySearchFilterAttributes
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "name")
    if err != nil {
    	return err
    }
    h.AdditionalProperties = additionalProperties
    
    h.Name = temp.Name
    return nil
}

// tempHistorySearchFilterAttributes is a temporary struct used for validating the fields of HistorySearchFilterAttributes.
type tempHistorySearchFilterAttributes  struct {
    Name *AttributeIdentifier `json:"name,omitempty"`
}
