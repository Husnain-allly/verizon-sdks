/*
Package verizon

This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
*/
package models

import (
    "encoding/json"
    "fmt"
)

// KpiInfo represents a KpiInfo struct.
// KPI Info Object
type KpiInfo struct {
    Name                 *string                `json:"name,omitempty"`
    Value                *string                `json:"value,omitempty"`
    NodeName             *string                `json:"nodeName,omitempty"`
    NodeType             *string                `json:"nodeType,omitempty"`
    Description          *string                `json:"description,omitempty"`
    Unit                 *string                `json:"unit,omitempty"`
    Category             *string                `json:"category,omitempty"`
    TimeOfLastUpdate     *string                `json:"timeOfLastUpdate,omitempty"`
    AdditionalProperties map[string]interface{} `json:"_"`
}

// String implements the fmt.Stringer interface for KpiInfo,
// providing a human-readable string representation useful for logging, debugging or displaying information.
func (k KpiInfo) String() string {
    return fmt.Sprintf(
    	"KpiInfo[Name=%v, Value=%v, NodeName=%v, NodeType=%v, Description=%v, Unit=%v, Category=%v, TimeOfLastUpdate=%v, AdditionalProperties=%v]",
    	k.Name, k.Value, k.NodeName, k.NodeType, k.Description, k.Unit, k.Category, k.TimeOfLastUpdate, k.AdditionalProperties)
}

// MarshalJSON implements the json.Marshaler interface for KpiInfo.
// It customizes the JSON marshaling process for KpiInfo objects.
func (k KpiInfo) MarshalJSON() (
    []byte,
    error) {
    if err := DetectConflictingProperties(k.AdditionalProperties,
        "name", "value", "nodeName", "nodeType", "description", "unit", "category", "timeOfLastUpdate"); err != nil {
        return []byte{}, err
    }
    return json.Marshal(k.toMap())
}

// toMap converts the KpiInfo object to a map representation for JSON marshaling.
func (k KpiInfo) toMap() map[string]any {
    structMap := make(map[string]any)
    MergeAdditionalProperties(structMap, k.AdditionalProperties)
    if k.Name != nil {
        structMap["name"] = k.Name
    }
    if k.Value != nil {
        structMap["value"] = k.Value
    }
    if k.NodeName != nil {
        structMap["nodeName"] = k.NodeName
    }
    if k.NodeType != nil {
        structMap["nodeType"] = k.NodeType
    }
    if k.Description != nil {
        structMap["description"] = k.Description
    }
    if k.Unit != nil {
        structMap["unit"] = k.Unit
    }
    if k.Category != nil {
        structMap["category"] = k.Category
    }
    if k.TimeOfLastUpdate != nil {
        structMap["timeOfLastUpdate"] = k.TimeOfLastUpdate
    }
    return structMap
}

// UnmarshalJSON implements the json.Unmarshaler interface for KpiInfo.
// It customizes the JSON unmarshaling process for KpiInfo objects.
func (k *KpiInfo) UnmarshalJSON(input []byte) error {
    var temp tempKpiInfo
    err := json.Unmarshal(input, &temp)
    if err != nil {
    	return err
    }
    additionalProperties, err := ExtractAdditionalProperties[interface{}](input, "name", "value", "nodeName", "nodeType", "description", "unit", "category", "timeOfLastUpdate")
    if err != nil {
    	return err
    }
    k.AdditionalProperties = additionalProperties
    
    k.Name = temp.Name
    k.Value = temp.Value
    k.NodeName = temp.NodeName
    k.NodeType = temp.NodeType
    k.Description = temp.Description
    k.Unit = temp.Unit
    k.Category = temp.Category
    k.TimeOfLastUpdate = temp.TimeOfLastUpdate
    return nil
}

// tempKpiInfo is a temporary struct used for validating the fields of KpiInfo.
type tempKpiInfo  struct {
    Name             *string `json:"name,omitempty"`
    Value            *string `json:"value,omitempty"`
    NodeName         *string `json:"nodeName,omitempty"`
    NodeType         *string `json:"nodeType,omitempty"`
    Description      *string `json:"description,omitempty"`
    Unit             *string `json:"unit,omitempty"`
    Category         *string `json:"category,omitempty"`
    TimeOfLastUpdate *string `json:"timeOfLastUpdate,omitempty"`
}
