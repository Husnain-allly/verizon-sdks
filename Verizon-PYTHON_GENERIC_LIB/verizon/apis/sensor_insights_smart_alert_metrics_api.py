# -*- coding: utf-8 -*-

"""
verizon

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""

from verizon.api_helper import APIHelper
from verizon.configuration import Server
from verizon.http.api_response import ApiResponse
from verizon.apis.base_api import BaseApi
from apimatic_core.request_builder import RequestBuilder
from apimatic_core.response_handler import ResponseHandler
from apimatic_core.types.parameter import Parameter
from verizon.http.http_method_enum import HttpMethodEnum
from apimatic_core.authentication.multiple.single_auth import Single
from apimatic_core.authentication.multiple.and_auth_group import And
from verizon.models.dto_query_metrics_response import DtoQueryMetricsResponse
from verizon.exceptions.m_400_management_error_exception import M400ManagementErrorException
from verizon.exceptions.management_error_exception import ManagementErrorException
from verizon.exceptions.m_403_management_error_exception import M403ManagementErrorException
from verizon.exceptions.m_500_management_error_exception import M500ManagementErrorException


class SensorInsightsSmartAlertMetricsApi(BaseApi):

    """A Controller to access Endpoints in the verizon API."""
    def __init__(self, config):
        super(SensorInsightsSmartAlertMetricsApi, self).__init__(config)

    def sensorinsightsmetricsquery(self,
                                   body):
        """Does a POST request to /dm/v1/smartAlerts/actions/metrics.

        Get Device Alerts for the most recent daily period, up to 30 days.

        Args:
            body (DtoQueryMetrics): Daily period requested, up to 30 days.

        Returns:
            ApiResponse: An object with the response value as well as other
                useful information such as status codes and headers. OK

        Raises:
            ApiException: When an error occurs while fetching the data from
                the remote API. This exception includes the HTTP Response
                code, an error message, and the HTTP body that was received in
                the request.

        """

        return super().new_api_call_builder.request(
            RequestBuilder().server(Server.THINGSPACE)
            .path('/dm/v1/smartAlerts/actions/metrics')
            .http_method(HttpMethodEnum.POST)
            .header_param(Parameter()
                          .key('Content-Type')
                          .value('application/json'))
            .body_param(Parameter()
                        .value(body)
                        .is_required(True))
            .header_param(Parameter()
                          .key('accept')
                          .value('application/json'))
            .body_serializer(APIHelper.json_serialize)
            .auth(And(Single('thingspace_oauth'), Single('VZ-M2M-Token')))
        ).response(
            ResponseHandler()
            .deserializer(APIHelper.json_deserialize)
            .deserialize_into(DtoQueryMetricsResponse.from_dictionary)
            .is_api_response(True)
            .local_error('400', 'Bad Request', M400ManagementErrorException)
            .local_error('401', 'UnAuthorized', ManagementErrorException)
            .local_error('403', 'Forbidden', M403ManagementErrorException)
            .local_error('500', 'Internal server error.', M500ManagementErrorException)
        ).execute()
