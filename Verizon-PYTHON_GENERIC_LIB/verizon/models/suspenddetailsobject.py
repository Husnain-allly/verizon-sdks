# -*- coding: utf-8 -*-

"""
verizon

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from verizon.api_helper import APIHelper


class Suspenddetailsobject(object):

    """Implementation of the 'suspenddetailsobject' model.

    Attributes:
        suspend_from_accounts (List[str]): The model property of type
            List[str].
        suspend_duration (int): The model property of type int.
        suspend_option (str): The model property of type str.
        threshold (int): The threshold value the trigger monitors for
        threshold_unit (ThresholdUnit): The units of the threshold. This can
            be KB, Kilobits, MB, Megabits, or GB, Gigabits
        additional_properties (Dict[str, Any]): The additional properties for
            the model.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "suspend_from_accounts": 'suspendFromAccounts',
        "suspend_duration": 'suspendDuration',
        "suspend_option": 'suspendOption',
        "threshold": 'threshold',
        "threshold_unit": 'thresholdUnit'
    }

    _optionals = [
        'suspend_from_accounts',
        'suspend_duration',
        'suspend_option',
        'threshold',
        'threshold_unit',
    ]

    def __init__(self,
                 suspend_from_accounts=APIHelper.SKIP,
                 suspend_duration=APIHelper.SKIP,
                 suspend_option=APIHelper.SKIP,
                 threshold=APIHelper.SKIP,
                 threshold_unit=APIHelper.SKIP,
                 additional_properties=None):
        """Constructor for the Suspenddetailsobject class"""

        # Initialize members of the class
        if suspend_from_accounts is not APIHelper.SKIP:
            self.suspend_from_accounts = suspend_from_accounts 
        if suspend_duration is not APIHelper.SKIP:
            self.suspend_duration = suspend_duration 
        if suspend_option is not APIHelper.SKIP:
            self.suspend_option = suspend_option 
        if threshold is not APIHelper.SKIP:
            self.threshold = threshold 
        if threshold_unit is not APIHelper.SKIP:
            self.threshold_unit = threshold_unit 

        # Add additional model properties to the instance
        if additional_properties is None:
            additional_properties = {}
        self.additional_properties = additional_properties

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        suspend_from_accounts = dictionary.get("suspendFromAccounts") if dictionary.get("suspendFromAccounts") else APIHelper.SKIP
        suspend_duration = dictionary.get("suspendDuration") if dictionary.get("suspendDuration") else APIHelper.SKIP
        suspend_option = dictionary.get("suspendOption") if dictionary.get("suspendOption") else APIHelper.SKIP
        threshold = dictionary.get("threshold") if dictionary.get("threshold") else APIHelper.SKIP
        threshold_unit = dictionary.get("thresholdUnit") if dictionary.get("thresholdUnit") else APIHelper.SKIP
        additional_properties = APIHelper.get_additional_properties(
            dictionary={k: v for k, v in dictionary.items() if k not in cls._names.values()},
            unboxing_function=lambda value: value)
        # Return an object of this model
        return cls(suspend_from_accounts,
                   suspend_duration,
                   suspend_option,
                   threshold,
                   threshold_unit,
                   additional_properties)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'suspend_from_accounts={(self.suspend_from_accounts if hasattr(self, "suspend_from_accounts") else None)!r}, '
                f'suspend_duration={(self.suspend_duration if hasattr(self, "suspend_duration") else None)!r}, '
                f'suspend_option={(self.suspend_option if hasattr(self, "suspend_option") else None)!r}, '
                f'threshold={(self.threshold if hasattr(self, "threshold") else None)!r}, '
                f'threshold_unit={(self.threshold_unit if hasattr(self, "threshold_unit") else None)!r}, '
                f'additional_properties={self.additional_properties!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'suspend_from_accounts={(self.suspend_from_accounts if hasattr(self, "suspend_from_accounts") else None)!s}, '
                f'suspend_duration={(self.suspend_duration if hasattr(self, "suspend_duration") else None)!s}, '
                f'suspend_option={(self.suspend_option if hasattr(self, "suspend_option") else None)!s}, '
                f'threshold={(self.threshold if hasattr(self, "threshold") else None)!s}, '
                f'threshold_unit={(self.threshold_unit if hasattr(self, "threshold_unit") else None)!s}, '
                f'additional_properties={self.additional_properties!s})')
