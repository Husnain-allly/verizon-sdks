# -*- coding: utf-8 -*-

"""
verizon

This file was automatically generated by APIMATIC v3.0 (
 https://www.apimatic.io ).
"""
from verizon.api_helper import APIHelper
from verizon.models.group_name import GroupName
from verizon.models.m_5g_bi_carrier_information import M5GBiCarrierInformation
from verizon.models.m_5g_bidevice_id_1 import M5GBideviceId1
from verizon.models.m_5g_bikey_value_1 import M5GBikeyValue1


class M5GBiaccountNameobject(object):

    """Implementation of the '5gbiaccountNameobject' model.

    Attributes:
        account_name (str): The model property of type str.
        billing_cycle_end_date (str): The model property of type str.
        carrier_information (List[M5GBiCarrierInformation]): The model
            property of type List[M5GBiCarrierInformation].
        connected (bool): The model property of type bool.
        created_at (str): The model property of type str.
        custom_fields (List[M5GBikeyValue1]): The model property of type
            List[M5GBikeyValue1].
        device_ids (List[M5GBideviceId1]): The model property of type
            List[M5GBideviceId1].
        extended_attributes (List[M5GBikeyValue1]): The model property of type
            List[M5GBikeyValue1].
        group_names (List[GroupName]): The model property of type
            List[GroupName].
        ipaddress (str): The model property of type str.
        last_activation_by (str): The model property of type str.
        last_activation_date (str): The model property of type str.
        additional_properties (Dict[str, Any]): The additional properties for
            the model.

    """

    # Create a mapping from Model property names to API property names
    _names = {
        "account_name": 'accountName',
        "billing_cycle_end_date": 'billingCycleEndDate',
        "carrier_information": 'carrierInformation',
        "connected": 'connected',
        "created_at": 'createdAt',
        "custom_fields": 'customFields',
        "device_ids": 'deviceIds',
        "extended_attributes": 'extendedAttributes',
        "group_names": 'groupNames',
        "ipaddress": 'ipAddress',
        "last_activation_by": 'lastActivationBy',
        "last_activation_date": 'lastActivationDate'
    }

    _optionals = [
        'account_name',
        'billing_cycle_end_date',
        'carrier_information',
        'connected',
        'created_at',
        'custom_fields',
        'device_ids',
        'extended_attributes',
        'group_names',
        'ipaddress',
        'last_activation_by',
        'last_activation_date',
    ]

    def __init__(self,
                 account_name=APIHelper.SKIP,
                 billing_cycle_end_date=APIHelper.SKIP,
                 carrier_information=APIHelper.SKIP,
                 connected=APIHelper.SKIP,
                 created_at=APIHelper.SKIP,
                 custom_fields=APIHelper.SKIP,
                 device_ids=APIHelper.SKIP,
                 extended_attributes=APIHelper.SKIP,
                 group_names=APIHelper.SKIP,
                 ipaddress=APIHelper.SKIP,
                 last_activation_by=APIHelper.SKIP,
                 last_activation_date=APIHelper.SKIP,
                 additional_properties=None):
        """Constructor for the M5GBiaccountNameobject class"""

        # Initialize members of the class
        if account_name is not APIHelper.SKIP:
            self.account_name = account_name 
        if billing_cycle_end_date is not APIHelper.SKIP:
            self.billing_cycle_end_date = billing_cycle_end_date 
        if carrier_information is not APIHelper.SKIP:
            self.carrier_information = carrier_information 
        if connected is not APIHelper.SKIP:
            self.connected = connected 
        if created_at is not APIHelper.SKIP:
            self.created_at = created_at 
        if custom_fields is not APIHelper.SKIP:
            self.custom_fields = custom_fields 
        if device_ids is not APIHelper.SKIP:
            self.device_ids = device_ids 
        if extended_attributes is not APIHelper.SKIP:
            self.extended_attributes = extended_attributes 
        if group_names is not APIHelper.SKIP:
            self.group_names = group_names 
        if ipaddress is not APIHelper.SKIP:
            self.ipaddress = ipaddress 
        if last_activation_by is not APIHelper.SKIP:
            self.last_activation_by = last_activation_by 
        if last_activation_date is not APIHelper.SKIP:
            self.last_activation_date = last_activation_date 

        # Add additional model properties to the instance
        if additional_properties is None:
            additional_properties = {}
        self.additional_properties = additional_properties

    @classmethod
    def from_dictionary(cls,
                        dictionary):
        """Creates an instance of this model from a dictionary

        Args:
            dictionary (dictionary): A dictionary representation of the object
            as obtained from the deserialization of the server's response. The
            keys MUST match property names in the API description.

        Returns:
            object: An instance of this structure class.

        """

        if not isinstance(dictionary, dict) or dictionary is None:
            return None

        # Extract variables from the dictionary
        account_name = dictionary.get("accountName") if dictionary.get("accountName") else APIHelper.SKIP
        billing_cycle_end_date = dictionary.get("billingCycleEndDate") if dictionary.get("billingCycleEndDate") else APIHelper.SKIP
        carrier_information = None
        if dictionary.get('carrierInformation') is not None:
            carrier_information = [M5GBiCarrierInformation.from_dictionary(x) for x in dictionary.get('carrierInformation')]
        else:
            carrier_information = APIHelper.SKIP
        connected = dictionary.get("connected") if "connected" in dictionary.keys() else APIHelper.SKIP
        created_at = dictionary.get("createdAt") if dictionary.get("createdAt") else APIHelper.SKIP
        custom_fields = None
        if dictionary.get('customFields') is not None:
            custom_fields = [M5GBikeyValue1.from_dictionary(x) for x in dictionary.get('customFields')]
        else:
            custom_fields = APIHelper.SKIP
        device_ids = None
        if dictionary.get('deviceIds') is not None:
            device_ids = [M5GBideviceId1.from_dictionary(x) for x in dictionary.get('deviceIds')]
        else:
            device_ids = APIHelper.SKIP
        extended_attributes = None
        if dictionary.get('extendedAttributes') is not None:
            extended_attributes = [M5GBikeyValue1.from_dictionary(x) for x in dictionary.get('extendedAttributes')]
        else:
            extended_attributes = APIHelper.SKIP
        group_names = None
        if dictionary.get('groupNames') is not None:
            group_names = [GroupName.from_dictionary(x) for x in dictionary.get('groupNames')]
        else:
            group_names = APIHelper.SKIP
        ipaddress = dictionary.get("ipAddress") if dictionary.get("ipAddress") else APIHelper.SKIP
        last_activation_by = dictionary.get("lastActivationBy") if dictionary.get("lastActivationBy") else APIHelper.SKIP
        last_activation_date = dictionary.get("lastActivationDate") if dictionary.get("lastActivationDate") else APIHelper.SKIP
        additional_properties = APIHelper.get_additional_properties(
            dictionary={k: v for k, v in dictionary.items() if k not in cls._names.values()},
            unboxing_function=lambda value: value)
        # Return an object of this model
        return cls(account_name,
                   billing_cycle_end_date,
                   carrier_information,
                   connected,
                   created_at,
                   custom_fields,
                   device_ids,
                   extended_attributes,
                   group_names,
                   ipaddress,
                   last_activation_by,
                   last_activation_date,
                   additional_properties)

    def __repr__(self):
        return (f'{self.__class__.__name__}('
                f'account_name={(self.account_name if hasattr(self, "account_name") else None)!r}, '
                f'billing_cycle_end_date={(self.billing_cycle_end_date if hasattr(self, "billing_cycle_end_date") else None)!r}, '
                f'carrier_information={(self.carrier_information if hasattr(self, "carrier_information") else None)!r}, '
                f'connected={(self.connected if hasattr(self, "connected") else None)!r}, '
                f'created_at={(self.created_at if hasattr(self, "created_at") else None)!r}, '
                f'custom_fields={(self.custom_fields if hasattr(self, "custom_fields") else None)!r}, '
                f'device_ids={(self.device_ids if hasattr(self, "device_ids") else None)!r}, '
                f'extended_attributes={(self.extended_attributes if hasattr(self, "extended_attributes") else None)!r}, '
                f'group_names={(self.group_names if hasattr(self, "group_names") else None)!r}, '
                f'ipaddress={(self.ipaddress if hasattr(self, "ipaddress") else None)!r}, '
                f'last_activation_by={(self.last_activation_by if hasattr(self, "last_activation_by") else None)!r}, '
                f'last_activation_date={(self.last_activation_date if hasattr(self, "last_activation_date") else None)!r}, '
                f'additional_properties={self.additional_properties!r})')

    def __str__(self):
        return (f'{self.__class__.__name__}('
                f'account_name={(self.account_name if hasattr(self, "account_name") else None)!s}, '
                f'billing_cycle_end_date={(self.billing_cycle_end_date if hasattr(self, "billing_cycle_end_date") else None)!s}, '
                f'carrier_information={(self.carrier_information if hasattr(self, "carrier_information") else None)!s}, '
                f'connected={(self.connected if hasattr(self, "connected") else None)!s}, '
                f'created_at={(self.created_at if hasattr(self, "created_at") else None)!s}, '
                f'custom_fields={(self.custom_fields if hasattr(self, "custom_fields") else None)!s}, '
                f'device_ids={(self.device_ids if hasattr(self, "device_ids") else None)!s}, '
                f'extended_attributes={(self.extended_attributes if hasattr(self, "extended_attributes") else None)!s}, '
                f'group_names={(self.group_names if hasattr(self, "group_names") else None)!s}, '
                f'ipaddress={(self.ipaddress if hasattr(self, "ipaddress") else None)!s}, '
                f'last_activation_by={(self.last_activation_by if hasattr(self, "last_activation_by") else None)!s}, '
                f'last_activation_date={(self.last_activation_date if hasattr(self, "last_activation_date") else None)!s}, '
                f'additional_properties={self.additional_properties!s})')
