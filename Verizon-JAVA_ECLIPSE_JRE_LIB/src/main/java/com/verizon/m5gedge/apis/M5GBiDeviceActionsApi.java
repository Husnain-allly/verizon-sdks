/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.apis;

import com.verizon.m5gedge.ApiHelper;
import com.verizon.m5gedge.Server;
import com.verizon.m5gedge.exceptions.ApiException;
import com.verizon.m5gedge.exceptions.M5GBiRestErrorResponseException;
import com.verizon.m5gedge.http.request.HttpMethod;
import com.verizon.m5gedge.http.response.ApiResponse;
import com.verizon.m5gedge.models.M5GBiRequestResponse;
import com.verizon.m5gedge.models.M5GBiactivateRequest;
import com.verizon.m5gedge.models.M5GBichangeRequest;
import com.verizon.m5gedge.models.M5GBideviceDetailsresponse;
import com.verizon.m5gedge.models.M5GBideviceId;
import io.apimatic.core.ApiCall;
import io.apimatic.core.ErrorCase;
import io.apimatic.core.GlobalConfiguration;
import io.apimatic.coreinterfaces.http.request.ResponseClassType;
import java.io.IOException;
import java.util.concurrent.CompletableFuture;
import java.util.concurrent.CompletionException;

/**
 * This class lists all the endpoints of the groups.
 */
public final class M5GBiDeviceActionsApi extends BaseApi {

    /**
     * Initializes the controller.
     * @param globalConfig    Configurations added in client.
     */
    public M5GBiDeviceActionsApi(GlobalConfiguration globalConfig) {
        super(globalConfig);
    }

    /**
     * Uses the decive's Integrated Circuit Card Identification Number (ICCID) to retrive and
     * display the device's properties.
     * @param  body  Required parameter: Device Profile Query
     * @return    Returns the M5GBideviceDetailsresponse wrapped in ApiResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    public ApiResponse<M5GBideviceDetailsresponse> businessInternetlistDeviceInformation(
            final M5GBideviceId body) throws ApiException, IOException {
        return prepareBusinessInternetlistDeviceInformationRequest(body).execute();
    }

    /**
     * Uses the decive's Integrated Circuit Card Identification Number (ICCID) to retrive and
     * display the device's properties.
     * @param  body  Required parameter: Device Profile Query
     * @return    Returns the M5GBideviceDetailsresponse wrapped in ApiResponse response from the API call
     */
    public CompletableFuture<ApiResponse<M5GBideviceDetailsresponse>> businessInternetlistDeviceInformationAsync(
            final M5GBideviceId body) {
        try {
            return prepareBusinessInternetlistDeviceInformationRequest(body).executeAsync();
        } catch (Exception e) {
            throw new CompletionException(e);
        }
    }

    /**
     * Builds the ApiCall object for businessInternetlistDeviceInformation.
     */
    private ApiCall<ApiResponse<M5GBideviceDetailsresponse>, ApiException> prepareBusinessInternetlistDeviceInformationRequest(
            final M5GBideviceId body) {
        return new ApiCall.Builder<ApiResponse<M5GBideviceDetailsresponse>, ApiException>()
                .globalConfig(getGlobalConfiguration())
                .requestBuilder(requestBuilder -> requestBuilder
                        .server(Server.THINGSPACE.value())
                        .path("/actions/list")
                        .bodyParam(param -> param.value(body))
                        .bodySerializer(() ->  ApiHelper.serialize(body))
                        .headerParam(param -> param.key("Content-Type")
                                .value("application/json").isRequired(false))
                        .headerParam(param -> param.key("accept").value("application/json"))
                        .withAuth(auth -> auth
                                .or(orAuth -> orAuth
                                        .add("thingspace_oauth")
                                        .add("VZ-M2M-Token")))
                        .httpMethod(HttpMethod.POST))
                .responseHandler(responseHandler -> responseHandler
                        .responseClassType(ResponseClassType.API_RESPONSE)
                        .apiResponseDeserializer(
                                response -> ApiHelper.deserialize(response, M5GBideviceDetailsresponse.class))
                        .nullify404(false)
                        .localErrorCase(ErrorCase.DEFAULT,
                                 ErrorCase.setReason("Error response",
                                (reason, context) -> new M5GBiRestErrorResponseException(reason, context)))
                        .globalErrorCase(GLOBAL_ERROR_CASES))
                .build();
    }

    /**
     * Uses the device's ICCID and IMEI to activate service.
     * @param  body  Required parameter: Activate 5G BI service. Defining
     *         &lt;code&gt;publicIpRestriction&lt;/code&gt; as "Unrestricted" or "Restricted" is
     *         required for activating as Public Static. Leave
     *         &lt;code&gt;publicIpRestriction&lt;/code&gt; undefined to activate as Public Dynamic.
     *         Removing &lt;code&gt;publicIpRestriction&lt;/code&gt; from the request will activate
     *         as Mobile Private Network (MPN).
     * @return    Returns the M5GBiRequestResponse wrapped in ApiResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    public ApiResponse<M5GBiRequestResponse> businessInternetactivateUsingPost(
            final M5GBiactivateRequest body) throws ApiException, IOException {
        return prepareBusinessInternetactivateUsingPostRequest(body).execute();
    }

    /**
     * Uses the device's ICCID and IMEI to activate service.
     * @param  body  Required parameter: Activate 5G BI service. Defining
     *         &lt;code&gt;publicIpRestriction&lt;/code&gt; as "Unrestricted" or "Restricted" is
     *         required for activating as Public Static. Leave
     *         &lt;code&gt;publicIpRestriction&lt;/code&gt; undefined to activate as Public Dynamic.
     *         Removing &lt;code&gt;publicIpRestriction&lt;/code&gt; from the request will activate
     *         as Mobile Private Network (MPN).
     * @return    Returns the M5GBiRequestResponse wrapped in ApiResponse response from the API call
     */
    public CompletableFuture<ApiResponse<M5GBiRequestResponse>> businessInternetactivateUsingPostAsync(
            final M5GBiactivateRequest body) {
        try {
            return prepareBusinessInternetactivateUsingPostRequest(body).executeAsync();
        } catch (Exception e) {
            throw new CompletionException(e);
        }
    }

    /**
     * Builds the ApiCall object for businessInternetactivateUsingPost.
     */
    private ApiCall<ApiResponse<M5GBiRequestResponse>, ApiException> prepareBusinessInternetactivateUsingPostRequest(
            final M5GBiactivateRequest body) {
        return new ApiCall.Builder<ApiResponse<M5GBiRequestResponse>, ApiException>()
                .globalConfig(getGlobalConfiguration())
                .requestBuilder(requestBuilder -> requestBuilder
                        .server(Server.THINGSPACE.value())
                        .path("/actions/activate")
                        .bodyParam(param -> param.value(body))
                        .bodySerializer(() ->  ApiHelper.serialize(body))
                        .headerParam(param -> param.key("Content-Type")
                                .value("application/json").isRequired(false))
                        .headerParam(param -> param.key("accept").value("application/json"))
                        .withAuth(auth -> auth
                                .or(orAuth -> orAuth
                                        .add("thingspace_oauth")
                                        .add("VZ-M2M-Token")))
                        .httpMethod(HttpMethod.POST))
                .responseHandler(responseHandler -> responseHandler
                        .responseClassType(ResponseClassType.API_RESPONSE)
                        .apiResponseDeserializer(
                                response -> ApiHelper.deserialize(response, M5GBiRequestResponse.class))
                        .nullify404(false)
                        .localErrorCase(ErrorCase.DEFAULT,
                                 ErrorCase.setReason("Error response",
                                (reason, context) -> new M5GBiRestErrorResponseException(reason, context)))
                        .globalErrorCase(GLOBAL_ERROR_CASES))
                .build();
    }

    /**
     * Change a device's service plan to use 5G BI.
     * @param  body  Required parameter: This endpoint is for use when changing a device's service
     *         plan to a 5G BI service plan. The service plan can change for an active device up to
     *         four times per month but will require address validation for each change. The service
     *         plan cannot be changed for a device while its service is suspended.
     * @return    Returns the M5GBiRequestResponse wrapped in ApiResponse response from the API call
     * @throws    ApiException    Represents error response from the server.
     * @throws    IOException    Signals that an I/O exception of some sort has occurred.
     */
    public ApiResponse<M5GBiRequestResponse> businessInternetServiceplanchange(
            final M5GBichangeRequest body) throws ApiException, IOException {
        return prepareBusinessInternetServiceplanchangeRequest(body).execute();
    }

    /**
     * Change a device's service plan to use 5G BI.
     * @param  body  Required parameter: This endpoint is for use when changing a device's service
     *         plan to a 5G BI service plan. The service plan can change for an active device up to
     *         four times per month but will require address validation for each change. The service
     *         plan cannot be changed for a device while its service is suspended.
     * @return    Returns the M5GBiRequestResponse wrapped in ApiResponse response from the API call
     */
    public CompletableFuture<ApiResponse<M5GBiRequestResponse>> businessInternetServiceplanchangeAsync(
            final M5GBichangeRequest body) {
        try {
            return prepareBusinessInternetServiceplanchangeRequest(body).executeAsync();
        } catch (Exception e) {
            throw new CompletionException(e);
        }
    }

    /**
     * Builds the ApiCall object for businessInternetServiceplanchange.
     */
    private ApiCall<ApiResponse<M5GBiRequestResponse>, ApiException> prepareBusinessInternetServiceplanchangeRequest(
            final M5GBichangeRequest body) {
        return new ApiCall.Builder<ApiResponse<M5GBiRequestResponse>, ApiException>()
                .globalConfig(getGlobalConfiguration())
                .requestBuilder(requestBuilder -> requestBuilder
                        .server(Server.THINGSPACE.value())
                        .path("/actions/plan")
                        .bodyParam(param -> param.value(body))
                        .bodySerializer(() ->  ApiHelper.serialize(body))
                        .headerParam(param -> param.key("Content-Type")
                                .value("application/json").isRequired(false))
                        .headerParam(param -> param.key("accept").value("application/json"))
                        .withAuth(auth -> auth
                                .or(orAuth -> orAuth
                                        .add("thingspace_oauth")
                                        .add("VZ-M2M-Token")))
                        .httpMethod(HttpMethod.PUT))
                .responseHandler(responseHandler -> responseHandler
                        .responseClassType(ResponseClassType.API_RESPONSE)
                        .apiResponseDeserializer(
                                response -> ApiHelper.deserialize(response, M5GBiRequestResponse.class))
                        .nullify404(false)
                        .localErrorCase(ErrorCase.DEFAULT,
                                 ErrorCase.setReason("Error response",
                                (reason, context) -> new M5GBiRestErrorResponseException(reason, context)))
                        .globalErrorCase(GLOBAL_ERROR_CASES))
                .build();
    }
}