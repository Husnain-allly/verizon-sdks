/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.AdditionalProperties;
import io.apimatic.core.utilities.ConversionHelper;
import java.util.List;
import java.util.Map;

/**
 * This is a model class for SmsMessage type.
 */
public class SmsMessage {
    private List<DeviceId> deviceIds;
    private String message;
    private String timestamp;
    private AdditionalProperties<Object> additionalProperties = 
            new AdditionalProperties<Object>(this.getClass());

    /**
     * Default constructor.
     */
    public SmsMessage() {
    }

    /**
     * Initialization constructor.
     * @param  deviceIds  List of DeviceId value for deviceIds.
     * @param  message  String value for message.
     * @param  timestamp  String value for timestamp.
     */
    public SmsMessage(
            List<DeviceId> deviceIds,
            String message,
            String timestamp) {
        this.deviceIds = deviceIds;
        this.message = message;
        this.timestamp = timestamp;
    }

    /**
     * Getter for DeviceIds.
     * One or more IDs of the device that sent the message.
     * @return Returns the List of DeviceId
     */
    @JsonGetter("deviceIds")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public List<DeviceId> getDeviceIds() {
        return deviceIds;
    }

    /**
     * Setter for DeviceIds.
     * One or more IDs of the device that sent the message.
     * @param deviceIds Value for List of DeviceId
     */
    @JsonSetter("deviceIds")
    public void setDeviceIds(List<DeviceId> deviceIds) {
        this.deviceIds = deviceIds;
    }

    /**
     * Getter for Message.
     * The contents of the SMS message.
     * @return Returns the String
     */
    @JsonGetter("message")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getMessage() {
        return message;
    }

    /**
     * Setter for Message.
     * The contents of the SMS message.
     * @param message Value for String
     */
    @JsonSetter("message")
    public void setMessage(String message) {
        this.message = message;
    }

    /**
     * Getter for Timestamp.
     * The date and time that the message was received by the Verizon ThingSpace Platform.
     * @return Returns the String
     */
    @JsonGetter("timestamp")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getTimestamp() {
        return timestamp;
    }

    /**
     * Setter for Timestamp.
     * The date and time that the message was received by the Verizon ThingSpace Platform.
     * @param timestamp Value for String
     */
    @JsonSetter("timestamp")
    public void setTimestamp(String timestamp) {
        this.timestamp = timestamp;
    }

    /**
     * Hidden method for the serialization of additional properties.
     * @return The map of additionally set properties.
     */
    @JsonAnyGetter
    private Map<String, Object> getAdditionalProperties() {
        return additionalProperties.getAdditionalProperties();
    }

    /**
     * Hidden method for the de-serialization of additional properties.
     * @param name The name of the additional property.
     * @param value The Object value of the additional property.
     */
    @JsonAnySetter
    private void setAdditionalProperties(String name, Object value) {
        additionalProperties.setAdditionalProperty(name,
                ConversionHelper.convertToSimpleType(value,
                        x -> x),
                true);
    }

    /**
     * Getter for the value of additional properties based on provided property name.
     * @param name The name of the additional property.
     * @return Either the Object property value or null if not exist.
     */
    
    public Object getAdditionalProperty(String name) {
        return additionalProperties.getAdditionalProperty(name);
    }

    /**
     * Converts this SmsMessage into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "SmsMessage [" + "deviceIds=" + deviceIds + ", message=" + message + ", timestamp="
                + timestamp + ", additionalProperties=" + additionalProperties + "]";
    }

    /**
     * Builds a new {@link SmsMessage.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link SmsMessage.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .deviceIds(getDeviceIds())
                .message(getMessage())
                .timestamp(getTimestamp());
        builder.additionalProperties = additionalProperties;
        return builder;
    }

    /**
     * Class to build instances of {@link SmsMessage}.
     */
    public static class Builder {
        private List<DeviceId> deviceIds;
        private String message;
        private String timestamp;
        private AdditionalProperties<Object> additionalProperties =
                new AdditionalProperties<Object>();



        /**
         * Setter for deviceIds.
         * @param  deviceIds  List of DeviceId value for deviceIds.
         * @return Builder
         */
        public Builder deviceIds(List<DeviceId> deviceIds) {
            this.deviceIds = deviceIds;
            return this;
        }

        /**
         * Setter for message.
         * @param  message  String value for message.
         * @return Builder
         */
        public Builder message(String message) {
            this.message = message;
            return this;
        }

        /**
         * Setter for timestamp.
         * @param  timestamp  String value for timestamp.
         * @return Builder
         */
        public Builder timestamp(String timestamp) {
            this.timestamp = timestamp;
            return this;
        }

        /**
         * Setter for additional property that are not in model fields.
         * @param name The name of the additional property.
         * @param value The Object value of the additional property.
         * @return Builder.
         */
        public Builder additionalProperty(String name, Object value) {
            this.additionalProperties.setAdditionalProperty(name, value);
            return this;
        }

        /**
         * Builds a new {@link SmsMessage} object using the set fields.
         * @return {@link SmsMessage}
         */
        public SmsMessage build() {
            SmsMessage model =
                    new SmsMessage(deviceIds, message, timestamp);
            model.additionalProperties = additionalProperties;
            return model;
        }
    }
}
