/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.AdditionalProperties;
import io.apimatic.core.utilities.ConversionHelper;
import java.util.Map;

/**
 * This is a model class for IErrorMessage type.
 */
public class IErrorMessage {
    private ErrorResponseCode errorCode;
    private String errorMessage;
    private HttpStatusCode httpStatusCode;
    private String detailErrorMessage;
    private AdditionalProperties<Object> additionalProperties = 
            new AdditionalProperties<Object>(this.getClass());

    /**
     * Default constructor.
     */
    public IErrorMessage() {
    }

    /**
     * Initialization constructor.
     * @param  errorCode  ErrorResponseCode value for errorCode.
     * @param  errorMessage  String value for errorMessage.
     * @param  httpStatusCode  HttpStatusCode value for httpStatusCode.
     * @param  detailErrorMessage  String value for detailErrorMessage.
     */
    public IErrorMessage(
            ErrorResponseCode errorCode,
            String errorMessage,
            HttpStatusCode httpStatusCode,
            String detailErrorMessage) {
        this.errorCode = errorCode;
        this.errorMessage = errorMessage;
        this.httpStatusCode = httpStatusCode;
        this.detailErrorMessage = detailErrorMessage;
    }

    /**
     * Getter for ErrorCode.
     * Error Code.
     * @return Returns the ErrorResponseCode
     */
    @JsonGetter("errorCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public ErrorResponseCode getErrorCode() {
        return errorCode;
    }

    /**
     * Setter for ErrorCode.
     * Error Code.
     * @param errorCode Value for ErrorResponseCode
     */
    @JsonSetter("errorCode")
    public void setErrorCode(ErrorResponseCode errorCode) {
        this.errorCode = errorCode;
    }

    /**
     * Getter for ErrorMessage.
     * Details and additional information about the error code.
     * @return Returns the String
     */
    @JsonGetter("errorMessage")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getErrorMessage() {
        return errorMessage;
    }

    /**
     * Setter for ErrorMessage.
     * Details and additional information about the error code.
     * @param errorMessage Value for String
     */
    @JsonSetter("errorMessage")
    public void setErrorMessage(String errorMessage) {
        this.errorMessage = errorMessage;
    }

    /**
     * Getter for HttpStatusCode.
     * HTML error code and description.
     * @return Returns the HttpStatusCode
     */
    @JsonGetter("httpStatusCode")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public HttpStatusCode getHttpStatusCode() {
        return httpStatusCode;
    }

    /**
     * Setter for HttpStatusCode.
     * HTML error code and description.
     * @param httpStatusCode Value for HttpStatusCode
     */
    @JsonSetter("httpStatusCode")
    public void setHttpStatusCode(HttpStatusCode httpStatusCode) {
        this.httpStatusCode = httpStatusCode;
    }

    /**
     * Getter for DetailErrorMessage.
     * More detail and information about the HTML error code.
     * @return Returns the String
     */
    @JsonGetter("detailErrorMessage")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDetailErrorMessage() {
        return detailErrorMessage;
    }

    /**
     * Setter for DetailErrorMessage.
     * More detail and information about the HTML error code.
     * @param detailErrorMessage Value for String
     */
    @JsonSetter("detailErrorMessage")
    public void setDetailErrorMessage(String detailErrorMessage) {
        this.detailErrorMessage = detailErrorMessage;
    }

    /**
     * Hidden method for the serialization of additional properties.
     * @return The map of additionally set properties.
     */
    @JsonAnyGetter
    private Map<String, Object> getAdditionalProperties() {
        return additionalProperties.getAdditionalProperties();
    }

    /**
     * Hidden method for the de-serialization of additional properties.
     * @param name The name of the additional property.
     * @param value The Object value of the additional property.
     */
    @JsonAnySetter
    private void setAdditionalProperties(String name, Object value) {
        additionalProperties.setAdditionalProperty(name,
                ConversionHelper.convertToSimpleType(value,
                        x -> x),
                true);
    }

    /**
     * Getter for the value of additional properties based on provided property name.
     * @param name The name of the additional property.
     * @return Either the Object property value or null if not exist.
     */
    
    public Object getAdditionalProperty(String name) {
        return additionalProperties.getAdditionalProperty(name);
    }

    /**
     * Converts this IErrorMessage into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "IErrorMessage [" + "errorCode=" + errorCode + ", errorMessage=" + errorMessage
                + ", httpStatusCode=" + httpStatusCode + ", detailErrorMessage="
                + detailErrorMessage + ", additionalProperties=" + additionalProperties + "]";
    }

    /**
     * Builds a new {@link IErrorMessage.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link IErrorMessage.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .errorCode(getErrorCode())
                .errorMessage(getErrorMessage())
                .httpStatusCode(getHttpStatusCode())
                .detailErrorMessage(getDetailErrorMessage());
        builder.additionalProperties = additionalProperties;
        return builder;
    }

    /**
     * Class to build instances of {@link IErrorMessage}.
     */
    public static class Builder {
        private ErrorResponseCode errorCode;
        private String errorMessage;
        private HttpStatusCode httpStatusCode;
        private String detailErrorMessage;
        private AdditionalProperties<Object> additionalProperties =
                new AdditionalProperties<Object>();



        /**
         * Setter for errorCode.
         * @param  errorCode  ErrorResponseCode value for errorCode.
         * @return Builder
         */
        public Builder errorCode(ErrorResponseCode errorCode) {
            this.errorCode = errorCode;
            return this;
        }

        /**
         * Setter for errorMessage.
         * @param  errorMessage  String value for errorMessage.
         * @return Builder
         */
        public Builder errorMessage(String errorMessage) {
            this.errorMessage = errorMessage;
            return this;
        }

        /**
         * Setter for httpStatusCode.
         * @param  httpStatusCode  HttpStatusCode value for httpStatusCode.
         * @return Builder
         */
        public Builder httpStatusCode(HttpStatusCode httpStatusCode) {
            this.httpStatusCode = httpStatusCode;
            return this;
        }

        /**
         * Setter for detailErrorMessage.
         * @param  detailErrorMessage  String value for detailErrorMessage.
         * @return Builder
         */
        public Builder detailErrorMessage(String detailErrorMessage) {
            this.detailErrorMessage = detailErrorMessage;
            return this;
        }

        /**
         * Setter for additional property that are not in model fields.
         * @param name The name of the additional property.
         * @param value The Object value of the additional property.
         * @return Builder.
         */
        public Builder additionalProperty(String name, Object value) {
            this.additionalProperties.setAdditionalProperty(name, value);
            return this;
        }

        /**
         * Builds a new {@link IErrorMessage} object using the set fields.
         * @return {@link IErrorMessage}
         */
        public IErrorMessage build() {
            IErrorMessage model =
                    new IErrorMessage(errorCode, errorMessage, httpStatusCode, detailErrorMessage);
            model.additionalProperties = additionalProperties;
            return model;
        }
    }
}
