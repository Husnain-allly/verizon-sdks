/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.AdditionalProperties;
import io.apimatic.core.utilities.ConversionHelper;
import java.util.Map;

/**
 * This is a model class for AggregateUsage type.
 */
public class AggregateUsage {
    private GioDeviceId deviceId;
    private String accountName;
    private String startTime;
    private String endTime;
    private AdditionalProperties<Object> additionalProperties = 
            new AdditionalProperties<Object>(this.getClass());

    /**
     * Default constructor.
     */
    public AggregateUsage() {
    }

    /**
     * Initialization constructor.
     * @param  deviceId  GioDeviceId value for deviceId.
     * @param  accountName  String value for accountName.
     * @param  startTime  String value for startTime.
     * @param  endTime  String value for endTime.
     */
    public AggregateUsage(
            GioDeviceId deviceId,
            String accountName,
            String startTime,
            String endTime) {
        this.deviceId = deviceId;
        this.accountName = accountName;
        this.startTime = startTime;
        this.endTime = endTime;
    }

    /**
     * Getter for DeviceId.
     * @return Returns the GioDeviceId
     */
    @JsonGetter("deviceId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public GioDeviceId getDeviceId() {
        return deviceId;
    }

    /**
     * Setter for DeviceId.
     * @param deviceId Value for GioDeviceId
     */
    @JsonSetter("deviceId")
    public void setDeviceId(GioDeviceId deviceId) {
        this.deviceId = deviceId;
    }

    /**
     * Getter for AccountName.
     * The numeric name of the account, in the format "0000123456-00001". Leading zeros must be
     * included.
     * @return Returns the String
     */
    @JsonGetter("accountName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAccountName() {
        return accountName;
    }

    /**
     * Setter for AccountName.
     * The numeric name of the account, in the format "0000123456-00001". Leading zeros must be
     * included.
     * @param accountName Value for String
     */
    @JsonSetter("accountName")
    public void setAccountName(String accountName) {
        this.accountName = accountName;
    }

    /**
     * Getter for StartTime.
     * The start date of the time period queried as "$datetime"
     * @return Returns the String
     */
    @JsonGetter("startTime")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getStartTime() {
        return startTime;
    }

    /**
     * Setter for StartTime.
     * The start date of the time period queried as "$datetime"
     * @param startTime Value for String
     */
    @JsonSetter("startTime")
    public void setStartTime(String startTime) {
        this.startTime = startTime;
    }

    /**
     * Getter for EndTime.
     * The end date of the time period being queried as "$datetime"
     * @return Returns the String
     */
    @JsonGetter("endTime")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getEndTime() {
        return endTime;
    }

    /**
     * Setter for EndTime.
     * The end date of the time period being queried as "$datetime"
     * @param endTime Value for String
     */
    @JsonSetter("endTime")
    public void setEndTime(String endTime) {
        this.endTime = endTime;
    }

    /**
     * Hidden method for the serialization of additional properties.
     * @return The map of additionally set properties.
     */
    @JsonAnyGetter
    private Map<String, Object> getAdditionalProperties() {
        return additionalProperties.getAdditionalProperties();
    }

    /**
     * Hidden method for the de-serialization of additional properties.
     * @param name The name of the additional property.
     * @param value The Object value of the additional property.
     */
    @JsonAnySetter
    private void setAdditionalProperties(String name, Object value) {
        additionalProperties.setAdditionalProperty(name,
                ConversionHelper.convertToSimpleType(value,
                        x -> x),
                true);
    }

    /**
     * Getter for the value of additional properties based on provided property name.
     * @param name The name of the additional property.
     * @return Either the Object property value or null if not exist.
     */
    
    public Object getAdditionalProperty(String name) {
        return additionalProperties.getAdditionalProperty(name);
    }

    /**
     * Converts this AggregateUsage into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "AggregateUsage [" + "deviceId=" + deviceId + ", accountName=" + accountName
                + ", startTime=" + startTime + ", endTime=" + endTime + ", additionalProperties="
                + additionalProperties + "]";
    }

    /**
     * Builds a new {@link AggregateUsage.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link AggregateUsage.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .deviceId(getDeviceId())
                .accountName(getAccountName())
                .startTime(getStartTime())
                .endTime(getEndTime());
        builder.additionalProperties = additionalProperties;
        return builder;
    }

    /**
     * Class to build instances of {@link AggregateUsage}.
     */
    public static class Builder {
        private GioDeviceId deviceId;
        private String accountName;
        private String startTime;
        private String endTime;
        private AdditionalProperties<Object> additionalProperties =
                new AdditionalProperties<Object>();



        /**
         * Setter for deviceId.
         * @param  deviceId  GioDeviceId value for deviceId.
         * @return Builder
         */
        public Builder deviceId(GioDeviceId deviceId) {
            this.deviceId = deviceId;
            return this;
        }

        /**
         * Setter for accountName.
         * @param  accountName  String value for accountName.
         * @return Builder
         */
        public Builder accountName(String accountName) {
            this.accountName = accountName;
            return this;
        }

        /**
         * Setter for startTime.
         * @param  startTime  String value for startTime.
         * @return Builder
         */
        public Builder startTime(String startTime) {
            this.startTime = startTime;
            return this;
        }

        /**
         * Setter for endTime.
         * @param  endTime  String value for endTime.
         * @return Builder
         */
        public Builder endTime(String endTime) {
            this.endTime = endTime;
            return this;
        }

        /**
         * Setter for additional property that are not in model fields.
         * @param name The name of the additional property.
         * @param value The Object value of the additional property.
         * @return Builder.
         */
        public Builder additionalProperty(String name, Object value) {
            this.additionalProperties.setAdditionalProperty(name, value);
            return this;
        }

        /**
         * Builds a new {@link AggregateUsage} object using the set fields.
         * @return {@link AggregateUsage}
         */
        public AggregateUsage build() {
            AggregateUsage model =
                    new AggregateUsage(deviceId, accountName, startTime, endTime);
            model.additionalProperties = additionalProperties;
            return model;
        }
    }
}
