/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for Position type.
 */
public class Position {
    private int lat;
    private int mLong;

    /**
     * Default constructor.
     */
    public Position() {
    }

    /**
     * Initialization constructor.
     * @param  lat  int value for lat.
     * @param  mLong  int value for mLong.
     */
    public Position(
            int lat,
            int mLong) {
        this.lat = lat;
        this.mLong = mLong;
    }

    /**
     * Getter for Lat.
     * The geographic latitude of an object, expressed in 1/10th integer microdegrees, as a 31 bit
     * value, and with reference to the horizontal datum then in use. The value 900000001 shall be
     * used when unavailable.
     * @return Returns the int
     */
    @JsonGetter("lat")
    public int getLat() {
        return lat;
    }

    /**
     * Setter for Lat.
     * The geographic latitude of an object, expressed in 1/10th integer microdegrees, as a 31 bit
     * value, and with reference to the horizontal datum then in use. The value 900000001 shall be
     * used when unavailable.
     * @param lat Value for int
     */
    @JsonSetter("lat")
    public void setLat(int lat) {
        this.lat = lat;
    }

    /**
     * Getter for MLong.
     * The geographic longitude of an object, expressed in 1/10th integer microdegrees, as a 32-bit
     * value, and with reference to the horizontal datum then in use. The value 1800000001 shall be
     * used when unavailable.
     * @return Returns the int
     */
    @JsonGetter("long")
    public int getMLong() {
        return mLong;
    }

    /**
     * Setter for MLong.
     * The geographic longitude of an object, expressed in 1/10th integer microdegrees, as a 32-bit
     * value, and with reference to the horizontal datum then in use. The value 1800000001 shall be
     * used when unavailable.
     * @param mLong Value for int
     */
    @JsonSetter("long")
    public void setMLong(int mLong) {
        this.mLong = mLong;
    }

    /**
     * Converts this Position into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "Position [" + "lat=" + lat + ", mLong=" + mLong + "]";
    }

    /**
     * Builds a new {@link Position.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link Position.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(lat, mLong);
        return builder;
    }

    /**
     * Class to build instances of {@link Position}.
     */
    public static class Builder {
        private int lat;
        private int mLong;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  lat  int value for lat.
         * @param  mLong  int value for mLong.
         */
        public Builder(int lat, int mLong) {
            this.lat = lat;
            this.mLong = mLong;
        }

        /**
         * Setter for lat.
         * @param  lat  int value for lat.
         * @return Builder
         */
        public Builder lat(int lat) {
            this.lat = lat;
            return this;
        }

        /**
         * Setter for mLong.
         * @param  mLong  int value for mLong.
         * @return Builder
         */
        public Builder mLong(int mLong) {
            this.mLong = mLong;
            return this;
        }

        /**
         * Builds a new {@link Position} object using the set fields.
         * @return {@link Position}
         */
        public Position build() {
            return new Position(lat, mLong);
        }
    }
}
