/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.AdditionalProperties;
import io.apimatic.core.utilities.ConversionHelper;
import java.util.Map;

/**
 * This is a model class for PricePlanTrigger2 type.
 */
public class PricePlanTrigger2 {
    private AccountShareFilterCriteria accountShare;
    private Rateplantype2Condition condition;
    private Boolean changePlan;
    private ChangePlanDetails changePlanDetails;
    private PayAsYouGoFilterCriteria payAsYouGo;
    private Actionobject action;
    private FiltercriteriaObjectCall standAlone;
    private AdditionalProperties<Object> additionalProperties = 
            new AdditionalProperties<Object>(this.getClass());

    /**
     * Default constructor.
     */
    public PricePlanTrigger2() {
    }

    /**
     * Initialization constructor.
     * @param  accountShare  AccountShareFilterCriteria value for accountShare.
     * @param  condition  Rateplantype2Condition value for condition.
     * @param  changePlan  Boolean value for changePlan.
     * @param  changePlanDetails  ChangePlanDetails value for changePlanDetails.
     * @param  payAsYouGo  PayAsYouGoFilterCriteria value for payAsYouGo.
     * @param  action  Actionobject value for action.
     * @param  standAlone  FiltercriteriaObjectCall value for standAlone.
     */
    public PricePlanTrigger2(
            AccountShareFilterCriteria accountShare,
            Rateplantype2Condition condition,
            Boolean changePlan,
            ChangePlanDetails changePlanDetails,
            PayAsYouGoFilterCriteria payAsYouGo,
            Actionobject action,
            FiltercriteriaObjectCall standAlone) {
        this.accountShare = accountShare;
        this.condition = condition;
        this.changePlan = changePlan;
        this.changePlanDetails = changePlanDetails;
        this.payAsYouGo = payAsYouGo;
        this.action = action;
        this.standAlone = standAlone;
    }

    /**
     * Getter for AccountShare.
     * @return Returns the AccountShareFilterCriteria
     */
    @JsonGetter("accountShare")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public AccountShareFilterCriteria getAccountShare() {
        return accountShare;
    }

    /**
     * Setter for AccountShare.
     * @param accountShare Value for AccountShareFilterCriteria
     */
    @JsonSetter("accountShare")
    public void setAccountShare(AccountShareFilterCriteria accountShare) {
        this.accountShare = accountShare;
    }

    /**
     * Getter for Condition.
     * @return Returns the Rateplantype2Condition
     */
    @JsonGetter("condition")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Rateplantype2Condition getCondition() {
        return condition;
    }

    /**
     * Setter for Condition.
     * @param condition Value for Rateplantype2Condition
     */
    @JsonSetter("condition")
    public void setCondition(Rateplantype2Condition condition) {
        this.condition = condition;
    }

    /**
     * Getter for ChangePlan.
     * a flag to set if the trigger changes service plans, true, or not, false
     * @return Returns the Boolean
     */
    @JsonGetter("changePlan")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getChangePlan() {
        return changePlan;
    }

    /**
     * Setter for ChangePlan.
     * a flag to set if the trigger changes service plans, true, or not, false
     * @param changePlan Value for Boolean
     */
    @JsonSetter("changePlan")
    public void setChangePlan(Boolean changePlan) {
        this.changePlan = changePlan;
    }

    /**
     * Getter for ChangePlanDetails.
     * The service plan code to switch to
     * @return Returns the ChangePlanDetails
     */
    @JsonGetter("changePlanDetails")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public ChangePlanDetails getChangePlanDetails() {
        return changePlanDetails;
    }

    /**
     * Setter for ChangePlanDetails.
     * The service plan code to switch to
     * @param changePlanDetails Value for ChangePlanDetails
     */
    @JsonSetter("changePlanDetails")
    public void setChangePlanDetails(ChangePlanDetails changePlanDetails) {
        this.changePlanDetails = changePlanDetails;
    }

    /**
     * Getter for PayAsYouGo.
     * @return Returns the PayAsYouGoFilterCriteria
     */
    @JsonGetter("payAsYouGo")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public PayAsYouGoFilterCriteria getPayAsYouGo() {
        return payAsYouGo;
    }

    /**
     * Setter for PayAsYouGo.
     * @param payAsYouGo Value for PayAsYouGoFilterCriteria
     */
    @JsonSetter("payAsYouGo")
    public void setPayAsYouGo(PayAsYouGoFilterCriteria payAsYouGo) {
        this.payAsYouGo = payAsYouGo;
    }

    /**
     * Getter for Action.
     * @return Returns the Actionobject
     */
    @JsonGetter("action")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Actionobject getAction() {
        return action;
    }

    /**
     * Setter for Action.
     * @param action Value for Actionobject
     */
    @JsonSetter("action")
    public void setAction(Actionobject action) {
        this.action = action;
    }

    /**
     * Getter for StandAlone.
     * @return Returns the FiltercriteriaObjectCall
     */
    @JsonGetter("standAlone")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public FiltercriteriaObjectCall getStandAlone() {
        return standAlone;
    }

    /**
     * Setter for StandAlone.
     * @param standAlone Value for FiltercriteriaObjectCall
     */
    @JsonSetter("standAlone")
    public void setStandAlone(FiltercriteriaObjectCall standAlone) {
        this.standAlone = standAlone;
    }

    /**
     * Hidden method for the serialization of additional properties.
     * @return The map of additionally set properties.
     */
    @JsonAnyGetter
    private Map<String, Object> getAdditionalProperties() {
        return additionalProperties.getAdditionalProperties();
    }

    /**
     * Hidden method for the de-serialization of additional properties.
     * @param name The name of the additional property.
     * @param value The Object value of the additional property.
     */
    @JsonAnySetter
    private void setAdditionalProperties(String name, Object value) {
        additionalProperties.setAdditionalProperty(name,
                ConversionHelper.convertToSimpleType(value,
                        x -> x),
                true);
    }

    /**
     * Getter for the value of additional properties based on provided property name.
     * @param name The name of the additional property.
     * @return Either the Object property value or null if not exist.
     */
    
    public Object getAdditionalProperty(String name) {
        return additionalProperties.getAdditionalProperty(name);
    }

    /**
     * Converts this PricePlanTrigger2 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "PricePlanTrigger2 [" + "accountShare=" + accountShare + ", condition=" + condition
                + ", changePlan=" + changePlan + ", changePlanDetails=" + changePlanDetails
                + ", payAsYouGo=" + payAsYouGo + ", action=" + action + ", standAlone=" + standAlone
                + ", additionalProperties=" + additionalProperties + "]";
    }

    /**
     * Builds a new {@link PricePlanTrigger2.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link PricePlanTrigger2.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .accountShare(getAccountShare())
                .condition(getCondition())
                .changePlan(getChangePlan())
                .changePlanDetails(getChangePlanDetails())
                .payAsYouGo(getPayAsYouGo())
                .action(getAction())
                .standAlone(getStandAlone());
        builder.additionalProperties = additionalProperties;
        return builder;
    }

    /**
     * Class to build instances of {@link PricePlanTrigger2}.
     */
    public static class Builder {
        private AccountShareFilterCriteria accountShare;
        private Rateplantype2Condition condition;
        private Boolean changePlan;
        private ChangePlanDetails changePlanDetails;
        private PayAsYouGoFilterCriteria payAsYouGo;
        private Actionobject action;
        private FiltercriteriaObjectCall standAlone;
        private AdditionalProperties<Object> additionalProperties =
                new AdditionalProperties<Object>();



        /**
         * Setter for accountShare.
         * @param  accountShare  AccountShareFilterCriteria value for accountShare.
         * @return Builder
         */
        public Builder accountShare(AccountShareFilterCriteria accountShare) {
            this.accountShare = accountShare;
            return this;
        }

        /**
         * Setter for condition.
         * @param  condition  Rateplantype2Condition value for condition.
         * @return Builder
         */
        public Builder condition(Rateplantype2Condition condition) {
            this.condition = condition;
            return this;
        }

        /**
         * Setter for changePlan.
         * @param  changePlan  Boolean value for changePlan.
         * @return Builder
         */
        public Builder changePlan(Boolean changePlan) {
            this.changePlan = changePlan;
            return this;
        }

        /**
         * Setter for changePlanDetails.
         * @param  changePlanDetails  ChangePlanDetails value for changePlanDetails.
         * @return Builder
         */
        public Builder changePlanDetails(ChangePlanDetails changePlanDetails) {
            this.changePlanDetails = changePlanDetails;
            return this;
        }

        /**
         * Setter for payAsYouGo.
         * @param  payAsYouGo  PayAsYouGoFilterCriteria value for payAsYouGo.
         * @return Builder
         */
        public Builder payAsYouGo(PayAsYouGoFilterCriteria payAsYouGo) {
            this.payAsYouGo = payAsYouGo;
            return this;
        }

        /**
         * Setter for action.
         * @param  action  Actionobject value for action.
         * @return Builder
         */
        public Builder action(Actionobject action) {
            this.action = action;
            return this;
        }

        /**
         * Setter for standAlone.
         * @param  standAlone  FiltercriteriaObjectCall value for standAlone.
         * @return Builder
         */
        public Builder standAlone(FiltercriteriaObjectCall standAlone) {
            this.standAlone = standAlone;
            return this;
        }

        /**
         * Setter for additional property that are not in model fields.
         * @param name The name of the additional property.
         * @param value The Object value of the additional property.
         * @return Builder.
         */
        public Builder additionalProperty(String name, Object value) {
            this.additionalProperties.setAdditionalProperty(name, value);
            return this;
        }

        /**
         * Builds a new {@link PricePlanTrigger2} object using the set fields.
         * @return {@link PricePlanTrigger2}
         */
        public PricePlanTrigger2 build() {
            PricePlanTrigger2 model =
                    new PricePlanTrigger2(accountShare, condition, changePlan, changePlanDetails,
                            payAsYouGo, action, standAlone);
            model.additionalProperties = additionalProperties;
            return model;
        }
    }
}
