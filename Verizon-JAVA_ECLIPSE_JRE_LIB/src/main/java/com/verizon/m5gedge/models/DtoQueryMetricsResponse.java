/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;

/**
 * This is a model class for DtoQueryMetricsResponse type.
 */
public class DtoQueryMetricsResponse {
    private Integer critical;
    private Integer major;
    private Integer minor;
    private Integer noalert;
    private Integer total;
    private Integer deltacritical;
    private Integer deltamajor;
    private Integer deltaminor;
    private Integer deltanoalert;

    /**
     * Default constructor.
     */
    public DtoQueryMetricsResponse() {
    }

    /**
     * Initialization constructor.
     * @param  critical  Integer value for critical.
     * @param  major  Integer value for major.
     * @param  minor  Integer value for minor.
     * @param  noalert  Integer value for noalert.
     * @param  total  Integer value for total.
     * @param  deltacritical  Integer value for deltacritical.
     * @param  deltamajor  Integer value for deltamajor.
     * @param  deltaminor  Integer value for deltaminor.
     * @param  deltanoalert  Integer value for deltanoalert.
     */
    public DtoQueryMetricsResponse(
            Integer critical,
            Integer major,
            Integer minor,
            Integer noalert,
            Integer total,
            Integer deltacritical,
            Integer deltamajor,
            Integer deltaminor,
            Integer deltanoalert) {
        this.critical = critical;
        this.major = major;
        this.minor = minor;
        this.noalert = noalert;
        this.total = total;
        this.deltacritical = deltacritical;
        this.deltamajor = deltamajor;
        this.deltaminor = deltaminor;
        this.deltanoalert = deltanoalert;
    }

    /**
     * Getter for Critical.
     * The number of critical alerts in the queried time period
     * @return Returns the Integer
     */
    @JsonGetter("critical")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getCritical() {
        return critical;
    }

    /**
     * Setter for Critical.
     * The number of critical alerts in the queried time period
     * @param critical Value for Integer
     */
    @JsonSetter("critical")
    public void setCritical(Integer critical) {
        this.critical = critical;
    }

    /**
     * Getter for Major.
     * The number of major alerts in the queried time period
     * @return Returns the Integer
     */
    @JsonGetter("major")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getMajor() {
        return major;
    }

    /**
     * Setter for Major.
     * The number of major alerts in the queried time period
     * @param major Value for Integer
     */
    @JsonSetter("major")
    public void setMajor(Integer major) {
        this.major = major;
    }

    /**
     * Getter for Minor.
     * The number of minor alerts in the queried time period
     * @return Returns the Integer
     */
    @JsonGetter("minor")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getMinor() {
        return minor;
    }

    /**
     * Setter for Minor.
     * The number of minor alerts in the queried time period
     * @param minor Value for Integer
     */
    @JsonSetter("minor")
    public void setMinor(Integer minor) {
        this.minor = minor;
    }

    /**
     * Getter for Noalert.
     * The number of sensor reports containing no alerts in the queried time period
     * @return Returns the Integer
     */
    @JsonGetter("noalert")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getNoalert() {
        return noalert;
    }

    /**
     * Setter for Noalert.
     * The number of sensor reports containing no alerts in the queried time period
     * @param noalert Value for Integer
     */
    @JsonSetter("noalert")
    public void setNoalert(Integer noalert) {
        this.noalert = noalert;
    }

    /**
     * Getter for Total.
     * The total number of alerts in the queried time period
     * @return Returns the Integer
     */
    @JsonGetter("total")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getTotal() {
        return total;
    }

    /**
     * Setter for Total.
     * The total number of alerts in the queried time period
     * @param total Value for Integer
     */
    @JsonSetter("total")
    public void setTotal(Integer total) {
        this.total = total;
    }

    /**
     * Getter for Deltacritical.
     * The change in the number of critical alerts in the queried time period
     * @return Returns the Integer
     */
    @JsonGetter("deltacritical")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getDeltacritical() {
        return deltacritical;
    }

    /**
     * Setter for Deltacritical.
     * The change in the number of critical alerts in the queried time period
     * @param deltacritical Value for Integer
     */
    @JsonSetter("deltacritical")
    public void setDeltacritical(Integer deltacritical) {
        this.deltacritical = deltacritical;
    }

    /**
     * Getter for Deltamajor.
     * The change in the number of major alerts in the queried time period
     * @return Returns the Integer
     */
    @JsonGetter("deltamajor")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getDeltamajor() {
        return deltamajor;
    }

    /**
     * Setter for Deltamajor.
     * The change in the number of major alerts in the queried time period
     * @param deltamajor Value for Integer
     */
    @JsonSetter("deltamajor")
    public void setDeltamajor(Integer deltamajor) {
        this.deltamajor = deltamajor;
    }

    /**
     * Getter for Deltaminor.
     * The change in the number of minor alerts in the queried time period
     * @return Returns the Integer
     */
    @JsonGetter("deltaminor")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getDeltaminor() {
        return deltaminor;
    }

    /**
     * Setter for Deltaminor.
     * The change in the number of minor alerts in the queried time period
     * @param deltaminor Value for Integer
     */
    @JsonSetter("deltaminor")
    public void setDeltaminor(Integer deltaminor) {
        this.deltaminor = deltaminor;
    }

    /**
     * Getter for Deltanoalert.
     * The change in the number of sensor reports containing no alerts in the queried time period
     * @return Returns the Integer
     */
    @JsonGetter("deltanoalert")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Integer getDeltanoalert() {
        return deltanoalert;
    }

    /**
     * Setter for Deltanoalert.
     * The change in the number of sensor reports containing no alerts in the queried time period
     * @param deltanoalert Value for Integer
     */
    @JsonSetter("deltanoalert")
    public void setDeltanoalert(Integer deltanoalert) {
        this.deltanoalert = deltanoalert;
    }

    /**
     * Converts this DtoQueryMetricsResponse into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "DtoQueryMetricsResponse [" + "critical=" + critical + ", major=" + major
                + ", minor=" + minor + ", noalert=" + noalert + ", total=" + total
                + ", deltacritical=" + deltacritical + ", deltamajor=" + deltamajor
                + ", deltaminor=" + deltaminor + ", deltanoalert=" + deltanoalert + "]";
    }

    /**
     * Builds a new {@link DtoQueryMetricsResponse.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link DtoQueryMetricsResponse.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .critical(getCritical())
                .major(getMajor())
                .minor(getMinor())
                .noalert(getNoalert())
                .total(getTotal())
                .deltacritical(getDeltacritical())
                .deltamajor(getDeltamajor())
                .deltaminor(getDeltaminor())
                .deltanoalert(getDeltanoalert());
        return builder;
    }

    /**
     * Class to build instances of {@link DtoQueryMetricsResponse}.
     */
    public static class Builder {
        private Integer critical;
        private Integer major;
        private Integer minor;
        private Integer noalert;
        private Integer total;
        private Integer deltacritical;
        private Integer deltamajor;
        private Integer deltaminor;
        private Integer deltanoalert;



        /**
         * Setter for critical.
         * @param  critical  Integer value for critical.
         * @return Builder
         */
        public Builder critical(Integer critical) {
            this.critical = critical;
            return this;
        }

        /**
         * Setter for major.
         * @param  major  Integer value for major.
         * @return Builder
         */
        public Builder major(Integer major) {
            this.major = major;
            return this;
        }

        /**
         * Setter for minor.
         * @param  minor  Integer value for minor.
         * @return Builder
         */
        public Builder minor(Integer minor) {
            this.minor = minor;
            return this;
        }

        /**
         * Setter for noalert.
         * @param  noalert  Integer value for noalert.
         * @return Builder
         */
        public Builder noalert(Integer noalert) {
            this.noalert = noalert;
            return this;
        }

        /**
         * Setter for total.
         * @param  total  Integer value for total.
         * @return Builder
         */
        public Builder total(Integer total) {
            this.total = total;
            return this;
        }

        /**
         * Setter for deltacritical.
         * @param  deltacritical  Integer value for deltacritical.
         * @return Builder
         */
        public Builder deltacritical(Integer deltacritical) {
            this.deltacritical = deltacritical;
            return this;
        }

        /**
         * Setter for deltamajor.
         * @param  deltamajor  Integer value for deltamajor.
         * @return Builder
         */
        public Builder deltamajor(Integer deltamajor) {
            this.deltamajor = deltamajor;
            return this;
        }

        /**
         * Setter for deltaminor.
         * @param  deltaminor  Integer value for deltaminor.
         * @return Builder
         */
        public Builder deltaminor(Integer deltaminor) {
            this.deltaminor = deltaminor;
            return this;
        }

        /**
         * Setter for deltanoalert.
         * @param  deltanoalert  Integer value for deltanoalert.
         * @return Builder
         */
        public Builder deltanoalert(Integer deltanoalert) {
            this.deltanoalert = deltanoalert;
            return this;
        }

        /**
         * Builds a new {@link DtoQueryMetricsResponse} object using the set fields.
         * @return {@link DtoQueryMetricsResponse}
         */
        public DtoQueryMetricsResponse build() {
            return new DtoQueryMetricsResponse(critical, major, minor, noalert, total,
                    deltacritical, deltamajor, deltaminor, deltanoalert);
        }
    }
}
