/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.AdditionalProperties;
import io.apimatic.core.utilities.ConversionHelper;
import java.util.Map;

/**
 * This is a model class for EnablePromoExp1 type.
 */
public class EnablePromoExp1 {
    private String key;
    private Boolean value;
    private AdditionalProperties<Object> additionalProperties = 
            new AdditionalProperties<Object>(this.getClass());

    /**
     * Default constructor.
     */
    public EnablePromoExp1() {
    }

    /**
     * Initialization constructor.
     * @param  key  String value for key.
     * @param  value  Boolean value for value.
     */
    public EnablePromoExp1(
            String key,
            Boolean value) {
        this.key = key;
        this.value = value;
    }

    /**
     * Getter for Key.
     * @return Returns the String
     */
    @JsonGetter("key")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getKey() {
        return key;
    }

    /**
     * Setter for Key.
     * @param key Value for String
     */
    @JsonSetter("key")
    public void setKey(String key) {
        this.key = key;
    }

    /**
     * Getter for Value.
     * @return Returns the Boolean
     */
    @JsonGetter("value")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Boolean getValue() {
        return value;
    }

    /**
     * Setter for Value.
     * @param value Value for Boolean
     */
    @JsonSetter("value")
    public void setValue(Boolean value) {
        this.value = value;
    }

    /**
     * Hidden method for the serialization of additional properties.
     * @return The map of additionally set properties.
     */
    @JsonAnyGetter
    private Map<String, Object> getAdditionalProperties() {
        return additionalProperties.getAdditionalProperties();
    }

    /**
     * Hidden method for the de-serialization of additional properties.
     * @param name The name of the additional property.
     * @param value The Object value of the additional property.
     */
    @JsonAnySetter
    private void setAdditionalProperties(String name, Object value) {
        additionalProperties.setAdditionalProperty(name,
                ConversionHelper.convertToSimpleType(value,
                        x -> x),
                true);
    }

    /**
     * Getter for the value of additional properties based on provided property name.
     * @param name The name of the additional property.
     * @return Either the Object property value or null if not exist.
     */
    
    public Object getAdditionalProperty(String name) {
        return additionalProperties.getAdditionalProperty(name);
    }

    /**
     * Converts this EnablePromoExp1 into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "EnablePromoExp1 [" + "key=" + key + ", value=" + value + ", additionalProperties="
                + additionalProperties + "]";
    }

    /**
     * Builds a new {@link EnablePromoExp1.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link EnablePromoExp1.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .key(getKey())
                .value(getValue());
        builder.additionalProperties = additionalProperties;
        return builder;
    }

    /**
     * Class to build instances of {@link EnablePromoExp1}.
     */
    public static class Builder {
        private String key;
        private Boolean value;
        private AdditionalProperties<Object> additionalProperties =
                new AdditionalProperties<Object>();



        /**
         * Setter for key.
         * @param  key  String value for key.
         * @return Builder
         */
        public Builder key(String key) {
            this.key = key;
            return this;
        }

        /**
         * Setter for value.
         * @param  value  Boolean value for value.
         * @return Builder
         */
        public Builder value(Boolean value) {
            this.value = value;
            return this;
        }

        /**
         * Setter for additional property that are not in model fields.
         * @param name The name of the additional property.
         * @param value The Object value of the additional property.
         * @return Builder.
         */
        public Builder additionalProperty(String name, Object value) {
            this.additionalProperties.setAdditionalProperty(name, value);
            return this;
        }

        /**
         * Builds a new {@link EnablePromoExp1} object using the set fields.
         * @return {@link EnablePromoExp1}
         */
        public EnablePromoExp1 build() {
            EnablePromoExp1 model =
                    new EnablePromoExp1(key, value);
            model.additionalProperties = additionalProperties;
            return model;
        }
    }
}
