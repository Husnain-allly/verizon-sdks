/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import java.util.Map;

/**
 * This is a model class for ResourceOnBoardSensor type.
 */
public class ResourceOnBoardSensor {
    private String deveui;
    private String appeui;
    private String appkey;
    private String mClass;
    private String kind;
    private String description;
    private String name;
    private Map<String, Object> customdata;

    /**
     * Default constructor.
     */
    public ResourceOnBoardSensor() {
    }

    /**
     * Initialization constructor.
     * @param  deveui  String value for deveui.
     * @param  appeui  String value for appeui.
     * @param  appkey  String value for appkey.
     * @param  mClass  String value for mClass.
     * @param  kind  String value for kind.
     * @param  description  String value for description.
     * @param  name  String value for name.
     * @param  customdata  Map of String, value for customdata.
     */
    public ResourceOnBoardSensor(
            String deveui,
            String appeui,
            String appkey,
            String mClass,
            String kind,
            String description,
            String name,
            Map<String, Object> customdata) {
        this.deveui = deveui;
        this.appeui = appeui;
        this.appkey = appkey;
        this.mClass = mClass;
        this.kind = kind;
        this.description = description;
        this.name = name;
        this.customdata = customdata;
    }

    /**
     * Getter for Deveui.
     * the IEEE EUI64 address space used to identify a device. It is supplied by the device
     * manufacturer
     * @return Returns the String
     */
    @JsonGetter("deveui")
    public String getDeveui() {
        return deveui;
    }

    /**
     * Setter for Deveui.
     * the IEEE EUI64 address space used to identify a device. It is supplied by the device
     * manufacturer
     * @param deveui Value for String
     */
    @JsonSetter("deveui")
    public void setDeveui(String deveui) {
        this.deveui = deveui;
    }

    /**
     * Getter for Appeui.
     * global application ID in IEEE EUI64 address space that uniquely identifies the entity able to
     * process the JoinReq frame
     * @return Returns the String
     */
    @JsonGetter("appeui")
    public String getAppeui() {
        return appeui;
    }

    /**
     * Setter for Appeui.
     * global application ID in IEEE EUI64 address space that uniquely identifies the entity able to
     * process the JoinReq frame
     * @param appeui Value for String
     */
    @JsonSetter("appeui")
    public void setAppeui(String appeui) {
        this.appeui = appeui;
    }

    /**
     * Getter for Appkey.
     * an encryption key used for messages during every over the air activation
     * @return Returns the String
     */
    @JsonGetter("appkey")
    public String getAppkey() {
        return appkey;
    }

    /**
     * Setter for Appkey.
     * an encryption key used for messages during every over the air activation
     * @param appkey Value for String
     */
    @JsonSetter("appkey")
    public void setAppkey(String appkey) {
        this.appkey = appkey;
    }

    /**
     * Getter for Class.
     * Class of the sensor device. Valid values are Class A (A), Class B (B), and Class C (C). All
     * LoRaWAN devices must implement Class A
     * @return Returns the String
     */
    @JsonGetter("class")
    public String getClassField() {
        return mClass;
    }

    /**
     * Setter for Class.
     * Class of the sensor device. Valid values are Class A (A), Class B (B), and Class C (C). All
     * LoRaWAN devices must implement Class A
     * @param classField Value for String
     */
    @JsonSetter("class")
    public void setClassField(String classField) {
        this.mClass = classField;
    }

    /**
     * Getter for Kind.
     * The kind of sensor device
     * @return Returns the String
     */
    @JsonGetter("kind")
    public String getKind() {
        return kind;
    }

    /**
     * Setter for Kind.
     * The kind of sensor device
     * @param kind Value for String
     */
    @JsonSetter("kind")
    public void setKind(String kind) {
        this.kind = kind;
    }

    /**
     * Getter for Description.
     * @return Returns the String
     */
    @JsonGetter("description")
    public String getDescription() {
        return description;
    }

    /**
     * Setter for Description.
     * @param description Value for String
     */
    @JsonSetter("description")
    public void setDescription(String description) {
        this.description = description;
    }

    /**
     * Getter for Name.
     * @return Returns the String
     */
    @JsonGetter("name")
    public String getName() {
        return name;
    }

    /**
     * Setter for Name.
     * @param name Value for String
     */
    @JsonSetter("name")
    public void setName(String name) {
        this.name = name;
    }

    /**
     * Getter for Customdata.
     * Name/value pair, where the value is client defined. The purpose is to keep track of current
     * state per device action.
     * @return Returns the Map of String, Object
     */
    @JsonGetter("customdata")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Map<String, Object> getCustomdata() {
        return customdata;
    }

    /**
     * Setter for Customdata.
     * Name/value pair, where the value is client defined. The purpose is to keep track of current
     * state per device action.
     * @param customdata Value for Map of String, Object
     */
    @JsonSetter("customdata")
    public void setCustomdata(Map<String, Object> customdata) {
        this.customdata = customdata;
    }

    /**
     * Converts this ResourceOnBoardSensor into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "ResourceOnBoardSensor [" + "deveui=" + deveui + ", appeui=" + appeui + ", appkey="
                + appkey + ", mClass=" + mClass + ", kind=" + kind + ", description=" + description
                + ", name=" + name + ", customdata=" + customdata + "]";
    }

    /**
     * Builds a new {@link ResourceOnBoardSensor.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link ResourceOnBoardSensor.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder(deveui, appeui, appkey, mClass, kind, description, name)
                .customdata(getCustomdata());
        return builder;
    }

    /**
     * Class to build instances of {@link ResourceOnBoardSensor}.
     */
    public static class Builder {
        private String deveui;
        private String appeui;
        private String appkey;
        private String mClass;
        private String kind;
        private String description;
        private String name;
        private Map<String, Object> customdata;

        /**
         * Initialization constructor.
         */
        public Builder() {
        }

        /**
         * Initialization constructor.
         * @param  deveui  String value for deveui.
         * @param  appeui  String value for appeui.
         * @param  appkey  String value for appkey.
         * @param  mClass  String value for mClass.
         * @param  kind  String value for kind.
         * @param  description  String value for description.
         * @param  name  String value for name.
         */
        public Builder(String deveui, String appeui, String appkey, String mClass, String kind,
                String description, String name) {
            this.deveui = deveui;
            this.appeui = appeui;
            this.appkey = appkey;
            this.mClass = mClass;
            this.kind = kind;
            this.description = description;
            this.name = name;
        }

        /**
         * Setter for deveui.
         * @param  deveui  String value for deveui.
         * @return Builder
         */
        public Builder deveui(String deveui) {
            this.deveui = deveui;
            return this;
        }

        /**
         * Setter for appeui.
         * @param  appeui  String value for appeui.
         * @return Builder
         */
        public Builder appeui(String appeui) {
            this.appeui = appeui;
            return this;
        }

        /**
         * Setter for appkey.
         * @param  appkey  String value for appkey.
         * @return Builder
         */
        public Builder appkey(String appkey) {
            this.appkey = appkey;
            return this;
        }

        /**
         * Setter for mClass.
         * @param  mClass  String value for mClass.
         * @return Builder
         */
        public Builder mClass(String mClass) {
            this.mClass = mClass;
            return this;
        }

        /**
         * Setter for kind.
         * @param  kind  String value for kind.
         * @return Builder
         */
        public Builder kind(String kind) {
            this.kind = kind;
            return this;
        }

        /**
         * Setter for description.
         * @param  description  String value for description.
         * @return Builder
         */
        public Builder description(String description) {
            this.description = description;
            return this;
        }

        /**
         * Setter for name.
         * @param  name  String value for name.
         * @return Builder
         */
        public Builder name(String name) {
            this.name = name;
            return this;
        }

        /**
         * Setter for customdata.
         * @param  customdata  Map of String, value for customdata.
         * @return Builder
         */
        public Builder customdata(Map<String, Object> customdata) {
            this.customdata = customdata;
            return this;
        }

        /**
         * Builds a new {@link ResourceOnBoardSensor} object using the set fields.
         * @return {@link ResourceOnBoardSensor}
         */
        public ResourceOnBoardSensor build() {
            return new ResourceOnBoardSensor(deveui, appeui, appkey, mClass, kind, description,
                    name, customdata);
        }
    }
}
