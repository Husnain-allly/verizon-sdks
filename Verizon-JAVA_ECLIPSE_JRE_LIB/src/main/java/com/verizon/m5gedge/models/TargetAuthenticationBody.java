/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.AdditionalProperties;
import io.apimatic.core.utilities.ConversionHelper;
import java.util.Map;

/**
 * This is a model class for TargetAuthenticationBody type.
 */
public class TargetAuthenticationBody {
    private String grantType;
    private String refreshToken;
    private String scope;
    private TargetAuthenticationBodyHeaders headers;
    private TargetAuthenticationBodyHost host;
    private AdditionalProperties<Object> additionalProperties = 
            new AdditionalProperties<Object>(this.getClass());

    /**
     * Default constructor.
     */
    public TargetAuthenticationBody() {
    }

    /**
     * Initialization constructor.
     * @param  grantType  String value for grantType.
     * @param  refreshToken  String value for refreshToken.
     * @param  scope  String value for scope.
     * @param  headers  TargetAuthenticationBodyHeaders value for headers.
     * @param  host  TargetAuthenticationBodyHost value for host.
     */
    public TargetAuthenticationBody(
            String grantType,
            String refreshToken,
            String scope,
            TargetAuthenticationBodyHeaders headers,
            TargetAuthenticationBodyHost host) {
        this.grantType = grantType;
        this.refreshToken = refreshToken;
        this.scope = scope;
        this.headers = headers;
        this.host = host;
    }

    /**
     * Getter for GrantType.
     * Authentication grant type.
     * @return Returns the String
     */
    @JsonGetter("grant_type")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getGrantType() {
        return grantType;
    }

    /**
     * Setter for GrantType.
     * Authentication grant type.
     * @param grantType Value for String
     */
    @JsonSetter("grant_type")
    public void setGrantType(String grantType) {
        this.grantType = grantType;
    }

    /**
     * Getter for RefreshToken.
     * Refresh token.
     * @return Returns the String
     */
    @JsonGetter("refresh_token")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getRefreshToken() {
        return refreshToken;
    }

    /**
     * Setter for RefreshToken.
     * Refresh token.
     * @param refreshToken Value for String
     */
    @JsonSetter("refresh_token")
    public void setRefreshToken(String refreshToken) {
        this.refreshToken = refreshToken;
    }

    /**
     * Getter for Scope.
     * Authentication scopes.
     * @return Returns the String
     */
    @JsonGetter("scope")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getScope() {
        return scope;
    }

    /**
     * Setter for Scope.
     * Authentication scopes.
     * @param scope Value for String
     */
    @JsonSetter("scope")
    public void setScope(String scope) {
        this.scope = scope;
    }

    /**
     * Getter for Headers.
     * Authentication headers.
     * @return Returns the TargetAuthenticationBodyHeaders
     */
    @JsonGetter("headers")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public TargetAuthenticationBodyHeaders getHeaders() {
        return headers;
    }

    /**
     * Setter for Headers.
     * Authentication headers.
     * @param headers Value for TargetAuthenticationBodyHeaders
     */
    @JsonSetter("headers")
    public void setHeaders(TargetAuthenticationBodyHeaders headers) {
        this.headers = headers;
    }

    /**
     * Getter for Host.
     * Host information.
     * @return Returns the TargetAuthenticationBodyHost
     */
    @JsonGetter("host")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public TargetAuthenticationBodyHost getHost() {
        return host;
    }

    /**
     * Setter for Host.
     * Host information.
     * @param host Value for TargetAuthenticationBodyHost
     */
    @JsonSetter("host")
    public void setHost(TargetAuthenticationBodyHost host) {
        this.host = host;
    }

    /**
     * Hidden method for the serialization of additional properties.
     * @return The map of additionally set properties.
     */
    @JsonAnyGetter
    private Map<String, Object> getAdditionalProperties() {
        return additionalProperties.getAdditionalProperties();
    }

    /**
     * Hidden method for the de-serialization of additional properties.
     * @param name The name of the additional property.
     * @param value The Object value of the additional property.
     */
    @JsonAnySetter
    private void setAdditionalProperties(String name, Object value) {
        additionalProperties.setAdditionalProperty(name,
                ConversionHelper.convertToSimpleType(value,
                        x -> x),
                true);
    }

    /**
     * Getter for the value of additional properties based on provided property name.
     * @param name The name of the additional property.
     * @return Either the Object property value or null if not exist.
     */
    
    public Object getAdditionalProperty(String name) {
        return additionalProperties.getAdditionalProperty(name);
    }

    /**
     * Converts this TargetAuthenticationBody into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "TargetAuthenticationBody [" + "grantType=" + grantType + ", refreshToken="
                + refreshToken + ", scope=" + scope + ", headers=" + headers + ", host=" + host
                + ", additionalProperties=" + additionalProperties + "]";
    }

    /**
     * Builds a new {@link TargetAuthenticationBody.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link TargetAuthenticationBody.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .grantType(getGrantType())
                .refreshToken(getRefreshToken())
                .scope(getScope())
                .headers(getHeaders())
                .host(getHost());
        builder.additionalProperties = additionalProperties;
        return builder;
    }

    /**
     * Class to build instances of {@link TargetAuthenticationBody}.
     */
    public static class Builder {
        private String grantType;
        private String refreshToken;
        private String scope;
        private TargetAuthenticationBodyHeaders headers;
        private TargetAuthenticationBodyHost host;
        private AdditionalProperties<Object> additionalProperties =
                new AdditionalProperties<Object>();



        /**
         * Setter for grantType.
         * @param  grantType  String value for grantType.
         * @return Builder
         */
        public Builder grantType(String grantType) {
            this.grantType = grantType;
            return this;
        }

        /**
         * Setter for refreshToken.
         * @param  refreshToken  String value for refreshToken.
         * @return Builder
         */
        public Builder refreshToken(String refreshToken) {
            this.refreshToken = refreshToken;
            return this;
        }

        /**
         * Setter for scope.
         * @param  scope  String value for scope.
         * @return Builder
         */
        public Builder scope(String scope) {
            this.scope = scope;
            return this;
        }

        /**
         * Setter for headers.
         * @param  headers  TargetAuthenticationBodyHeaders value for headers.
         * @return Builder
         */
        public Builder headers(TargetAuthenticationBodyHeaders headers) {
            this.headers = headers;
            return this;
        }

        /**
         * Setter for host.
         * @param  host  TargetAuthenticationBodyHost value for host.
         * @return Builder
         */
        public Builder host(TargetAuthenticationBodyHost host) {
            this.host = host;
            return this;
        }

        /**
         * Setter for additional property that are not in model fields.
         * @param name The name of the additional property.
         * @param value The Object value of the additional property.
         * @return Builder.
         */
        public Builder additionalProperty(String name, Object value) {
            this.additionalProperties.setAdditionalProperty(name, value);
            return this;
        }

        /**
         * Builds a new {@link TargetAuthenticationBody} object using the set fields.
         * @return {@link TargetAuthenticationBody}
         */
        public TargetAuthenticationBody build() {
            TargetAuthenticationBody model =
                    new TargetAuthenticationBody(grantType, refreshToken, scope, headers, host);
            model.additionalProperties = additionalProperties;
            return model;
        }
    }
}
