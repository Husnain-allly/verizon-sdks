/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.AdditionalProperties;
import io.apimatic.core.utilities.ConversionHelper;
import java.util.Map;

/**
 * This is a model class for DeviceGroupFilter type.
 */
public class DeviceGroupFilter {
    private String deviceGroupName;
    private String individualOrCombined;
    private String accountName;
    private AdditionalProperties<Object> additionalProperties = 
            new AdditionalProperties<Object>(this.getClass());

    /**
     * Default constructor.
     */
    public DeviceGroupFilter() {
    }

    /**
     * Initialization constructor.
     * @param  deviceGroupName  String value for deviceGroupName.
     * @param  individualOrCombined  String value for individualOrCombined.
     * @param  accountName  String value for accountName.
     */
    public DeviceGroupFilter(
            String deviceGroupName,
            String individualOrCombined,
            String accountName) {
        this.deviceGroupName = deviceGroupName;
        this.individualOrCombined = individualOrCombined;
        this.accountName = accountName;
    }

    /**
     * Getter for DeviceGroupName.
     * @return Returns the String
     */
    @JsonGetter("deviceGroupName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getDeviceGroupName() {
        return deviceGroupName;
    }

    /**
     * Setter for DeviceGroupName.
     * @param deviceGroupName Value for String
     */
    @JsonSetter("deviceGroupName")
    public void setDeviceGroupName(String deviceGroupName) {
        this.deviceGroupName = deviceGroupName;
    }

    /**
     * Getter for IndividualOrCombined.
     * @return Returns the String
     */
    @JsonGetter("IndividualOrCombined")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getIndividualOrCombined() {
        return individualOrCombined;
    }

    /**
     * Setter for IndividualOrCombined.
     * @param individualOrCombined Value for String
     */
    @JsonSetter("IndividualOrCombined")
    public void setIndividualOrCombined(String individualOrCombined) {
        this.individualOrCombined = individualOrCombined;
    }

    /**
     * Getter for AccountName.
     * The numeric name of the account and must include leading zeroes
     * @return Returns the String
     */
    @JsonGetter("accountName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getAccountName() {
        return accountName;
    }

    /**
     * Setter for AccountName.
     * The numeric name of the account and must include leading zeroes
     * @param accountName Value for String
     */
    @JsonSetter("accountName")
    public void setAccountName(String accountName) {
        this.accountName = accountName;
    }

    /**
     * Hidden method for the serialization of additional properties.
     * @return The map of additionally set properties.
     */
    @JsonAnyGetter
    private Map<String, Object> getAdditionalProperties() {
        return additionalProperties.getAdditionalProperties();
    }

    /**
     * Hidden method for the de-serialization of additional properties.
     * @param name The name of the additional property.
     * @param value The Object value of the additional property.
     */
    @JsonAnySetter
    private void setAdditionalProperties(String name, Object value) {
        additionalProperties.setAdditionalProperty(name,
                ConversionHelper.convertToSimpleType(value,
                        x -> x),
                true);
    }

    /**
     * Getter for the value of additional properties based on provided property name.
     * @param name The name of the additional property.
     * @return Either the Object property value or null if not exist.
     */
    
    public Object getAdditionalProperty(String name) {
        return additionalProperties.getAdditionalProperty(name);
    }

    /**
     * Converts this DeviceGroupFilter into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "DeviceGroupFilter [" + "deviceGroupName=" + deviceGroupName
                + ", individualOrCombined=" + individualOrCombined + ", accountName=" + accountName
                + ", additionalProperties=" + additionalProperties + "]";
    }

    /**
     * Builds a new {@link DeviceGroupFilter.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link DeviceGroupFilter.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .deviceGroupName(getDeviceGroupName())
                .individualOrCombined(getIndividualOrCombined())
                .accountName(getAccountName());
        builder.additionalProperties = additionalProperties;
        return builder;
    }

    /**
     * Class to build instances of {@link DeviceGroupFilter}.
     */
    public static class Builder {
        private String deviceGroupName;
        private String individualOrCombined;
        private String accountName;
        private AdditionalProperties<Object> additionalProperties =
                new AdditionalProperties<Object>();



        /**
         * Setter for deviceGroupName.
         * @param  deviceGroupName  String value for deviceGroupName.
         * @return Builder
         */
        public Builder deviceGroupName(String deviceGroupName) {
            this.deviceGroupName = deviceGroupName;
            return this;
        }

        /**
         * Setter for individualOrCombined.
         * @param  individualOrCombined  String value for individualOrCombined.
         * @return Builder
         */
        public Builder individualOrCombined(String individualOrCombined) {
            this.individualOrCombined = individualOrCombined;
            return this;
        }

        /**
         * Setter for accountName.
         * @param  accountName  String value for accountName.
         * @return Builder
         */
        public Builder accountName(String accountName) {
            this.accountName = accountName;
            return this;
        }

        /**
         * Setter for additional property that are not in model fields.
         * @param name The name of the additional property.
         * @param value The Object value of the additional property.
         * @return Builder.
         */
        public Builder additionalProperty(String name, Object value) {
            this.additionalProperties.setAdditionalProperty(name, value);
            return this;
        }

        /**
         * Builds a new {@link DeviceGroupFilter} object using the set fields.
         * @return {@link DeviceGroupFilter}
         */
        public DeviceGroupFilter build() {
            DeviceGroupFilter model =
                    new DeviceGroupFilter(deviceGroupName, individualOrCombined, accountName);
            model.additionalProperties = additionalProperties;
            return model;
        }
    }
}
