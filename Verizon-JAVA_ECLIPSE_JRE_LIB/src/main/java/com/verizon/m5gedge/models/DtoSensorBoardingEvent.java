/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import com.fasterxml.jackson.databind.annotation.JsonDeserialize;
import com.fasterxml.jackson.databind.annotation.JsonSerialize;
import com.verizon.m5gedge.DateTimeHelper;
import java.time.LocalDateTime;

/**
 * This is a model class for DtoSensorBoardingEvent type.
 */
public class DtoSensorBoardingEvent {
    private LocalDateTime createdon;
    private String errmsg;
    private DtoFields fields;
    private String state;
    private String transactionid;

    /**
     * Default constructor.
     */
    public DtoSensorBoardingEvent() {
    }

    /**
     * Initialization constructor.
     * @param  createdon  LocalDateTime value for createdon.
     * @param  errmsg  String value for errmsg.
     * @param  fields  DtoFields value for fields.
     * @param  state  String value for state.
     * @param  transactionid  String value for transactionid.
     */
    public DtoSensorBoardingEvent(
            LocalDateTime createdon,
            String errmsg,
            DtoFields fields,
            String state,
            String transactionid) {
        this.createdon = createdon;
        this.errmsg = errmsg;
        this.fields = fields;
        this.state = state;
        this.transactionid = transactionid;
    }

    /**
     * Getter for Createdon.
     * Timestamp of the record
     * @return Returns the LocalDateTime
     */
    @JsonGetter("createdon")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    @JsonSerialize(using = DateTimeHelper.Rfc8601DateTimeSerializer.class)
    public LocalDateTime getCreatedon() {
        return createdon;
    }

    /**
     * Setter for Createdon.
     * Timestamp of the record
     * @param createdon Value for LocalDateTime
     */
    @JsonSetter("createdon")
    @JsonDeserialize(using = DateTimeHelper.Rfc8601DateTimeDeserializer.class)
    public void setCreatedon(LocalDateTime createdon) {
        this.createdon = createdon;
    }

    /**
     * Getter for Errmsg.
     * Error message
     * @return Returns the String
     */
    @JsonGetter("errmsg")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getErrmsg() {
        return errmsg;
    }

    /**
     * Setter for Errmsg.
     * Error message
     * @param errmsg Value for String
     */
    @JsonSetter("errmsg")
    public void setErrmsg(String errmsg) {
        this.errmsg = errmsg;
    }

    /**
     * Getter for Fields.
     * Fields to return needed by search
     * @return Returns the DtoFields
     */
    @JsonGetter("fields")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public DtoFields getFields() {
        return fields;
    }

    /**
     * Setter for Fields.
     * Fields to return needed by search
     * @param fields Value for DtoFields
     */
    @JsonSetter("fields")
    public void setFields(DtoFields fields) {
        this.fields = fields;
    }

    /**
     * Getter for State.
     * The current status of the device or transaction and will be `success` or `failed`
     * @return Returns the String
     */
    @JsonGetter("state")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getState() {
        return state;
    }

    /**
     * Setter for State.
     * The current status of the device or transaction and will be `success` or `failed`
     * @param state Value for String
     */
    @JsonSetter("state")
    public void setState(String state) {
        this.state = state;
    }

    /**
     * Getter for Transactionid.
     * The system-generated UUID of the transaction
     * @return Returns the String
     */
    @JsonGetter("transactionid")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getTransactionid() {
        return transactionid;
    }

    /**
     * Setter for Transactionid.
     * The system-generated UUID of the transaction
     * @param transactionid Value for String
     */
    @JsonSetter("transactionid")
    public void setTransactionid(String transactionid) {
        this.transactionid = transactionid;
    }

    /**
     * Converts this DtoSensorBoardingEvent into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "DtoSensorBoardingEvent [" + "createdon=" + createdon + ", errmsg=" + errmsg
                + ", fields=" + fields + ", state=" + state + ", transactionid=" + transactionid
                + "]";
    }

    /**
     * Builds a new {@link DtoSensorBoardingEvent.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link DtoSensorBoardingEvent.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .createdon(getCreatedon())
                .errmsg(getErrmsg())
                .fields(getFields())
                .state(getState())
                .transactionid(getTransactionid());
        return builder;
    }

    /**
     * Class to build instances of {@link DtoSensorBoardingEvent}.
     */
    public static class Builder {
        private LocalDateTime createdon;
        private String errmsg;
        private DtoFields fields;
        private String state;
        private String transactionid;



        /**
         * Setter for createdon.
         * @param  createdon  LocalDateTime value for createdon.
         * @return Builder
         */
        public Builder createdon(LocalDateTime createdon) {
            this.createdon = createdon;
            return this;
        }

        /**
         * Setter for errmsg.
         * @param  errmsg  String value for errmsg.
         * @return Builder
         */
        public Builder errmsg(String errmsg) {
            this.errmsg = errmsg;
            return this;
        }

        /**
         * Setter for fields.
         * @param  fields  DtoFields value for fields.
         * @return Builder
         */
        public Builder fields(DtoFields fields) {
            this.fields = fields;
            return this;
        }

        /**
         * Setter for state.
         * @param  state  String value for state.
         * @return Builder
         */
        public Builder state(String state) {
            this.state = state;
            return this;
        }

        /**
         * Setter for transactionid.
         * @param  transactionid  String value for transactionid.
         * @return Builder
         */
        public Builder transactionid(String transactionid) {
            this.transactionid = transactionid;
            return this;
        }

        /**
         * Builds a new {@link DtoSensorBoardingEvent} object using the set fields.
         * @return {@link DtoSensorBoardingEvent}
         */
        public DtoSensorBoardingEvent build() {
            return new DtoSensorBoardingEvent(createdon, errmsg, fields, state, transactionid);
        }
    }
}
