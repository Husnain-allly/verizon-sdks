/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

package com.verizon.m5gedge.models;

import com.fasterxml.jackson.annotation.JsonAnyGetter;
import com.fasterxml.jackson.annotation.JsonAnySetter;
import com.fasterxml.jackson.annotation.JsonGetter;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonSetter;
import io.apimatic.core.types.AdditionalProperties;
import io.apimatic.core.utilities.ConversionHelper;
import java.util.Map;

/**
 * This is a model class for PayAsYouGoCreateTriggerRequest type.
 */
public class PayAsYouGoCreateTriggerRequest {
    private String triggerName;
    private String ecpdId;
    private TriggerCategory triggerCategory;
    private PayAsYouGoPricePlanTrigger pricePlanTrigger;
    private Notificationarray notification;
    private Active active;
    private AdditionalProperties<Object> additionalProperties = 
            new AdditionalProperties<Object>(this.getClass());

    /**
     * Default constructor.
     */
    public PayAsYouGoCreateTriggerRequest() {
    }

    /**
     * Initialization constructor.
     * @param  triggerName  String value for triggerName.
     * @param  ecpdId  String value for ecpdId.
     * @param  triggerCategory  TriggerCategory value for triggerCategory.
     * @param  pricePlanTrigger  PayAsYouGoPricePlanTrigger value for pricePlanTrigger.
     * @param  notification  Notificationarray value for notification.
     * @param  active  Active value for active.
     */
    public PayAsYouGoCreateTriggerRequest(
            String triggerName,
            String ecpdId,
            TriggerCategory triggerCategory,
            PayAsYouGoPricePlanTrigger pricePlanTrigger,
            Notificationarray notification,
            Active active) {
        this.triggerName = triggerName;
        this.ecpdId = ecpdId;
        this.triggerCategory = triggerCategory;
        this.pricePlanTrigger = pricePlanTrigger;
        this.notification = notification;
        this.active = active;
    }

    /**
     * Getter for TriggerName.
     * The user defined name of the trigger
     * @return Returns the String
     */
    @JsonGetter("triggerName")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getTriggerName() {
        return triggerName;
    }

    /**
     * Setter for TriggerName.
     * The user defined name of the trigger
     * @param triggerName Value for String
     */
    @JsonSetter("triggerName")
    public void setTriggerName(String triggerName) {
        this.triggerName = triggerName;
    }

    /**
     * Getter for EcpdId.
     * The Enterprise Customer Profile Database ID
     * @return Returns the String
     */
    @JsonGetter("ecpdId")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public String getEcpdId() {
        return ecpdId;
    }

    /**
     * Setter for EcpdId.
     * The Enterprise Customer Profile Database ID
     * @param ecpdId Value for String
     */
    @JsonSetter("ecpdId")
    public void setEcpdId(String ecpdId) {
        this.ecpdId = ecpdId;
    }

    /**
     * Getter for TriggerCategory.
     * The type of trigger being created or modified
     * @return Returns the TriggerCategory
     */
    @JsonGetter("triggerCategory")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public TriggerCategory getTriggerCategory() {
        return triggerCategory;
    }

    /**
     * Setter for TriggerCategory.
     * The type of trigger being created or modified
     * @param triggerCategory Value for TriggerCategory
     */
    @JsonSetter("triggerCategory")
    public void setTriggerCategory(TriggerCategory triggerCategory) {
        this.triggerCategory = triggerCategory;
    }

    /**
     * Getter for PricePlanTrigger.
     * @return Returns the PayAsYouGoPricePlanTrigger
     */
    @JsonGetter("pricePlanTrigger")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public PayAsYouGoPricePlanTrigger getPricePlanTrigger() {
        return pricePlanTrigger;
    }

    /**
     * Setter for PricePlanTrigger.
     * @param pricePlanTrigger Value for PayAsYouGoPricePlanTrigger
     */
    @JsonSetter("pricePlanTrigger")
    public void setPricePlanTrigger(PayAsYouGoPricePlanTrigger pricePlanTrigger) {
        this.pricePlanTrigger = pricePlanTrigger;
    }

    /**
     * Getter for Notification.
     * @return Returns the Notificationarray
     */
    @JsonGetter("notification")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Notificationarray getNotification() {
        return notification;
    }

    /**
     * Setter for Notification.
     * @param notification Value for Notificationarray
     */
    @JsonSetter("notification")
    public void setNotification(Notificationarray notification) {
        this.notification = notification;
    }

    /**
     * Getter for Active.
     * A flag to indicate of the trigger is active, true, or not, false
     * @return Returns the Active
     */
    @JsonGetter("active")
    @JsonInclude(JsonInclude.Include.NON_NULL)
    public Active getActive() {
        return active;
    }

    /**
     * Setter for Active.
     * A flag to indicate of the trigger is active, true, or not, false
     * @param active Value for Active
     */
    @JsonSetter("active")
    public void setActive(Active active) {
        this.active = active;
    }

    /**
     * Hidden method for the serialization of additional properties.
     * @return The map of additionally set properties.
     */
    @JsonAnyGetter
    private Map<String, Object> getAdditionalProperties() {
        return additionalProperties.getAdditionalProperties();
    }

    /**
     * Hidden method for the de-serialization of additional properties.
     * @param name The name of the additional property.
     * @param value The Object value of the additional property.
     */
    @JsonAnySetter
    private void setAdditionalProperties(String name, Object value) {
        additionalProperties.setAdditionalProperty(name,
                ConversionHelper.convertToSimpleType(value,
                        x -> x),
                true);
    }

    /**
     * Getter for the value of additional properties based on provided property name.
     * @param name The name of the additional property.
     * @return Either the Object property value or null if not exist.
     */
    
    public Object getAdditionalProperty(String name) {
        return additionalProperties.getAdditionalProperty(name);
    }

    /**
     * Converts this PayAsYouGoCreateTriggerRequest into string format.
     * @return String representation of this class
     */
    @Override
    public String toString() {
        return "PayAsYouGoCreateTriggerRequest [" + "triggerName=" + triggerName + ", ecpdId="
                + ecpdId + ", triggerCategory=" + triggerCategory + ", pricePlanTrigger="
                + pricePlanTrigger + ", notification=" + notification + ", active=" + active
                + ", additionalProperties=" + additionalProperties + "]";
    }

    /**
     * Builds a new {@link PayAsYouGoCreateTriggerRequest.Builder} object.
     * Creates the instance with the state of the current model.
     * @return a new {@link PayAsYouGoCreateTriggerRequest.Builder} object
     */
    public Builder toBuilder() {
        Builder builder = new Builder()
                .triggerName(getTriggerName())
                .ecpdId(getEcpdId())
                .triggerCategory(getTriggerCategory())
                .pricePlanTrigger(getPricePlanTrigger())
                .notification(getNotification())
                .active(getActive());
        builder.additionalProperties = additionalProperties;
        return builder;
    }

    /**
     * Class to build instances of {@link PayAsYouGoCreateTriggerRequest}.
     */
    public static class Builder {
        private String triggerName;
        private String ecpdId;
        private TriggerCategory triggerCategory;
        private PayAsYouGoPricePlanTrigger pricePlanTrigger;
        private Notificationarray notification;
        private Active active;
        private AdditionalProperties<Object> additionalProperties =
                new AdditionalProperties<Object>();



        /**
         * Setter for triggerName.
         * @param  triggerName  String value for triggerName.
         * @return Builder
         */
        public Builder triggerName(String triggerName) {
            this.triggerName = triggerName;
            return this;
        }

        /**
         * Setter for ecpdId.
         * @param  ecpdId  String value for ecpdId.
         * @return Builder
         */
        public Builder ecpdId(String ecpdId) {
            this.ecpdId = ecpdId;
            return this;
        }

        /**
         * Setter for triggerCategory.
         * @param  triggerCategory  TriggerCategory value for triggerCategory.
         * @return Builder
         */
        public Builder triggerCategory(TriggerCategory triggerCategory) {
            this.triggerCategory = triggerCategory;
            return this;
        }

        /**
         * Setter for pricePlanTrigger.
         * @param  pricePlanTrigger  PayAsYouGoPricePlanTrigger value for pricePlanTrigger.
         * @return Builder
         */
        public Builder pricePlanTrigger(PayAsYouGoPricePlanTrigger pricePlanTrigger) {
            this.pricePlanTrigger = pricePlanTrigger;
            return this;
        }

        /**
         * Setter for notification.
         * @param  notification  Notificationarray value for notification.
         * @return Builder
         */
        public Builder notification(Notificationarray notification) {
            this.notification = notification;
            return this;
        }

        /**
         * Setter for active.
         * @param  active  Active value for active.
         * @return Builder
         */
        public Builder active(Active active) {
            this.active = active;
            return this;
        }

        /**
         * Setter for additional property that are not in model fields.
         * @param name The name of the additional property.
         * @param value The Object value of the additional property.
         * @return Builder.
         */
        public Builder additionalProperty(String name, Object value) {
            this.additionalProperties.setAdditionalProperty(name, value);
            return this;
        }

        /**
         * Builds a new {@link PayAsYouGoCreateTriggerRequest} object using the set fields.
         * @return {@link PayAsYouGoCreateTriggerRequest}
         */
        public PayAsYouGoCreateTriggerRequest build() {
            PayAsYouGoCreateTriggerRequest model =
                    new PayAsYouGoCreateTriggerRequest(triggerName, ecpdId, triggerCategory,
                            pricePlanTrigger, notification, active);
            model.additionalProperties = additionalProperties;
            return model;
        }
    }
}
