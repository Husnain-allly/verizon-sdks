<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;
use VerizonLib\ApiHelper;

/**
 * Additional service support information for the MEC platform.
 */
class MecPlatformsAdditionalSupportInfo implements \JsonSerializable
{
    /**
     * @var string|null
     */
    private $type;

    /**
     * @var MecPlatformsAdditionalSupportInfoData|null
     */
    private $data;

    /**
     * Returns Type.
     * Type of additional service support information for the MEC platform.
     */
    public function getType(): ?string
    {
        return $this->type;
    }

    /**
     * Sets Type.
     * Type of additional service support information for the MEC platform.
     *
     * @maps type
     */
    public function setType(?string $type): void
    {
        $this->type = $type;
    }

    /**
     * Returns Data.
     * Data about additional service support information for the MEC platform.
     */
    public function getData(): ?MecPlatformsAdditionalSupportInfoData
    {
        return $this->data;
    }

    /**
     * Sets Data.
     * Data about additional service support information for the MEC platform.
     *
     * @maps data
     */
    public function setData(?MecPlatformsAdditionalSupportInfoData $data): void
    {
        $this->data = $data;
    }

    /**
     * Converts the MecPlatformsAdditionalSupportInfo object to a human-readable string representation.
     *
     * @return string The string representation of the MecPlatformsAdditionalSupportInfo object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'MecPlatformsAdditionalSupportInfo',
            ['type' => $this->type, 'data' => $this->data]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->type)) {
            $json['type'] = $this->type;
        }
        if (isset($this->data)) {
            $json['data'] = $this->data;
        }

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
