<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;
use VerizonLib\ApiHelper;
use VerizonLib\Utils\DateTimeHelper;

/**
 * Structure for the credentials required to connect to the ETX MQTT Message Exchange.
 */
class Certificate implements \JsonSerializable
{
    /**
     * @var string
     */
    private $certPem;

    /**
     * @var string
     */
    private $keyPem;

    /**
     * @var string
     */
    private $caPem;

    /**
     * @var \DateTime
     */
    private $expirationTime;

    /**
     * @param string $certPem
     * @param string $keyPem
     * @param string $caPem
     * @param \DateTime $expirationTime
     */
    public function __construct(string $certPem, string $keyPem, string $caPem, \DateTime $expirationTime)
    {
        $this->certPem = $certPem;
        $this->keyPem = $keyPem;
        $this->caPem = $caPem;
        $this->expirationTime = $expirationTime;
    }

    /**
     * Returns Cert Pem.
     * The string containing the certificate
     */
    public function getCertPem(): string
    {
        return $this->certPem;
    }

    /**
     * Sets Cert Pem.
     * The string containing the certificate
     *
     * @required
     * @maps cert.pem
     */
    public function setCertPem(string $certPem): void
    {
        $this->certPem = $certPem;
    }

    /**
     * Returns Key Pem.
     * The string containing the private key
     */
    public function getKeyPem(): string
    {
        return $this->keyPem;
    }

    /**
     * Sets Key Pem.
     * The string containing the private key
     *
     * @required
     * @maps key.pem
     */
    public function setKeyPem(string $keyPem): void
    {
        $this->keyPem = $keyPem;
    }

    /**
     * Returns Ca Pem.
     * The string containing the CA certificate
     */
    public function getCaPem(): string
    {
        return $this->caPem;
    }

    /**
     * Sets Ca Pem.
     * The string containing the CA certificate
     *
     * @required
     * @maps ca.pem
     */
    public function setCaPem(string $caPem): void
    {
        $this->caPem = $caPem;
    }

    /**
     * Returns Expiration Time.
     * The string describing the expiration timestamp of the certificate
     */
    public function getExpirationTime(): \DateTime
    {
        return $this->expirationTime;
    }

    /**
     * Sets Expiration Time.
     * The string describing the expiration timestamp of the certificate
     *
     * @required
     * @maps ExpirationTime
     * @factory \VerizonLib\Utils\DateTimeHelper::fromRfc3339DateTime
     */
    public function setExpirationTime(\DateTime $expirationTime): void
    {
        $this->expirationTime = $expirationTime;
    }

    /**
     * Converts the Certificate object to a human-readable string representation.
     *
     * @return string The string representation of the Certificate object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'Certificate',
            [
                'certPem' => $this->certPem,
                'keyPem' => $this->keyPem,
                'caPem' => $this->caPem,
                'expirationTime' => $this->expirationTime
            ]
        );
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        $json['cert.pem']       = $this->certPem;
        $json['key.pem']        = $this->keyPem;
        $json['ca.pem']         = $this->caPem;
        $json['ExpirationTime'] = DateTimeHelper::toRfc3339DateTime($this->expirationTime);

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
