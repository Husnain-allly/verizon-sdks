<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models;

use stdClass;
use VerizonLib\ApiHelper;

/**
 * Response for a request made to delete a device.
 */
class DeleteDevicesResult implements \JsonSerializable
{
    /**
     * @var array|null
     */
    private $deviceIds;

    /**
     * @var string|null
     */
    private $status;

    /**
     * @var string|null
     */
    private $message;

    /**
     * Returns Device Ids.
     * One object per device to be deleted. Each object must contain a kind and id element identifying the
     * device.
     */
    public function getDeviceIds(): ?array
    {
        return $this->deviceIds;
    }

    /**
     * Sets Device Ids.
     * One object per device to be deleted. Each object must contain a kind and id element identifying the
     * device.
     *
     * @maps deviceIds
     */
    public function setDeviceIds(?array $deviceIds): void
    {
        $this->deviceIds = $deviceIds;
    }

    /**
     * Returns Status.
     * “Success” if the device was deleted, or “Failed” if there was a problem.
     */
    public function getStatus(): ?string
    {
        return $this->status;
    }

    /**
     * Sets Status.
     * “Success” if the device was deleted, or “Failed” if there was a problem.
     *
     * @maps status
     */
    public function setStatus(?string $status): void
    {
        $this->status = $status;
    }

    /**
     * Returns Message.
     * Not present if status=Success. One of these messages if status=Failed:The device is not in
     * deactivate state.The user does not have access to delete the device.
     */
    public function getMessage(): ?string
    {
        return $this->message;
    }

    /**
     * Sets Message.
     * Not present if status=Success. One of these messages if status=Failed:The device is not in
     * deactivate state.The user does not have access to delete the device.
     *
     * @maps message
     */
    public function setMessage(?string $message): void
    {
        $this->message = $message;
    }

    /**
     * Converts the DeleteDevicesResult object to a human-readable string representation.
     *
     * @return string The string representation of the DeleteDevicesResult object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'DeleteDevicesResult',
            [
                'deviceIds' => $this->deviceIds,
                'status' => $this->status,
                'message' => $this->message,
                'additionalProperties' => $this->additionalProperties
            ]
        );
    }

    protected $propertyNames = ['deviceIds', 'status', 'message'];

    private $additionalProperties = [];

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property.
     * @param mixed $value Value of property.
     */
    public function addAdditionalProperty(string $name, $value)
    {
        if (in_array($name, $this->propertyNames, true)) {
            throw new \InvalidArgumentException(
                "The additional property key, '$name' conflicts with one of the model's properties"
            );
        }

        $this->additionalProperties[$name] = $value;
    }

    /**
     * Find an additional property by name in this model or false if property does not exist.
     *
     * @param string $name Name of property.
     *
     * @return mixed|false Value of the property.
     */
    public function findAdditionalProperty(string $name)
    {
        if (isset($this->additionalProperties[$name])) {
            return $this->additionalProperties[$name];
        }
        return false;
    }

    /**
     * Encode this object to JSON
     *
     * @param bool $asArrayWhenEmpty Whether to serialize this model as an array whenever no fields
     *        are set. (default: false)
     *
     * @return array|stdClass
     */
    #[\ReturnTypeWillChange] // @phan-suppress-current-line PhanUndeclaredClassAttribute for (php < 8.1)
    public function jsonSerialize(bool $asArrayWhenEmpty = false)
    {
        $json = [];
        if (isset($this->deviceIds)) {
            $json['deviceIds'] = $this->deviceIds;
        }
        if (isset($this->status)) {
            $json['status']    = $this->status;
        }
        if (isset($this->message)) {
            $json['message']   = $this->message;
        }
        $json = array_merge($json, $this->additionalProperties);

        return (!$asArrayWhenEmpty && empty($json)) ? new stdClass() : $json;
    }
}
