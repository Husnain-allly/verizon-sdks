<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models\Builders;

use Core\Utils\CoreHelper;
use VerizonLib\Models\BillableUsageReport;
use VerizonLib\Models\ServiceUsage;

/**
 * Builder for model BillableUsageReport
 *
 * @see BillableUsageReport
 */
class BillableUsageReportBuilder
{
    /**
     * @var BillableUsageReport
     */
    private $instance;

    private function __construct(BillableUsageReport $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new Billable Usage Report Builder object.
     */
    public static function init(): self
    {
        return new self(new BillableUsageReport());
    }

    /**
     * Sets account Name field.
     *
     * @param string|null $value
     */
    public function accountName(?string $value): self
    {
        $this->instance->setAccountName($value);
        return $this;
    }

    /**
     * Sets usage For All Accounts field.
     *
     * @param bool|null $value
     */
    public function usageForAllAccounts(?bool $value): self
    {
        $this->instance->setUsageForAllAccounts($value);
        return $this;
    }

    /**
     * Sets sku Name field.
     *
     * @param string|null $value
     */
    public function skuName(?string $value): self
    {
        $this->instance->setSkuName($value);
        return $this;
    }

    /**
     * Sets transactions Allowed field.
     *
     * @param string|null $value
     */
    public function transactionsAllowed(?string $value): self
    {
        $this->instance->setTransactionsAllowed($value);
        return $this;
    }

    /**
     * Sets total Transaction Count field.
     *
     * @param string|null $value
     */
    public function totalTransactionCount(?string $value): self
    {
        $this->instance->setTotalTransactionCount($value);
        return $this;
    }

    /**
     * Sets Primary Account field.
     *
     * @param ServiceUsage|null $value
     */
    public function primaryAccount(?ServiceUsage $value): self
    {
        $this->instance->setPrimaryAccount($value);
        return $this;
    }

    /**
     * Sets Managed Accounts field.
     *
     * @param ServiceUsage[]|null $value
     */
    public function managedAccounts(?array $value): self
    {
        $this->instance->setManagedAccounts($value);
        return $this;
    }

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property.
     * @param mixed $value Value of property.
     */
    public function additionalProperty(string $name, $value): self
    {
        $this->instance->addAdditionalProperty($name, $value);
        return $this;
    }

    /**
     * Initializes a new Billable Usage Report object.
     */
    public function build(): BillableUsageReport
    {
        return CoreHelper::clone($this->instance);
    }
}
