<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models\Builders;

use Core\Utils\CoreHelper;
use VerizonLib\Models\AnomalyTriggerRequest;
use VerizonLib\Models\CreateTriggerRequestOptions;
use VerizonLib\Models\TriggerNotification;

/**
 * Builder for model CreateTriggerRequestOptions
 *
 * @see CreateTriggerRequestOptions
 */
class CreateTriggerRequestOptionsBuilder
{
    /**
     * @var CreateTriggerRequestOptions
     */
    private $instance;

    private function __construct(CreateTriggerRequestOptions $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new Create Trigger Request Options Builder object.
     */
    public static function init(): self
    {
        return new self(new CreateTriggerRequestOptions());
    }

    /**
     * Sets name field.
     *
     * @param string|null $value
     */
    public function name(?string $value): self
    {
        $this->instance->setName($value);
        return $this;
    }

    /**
     * Sets trigger Category field.
     *
     * @param string|null $value
     */
    public function triggerCategory(?string $value): self
    {
        $this->instance->setTriggerCategory($value);
        return $this;
    }

    /**
     * Sets account Name field.
     *
     * @param string|null $value
     */
    public function accountName(?string $value): self
    {
        $this->instance->setAccountName($value);
        return $this;
    }

    /**
     * Sets anomaly Trigger Request field.
     *
     * @param AnomalyTriggerRequest|null $value
     */
    public function anomalyTriggerRequest(?AnomalyTriggerRequest $value): self
    {
        $this->instance->setAnomalyTriggerRequest($value);
        return $this;
    }

    /**
     * Sets notification field.
     *
     * @param TriggerNotification|null $value
     */
    public function notification(?TriggerNotification $value): self
    {
        $this->instance->setNotification($value);
        return $this;
    }

    /**
     * Sets active field.
     *
     * @param bool|null $value
     */
    public function active(?bool $value): self
    {
        $this->instance->setActive($value);
        return $this;
    }

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property.
     * @param mixed $value Value of property.
     */
    public function additionalProperty(string $name, $value): self
    {
        $this->instance->addAdditionalProperty($name, $value);
        return $this;
    }

    /**
     * Initializes a new Create Trigger Request Options object.
     */
    public function build(): CreateTriggerRequestOptions
    {
        return CoreHelper::clone($this->instance);
    }
}
