<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models\Builders;

use Core\Utils\CoreHelper;
use VerizonLib\Models\HistorySearchFilter;
use VerizonLib\Models\HistorySearchLimitTime;
use VerizonLib\Models\HistorySearchRequest;

/**
 * Builder for model HistorySearchRequest
 *
 * @see HistorySearchRequest
 */
class HistorySearchRequestBuilder
{
    /**
     * @var HistorySearchRequest
     */
    private $instance;

    private function __construct(HistorySearchRequest $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new History Search Request Builder object.
     *
     * @param HistorySearchFilter $mFilter
     */
    public static function init(HistorySearchFilter $mFilter): self
    {
        return new self(new HistorySearchRequest($mFilter));
    }

    /**
     * Sets limit Number field.
     *
     * @param int|null $value
     */
    public function mLimitNumber(?int $value): self
    {
        $this->instance->setMLimitNumber($value);
        return $this;
    }

    /**
     * Sets limit Time field.
     *
     * @param HistorySearchLimitTime|null $value
     */
    public function mLimitTime(?HistorySearchLimitTime $value): self
    {
        $this->instance->setMLimitTime($value);
        return $this;
    }

    /**
     * Sets page field.
     *
     * @param string|null $value
     */
    public function mPage(?string $value): self
    {
        $this->instance->setMPage($value);
        return $this;
    }

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property.
     * @param mixed $value Value of property.
     */
    public function additionalProperty(string $name, $value): self
    {
        $this->instance->addAdditionalProperty($name, $value);
        return $this;
    }

    /**
     * Initializes a new History Search Request object.
     */
    public function build(): HistorySearchRequest
    {
        return CoreHelper::clone($this->instance);
    }
}
