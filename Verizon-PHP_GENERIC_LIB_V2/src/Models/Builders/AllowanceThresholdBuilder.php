<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models\Builders;

use Core\Utils\CoreHelper;
use VerizonLib\Models\AllowanceThreshold;

/**
 * Builder for model AllowanceThreshold
 *
 * @see AllowanceThreshold
 */
class AllowanceThresholdBuilder
{
    /**
     * @var AllowanceThreshold
     */
    private $instance;

    private function __construct(AllowanceThreshold $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new Allowance Threshold Builder object.
     */
    public static function init(): self
    {
        return new self(new AllowanceThreshold());
    }

    /**
     * Sets percentage 50 field.
     *
     * @param bool|null $value
     */
    public function percentage50(?bool $value): self
    {
        $this->instance->setPercentage50($value);
        return $this;
    }

    /**
     * Sets percentage 75 field.
     *
     * @param bool|null $value
     */
    public function percentage75(?bool $value): self
    {
        $this->instance->setPercentage75($value);
        return $this;
    }

    /**
     * Sets percentage 90 field.
     *
     * @param bool|null $value
     */
    public function percentage90(?bool $value): self
    {
        $this->instance->setPercentage90($value);
        return $this;
    }

    /**
     * Sets percentage 100 field.
     *
     * @param bool|null $value
     */
    public function percentage100(?bool $value): self
    {
        $this->instance->setPercentage100($value);
        return $this;
    }

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property.
     * @param mixed $value Value of property.
     */
    public function additionalProperty(string $name, $value): self
    {
        $this->instance->addAdditionalProperty($name, $value);
        return $this;
    }

    /**
     * Initializes a new Allowance Threshold object.
     */
    public function build(): AllowanceThreshold
    {
        return CoreHelper::clone($this->instance);
    }
}
