<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models\Builders;

use Core\Utils\CoreHelper;
use VerizonLib\Models\AccountIdentifier;
use VerizonLib\Models\ResourceIdentifier;
use VerizonLib\Models\SearchSensorHistoryRequest;

/**
 * Builder for model SearchSensorHistoryRequest
 *
 * @see SearchSensorHistoryRequest
 */
class SearchSensorHistoryRequestBuilder
{
    /**
     * @var SearchSensorHistoryRequest
     */
    private $instance;

    private function __construct(SearchSensorHistoryRequest $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new Search Sensor History Request Builder object.
     *
     * @param AccountIdentifier $accountidentifier
     * @param ResourceIdentifier $resourceidentifier
     */
    public static function init(AccountIdentifier $accountidentifier, ResourceIdentifier $resourceidentifier): self
    {
        return new self(new SearchSensorHistoryRequest($accountidentifier, $resourceidentifier));
    }

    /**
     * Sets limitnumber field.
     *
     * @param int|null $value
     */
    public function mLimitnumber(?int $value): self
    {
        $this->instance->setMLimitnumber($value);
        return $this;
    }

    /**
     * Sets page field.
     *
     * @param string|null $value
     */
    public function mPage(?string $value): self
    {
        $this->instance->setMPage($value);
        return $this;
    }

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property.
     * @param mixed $value Value of property.
     */
    public function additionalProperty(string $name, $value): self
    {
        $this->instance->addAdditionalProperty($name, $value);
        return $this;
    }

    /**
     * Initializes a new Search Sensor History Request object.
     */
    public function build(): SearchSensorHistoryRequest
    {
        return CoreHelper::clone($this->instance);
    }
}
