<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models\Builders;

use Core\Utils\CoreHelper;
use VerizonLib\Models\AccountLevelObject;
use VerizonLib\Models\Actionobject;
use VerizonLib\Models\AllowanceThreshold;
use VerizonLib\Models\DataTrigger4;
use VerizonLib\Models\DeviceGroupFilterCriteria;

/**
 * Builder for model DataTrigger4
 *
 * @see DataTrigger4
 */
class DataTrigger4Builder
{
    /**
     * @var DataTrigger4
     */
    private $instance;

    private function __construct(DataTrigger4 $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new Data Trigger 4 Builder object.
     */
    public static function init(): self
    {
        return new self(new DataTrigger4());
    }

    /**
     * Sets account Level field.
     *
     * @param AccountLevelObject|null $value
     */
    public function accountLevel(?AccountLevelObject $value): self
    {
        $this->instance->setAccountLevel($value);
        return $this;
    }

    /**
     * Sets device Group field.
     *
     * @param DeviceGroupFilterCriteria|null $value
     */
    public function deviceGroup(?DeviceGroupFilterCriteria $value): self
    {
        $this->instance->setDeviceGroup($value);
        return $this;
    }

    /**
     * Sets condition Type field.
     *
     * @param string|null $value
     */
    public function conditionType(?string $value): self
    {
        $this->instance->setConditionType($value);
        return $this;
    }

    /**
     * Sets comparitor field.
     *
     * @param string|null $value
     */
    public function comparitor(?string $value): self
    {
        $this->instance->setComparitor($value);
        return $this;
    }

    /**
     * Sets threshold field.
     *
     * @param int|null $value
     */
    public function threshold(?int $value): self
    {
        $this->instance->setThreshold($value);
        return $this;
    }

    /**
     * Sets threshold Unit field.
     *
     * @param string|null $value
     */
    public function thresholdUnit(?string $value): self
    {
        $this->instance->setThresholdUnit($value);
        return $this;
    }

    /**
     * Sets cycle Type field.
     *
     * @param string|null $value
     */
    public function cycleType(?string $value): self
    {
        $this->instance->setCycleType($value);
        return $this;
    }

    /**
     * Sets allowance Threshold field.
     *
     * @param AllowanceThreshold|null $value
     */
    public function allowanceThreshold(?AllowanceThreshold $value): self
    {
        $this->instance->setAllowanceThreshold($value);
        return $this;
    }

    /**
     * Sets action field.
     *
     * @param Actionobject|null $value
     */
    public function action(?Actionobject $value): self
    {
        $this->instance->setAction($value);
        return $this;
    }

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property.
     * @param mixed $value Value of property.
     */
    public function additionalProperty(string $name, $value): self
    {
        $this->instance->addAdditionalProperty($name, $value);
        return $this;
    }

    /**
     * Initializes a new Data Trigger 4 object.
     */
    public function build(): DataTrigger4
    {
        return CoreHelper::clone($this->instance);
    }
}
