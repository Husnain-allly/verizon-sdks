<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models\Builders;

use Core\Utils\CoreHelper;
use VerizonLib\Models\DeviceId2;
use VerizonLib\Models\EsimGlobalDeviceList;

/**
 * Builder for model EsimGlobalDeviceList
 *
 * @see EsimGlobalDeviceList
 */
class EsimGlobalDeviceListBuilder
{
    /**
     * @var EsimGlobalDeviceList
     */
    private $instance;

    private function __construct(EsimGlobalDeviceList $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new Esim Global Device List Builder object.
     */
    public static function init(): self
    {
        return new self(new EsimGlobalDeviceList());
    }

    /**
     * Sets account Name field.
     *
     * @param string|null $value
     */
    public function accountName(?string $value): self
    {
        $this->instance->setAccountName($value);
        return $this;
    }

    /**
     * Sets provisioning Status Filter field.
     *
     * @param string|null $value
     */
    public function provisioningStatusFilter(?string $value): self
    {
        $this->instance->setProvisioningStatusFilter($value);
        return $this;
    }

    /**
     * Sets profile Status Filter field.
     *
     * @param string|null $value
     */
    public function profileStatusFilter(?string $value): self
    {
        $this->instance->setProfileStatusFilter($value);
        return $this;
    }

    /**
     * Sets carrier Name Filter field.
     *
     * @param string|null $value
     */
    public function carrierNameFilter(?string $value): self
    {
        $this->instance->setCarrierNameFilter($value);
        return $this;
    }

    /**
     * Sets device Filter field.
     *
     * @param DeviceId2[]|null $value
     */
    public function deviceFilter(?array $value): self
    {
        $this->instance->setDeviceFilter($value);
        return $this;
    }

    /**
     * Initializes a new Esim Global Device List object.
     */
    public function build(): EsimGlobalDeviceList
    {
        return CoreHelper::clone($this->instance);
    }
}
