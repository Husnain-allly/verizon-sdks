<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models\Builders;

use Core\Utils\CoreHelper;
use VerizonLib\Models\AccountGroupShareIndividual1;
use VerizonLib\Models\AccountLevelFilter;
use VerizonLib\Models\AllowanceThreshold;
use VerizonLib\Models\DataTrigger5;
use VerizonLib\Models\DeviceGroupFilterCriteria;
use VerizonLib\Models\Rateplantype2Condition;

/**
 * Builder for model DataTrigger5
 *
 * @see DataTrigger5
 */
class DataTrigger5Builder
{
    /**
     * @var DataTrigger5
     */
    private $instance;

    private function __construct(DataTrigger5 $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new Data Trigger 5 Builder object.
     */
    public static function init(): self
    {
        return new self(new DataTrigger5());
    }

    /**
     * Sets filter Criteria field.
     *
     * @param AccountLevelFilter|null $value
     */
    public function filterCriteria(?AccountLevelFilter $value): self
    {
        $this->instance->setFilterCriteria($value);
        return $this;
    }

    /**
     * Sets condition field.
     *
     * @param Rateplantype2Condition|null $value
     */
    public function condition(?Rateplantype2Condition $value): self
    {
        $this->instance->setCondition($value);
        return $this;
    }

    /**
     * Sets action field.
     *
     * @param string|null $value
     */
    public function action(?string $value): self
    {
        $this->instance->setAction($value);
        return $this;
    }

    /**
     * Sets condition Type field.
     *
     * @param string|null $value
     */
    public function conditionType(?string $value): self
    {
        $this->instance->setConditionType($value);
        return $this;
    }

    /**
     * Sets comparitor field.
     *
     * @param string|null $value
     */
    public function comparitor(?string $value): self
    {
        $this->instance->setComparitor($value);
        return $this;
    }

    /**
     * Sets threshold field.
     *
     * @param int|null $value
     */
    public function threshold(?int $value): self
    {
        $this->instance->setThreshold($value);
        return $this;
    }

    /**
     * Sets threshold Unit field.
     *
     * @param string|null $value
     */
    public function thresholdUnit(?string $value): self
    {
        $this->instance->setThresholdUnit($value);
        return $this;
    }

    /**
     * Sets cycle Type field.
     *
     * @param string|null $value
     */
    public function cycleType(?string $value): self
    {
        $this->instance->setCycleType($value);
        return $this;
    }

    /**
     * Sets allowance Threshold field.
     *
     * @param AllowanceThreshold|null $value
     */
    public function allowanceThreshold(?AllowanceThreshold $value): self
    {
        $this->instance->setAllowanceThreshold($value);
        return $this;
    }

    /**
     * Sets device Group field.
     *
     * @param DeviceGroupFilterCriteria|null $value
     */
    public function deviceGroup(?DeviceGroupFilterCriteria $value): self
    {
        $this->instance->setDeviceGroup($value);
        return $this;
    }

    /**
     * Sets account Group Share field.
     *
     * @param AccountGroupShareIndividual1|null $value
     */
    public function accountGroupShare(?AccountGroupShareIndividual1 $value): self
    {
        $this->instance->setAccountGroupShare($value);
        return $this;
    }

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property.
     * @param mixed $value Value of property.
     */
    public function additionalProperty(string $name, $value): self
    {
        $this->instance->addAdditionalProperty($name, $value);
        return $this;
    }

    /**
     * Initializes a new Data Trigger 5 object.
     */
    public function build(): DataTrigger5
    {
        return CoreHelper::clone($this->instance);
    }
}
