<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Models\Builders;

use Core\Utils\CoreHelper;
use VerizonLib\Models\SensitivityParameters;

/**
 * Builder for model SensitivityParameters
 *
 * @see SensitivityParameters
 */
class SensitivityParametersBuilder
{
    /**
     * @var SensitivityParameters
     */
    private $instance;

    private function __construct(SensitivityParameters $instance)
    {
        $this->instance = $instance;
    }

    /**
     * Initializes a new Sensitivity Parameters Builder object.
     */
    public static function init(): self
    {
        return new self(new SensitivityParameters());
    }

    /**
     * Sets abnormal Max Value field.
     *
     * @param float|null $value
     */
    public function abnormalMaxValue(?float $value): self
    {
        $this->instance->setAbnormalMaxValue($value);
        return $this;
    }

    /**
     * Sets enable Abnormal field.
     *
     * @param bool|null $value
     */
    public function enableAbnormal(?bool $value): self
    {
        $this->instance->setEnableAbnormal($value);
        return $this;
    }

    /**
     * Sets enable Very Abnormal field.
     *
     * @param bool|null $value
     */
    public function enableVeryAbnormal(?bool $value): self
    {
        $this->instance->setEnableVeryAbnormal($value);
        return $this;
    }

    /**
     * Sets very Abnormal Max Value field.
     *
     * @param float|null $value
     */
    public function veryAbnormalMaxValue(?float $value): self
    {
        $this->instance->setVeryAbnormalMaxValue($value);
        return $this;
    }

    /**
     * Initializes a new Sensitivity Parameters object.
     */
    public function build(): SensitivityParameters
    {
        return CoreHelper::clone($this->instance);
    }
}
