<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Exceptions;

use VerizonLib\ApiHelper;

/**
 * error response structure
 */
class AppConfigResponseErrorException extends ApiException
{
    /**
     * @var string
     */
    private $error;

    /**
     * @var string
     */
    private $description;

    /**
     * @param string $reason
     * @param \VerizonLib\Http\HttpRequest $request
     * @param \VerizonLib\Http\HttpResponse $response
     * @param string $error
     * @param string $description
     */
    public function __construct(
        string $reason,
        \VerizonLib\Http\HttpRequest $request,
        \VerizonLib\Http\HttpResponse $response,
        string $error,
        string $description
    ) {
        parent::__construct($reason, $request, $response);
        $this->error = $error;
        $this->description = $description;
    }

    /**
     * Returns Error.
     * The short summary of the error
     */
    public function getError(): string
    {
        return $this->error;
    }

    /**
     * Sets Error.
     * The short summary of the error
     *
     * @required
     * @maps error
     */
    public function setError(string $error): void
    {
        $this->error = $error;
    }

    /**
     * Returns Description.
     * The detailed description of the error
     */
    public function getDescription(): string
    {
        return $this->description;
    }

    /**
     * Sets Description.
     * The detailed description of the error
     *
     * @required
     * @maps description
     */
    public function setDescription(string $description): void
    {
        $this->description = $description;
    }

    /**
     * Converts the AppConfigResponseErrorException object to a human-readable string representation.
     *
     * @return string The string representation of the AppConfigResponseErrorException object.
     */
    public function __toString(): string
    {
        return ApiHelper::stringify(
            'AppConfigResponseErrorException',
            [
                'error' => $this->error,
                'description' => $this->description,
                'additionalProperties' => $this->additionalProperties
            ],
            parent::__toString()
        );
    }

    protected $propertyNames = ['error', 'description'];

    private $additionalProperties = [];

    /**
     * Add an additional property to this model.
     *
     * @param string $name Name of property.
     * @param mixed $value Value of property.
     */
    public function addAdditionalProperty(string $name, $value)
    {
        if (in_array($name, $this->propertyNames, true)) {
            throw new \InvalidArgumentException(
                "The additional property key, '$name' conflicts with one of the model's properties"
            );
        }

        $this->additionalProperties[$name] = $value;
    }

    /**
     * Find an additional property by name in this model or false if property does not exist.
     *
     * @param string $name Name of property.
     *
     * @return mixed|false Value of the property.
     */
    public function findAdditionalProperty(string $name)
    {
        if (isset($this->additionalProperties[$name])) {
            return $this->additionalProperties[$name];
        }
        return false;
    }
}
