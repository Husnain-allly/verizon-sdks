<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Authentication;

use Core\Authentication\CoreAuth;
use VerizonLib\ConfigurationDefaults;
use Core\Request\Parameters\HeaderParam;

/**
 * Utility class for authorization and token management.
 */
class SessionTokenManager extends CoreAuth implements SessionTokenCredentials
{
    /**
     * @var array
     */
    private $config;

    public function __construct(array $config)
    {
        $this->config = $config;
        parent::__construct(HeaderParam::init('SessionToken', $this->getSessionToken())->requiredNonEmpty());
    }

    /**
     * String value for sessionToken.
     */
    public function getSessionToken(): string
    {
        return $this->config['sessionToken'] ?? ConfigurationDefaults::SESSION_TOKEN;
    }

    /**
     * Checks if provided credentials match with existing ones.
     *
     * @param string $sessionToken This is the Session/M2M token needed to authenticate the user. It
     *        should be acquired by using the ThingSpace APIs. For detail on how to obtain a
     *        Session/M2M token please refer to the
     *        - [ThingSpace Quick Start Guide - Obtaining a VZ-M2M Session Token
     *        Programmatically](https://thingspace.verizon.com/documentation/api-documentation.
     *        html#/http/quick-start/credentials-and-tokens/obtaining-a-vz-m2m-sessiontoken-
     *        programmatically)
     *        - or the [ThingSpace API Video Guide 1](https://www.youtube.com/watch?v=QPJQFT3637w)
     *        and [ThingSpace API Video Guide 2](https://www.youtube.com/watch?v=hc9udGp4P_s)
     */
    public function equals(string $sessionToken): bool
    {
        return $sessionToken == $this->getSessionToken();
    }
}
