<?php

declare(strict_types=1);

/*
 * VerizonLib
 *
 * This file was automatically generated by APIMATIC v3.0 ( https://www.apimatic.io ).
 */

namespace VerizonLib\Authentication;

use Core\Utils\CoreHelper;
use VerizonLib\Models\OauthToken;

/**
 * Utility class for initializing ThingspaceOauth1 security credentials.
 */
class ThingspaceOauth1CredentialsBuilder
{
    /**
     * @var array
     */
    private $config;

    private function __construct(array $config)
    {
        $this->config = $config;
    }

    /**
     * Initializer for ThingspaceOauth1CredentialsBuilder
     *
     * @param string $oauthClientId
     * @param string $oauthClientSecret
     */
    public static function init(string $oauthClientId, string $oauthClientSecret): self
    {
        return new self(['oauthClientId2' => $oauthClientId, 'oauthClientSecret2' => $oauthClientSecret]);
    }

    /**
     * Setter for OauthClientId.
     *
     * @param string $oauthClientId
     *
     * @return $this
     */
    public function oauthClientId(string $oauthClientId): self
    {
        $this->config['oauthClientId2'] = $oauthClientId;
        return $this;
    }

    /**
     * Setter for OauthClientSecret.
     *
     * @param string $oauthClientSecret
     *
     * @return $this
     */
    public function oauthClientSecret(string $oauthClientSecret): self
    {
        $this->config['oauthClientSecret2'] = $oauthClientSecret;
        return $this;
    }

    /**
     * Setter for OauthToken.
     *
     * @param OauthToken|null $oauthToken
     *
     * @return $this
     */
    public function oauthToken(?OauthToken $oauthToken): self
    {
        $this->config['oauthToken2'] = $oauthToken;
        return $this;
    }

    /**
     * Setter for clock skew time in seconds applied while checking the OAuth Token expiry.
     *
     * @param int $oauthClockSkew
     *
     * @return $this
     */
    public function oauthClockSkew(int $oauthClockSkew): self
    {
        $this->config['thingspace_oauth1-ClockSkew'] = $oauthClockSkew;
        return $this;
    }

    /**
     * Setter for the OAuthTokenProvider callable with 2 arguments. Arg1 will be the last OAuthToken
     * instance, while Arg2 will be an instance of ThingspaceOauth1Manager. The return type of callable
     * should be an instance of OAuthToken model.
     *
     * @param callable(OAuthToken, ThingspaceOauth1Manager): OAuthToken $oauthTokenProvider
     *
     * @return $this
     */
    public function oauthTokenProvider(callable $oauthTokenProvider): self
    {
        $this->config['thingspace_oauth1-TokenProvider'] = $oauthTokenProvider;
        return $this;
    }

    /**
     * Setter for the OAuthOnTokenUpdate callable with the updated OAuthToken instance as the only argument.
     * Here the return type of callable should be void
     *
     * @param callable(OAuthToken): void $oauthOnTokenUpdate
     *
     * @return $this
     */
    public function oauthOnTokenUpdate(callable $oauthOnTokenUpdate): self
    {
        $this->config['thingspace_oauth1-OnTokenUpdate'] = $oauthOnTokenUpdate;
        return $this;
    }

    public function getConfiguration(): array
    {
        return CoreHelper::clone($this->config);
    }
}
